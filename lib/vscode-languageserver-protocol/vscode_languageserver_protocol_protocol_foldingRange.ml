[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module FoldingRangeClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_dynamic_registration : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x3) "dynamicRegistration")
    let (set_dynamic_registration : t -> bool -> unit) =
      fun (x4 : t) ->
        fun (x5 : bool) ->
          Ojs.set_prop_ascii (t_to_js x4) "dynamicRegistration"
            (Ojs.bool_to_js x5)
    let (get_range_limit : t -> Uinteger.t) =
      fun (x6 : t) ->
        Uinteger.t_of_js (Ojs.get_prop_ascii (t_to_js x6) "rangeLimit")
    let (set_range_limit : t -> Uinteger.t -> unit) =
      fun (x7 : t) ->
        fun (x8 : Uinteger.t) ->
          Ojs.set_prop_ascii (t_to_js x7) "rangeLimit" (Uinteger.t_to_js x8)
    let (get_line_folding_only : t -> bool) =
      fun (x9 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9) "lineFoldingOnly")
    let (set_line_folding_only : t -> bool -> unit) =
      fun (x10 : t) ->
        fun (x11 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10) "lineFoldingOnly"
            (Ojs.bool_to_js x11)
  end
module FoldingRangeOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13 : Ojs.t) -> x13
    and t_to_js : t -> Ojs.t = fun (x12 : Ojs.t) -> x12
    let (cast : t -> WorkDoneProgressOptions.t) =
      fun (x14 : t) -> WorkDoneProgressOptions.t_of_js (t_to_js x14)
  end
module FoldingRangeRegistrationOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16 : Ojs.t) -> x16
    and t_to_js : t -> Ojs.t = fun (x15 : Ojs.t) -> x15
    let (cast : t -> TextDocumentRegistrationOptions.t) =
      fun (x17 : t) -> TextDocumentRegistrationOptions.t_of_js (t_to_js x17)
    let (cast' : t -> FoldingRangeOptions.t) =
      fun (x18 : t) -> FoldingRangeOptions.t_of_js (t_to_js x18)
    let (cast'' : t -> StaticRegistrationOptions.t) =
      fun (x19 : t) -> StaticRegistrationOptions.t_of_js (t_to_js x19)
  end
module FoldingRangeKind =
  struct
    type t = [ `Comment  | `Imports  | `Region ]
    let rec t_of_js : Ojs.t -> t =
      fun (x21 : Ojs.t) ->
        let x22 = x21 in
        match Ojs.string_of_js x22 with
        | "comment" -> `Comment
        | "imports" -> `Imports
        | "region" -> `Region
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x20 : [ `Comment  | `Imports  | `Region ]) ->
        match x20 with
        | `Comment -> Ojs.string_to_js "comment"
        | `Imports -> Ojs.string_to_js "imports"
        | `Region -> Ojs.string_to_js "region"
  end
module FoldingRangeParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x24 : Ojs.t) -> x24
    and t_to_js : t -> Ojs.t = fun (x23 : Ojs.t) -> x23
    let (get_text_document : t -> TextDocumentIdentifier.t) =
      fun (x25 : t) ->
        TextDocumentIdentifier.t_of_js
          (Ojs.get_prop_ascii (t_to_js x25) "textDocument")
    let (set_text_document : t -> TextDocumentIdentifier.t -> unit) =
      fun (x26 : t) ->
        fun (x27 : TextDocumentIdentifier.t) ->
          Ojs.set_prop_ascii (t_to_js x26) "textDocument"
            (TextDocumentIdentifier.t_to_js x27)
    let (cast : t -> WorkDoneProgressParams.t) =
      fun (x28 : t) -> WorkDoneProgressParams.t_of_js (t_to_js x28)
    let (cast' : t -> PartialResultParams.t) =
      fun (x29 : t) -> PartialResultParams.t_of_js (t_to_js x29)
  end
module FoldingRangeRequest =
  struct
    let (method_ : [ `L_s3_textDocument_foldingRange ]) =
      let x30 =
        Ojs.get_prop_ascii
          (Ojs.get_prop_ascii Ojs.global "FoldingRangeRequest") "method" in
      match Ojs.string_of_js x30 with
      | "textDocument/foldingRange" -> `L_s3_textDocument_foldingRange
      | _ -> assert false
    let (type_ :
      (FoldingRangeParams.t, FoldingRange.t list or_null,
        FoldingRange.t list, any, FoldingRangeRegistrationOptions.t)
        ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js FoldingRangeParams.t_of_js
        (fun (x32 : Ojs.t) ->
           or_null_of_js
             (fun (x33 : Ojs.t) -> Ojs.list_of_js FoldingRange.t_of_js x33)
             x32)
        (fun (x35 : Ojs.t) -> Ojs.list_of_js FoldingRange.t_of_js x35)
        any_of_js FoldingRangeRegistrationOptions.t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "FoldingRangeRequest") "type")
    module HandlerSignature =
      struct
        type t =
          (FoldingRangeParams.t, FoldingRange.t list or_null, unit)
            RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x45 : Ojs.t) ->
            RequestHandler.t_of_js FoldingRangeParams.t_of_js
              (fun (x47 : Ojs.t) ->
                 or_null_of_js
                   (fun (x48 : Ojs.t) ->
                      Ojs.list_of_js FoldingRange.t_of_js x48) x47)
              Ojs.unit_of_js x45
        and t_to_js : t -> Ojs.t =
          fun
            (x39 :
              (FoldingRangeParams.t, FoldingRange.t list or_null, unit)
                RequestHandler.t)
            ->
            RequestHandler.t_to_js FoldingRangeParams.t_to_js
              (fun (x41 : FoldingRange.t list or_null) ->
                 or_null_to_js
                   (fun (x42 : FoldingRange.t list) ->
                      Ojs.list_to_js FoldingRange.t_to_js x42) x41)
              Ojs.unit_to_js x39
      end
  end
