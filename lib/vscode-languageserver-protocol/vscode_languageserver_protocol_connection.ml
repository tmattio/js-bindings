[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
open Vscode_jsonrpc
open Vscode_languageserver_protocol_messages
module ProtocolConnection =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (send_request :
      t ->
        type_:('R, 'PR, 'E, 'RO) ProtocolRequestType0.t ->
          ?token:CancellationToken.t -> unit -> 'R Promise.t)
      =
      fun (x11 : t) ->
        fun ~type_:(x3 : ('R, 'PR, 'E, 'RO) ProtocolRequestType0.t) ->
          fun ?token:(x4 : CancellationToken.t option) ->
            fun () ->
              Promise.t_of_js Obj.magic
                (let x12 = t_to_js x11 in
                 Ojs.call (Ojs.get_prop_ascii x12 "sendRequest") "apply"
                   [|x12;((let x5 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5 "push"
                                [|(ProtocolRequestType0.t_to_js Obj.magic
                                     Obj.magic Obj.magic Obj.magic x3)|]);
                           (match x4 with
                            | Some x6 ->
                                ignore
                                  (Ojs.call x5 "push"
                                     [|(CancellationToken.t_to_js x6)|])
                            | None -> ());
                           x5))|])
    let (send_request' :
      t ->
        type_:('R, 'E) RequestType0.t ->
          ?token:CancellationToken.t -> unit -> 'R Promise.t)
      =
      fun (x20 : t) ->
        fun ~type_:(x14 : ('R, 'E) RequestType0.t) ->
          fun ?token:(x15 : CancellationToken.t option) ->
            fun () ->
              Promise.t_of_js Obj.magic
                (let x21 = t_to_js x20 in
                 Ojs.call (Ojs.get_prop_ascii x21 "sendRequest") "apply"
                   [|x21;((let x16 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x16 "push"
                                [|(RequestType0.t_to_js Obj.magic Obj.magic
                                     x14)|]);
                           (match x15 with
                            | Some x17 ->
                                ignore
                                  (Ojs.call x16 "push"
                                     [|(CancellationToken.t_to_js x17)|])
                            | None -> ());
                           x16))|])
    let (send_request'' :
      t ->
        type_:('P, 'R, 'PR, 'E, 'RO) ProtocolRequestType.t ->
          params:'P -> ?token:CancellationToken.t -> unit -> 'R Promise.t)
      =
      fun (x33 : t) ->
        fun ~type_:(x23 : ('P, 'R, 'PR, 'E, 'RO) ProtocolRequestType.t) ->
          fun ~params:(x24 : 'P) ->
            fun ?token:(x25 : CancellationToken.t option) ->
              fun () ->
                Promise.t_of_js Obj.magic
                  (let x34 = t_to_js x33 in
                   Ojs.call (Ojs.get_prop_ascii x34 "sendRequest") "apply"
                     [|x34;((let x26 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x26 "push"
                                  [|(ProtocolRequestType.t_to_js Obj.magic
                                       Obj.magic Obj.magic Obj.magic
                                       Obj.magic x23)|]);
                             ignore (Ojs.call x26 "push" [|(Obj.magic x24)|]);
                             (match x25 with
                              | Some x27 ->
                                  ignore
                                    (Ojs.call x26 "push"
                                       [|(CancellationToken.t_to_js x27)|])
                              | None -> ());
                             x26))|])
    let (send_request''' :
      t ->
        type_:('P, 'R, 'E) RequestType.t ->
          params:'P -> ?token:CancellationToken.t -> unit -> 'R Promise.t)
      =
      fun (x44 : t) ->
        fun ~type_:(x36 : ('P, 'R, 'E) RequestType.t) ->
          fun ~params:(x37 : 'P) ->
            fun ?token:(x38 : CancellationToken.t option) ->
              fun () ->
                Promise.t_of_js Obj.magic
                  (let x45 = t_to_js x44 in
                   Ojs.call (Ojs.get_prop_ascii x45 "sendRequest") "apply"
                     [|x45;((let x39 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x39 "push"
                                  [|(RequestType.t_to_js Obj.magic Obj.magic
                                       Obj.magic x36)|]);
                             ignore (Ojs.call x39 "push" [|(Obj.magic x37)|]);
                             (match x38 with
                              | Some x40 ->
                                  ignore
                                    (Ojs.call x39 "push"
                                       [|(CancellationToken.t_to_js x40)|])
                              | None -> ());
                             x39))|])
    let (send_request'''' :
      t ->
        method_:string -> ?token:CancellationToken.t -> unit -> 'R Promise.t)
      =
      fun (x51 : t) ->
        fun ~method_:(x47 : string) ->
          fun ?token:(x48 : CancellationToken.t option) ->
            fun () ->
              Promise.t_of_js Obj.magic
                (let x52 = t_to_js x51 in
                 Ojs.call (Ojs.get_prop_ascii x52 "sendRequest") "apply"
                   [|x52;((let x49 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x49 "push" [|(Ojs.string_to_js x47)|]);
                           (match x48 with
                            | Some x50 ->
                                ignore
                                  (Ojs.call x49 "push"
                                     [|(CancellationToken.t_to_js x50)|])
                            | None -> ());
                           x49))|])
    let (send_request''''' :
      t ->
        method_:string ->
          param:any -> ?token:CancellationToken.t -> unit -> 'R Promise.t)
      =
      fun (x59 : t) ->
        fun ~method_:(x54 : string) ->
          fun ~param:(x55 : any) ->
            fun ?token:(x56 : CancellationToken.t option) ->
              fun () ->
                Promise.t_of_js Obj.magic
                  (let x60 = t_to_js x59 in
                   Ojs.call (Ojs.get_prop_ascii x60 "sendRequest") "apply"
                     [|x60;((let x57 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x57 "push"
                                  [|(Ojs.string_to_js x54)|]);
                             ignore (Ojs.call x57 "push" [|(any_to_js x55)|]);
                             (match x56 with
                              | Some x58 ->
                                  ignore
                                    (Ojs.call x57 "push"
                                       [|(CancellationToken.t_to_js x58)|])
                              | None -> ());
                             x57))|])
    let (on_request :
      t ->
        type_:('R, 'PR, 'E, 'RO) ProtocolRequestType0.t ->
          handler:('R, 'E) RequestHandler0.t -> Disposable.t)
      =
      fun (x70 : t) ->
        fun ~type_:(x62 : ('R, 'PR, 'E, 'RO) ProtocolRequestType0.t) ->
          fun ~handler:(x67 : ('R, 'E) RequestHandler0.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x70) "onRequest"
                 [|(ProtocolRequestType0.t_to_js Obj.magic Obj.magic
                      Obj.magic Obj.magic x62);(RequestHandler0.t_to_js
                                                  Obj.magic Obj.magic x67)|])
    let (on_request' :
      t ->
        type_:('R, 'E) RequestType0.t ->
          handler:('R, 'E) RequestHandler0.t -> Disposable.t)
      =
      fun (x77 : t) ->
        fun ~type_:(x71 : ('R, 'E) RequestType0.t) ->
          fun ~handler:(x74 : ('R, 'E) RequestHandler0.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x77) "onRequest"
                 [|(RequestType0.t_to_js Obj.magic Obj.magic x71);(RequestHandler0.t_to_js
                                                                    Obj.magic
                                                                    Obj.magic
                                                                    x74)|])
    let (on_request'' :
      t ->
        type_:('P, 'R, 'PR, 'E, 'RO) ProtocolRequestType.t ->
          handler:('P, 'R, 'E) RequestHandler.t -> Disposable.t)
      =
      fun (x88 : t) ->
        fun ~type_:(x78 : ('P, 'R, 'PR, 'E, 'RO) ProtocolRequestType.t) ->
          fun ~handler:(x84 : ('P, 'R, 'E) RequestHandler.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x88) "onRequest"
                 [|(ProtocolRequestType.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic x78);(RequestHandler.t_to_js
                                                  Obj.magic Obj.magic
                                                  Obj.magic x84)|])
    let (on_request''' :
      t ->
        type_:('P, 'R, 'E) RequestType.t ->
          handler:('P, 'R, 'E) RequestHandler.t -> Disposable.t)
      =
      fun (x97 : t) ->
        fun ~type_:(x89 : ('P, 'R, 'E) RequestType.t) ->
          fun ~handler:(x93 : ('P, 'R, 'E) RequestHandler.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x97) "onRequest"
                 [|(RequestType.t_to_js Obj.magic Obj.magic Obj.magic x89);(
                   RequestHandler.t_to_js Obj.magic Obj.magic Obj.magic x93)|])
    let (on_request'''' :
      t ->
        method_:string ->
          handler:('R, 'E) GenericRequestHandler.t -> Disposable.t)
      =
      fun (x102 : t) ->
        fun ~method_:(x98 : string) ->
          fun ~handler:(x99 : ('R, 'E) GenericRequestHandler.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x102) "onRequest"
                 [|(Ojs.string_to_js x98);(GenericRequestHandler.t_to_js
                                             Obj.magic Obj.magic x99)|])
    let (send_notification : t -> type_:NotificationType0.t -> unit) =
      fun (x104 : t) ->
        fun ~type_:(x103 : NotificationType0.t) ->
          ignore
            (Ojs.call (t_to_js x104) "sendNotification"
               [|(NotificationType0.t_to_js x103)|])
    let (send_notification' :
      t -> type_:'RO ProtocolNotificationType0.t -> unit) =
      fun (x107 : t) ->
        fun ~type_:(x105 : 'RO ProtocolNotificationType0.t) ->
          ignore
            (Ojs.call (t_to_js x107) "sendNotification"
               [|(ProtocolNotificationType0.t_to_js Obj.magic x105)|])
    let (send_notification'' :
      t ->
        type_:('P, 'RO) ProtocolNotificationType.t ->
          ?params:'P -> unit -> unit)
      =
      fun (x114 : t) ->
        fun ~type_:(x108 : ('P, 'RO) ProtocolNotificationType.t) ->
          fun ?params:(x109 : 'P option) ->
            fun () ->
              ignore
                (let x115 = t_to_js x114 in
                 Ojs.call (Ojs.get_prop_ascii x115 "sendNotification")
                   "apply"
                   [|x115;((let x110 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x110 "push"
                                 [|(ProtocolNotificationType.t_to_js
                                      Obj.magic Obj.magic x108)|]);
                            (match x109 with
                             | Some x111 ->
                                 ignore
                                   (Ojs.call x110 "push" [|(Obj.magic x111)|])
                             | None -> ());
                            x110))|])
    let (send_notification''' :
      t -> type_:'P NotificationType.t -> ?params:'P -> unit -> unit) =
      fun (x121 : t) ->
        fun ~type_:(x116 : 'P NotificationType.t) ->
          fun ?params:(x117 : 'P option) ->
            fun () ->
              ignore
                (let x122 = t_to_js x121 in
                 Ojs.call (Ojs.get_prop_ascii x122 "sendNotification")
                   "apply"
                   [|x122;((let x118 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x118 "push"
                                 [|(NotificationType.t_to_js Obj.magic x116)|]);
                            (match x117 with
                             | Some x119 ->
                                 ignore
                                   (Ojs.call x118 "push" [|(Obj.magic x119)|])
                             | None -> ());
                            x118))|])
    let (send_notification'''' : t -> method_:string -> unit) =
      fun (x124 : t) ->
        fun ~method_:(x123 : string) ->
          ignore
            (Ojs.call (t_to_js x124) "sendNotification"
               [|(Ojs.string_to_js x123)|])
    let (send_notification''''' : t -> method_:string -> params:any -> unit)
      =
      fun (x127 : t) ->
        fun ~method_:(x125 : string) ->
          fun ~params:(x126 : any) ->
            ignore
              (Ojs.call (t_to_js x127) "sendNotification"
                 [|(Ojs.string_to_js x125);(any_to_js x126)|])
    let (on_notification :
      t ->
        type_:'RO ProtocolNotificationType0.t ->
          handler:NotificationHandler0.t -> Disposable.t)
      =
      fun (x131 : t) ->
        fun ~type_:(x128 : 'RO ProtocolNotificationType0.t) ->
          fun ~handler:(x130 : NotificationHandler0.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x131) "onNotification"
                 [|(ProtocolNotificationType0.t_to_js Obj.magic x128);(
                   NotificationHandler0.t_to_js x130)|])
    let (on_notification' :
      t ->
        type_:NotificationType0.t ->
          handler:NotificationHandler0.t -> Disposable.t)
      =
      fun (x134 : t) ->
        fun ~type_:(x132 : NotificationType0.t) ->
          fun ~handler:(x133 : NotificationHandler0.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x134) "onNotification"
                 [|(NotificationType0.t_to_js x132);(NotificationHandler0.t_to_js
                                                       x133)|])
    let (on_notification'' :
      t ->
        type_:('P, 'RO) ProtocolNotificationType.t ->
          handler:'P NotificationHandler.t -> Disposable.t)
      =
      fun (x140 : t) ->
        fun ~type_:(x135 : ('P, 'RO) ProtocolNotificationType.t) ->
          fun ~handler:(x138 : 'P NotificationHandler.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x140) "onNotification"
                 [|(ProtocolNotificationType.t_to_js Obj.magic Obj.magic x135);(
                   NotificationHandler.t_to_js Obj.magic x138)|])
    let (on_notification''' :
      t ->
        type_:'P NotificationType.t ->
          handler:'P NotificationHandler.t -> Disposable.t)
      =
      fun (x145 : t) ->
        fun ~type_:(x141 : 'P NotificationType.t) ->
          fun ~handler:(x143 : 'P NotificationHandler.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x145) "onNotification"
                 [|(NotificationType.t_to_js Obj.magic x141);(NotificationHandler.t_to_js
                                                                Obj.magic
                                                                x143)|])
    let (on_notification'''' :
      t ->
        method_:string ->
          handler:GenericNotificationHandler.t -> Disposable.t)
      =
      fun (x148 : t) ->
        fun ~method_:(x146 : string) ->
          fun ~handler:(x147 : GenericNotificationHandler.t) ->
            Disposable.t_of_js
              (Ojs.call (t_to_js x148) "onNotification"
                 [|(Ojs.string_to_js x146);(GenericNotificationHandler.t_to_js
                                              x147)|])
    let (on_progress :
      t ->
        type_:'P ProgressType.t ->
          token:string or_number ->
            handler:'P NotificationHandler.t -> Disposable.t)
      =
      fun (x155 : t) ->
        fun ~type_:(x149 : 'P ProgressType.t) ->
          fun ~token:(x151 : string or_number) ->
            fun ~handler:(x153 : 'P NotificationHandler.t) ->
              Disposable.t_of_js
                (Ojs.call (t_to_js x155) "onProgress"
                   [|(ProgressType.t_to_js Obj.magic x149);(or_number_to_js
                                                              Ojs.string_to_js
                                                              x151);(
                     NotificationHandler.t_to_js Obj.magic x153)|])
    let (send_progress :
      t ->
        type_:'P ProgressType.t -> token:string or_number -> value:'P -> unit)
      =
      fun (x161 : t) ->
        fun ~type_:(x156 : 'P ProgressType.t) ->
          fun ~token:(x158 : string or_number) ->
            fun ~value:(x160 : 'P) ->
              ignore
                (Ojs.call (t_to_js x161) "sendProgress"
                   [|(ProgressType.t_to_js Obj.magic x156);(or_number_to_js
                                                              Ojs.string_to_js
                                                              x158);(
                     Obj.magic x160)|])
    let (trace :
      t ->
        value:Trace.t ->
          tracer:Tracer.t -> ?send_notification:bool -> unit -> unit)
      =
      fun (x167 : t) ->
        fun ~value:(x162 : Trace.t) ->
          fun ~tracer:(x163 : Tracer.t) ->
            fun ?send_notification:(x164 : bool option) ->
              fun () ->
                ignore
                  (let x168 = t_to_js x167 in
                   Ojs.call (Ojs.get_prop_ascii x168 "trace") "apply"
                     [|x168;((let x165 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x165 "push"
                                   [|(Trace.t_to_js x162)|]);
                              ignore
                                (Ojs.call x165 "push"
                                   [|(Tracer.t_to_js x163)|]);
                              (match x164 with
                               | Some x166 ->
                                   ignore
                                     (Ojs.call x165 "push"
                                        [|(Ojs.bool_to_js x166)|])
                               | None -> ());
                              x165))|])
    let (trace' :
      t ->
        value:Trace.t ->
          tracer:Tracer.t -> ?trace_options:TraceOptions.t -> unit -> unit)
      =
      fun (x174 : t) ->
        fun ~value:(x169 : Trace.t) ->
          fun ~tracer:(x170 : Tracer.t) ->
            fun ?trace_options:(x171 : TraceOptions.t option) ->
              fun () ->
                ignore
                  (let x175 = t_to_js x174 in
                   Ojs.call (Ojs.get_prop_ascii x175 "trace") "apply"
                     [|x175;((let x172 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x172 "push"
                                   [|(Trace.t_to_js x169)|]);
                              ignore
                                (Ojs.call x172 "push"
                                   [|(Tracer.t_to_js x170)|]);
                              (match x171 with
                               | Some x173 ->
                                   ignore
                                     (Ojs.call x172 "push"
                                        [|(TraceOptions.t_to_js x173)|])
                               | None -> ());
                              x172))|])
    let (get_on_error :
      t -> (Error.t * Message.t or_undefined * int or_undefined) Event.t) =
      fun (x176 : t) ->
        Event.t_of_js
          (fun (x177 : Ojs.t) ->
             let x178 = x177 in
             ((Error.t_of_js (Ojs.array_get x178 0)),
               (or_undefined_of_js Message.t_of_js (Ojs.array_get x178 1)),
               (or_undefined_of_js Ojs.int_of_js (Ojs.array_get x178 2))))
          (Ojs.get_prop_ascii (t_to_js x176) "onError")
    let (set_on_error :
      t ->
        (Error.t * Message.t or_undefined * int or_undefined) Event.t -> unit)
      =
      fun (x181 : t) ->
        fun
          (x182 :
            (Error.t * Message.t or_undefined * int or_undefined) Event.t)
          ->
          Ojs.set_prop_ascii (t_to_js x181) "onError"
            (Event.t_to_js
               (fun
                  (x183 :
                    (Error.t * Message.t or_undefined * int or_undefined))
                  ->
                  let (x184, x185, x186) = x183 in
                  let x187 = Ojs.array_make 3 in
                  Ojs.array_set x187 0 (Error.t_to_js x184);
                  Ojs.array_set x187 1
                    (or_undefined_to_js Message.t_to_js x185);
                  Ojs.array_set x187 2
                    (or_undefined_to_js Ojs.int_to_js x186);
                  x187) x182)
    let (get_on_close : t -> unit Event.t) =
      fun (x190 : t) ->
        Event.t_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x190) "onClose")
    let (set_on_close : t -> unit Event.t -> unit) =
      fun (x192 : t) ->
        fun (x193 : unit Event.t) ->
          Ojs.set_prop_ascii (t_to_js x192) "onClose"
            (Event.t_to_js Ojs.unit_to_js x193)
    let (get_on_unhandled_notification : t -> NotificationMessage.t Event.t)
      =
      fun (x195 : t) ->
        Event.t_of_js NotificationMessage.t_of_js
          (Ojs.get_prop_ascii (t_to_js x195) "onUnhandledNotification")
    let (set_on_unhandled_notification :
      t -> NotificationMessage.t Event.t -> unit) =
      fun (x197 : t) ->
        fun (x198 : NotificationMessage.t Event.t) ->
          Ojs.set_prop_ascii (t_to_js x197) "onUnhandledNotification"
            (Event.t_to_js NotificationMessage.t_to_js x198)
    let (get_on_dispose : t -> unit Event.t) =
      fun (x200 : t) ->
        Event.t_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x200) "onDispose")
    let (set_on_dispose : t -> unit Event.t -> unit) =
      fun (x202 : t) ->
        fun (x203 : unit Event.t) ->
          Ojs.set_prop_ascii (t_to_js x202) "onDispose"
            (Event.t_to_js Ojs.unit_to_js x203)
    let (end_ : t -> unit) =
      fun (x205 : t) -> ignore (Ojs.call (t_to_js x205) "end" [||])
    let (dispose : t -> unit) =
      fun (x206 : t) -> ignore (Ojs.call (t_to_js x206) "dispose" [||])
    let (listen : t -> unit) =
      fun (x207 : t) -> ignore (Ojs.call (t_to_js x207) "listen" [||])
  end
let (create_protocol_connection :
  input:MessageReader.t ->
    output:MessageWriter.t ->
      ?logger:Logger.t ->
        ?options:(ConnectionOptions.t, ConnectionStrategy.t) union2 ->
          unit -> ProtocolConnection.t)
  =
  fun ~input:(x208 : MessageReader.t) ->
    fun ~output:(x209 : MessageWriter.t) ->
      fun ?logger:(x210 : Logger.t option) ->
        fun
          ?options:(x211 :
                     (ConnectionOptions.t, ConnectionStrategy.t) union2
                       option)
          ->
          fun () ->
            ProtocolConnection.t_of_js
              (let x217 = Ojs.global in
               Ojs.call (Ojs.get_prop_ascii x217 "createProtocolConnection")
                 "apply"
                 [|x217;((let x212 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x212 "push"
                               [|(MessageReader.t_to_js x208)|]);
                          ignore
                            (Ojs.call x212 "push"
                               [|(MessageWriter.t_to_js x209)|]);
                          (match x210 with
                           | Some x216 ->
                               ignore
                                 (Ojs.call x212 "push"
                                    [|(Logger.t_to_js x216)|])
                           | None -> ());
                          (match x211 with
                           | Some x213 ->
                               ignore
                                 (Ojs.call x212 "push"
                                    [|(union2_to_js ConnectionOptions.t_to_js
                                         ConnectionStrategy.t_to_js x213)|])
                           | None -> ());
                          x212))|])
