[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module DocumentColorClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_dynamic_registration : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x3) "dynamicRegistration")
    let (set_dynamic_registration : t -> bool -> unit) =
      fun (x4 : t) ->
        fun (x5 : bool) ->
          Ojs.set_prop_ascii (t_to_js x4) "dynamicRegistration"
            (Ojs.bool_to_js x5)
  end
module DocumentColorOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7 : Ojs.t) -> x7
    and t_to_js : t -> Ojs.t = fun (x6 : Ojs.t) -> x6
    let (cast : t -> WorkDoneProgressOptions.t) =
      fun (x8 : t) -> WorkDoneProgressOptions.t_of_js (t_to_js x8)
  end
module DocumentColorRegistrationOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10 : Ojs.t) -> x10
    and t_to_js : t -> Ojs.t = fun (x9 : Ojs.t) -> x9
    let (cast : t -> TextDocumentRegistrationOptions.t) =
      fun (x11 : t) -> TextDocumentRegistrationOptions.t_of_js (t_to_js x11)
    let (cast' : t -> StaticRegistrationOptions.t) =
      fun (x12 : t) -> StaticRegistrationOptions.t_of_js (t_to_js x12)
    let (cast'' : t -> DocumentColorOptions.t) =
      fun (x13 : t) -> DocumentColorOptions.t_of_js (t_to_js x13)
  end
module DocumentColorParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15 : Ojs.t) -> x15
    and t_to_js : t -> Ojs.t = fun (x14 : Ojs.t) -> x14
    let (get_text_document : t -> TextDocumentIdentifier.t) =
      fun (x16 : t) ->
        TextDocumentIdentifier.t_of_js
          (Ojs.get_prop_ascii (t_to_js x16) "textDocument")
    let (set_text_document : t -> TextDocumentIdentifier.t -> unit) =
      fun (x17 : t) ->
        fun (x18 : TextDocumentIdentifier.t) ->
          Ojs.set_prop_ascii (t_to_js x17) "textDocument"
            (TextDocumentIdentifier.t_to_js x18)
    let (cast : t -> WorkDoneProgressParams.t) =
      fun (x19 : t) -> WorkDoneProgressParams.t_of_js (t_to_js x19)
    let (cast' : t -> PartialResultParams.t) =
      fun (x20 : t) -> PartialResultParams.t_of_js (t_to_js x20)
  end
module DocumentColorRequest =
  struct
    let (method_ : [ `L_s0_textDocument_documentColor ]) =
      let x21 =
        Ojs.get_prop_ascii
          (Ojs.get_prop_ascii Ojs.global "DocumentColorRequest") "method" in
      match Ojs.string_of_js x21 with
      | "textDocument/documentColor" -> `L_s0_textDocument_documentColor
      | _ -> assert false
    let (type_ :
      (DocumentColorParams.t, ColorInformation.t list,
        ColorInformation.t list, unit, DocumentColorRegistrationOptions.t)
        ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js DocumentColorParams.t_of_js
        (fun (x23 : Ojs.t) -> Ojs.list_of_js ColorInformation.t_of_js x23)
        (fun (x25 : Ojs.t) -> Ojs.list_of_js ColorInformation.t_of_js x25)
        Ojs.unit_of_js DocumentColorRegistrationOptions.t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "DocumentColorRequest") "type")
    module HandlerSignature =
      struct
        type t =
          (DocumentColorParams.t, ColorInformation.t list, unit)
            RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x34 : Ojs.t) ->
            RequestHandler.t_of_js DocumentColorParams.t_of_js
              (fun (x36 : Ojs.t) ->
                 Ojs.list_of_js ColorInformation.t_of_js x36) Ojs.unit_of_js
              x34
        and t_to_js : t -> Ojs.t =
          fun
            (x29 :
              (DocumentColorParams.t, ColorInformation.t list, unit)
                RequestHandler.t)
            ->
            RequestHandler.t_to_js DocumentColorParams.t_to_js
              (fun (x31 : ColorInformation.t list) ->
                 Ojs.list_to_js ColorInformation.t_to_js x31) Ojs.unit_to_js
              x29
      end
  end
module ColorPresentationParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x40 : Ojs.t) -> x40
    and t_to_js : t -> Ojs.t = fun (x39 : Ojs.t) -> x39
    let (get_text_document : t -> TextDocumentIdentifier.t) =
      fun (x41 : t) ->
        TextDocumentIdentifier.t_of_js
          (Ojs.get_prop_ascii (t_to_js x41) "textDocument")
    let (set_text_document : t -> TextDocumentIdentifier.t -> unit) =
      fun (x42 : t) ->
        fun (x43 : TextDocumentIdentifier.t) ->
          Ojs.set_prop_ascii (t_to_js x42) "textDocument"
            (TextDocumentIdentifier.t_to_js x43)
    let (get_color : t -> Color.t) =
      fun (x44 : t) ->
        Color.t_of_js (Ojs.get_prop_ascii (t_to_js x44) "color")
    let (set_color : t -> Color.t -> unit) =
      fun (x45 : t) ->
        fun (x46 : Color.t) ->
          Ojs.set_prop_ascii (t_to_js x45) "color" (Color.t_to_js x46)
    let (get_range : t -> Range.t) =
      fun (x47 : t) ->
        Range.t_of_js (Ojs.get_prop_ascii (t_to_js x47) "range")
    let (set_range : t -> Range.t -> unit) =
      fun (x48 : t) ->
        fun (x49 : Range.t) ->
          Ojs.set_prop_ascii (t_to_js x48) "range" (Range.t_to_js x49)
    let (cast : t -> WorkDoneProgressParams.t) =
      fun (x50 : t) -> WorkDoneProgressParams.t_of_js (t_to_js x50)
    let (cast' : t -> PartialResultParams.t) =
      fun (x51 : t) -> PartialResultParams.t_of_js (t_to_js x51)
  end
module ColorPresentationRequest =
  struct
    let (type_ :
      (ColorPresentationParams.t, ColorPresentation.t list,
        ColorPresentation.t list, unit,
        (WorkDoneProgressOptions.t, TextDocumentRegistrationOptions.t)
          intersection2)
        ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js ColorPresentationParams.t_of_js
        (fun (x53 : Ojs.t) -> Ojs.list_of_js ColorPresentation.t_of_js x53)
        (fun (x55 : Ojs.t) -> Ojs.list_of_js ColorPresentation.t_of_js x55)
        Ojs.unit_of_js
        (fun (x58 : Ojs.t) ->
           intersection2_of_js WorkDoneProgressOptions.t_of_js
             TextDocumentRegistrationOptions.t_of_js x58)
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "ColorPresentationRequest") "type")
    module HandlerSignature =
      struct
        type t =
          (ColorPresentationParams.t, ColorPresentation.t list, unit)
            RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x66 : Ojs.t) ->
            RequestHandler.t_of_js ColorPresentationParams.t_of_js
              (fun (x68 : Ojs.t) ->
                 Ojs.list_of_js ColorPresentation.t_of_js x68) Ojs.unit_of_js
              x66
        and t_to_js : t -> Ojs.t =
          fun
            (x61 :
              (ColorPresentationParams.t, ColorPresentation.t list, unit)
                RequestHandler.t)
            ->
            RequestHandler.t_to_js ColorPresentationParams.t_to_js
              (fun (x63 : ColorPresentation.t list) ->
                 Ojs.list_to_js ColorPresentation.t_to_js x63) Ojs.unit_to_js
              x61
      end
  end
