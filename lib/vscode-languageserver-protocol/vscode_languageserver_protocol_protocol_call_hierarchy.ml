[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
open Vscode_jsonrpc
open Vscode_languageserver_types
open Vscode_languageserver_protocol_messages
open Vscode_languageserver_protocol_protocol
module CallHierarchyClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_dynamic_registration : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x3) "dynamicRegistration")
    let (set_dynamic_registration : t -> bool -> unit) =
      fun (x4 : t) ->
        fun (x5 : bool) ->
          Ojs.set_prop_ascii (t_to_js x4) "dynamicRegistration"
            (Ojs.bool_to_js x5)
  end
module CallHierarchyOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7 : Ojs.t) -> x7
    and t_to_js : t -> Ojs.t = fun (x6 : Ojs.t) -> x6
    let (cast : t -> WorkDoneProgressOptions.t) =
      fun (x8 : t) -> WorkDoneProgressOptions.t_of_js (t_to_js x8)
  end
module CallHierarchyRegistrationOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10 : Ojs.t) -> x10
    and t_to_js : t -> Ojs.t = fun (x9 : Ojs.t) -> x9
    let (cast : t -> TextDocumentRegistrationOptions.t) =
      fun (x11 : t) -> TextDocumentRegistrationOptions.t_of_js (t_to_js x11)
    let (cast' : t -> CallHierarchyOptions.t) =
      fun (x12 : t) -> CallHierarchyOptions.t_of_js (t_to_js x12)
    let (cast'' : t -> StaticRegistrationOptions.t) =
      fun (x13 : t) -> StaticRegistrationOptions.t_of_js (t_to_js x13)
  end
module CallHierarchyPrepareParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15 : Ojs.t) -> x15
    and t_to_js : t -> Ojs.t = fun (x14 : Ojs.t) -> x14
    let (cast : t -> TextDocumentPositionParams.t) =
      fun (x16 : t) -> TextDocumentPositionParams.t_of_js (t_to_js x16)
    let (cast' : t -> WorkDoneProgressParams.t) =
      fun (x17 : t) -> WorkDoneProgressParams.t_of_js (t_to_js x17)
  end
module CallHierarchyPrepareRequest =
  struct
    let (method_ : [ `L_s2_textDocument_prepareCallHierarchy ]) =
      let x18 =
        Ojs.get_prop_ascii
          (Ojs.get_prop_ascii Ojs.global "CallHierarchyPrepareRequest")
          "method" in
      match Ojs.string_of_js x18 with
      | "textDocument/prepareCallHierarchy" ->
          `L_s2_textDocument_prepareCallHierarchy
      | _ -> assert false
    let (type_ :
      (CallHierarchyPrepareParams.t, CallHierarchyItem.t list or_null, 
        never, unit, CallHierarchyRegistrationOptions.t)
        ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js CallHierarchyPrepareParams.t_of_js
        (fun (x20 : Ojs.t) ->
           or_null_of_js
             (fun (x21 : Ojs.t) ->
                Ojs.list_of_js CallHierarchyItem.t_of_js x21) x20)
        never_of_js Ojs.unit_of_js CallHierarchyRegistrationOptions.t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "CallHierarchyPrepareRequest")
           "type")
    module HandlerSignature =
      struct
        type t =
          (CallHierarchyPrepareParams.t, CallHierarchyItem.t list or_null,
            unit) RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x32 : Ojs.t) ->
            RequestHandler.t_of_js CallHierarchyPrepareParams.t_of_js
              (fun (x34 : Ojs.t) ->
                 or_null_of_js
                   (fun (x35 : Ojs.t) ->
                      Ojs.list_of_js CallHierarchyItem.t_of_js x35) x34)
              Ojs.unit_of_js x32
        and t_to_js : t -> Ojs.t =
          fun
            (x26 :
              (CallHierarchyPrepareParams.t,
                CallHierarchyItem.t list or_null, unit) RequestHandler.t)
            ->
            RequestHandler.t_to_js CallHierarchyPrepareParams.t_to_js
              (fun (x28 : CallHierarchyItem.t list or_null) ->
                 or_null_to_js
                   (fun (x29 : CallHierarchyItem.t list) ->
                      Ojs.list_to_js CallHierarchyItem.t_to_js x29) x28)
              Ojs.unit_to_js x26
      end
  end
module CallHierarchyIncomingCallsParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x39 : Ojs.t) -> x39
    and t_to_js : t -> Ojs.t = fun (x38 : Ojs.t) -> x38
    let (get_item : t -> CallHierarchyItem.t) =
      fun (x40 : t) ->
        CallHierarchyItem.t_of_js (Ojs.get_prop_ascii (t_to_js x40) "item")
    let (set_item : t -> CallHierarchyItem.t -> unit) =
      fun (x41 : t) ->
        fun (x42 : CallHierarchyItem.t) ->
          Ojs.set_prop_ascii (t_to_js x41) "item"
            (CallHierarchyItem.t_to_js x42)
    let (cast : t -> WorkDoneProgressParams.t) =
      fun (x43 : t) -> WorkDoneProgressParams.t_of_js (t_to_js x43)
    let (cast' : t -> PartialResultParams.t) =
      fun (x44 : t) -> PartialResultParams.t_of_js (t_to_js x44)
  end
module CallHierarchyIncomingCallsRequest =
  struct
    let (method_ : [ `L_s0_callHierarchy_incomingCalls ]) =
      let x45 =
        Ojs.get_prop_ascii
          (Ojs.get_prop_ascii Ojs.global "CallHierarchyIncomingCallsRequest")
          "method" in
      match Ojs.string_of_js x45 with
      | "callHierarchy/incomingCalls" -> `L_s0_callHierarchy_incomingCalls
      | _ -> assert false
    let (type_ :
      (CallHierarchyIncomingCallsParams.t,
        CallHierarchyIncomingCall.t list or_null,
        CallHierarchyIncomingCall.t list, unit, unit) ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js CallHierarchyIncomingCallsParams.t_of_js
        (fun (x47 : Ojs.t) ->
           or_null_of_js
             (fun (x48 : Ojs.t) ->
                Ojs.list_of_js CallHierarchyIncomingCall.t_of_js x48) x47)
        (fun (x50 : Ojs.t) ->
           Ojs.list_of_js CallHierarchyIncomingCall.t_of_js x50)
        Ojs.unit_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "CallHierarchyIncomingCallsRequest")
           "type")
    module HandlerSignature =
      struct
        type t =
          (CallHierarchyIncomingCallsParams.t,
            CallHierarchyIncomingCall.t list or_null, unit) RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x60 : Ojs.t) ->
            RequestHandler.t_of_js CallHierarchyIncomingCallsParams.t_of_js
              (fun (x62 : Ojs.t) ->
                 or_null_of_js
                   (fun (x63 : Ojs.t) ->
                      Ojs.list_of_js CallHierarchyIncomingCall.t_of_js x63)
                   x62) Ojs.unit_of_js x60
        and t_to_js : t -> Ojs.t =
          fun
            (x54 :
              (CallHierarchyIncomingCallsParams.t,
                CallHierarchyIncomingCall.t list or_null, unit)
                RequestHandler.t)
            ->
            RequestHandler.t_to_js CallHierarchyIncomingCallsParams.t_to_js
              (fun (x56 : CallHierarchyIncomingCall.t list or_null) ->
                 or_null_to_js
                   (fun (x57 : CallHierarchyIncomingCall.t list) ->
                      Ojs.list_to_js CallHierarchyIncomingCall.t_to_js x57)
                   x56) Ojs.unit_to_js x54
      end
  end
module CallHierarchyOutgoingCallsParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x67 : Ojs.t) -> x67
    and t_to_js : t -> Ojs.t = fun (x66 : Ojs.t) -> x66
    let (get_item : t -> CallHierarchyItem.t) =
      fun (x68 : t) ->
        CallHierarchyItem.t_of_js (Ojs.get_prop_ascii (t_to_js x68) "item")
    let (set_item : t -> CallHierarchyItem.t -> unit) =
      fun (x69 : t) ->
        fun (x70 : CallHierarchyItem.t) ->
          Ojs.set_prop_ascii (t_to_js x69) "item"
            (CallHierarchyItem.t_to_js x70)
    let (cast : t -> WorkDoneProgressParams.t) =
      fun (x71 : t) -> WorkDoneProgressParams.t_of_js (t_to_js x71)
    let (cast' : t -> PartialResultParams.t) =
      fun (x72 : t) -> PartialResultParams.t_of_js (t_to_js x72)
  end
module CallHierarchyOutgoingCallsRequest =
  struct
    let (method_ : [ `L_s1_callHierarchy_outgoingCalls ]) =
      let x73 =
        Ojs.get_prop_ascii
          (Ojs.get_prop_ascii Ojs.global "CallHierarchyOutgoingCallsRequest")
          "method" in
      match Ojs.string_of_js x73 with
      | "callHierarchy/outgoingCalls" -> `L_s1_callHierarchy_outgoingCalls
      | _ -> assert false
    let (type_ :
      (CallHierarchyOutgoingCallsParams.t,
        CallHierarchyOutgoingCall.t list or_null,
        CallHierarchyOutgoingCall.t list, unit, unit) ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js CallHierarchyOutgoingCallsParams.t_of_js
        (fun (x75 : Ojs.t) ->
           or_null_of_js
             (fun (x76 : Ojs.t) ->
                Ojs.list_of_js CallHierarchyOutgoingCall.t_of_js x76) x75)
        (fun (x78 : Ojs.t) ->
           Ojs.list_of_js CallHierarchyOutgoingCall.t_of_js x78)
        Ojs.unit_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "CallHierarchyOutgoingCallsRequest")
           "type")
    module HandlerSignature =
      struct
        type t =
          (CallHierarchyOutgoingCallsParams.t,
            CallHierarchyOutgoingCall.t list or_null, unit) RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x88 : Ojs.t) ->
            RequestHandler.t_of_js CallHierarchyOutgoingCallsParams.t_of_js
              (fun (x90 : Ojs.t) ->
                 or_null_of_js
                   (fun (x91 : Ojs.t) ->
                      Ojs.list_of_js CallHierarchyOutgoingCall.t_of_js x91)
                   x90) Ojs.unit_of_js x88
        and t_to_js : t -> Ojs.t =
          fun
            (x82 :
              (CallHierarchyOutgoingCallsParams.t,
                CallHierarchyOutgoingCall.t list or_null, unit)
                RequestHandler.t)
            ->
            RequestHandler.t_to_js CallHierarchyOutgoingCallsParams.t_to_js
              (fun (x84 : CallHierarchyOutgoingCall.t list or_null) ->
                 or_null_to_js
                   (fun (x85 : CallHierarchyOutgoingCall.t list) ->
                      Ojs.list_to_js CallHierarchyOutgoingCall.t_to_js x85)
                   x84) Ojs.unit_to_js x82
      end
  end
