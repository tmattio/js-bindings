[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Internal =
  struct
    module Types =
      struct
        type _MonikerKind = [ `import  | `export  | `local ]
        and _MonikerKind_import = [ `import ]
        and _MonikerKind_export = [ `export ]
        and _MonikerKind_local = [ `local ]
        and _UniquenessLevel =
          [ `document  | `project  | `group  | `scheme  | `global ]
        and _UniquenessLevel_document = [ `document ]
        and _UniquenessLevel_project = [ `project ]
        and _UniquenessLevel_group = [ `group ]
        and _UniquenessLevel_scheme = [ `scheme ]
        and _UniquenessLevel_global = [ `global ]
        let rec _MonikerKind_of_js : Ojs.t -> _MonikerKind =
          fun (x2 : Ojs.t) ->
            let x3 = x2 in
            match Ojs.string_of_js x3 with
            | "import" -> `import
            | "export" -> `export
            | "local" -> `local
            | _ -> assert false
        and _MonikerKind_to_js : _MonikerKind -> Ojs.t =
          fun (x1 : [ `import  | `export  | `local ]) ->
            match x1 with
            | `import -> Ojs.string_to_js "import"
            | `export -> Ojs.string_to_js "export"
            | `local -> Ojs.string_to_js "local"
        and _MonikerKind_import_of_js : Ojs.t -> _MonikerKind_import =
          fun (x5 : Ojs.t) ->
            let x6 = x5 in
            match Ojs.string_of_js x6 with
            | "import" -> `import
            | _ -> assert false
        and _MonikerKind_import_to_js : _MonikerKind_import -> Ojs.t =
          fun (x4 : [ `import ]) ->
            match x4 with | `import -> Ojs.string_to_js "import"
        and _MonikerKind_export_of_js : Ojs.t -> _MonikerKind_export =
          fun (x8 : Ojs.t) ->
            let x9 = x8 in
            match Ojs.string_of_js x9 with
            | "export" -> `export
            | _ -> assert false
        and _MonikerKind_export_to_js : _MonikerKind_export -> Ojs.t =
          fun (x7 : [ `export ]) ->
            match x7 with | `export -> Ojs.string_to_js "export"
        and _MonikerKind_local_of_js : Ojs.t -> _MonikerKind_local =
          fun (x11 : Ojs.t) ->
            let x12 = x11 in
            match Ojs.string_of_js x12 with
            | "local" -> `local
            | _ -> assert false
        and _MonikerKind_local_to_js : _MonikerKind_local -> Ojs.t =
          fun (x10 : [ `local ]) ->
            match x10 with | `local -> Ojs.string_to_js "local"
        and _UniquenessLevel_of_js : Ojs.t -> _UniquenessLevel =
          fun (x14 : Ojs.t) ->
            let x15 = x14 in
            match Ojs.string_of_js x15 with
            | "document" -> `document
            | "project" -> `project
            | "group" -> `group
            | "scheme" -> `scheme
            | "global" -> `global
            | _ -> assert false
        and _UniquenessLevel_to_js : _UniquenessLevel -> Ojs.t =
          fun
            (x13 : [ `document  | `project  | `group  | `scheme  | `global ])
            ->
            match x13 with
            | `document -> Ojs.string_to_js "document"
            | `project -> Ojs.string_to_js "project"
            | `group -> Ojs.string_to_js "group"
            | `scheme -> Ojs.string_to_js "scheme"
            | `global -> Ojs.string_to_js "global"
        and _UniquenessLevel_document_of_js :
          Ojs.t -> _UniquenessLevel_document =
          fun (x17 : Ojs.t) ->
            let x18 = x17 in
            match Ojs.string_of_js x18 with
            | "document" -> `document
            | _ -> assert false
        and _UniquenessLevel_document_to_js :
          _UniquenessLevel_document -> Ojs.t =
          fun (x16 : [ `document ]) ->
            match x16 with | `document -> Ojs.string_to_js "document"
        and _UniquenessLevel_project_of_js :
          Ojs.t -> _UniquenessLevel_project =
          fun (x20 : Ojs.t) ->
            let x21 = x20 in
            match Ojs.string_of_js x21 with
            | "project" -> `project
            | _ -> assert false
        and _UniquenessLevel_project_to_js :
          _UniquenessLevel_project -> Ojs.t =
          fun (x19 : [ `project ]) ->
            match x19 with | `project -> Ojs.string_to_js "project"
        and _UniquenessLevel_group_of_js : Ojs.t -> _UniquenessLevel_group =
          fun (x23 : Ojs.t) ->
            let x24 = x23 in
            match Ojs.string_of_js x24 with
            | "group" -> `group
            | _ -> assert false
        and _UniquenessLevel_group_to_js : _UniquenessLevel_group -> Ojs.t =
          fun (x22 : [ `group ]) ->
            match x22 with | `group -> Ojs.string_to_js "group"
        and _UniquenessLevel_scheme_of_js : Ojs.t -> _UniquenessLevel_scheme
          =
          fun (x26 : Ojs.t) ->
            let x27 = x26 in
            match Ojs.string_of_js x27 with
            | "scheme" -> `scheme
            | _ -> assert false
        and _UniquenessLevel_scheme_to_js : _UniquenessLevel_scheme -> Ojs.t
          =
          fun (x25 : [ `scheme ]) ->
            match x25 with | `scheme -> Ojs.string_to_js "scheme"
        and _UniquenessLevel_global_of_js : Ojs.t -> _UniquenessLevel_global
          =
          fun (x29 : Ojs.t) ->
            let x30 = x29 in
            match Ojs.string_of_js x30 with
            | "global" -> `global
            | _ -> assert false
        and _UniquenessLevel_global_to_js : _UniquenessLevel_global -> Ojs.t
          =
          fun (x28 : [ `global ]) ->
            match x28 with | `global -> Ojs.string_to_js "global"
      end
  end
module UniquenessLevel =
  struct
    type t = _UniquenessLevel
    let rec t_of_js : Ojs.t -> t =
      fun (x32 : Ojs.t) -> _UniquenessLevel_of_js x32
    and t_to_js : t -> Ojs.t =
      fun (x31 : _UniquenessLevel) -> _UniquenessLevel_to_js x31
  end
module MonikerKind =
  struct
    type t = _MonikerKind
    let rec t_of_js : Ojs.t -> t =
      fun (x34 : Ojs.t) -> _MonikerKind_of_js x34
    and t_to_js : t -> Ojs.t =
      fun (x33 : _MonikerKind) -> _MonikerKind_to_js x33
  end
module Moniker =
  struct
    type t = _Moniker
    let rec t_of_js : Ojs.t -> t = fun (x36 : Ojs.t) -> _Moniker_of_js x36
    and t_to_js : t -> Ojs.t = fun (x35 : _Moniker) -> _Moniker_to_js x35
    let (get_scheme : t -> string) =
      fun (x37 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x37) "scheme")
    let (set_scheme : t -> string -> unit) =
      fun (x38 : t) ->
        fun (x39 : string) ->
          Ojs.set_prop_ascii (t_to_js x38) "scheme" (Ojs.string_to_js x39)
    let (get_identifier : t -> string) =
      fun (x40 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x40) "identifier")
    let (set_identifier : t -> string -> unit) =
      fun (x41 : t) ->
        fun (x42 : string) ->
          Ojs.set_prop_ascii (t_to_js x41) "identifier"
            (Ojs.string_to_js x42)
    let (get_unique : t -> _UniquenessLevel) =
      fun (x43 : t) ->
        _UniquenessLevel_of_js (Ojs.get_prop_ascii (t_to_js x43) "unique")
    let (set_unique : t -> _UniquenessLevel -> unit) =
      fun (x44 : t) ->
        fun (x45 : _UniquenessLevel) ->
          Ojs.set_prop_ascii (t_to_js x44) "unique"
            (_UniquenessLevel_to_js x45)
    let (get_kind : t -> _MonikerKind) =
      fun (x46 : t) ->
        _MonikerKind_of_js (Ojs.get_prop_ascii (t_to_js x46) "kind")
    let (set_kind : t -> _MonikerKind -> unit) =
      fun (x47 : t) ->
        fun (x48 : _MonikerKind) ->
          Ojs.set_prop_ascii (t_to_js x47) "kind" (_MonikerKind_to_js x48)
  end
module MonikerClientCapabilities =
  struct
    type t = _MonikerClientCapabilities
    let rec t_of_js : Ojs.t -> t =
      fun (x50 : Ojs.t) -> _MonikerClientCapabilities_of_js x50
    and t_to_js : t -> Ojs.t =
      fun (x49 : _MonikerClientCapabilities) ->
        _MonikerClientCapabilities_to_js x49
    let (get_dynamicRegistration : t -> bool) =
      fun (x51 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x51) "dynamicRegistration")
    let (set_dynamicRegistration : t -> bool -> unit) =
      fun (x52 : t) ->
        fun (x53 : bool) ->
          Ojs.set_prop_ascii (t_to_js x52) "dynamicRegistration"
            (Ojs.bool_to_js x53)
  end
module MonikerServerCapabilities =
  struct
    type t = _MonikerServerCapabilities
    let rec t_of_js : Ojs.t -> t =
      fun (x55 : Ojs.t) -> _MonikerServerCapabilities_of_js x55
    and t_to_js : t -> Ojs.t =
      fun (x54 : _MonikerServerCapabilities) ->
        _MonikerServerCapabilities_to_js x54
  end
module MonikerOptions =
  struct
    type t = _MonikerOptions
    let rec t_of_js : Ojs.t -> t =
      fun (x57 : Ojs.t) -> _MonikerOptions_of_js x57
    and t_to_js : t -> Ojs.t =
      fun (x56 : _MonikerOptions) -> _MonikerOptions_to_js x56
    let (cast : t -> WorkDoneProgressOptions.t) =
      fun (x58 : t) -> WorkDoneProgressOptions.t_of_js (t_to_js x58)
  end
module MonikerRegistrationOptions =
  struct
    type t = _MonikerRegistrationOptions
    let rec t_of_js : Ojs.t -> t =
      fun (x60 : Ojs.t) -> _MonikerRegistrationOptions_of_js x60
    and t_to_js : t -> Ojs.t =
      fun (x59 : _MonikerRegistrationOptions) ->
        _MonikerRegistrationOptions_to_js x59
    let (cast : t -> TextDocumentRegistrationOptions.t) =
      fun (x61 : t) -> TextDocumentRegistrationOptions.t_of_js (t_to_js x61)
    let (cast' : t -> _MonikerOptions) =
      fun (x62 : t) -> _MonikerOptions_of_js (t_to_js x62)
  end
module MonikerParams =
  struct
    type t = _MonikerParams
    let rec t_of_js : Ojs.t -> t =
      fun (x64 : Ojs.t) -> _MonikerParams_of_js x64
    and t_to_js : t -> Ojs.t =
      fun (x63 : _MonikerParams) -> _MonikerParams_to_js x63
    let (cast : t -> TextDocumentPositionParams.t) =
      fun (x65 : t) -> TextDocumentPositionParams.t_of_js (t_to_js x65)
    let (cast' : t -> WorkDoneProgressParams.t) =
      fun (x66 : t) -> WorkDoneProgressParams.t_of_js (t_to_js x66)
    let (cast'' : t -> PartialResultParams.t) =
      fun (x67 : t) -> PartialResultParams.t_of_js (t_to_js x67)
  end
module MonikerRequest =
  struct
    let (method_ : [ `L_s8_textDocument_moniker ]) =
      let x68 =
        Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "MonikerRequest")
          "method" in
      match Ojs.string_of_js x68 with
      | "textDocument/moniker" -> `L_s8_textDocument_moniker
      | _ -> assert false
    let (type_ :
      (_MonikerParams, _Moniker list or_null, _Moniker list, unit,
        _MonikerRegistrationOptions) ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js _MonikerParams_of_js
        (fun (x70 : Ojs.t) ->
           or_null_of_js
             (fun (x71 : Ojs.t) -> Ojs.list_of_js _Moniker_of_js x71) x70)
        (fun (x73 : Ojs.t) -> Ojs.list_of_js _Moniker_of_js x73)
        Ojs.unit_of_js _MonikerRegistrationOptions_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "MonikerRequest")
           "type")
  end
