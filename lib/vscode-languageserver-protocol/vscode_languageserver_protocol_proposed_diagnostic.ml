[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
open Vscode_jsonrpc
open Vscode_languageserver_types
open Vscode_languageserver_protocol_messages
open Vscode_languageserver_protocol_protocol
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_diagnostic : t -> DiagnosticClientCapabilities.t) =
      fun (x3 : t) ->
        DiagnosticClientCapabilities.t_of_js
          (Ojs.get_prop_ascii (t_to_js x3) "diagnostic")
    let (set_diagnostic : t -> DiagnosticClientCapabilities.t -> unit) =
      fun (x4 : t) ->
        fun (x5 : DiagnosticClientCapabilities.t) ->
          Ojs.set_prop_ascii (t_to_js x4) "diagnostic"
            (DiagnosticClientCapabilities.t_to_js x5)
  end
module AnonymousInterface1 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7 : Ojs.t) -> x7
    and t_to_js : t -> Ojs.t = fun (x6 : Ojs.t) -> x6
    let (get_kind : t -> DocumentDiagnosticReportKind_new.t) =
      fun (x8 : t) ->
        DocumentDiagnosticReportKind_new.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8) "kind")
    let (set_kind : t -> DocumentDiagnosticReportKind_new.t -> unit) =
      fun (x9 : t) ->
        fun (x10 : DocumentDiagnosticReportKind_new.t) ->
          Ojs.set_prop_ascii (t_to_js x9) "kind"
            (DocumentDiagnosticReportKind_new.t_to_js x10)
    let (get_result_id : t -> string) =
      fun (x11 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x11) "resultId")
    let (set_result_id : t -> string -> unit) =
      fun (x12 : t) ->
        fun (x13 : string) ->
          Ojs.set_prop_ascii (t_to_js x12) "resultId" (Ojs.string_to_js x13)
    let (get_items : t -> Diagnostic.t list) =
      fun (x14 : t) ->
        Ojs.list_of_js Diagnostic.t_of_js
          (Ojs.get_prop_ascii (t_to_js x14) "items")
    let (set_items : t -> Diagnostic.t list -> unit) =
      fun (x16 : t) ->
        fun (x17 : Diagnostic.t list) ->
          Ojs.set_prop_ascii (t_to_js x16) "items"
            (Ojs.list_to_js Diagnostic.t_to_js x17)
  end
module AnonymousInterface2 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x20 : Ojs.t) -> x20
    and t_to_js : t -> Ojs.t = fun (x19 : Ojs.t) -> x19
    let (get_kind : t -> DocumentDiagnosticReportKind_unChanged.t) =
      fun (x21 : t) ->
        DocumentDiagnosticReportKind_unChanged.t_of_js
          (Ojs.get_prop_ascii (t_to_js x21) "kind")
    let (set_kind : t -> DocumentDiagnosticReportKind_unChanged.t -> unit) =
      fun (x22 : t) ->
        fun (x23 : DocumentDiagnosticReportKind_unChanged.t) ->
          Ojs.set_prop_ascii (t_to_js x22) "kind"
            (DocumentDiagnosticReportKind_unChanged.t_to_js x23)
    let (get_result_id : t -> string) =
      fun (x24 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x24) "resultId")
    let (set_result_id : t -> string -> unit) =
      fun (x25 : t) ->
        fun (x26 : string) ->
          Ojs.set_prop_ascii (t_to_js x25) "resultId" (Ojs.string_to_js x26)
  end
module AnonymousInterface3 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x28 : Ojs.t) -> x28
    and t_to_js : t -> Ojs.t = fun (x27 : Ojs.t) -> x27
    let (get_uri : t -> DocumentUri.t) =
      fun (x29 : t) ->
        DocumentUri.t_of_js (Ojs.get_prop_ascii (t_to_js x29) "uri")
    let (set_uri : t -> DocumentUri.t -> unit) =
      fun (x30 : t) ->
        fun (x31 : DocumentUri.t) ->
          Ojs.set_prop_ascii (t_to_js x30) "uri" (DocumentUri.t_to_js x31)
    let (get_value : t -> string) =
      fun (x32 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x32) "value")
    let (set_value : t -> string -> unit) =
      fun (x33 : t) ->
        fun (x34 : string) ->
          Ojs.set_prop_ascii (t_to_js x33) "value" (Ojs.string_to_js x34)
  end
module AnonymousInterface4 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x36 : Ojs.t) -> x36
    and t_to_js : t -> Ojs.t = fun (x35 : Ojs.t) -> x35
    let (get_uri : t -> DocumentUri.t) =
      fun (x37 : t) ->
        DocumentUri.t_of_js (Ojs.get_prop_ascii (t_to_js x37) "uri")
    let (set_uri : t -> DocumentUri.t -> unit) =
      fun (x38 : t) ->
        fun (x39 : DocumentUri.t) ->
          Ojs.set_prop_ascii (t_to_js x38) "uri" (DocumentUri.t_to_js x39)
    let (get_version : t -> Integer.t or_null) =
      fun (x40 : t) ->
        or_null_of_js Integer.t_of_js
          (Ojs.get_prop_ascii (t_to_js x40) "version")
    let (set_version : t -> Integer.t or_null -> unit) =
      fun (x42 : t) ->
        fun (x43 : Integer.t or_null) ->
          Ojs.set_prop_ascii (t_to_js x42) "version"
            (or_null_to_js Integer.t_to_js x43)
  end
module DiagnosticClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x46 : Ojs.t) -> x46
    and t_to_js : t -> Ojs.t = fun (x45 : Ojs.t) -> x45
    let (get_dynamic_registration : t -> bool) =
      fun (x47 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x47) "dynamicRegistration")
    let (set_dynamic_registration : t -> bool -> unit) =
      fun (x48 : t) ->
        fun (x49 : bool) ->
          Ojs.set_prop_ascii (t_to_js x48) "dynamicRegistration"
            (Ojs.bool_to_js x49)
  end
module M_DiagnosticClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x51 : Ojs.t) -> x51
    and t_to_js : t -> Ojs.t = fun (x50 : Ojs.t) -> x50
    let (get_text_document :
      t ->
        (TextDocumentClientCapabilities.t, AnonymousInterface0.t)
          intersection2)
      =
      fun (x52 : t) ->
        intersection2_of_js TextDocumentClientCapabilities.t_of_js
          AnonymousInterface0.t_of_js
          (Ojs.get_prop_ascii (t_to_js x52) "textDocument")
    let (set_text_document :
      t ->
        (TextDocumentClientCapabilities.t, AnonymousInterface0.t)
          intersection2 -> unit)
      =
      fun (x55 : t) ->
        fun
          (x56 :
            (TextDocumentClientCapabilities.t, AnonymousInterface0.t)
              intersection2)
          ->
          Ojs.set_prop_ascii (t_to_js x55) "textDocument"
            (intersection2_to_js TextDocumentClientCapabilities.t_to_js
               AnonymousInterface0.t_to_js x56)
  end
module DiagnosticOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x60 : Ojs.t) -> x60
    and t_to_js : t -> Ojs.t = fun (x59 : Ojs.t) -> x59
    let (get_identifier : t -> string) =
      fun (x61 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x61) "identifier")
    let (set_identifier : t -> string -> unit) =
      fun (x62 : t) ->
        fun (x63 : string) ->
          Ojs.set_prop_ascii (t_to_js x62) "identifier"
            (Ojs.string_to_js x63)
    let (get_inter_file_dependencies : t -> bool) =
      fun (x64 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x64) "interFileDependencies")
    let (set_inter_file_dependencies : t -> bool -> unit) =
      fun (x65 : t) ->
        fun (x66 : bool) ->
          Ojs.set_prop_ascii (t_to_js x65) "interFileDependencies"
            (Ojs.bool_to_js x66)
    let (get_workspace_provider : t -> bool) =
      fun (x67 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x67) "workspaceProvider")
    let (set_workspace_provider : t -> bool -> unit) =
      fun (x68 : t) ->
        fun (x69 : bool) ->
          Ojs.set_prop_ascii (t_to_js x68) "workspaceProvider"
            (Ojs.bool_to_js x69)
    include struct include WorkDoneProgressOptions end
  end
module DiagnosticRegistrationOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x71 : Ojs.t) -> x71
    and t_to_js : t -> Ojs.t = fun (x70 : Ojs.t) -> x70
    include struct include TextDocumentRegistrationOptions end
    let (cast' : t -> DiagnosticOptions.t) =
      fun (x72 : t) -> DiagnosticOptions.t_of_js (t_to_js x72)
    let (cast'' : t -> StaticRegistrationOptions.t) =
      fun (x73 : t) -> StaticRegistrationOptions.t_of_js (t_to_js x73)
  end
module M_DiagnosticServerCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x75 : Ojs.t) -> x75
    and t_to_js : t -> Ojs.t = fun (x74 : Ojs.t) -> x74
    let (get_diagnostic_provider : t -> DiagnosticOptions.t) =
      fun (x76 : t) ->
        DiagnosticOptions.t_of_js
          (Ojs.get_prop_ascii (t_to_js x76) "diagnosticProvider")
    let (set_diagnostic_provider : t -> DiagnosticOptions.t -> unit) =
      fun (x77 : t) ->
        fun (x78 : DiagnosticOptions.t) ->
          Ojs.set_prop_ascii (t_to_js x77) "diagnosticProvider"
            (DiagnosticOptions.t_to_js x78)
  end
module DiagnosticServerCancellationData =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x80 : Ojs.t) -> x80
    and t_to_js : t -> Ojs.t = fun (x79 : Ojs.t) -> x79
    let (get_retrigger_request : t -> bool) =
      fun (x81 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x81) "retriggerRequest")
    let (set_retrigger_request : t -> bool -> unit) =
      fun (x82 : t) ->
        fun (x83 : bool) ->
          Ojs.set_prop_ascii (t_to_js x82) "retriggerRequest"
            (Ojs.bool_to_js x83)
  end
module DiagnosticServerCancellationData =
  struct
    let (is : value:any -> bool) =
      fun ~value:(x84 : any) ->
        Ojs.bool_of_js
          (Ojs.call
             (Ojs.get_prop_ascii Ojs.global
                "DiagnosticServerCancellationData") "is" [|(any_to_js x84)|])
  end
module DocumentDiagnosticParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x86 : Ojs.t) -> x86
    and t_to_js : t -> Ojs.t = fun (x85 : Ojs.t) -> x85
    let (get_text_document : t -> TextDocumentIdentifier.t) =
      fun (x87 : t) ->
        TextDocumentIdentifier.t_of_js
          (Ojs.get_prop_ascii (t_to_js x87) "textDocument")
    let (set_text_document : t -> TextDocumentIdentifier.t -> unit) =
      fun (x88 : t) ->
        fun (x89 : TextDocumentIdentifier.t) ->
          Ojs.set_prop_ascii (t_to_js x88) "textDocument"
            (TextDocumentIdentifier.t_to_js x89)
    let (get_identifier : t -> string) =
      fun (x90 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x90) "identifier")
    let (set_identifier : t -> string -> unit) =
      fun (x91 : t) ->
        fun (x92 : string) ->
          Ojs.set_prop_ascii (t_to_js x91) "identifier"
            (Ojs.string_to_js x92)
    let (get_previous_result_id : t -> string) =
      fun (x93 : t) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x93) "previousResultId")
    let (set_previous_result_id : t -> string -> unit) =
      fun (x94 : t) ->
        fun (x95 : string) ->
          Ojs.set_prop_ascii (t_to_js x94) "previousResultId"
            (Ojs.string_to_js x95)
    include struct include WorkDoneProgressParams end
    let (cast' : t -> PartialResultParams.t) =
      fun (x96 : t) -> PartialResultParams.t_of_js (t_to_js x96)
  end
module DocumentDiagnosticReportKind =
  struct
    type t = [ `new_  | `unChanged ]
    let rec t_of_js : Ojs.t -> t =
      fun (x98 : Ojs.t) ->
        let x99 = x98 in
        match Ojs.string_of_js x99 with
        | "new" -> `new_
        | "unChanged" -> `unChanged
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x97 : [ `new_  | `unChanged ]) ->
        match x97 with
        | `new_ -> Ojs.string_to_js "new"
        | `unChanged -> Ojs.string_to_js "unChanged"
  end
module DocumentDiagnosticReport =
  struct
    type t =
      [ `U_s0_new of AnonymousInterface1.t 
      | `U_s2_unChanged of AnonymousInterface2.t ]
    let rec t_of_js : Ojs.t -> t =
      fun (x103 : Ojs.t) ->
        let x104 = x103 in
        match Ojs.string_of_js (Ojs.get_prop_ascii x104 "kind") with
        | "new" -> `U_s0_new (AnonymousInterface1.t_of_js x104)
        | "unChanged" -> `U_s2_unChanged (AnonymousInterface2.t_of_js x104)
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x100 :
          [ `U_s0_new of AnonymousInterface1.t 
          | `U_s2_unChanged of AnonymousInterface2.t ])
        ->
        match x100 with
        | `U_s0_new x101 -> AnonymousInterface1.t_to_js x101
        | `U_s2_unChanged x102 -> AnonymousInterface2.t_to_js x102
  end
module DocumentDiagnosticReportPartialResult =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x106 : Ojs.t) -> x106
    and t_to_js : t -> Ojs.t = fun (x105 : Ojs.t) -> x105
    let (get_items : t -> Diagnostic.t list) =
      fun (x107 : t) ->
        Ojs.list_of_js Diagnostic.t_of_js
          (Ojs.get_prop_ascii (t_to_js x107) "items")
    let (set_items : t -> Diagnostic.t list -> unit) =
      fun (x109 : t) ->
        fun (x110 : Diagnostic.t list) ->
          Ojs.set_prop_ascii (t_to_js x109) "items"
            (Ojs.list_to_js Diagnostic.t_to_js x110)
  end
module DocumentDiagnosticRequest =
  struct
    let (method_ : [ `L_s1_textDocument_diagnostic ]) =
      let x112 =
        Ojs.get_prop_ascii
          (Ojs.get_prop_ascii Ojs.global "DocumentDiagnosticRequest")
          "method" in
      match Ojs.string_of_js x112 with
      | "textDocument/diagnostic" -> `L_s1_textDocument_diagnostic
      | _ -> assert false
    let (type_ :
      (DocumentDiagnosticParams.t, DocumentDiagnosticReport.t,
        DocumentDiagnosticReportPartialResult.t,
        DiagnosticServerCancellationData.t, DiagnosticRegistrationOptions.t)
        ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js DocumentDiagnosticParams.t_of_js
        DocumentDiagnosticReport.t_of_js
        DocumentDiagnosticReportPartialResult.t_of_js
        DiagnosticServerCancellationData.t_of_js
        DiagnosticRegistrationOptions.t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "DocumentDiagnosticRequest") "type")
    module HandlerSignature =
      struct
        type t =
          (DocumentDiagnosticParams.t, DocumentDiagnosticReport.t, unit)
            RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x122 : Ojs.t) ->
            RequestHandler.t_of_js DocumentDiagnosticParams.t_of_js
              DocumentDiagnosticReport.t_of_js Ojs.unit_of_js x122
        and t_to_js : t -> Ojs.t =
          fun
            (x118 :
              (DocumentDiagnosticParams.t, DocumentDiagnosticReport.t, 
                unit) RequestHandler.t)
            ->
            RequestHandler.t_to_js DocumentDiagnosticParams.t_to_js
              DocumentDiagnosticReport.t_to_js Ojs.unit_to_js x118
      end
  end
module WorkspaceDiagnosticParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x127 : Ojs.t) -> x127
    and t_to_js : t -> Ojs.t = fun (x126 : Ojs.t) -> x126
    let (get_identifier : t -> string) =
      fun (x128 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x128) "identifier")
    let (set_identifier : t -> string -> unit) =
      fun (x129 : t) ->
        fun (x130 : string) ->
          Ojs.set_prop_ascii (t_to_js x129) "identifier"
            (Ojs.string_to_js x130)
    let (get_previous_result_ids : t -> AnonymousInterface3.t list) =
      fun (x131 : t) ->
        Ojs.list_of_js AnonymousInterface3.t_of_js
          (Ojs.get_prop_ascii (t_to_js x131) "previousResultIds")
    let (set_previous_result_ids : t -> AnonymousInterface3.t list -> unit) =
      fun (x133 : t) ->
        fun (x134 : AnonymousInterface3.t list) ->
          Ojs.set_prop_ascii (t_to_js x133) "previousResultIds"
            (Ojs.list_to_js AnonymousInterface3.t_to_js x134)
    include struct include WorkDoneProgressParams end
    let (cast' : t -> PartialResultParams.t) =
      fun (x136 : t) -> PartialResultParams.t_of_js (t_to_js x136)
  end
module WorkspaceDocumentDiagnosticReport =
  struct
    type t =
      (AnonymousInterface4.t, DocumentDiagnosticReport.t) intersection2
    let rec t_of_js : Ojs.t -> t =
      fun (x140 : Ojs.t) ->
        intersection2_of_js AnonymousInterface4.t_of_js
          DocumentDiagnosticReport.t_of_js x140
    and t_to_js : t -> Ojs.t =
      fun
        (x137 :
          (AnonymousInterface4.t, DocumentDiagnosticReport.t) intersection2)
        ->
        intersection2_to_js AnonymousInterface4.t_to_js
          DocumentDiagnosticReport.t_to_js x137
  end
module WorkspaceDiagnosticReport =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x144 : Ojs.t) -> x144
    and t_to_js : t -> Ojs.t = fun (x143 : Ojs.t) -> x143
    let (get_items : t -> WorkspaceDocumentDiagnosticReport.t list) =
      fun (x145 : t) ->
        Ojs.list_of_js WorkspaceDocumentDiagnosticReport.t_of_js
          (Ojs.get_prop_ascii (t_to_js x145) "items")
    let (set_items : t -> WorkspaceDocumentDiagnosticReport.t list -> unit) =
      fun (x147 : t) ->
        fun (x148 : WorkspaceDocumentDiagnosticReport.t list) ->
          Ojs.set_prop_ascii (t_to_js x147) "items"
            (Ojs.list_to_js WorkspaceDocumentDiagnosticReport.t_to_js x148)
  end
module WorkspaceDiagnosticReportPartialResult =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x151 : Ojs.t) -> x151
    and t_to_js : t -> Ojs.t = fun (x150 : Ojs.t) -> x150
    let (get_items : t -> WorkspaceDocumentDiagnosticReport.t list) =
      fun (x152 : t) ->
        Ojs.list_of_js WorkspaceDocumentDiagnosticReport.t_of_js
          (Ojs.get_prop_ascii (t_to_js x152) "items")
    let (set_items : t -> WorkspaceDocumentDiagnosticReport.t list -> unit) =
      fun (x154 : t) ->
        fun (x155 : WorkspaceDocumentDiagnosticReport.t list) ->
          Ojs.set_prop_ascii (t_to_js x154) "items"
            (Ojs.list_to_js WorkspaceDocumentDiagnosticReport.t_to_js x155)
  end
module WorkspaceDiagnosticRequest =
  struct
    let (method_ : [ `L_s3_workspace_diagnostic ]) =
      let x157 =
        Ojs.get_prop_ascii
          (Ojs.get_prop_ascii Ojs.global "WorkspaceDiagnosticRequest")
          "method" in
      match Ojs.string_of_js x157 with
      | "workspace/diagnostic" -> `L_s3_workspace_diagnostic
      | _ -> assert false
    let (type_ :
      (WorkspaceDiagnosticParams.t, WorkspaceDiagnosticReport.t,
        WorkspaceDiagnosticReportPartialResult.t,
        DiagnosticServerCancellationData.t, unit) ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js WorkspaceDiagnosticParams.t_of_js
        WorkspaceDiagnosticReport.t_of_js
        WorkspaceDiagnosticReportPartialResult.t_of_js
        DiagnosticServerCancellationData.t_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "WorkspaceDiagnosticRequest")
           "type")
    module HandlerSignature =
      struct
        type t =
          (WorkspaceDiagnosticParams.t, WorkspaceDiagnosticReport.t or_null,
            unit) RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x168 : Ojs.t) ->
            RequestHandler.t_of_js WorkspaceDiagnosticParams.t_of_js
              (fun (x170 : Ojs.t) ->
                 or_null_of_js WorkspaceDiagnosticReport.t_of_js x170)
              Ojs.unit_of_js x168
        and t_to_js : t -> Ojs.t =
          fun
            (x163 :
              (WorkspaceDiagnosticParams.t,
                WorkspaceDiagnosticReport.t or_null, unit) RequestHandler.t)
            ->
            RequestHandler.t_to_js WorkspaceDiagnosticParams.t_to_js
              (fun (x165 : WorkspaceDiagnosticReport.t or_null) ->
                 or_null_to_js WorkspaceDiagnosticReport.t_to_js x165)
              Ojs.unit_to_js x163
      end
  end
module DiagnosticRefreshRequest =
  struct
    let (method_ : any) =
      any_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "DiagnosticRefreshRequest")
           "method")
    let (type_ : (unit, unit, unit, unit) ProtocolRequestType0.t) =
      ProtocolRequestType0.t_of_js Ojs.unit_of_js Ojs.unit_of_js
        Ojs.unit_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "DiagnosticRefreshRequest") "type")
    module HandlerSignature =
      struct
        type t = (unit, unit) RequestHandler0.t
        let rec t_of_js : Ojs.t -> t =
          fun (x180 : Ojs.t) ->
            RequestHandler0.t_of_js Ojs.unit_of_js Ojs.unit_of_js x180
        and t_to_js : t -> Ojs.t =
          fun (x177 : (unit, unit) RequestHandler0.t) ->
            RequestHandler0.t_to_js Ojs.unit_to_js Ojs.unit_to_js x177
      end
  end
