[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module RegistrationType =
  struct
    type 'RO t = Ojs.t
    let rec t_of_js : 'RO . (Ojs.t -> 'RO) -> Ojs.t -> 'RO t = fun (type
      __RO) -> fun (__RO_of_js : Ojs.t -> __RO) -> fun (x2 : Ojs.t) -> x2
    and t_to_js : 'RO . ('RO -> Ojs.t) -> 'RO t -> Ojs.t = fun (type __RO) ->
      fun (__RO_to_js : __RO -> Ojs.t) -> fun (x1 : Ojs.t) -> x1
    let (get_____ : 'RO t -> ('RO * EM.t) or_undefined) =
      fun (x3 : 'RO t) ->
        or_undefined_of_js
          (fun (x5 : Ojs.t) ->
             let x6 = x5 in
             ((Obj.magic (Ojs.array_get x6 0)),
               (EM.t_of_js (Ojs.array_get x6 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x3) "____")
    let (get_method : 'RO t -> string) =
      fun (x7 : 'RO t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x7) "method")
    let (create : method_:string -> 'RO t) =
      fun ~method_:(x9 : string) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegistrationType")
             [|(Ojs.string_to_js x9)|])
  end
module ProtocolRequestType0 =
  struct
    type ('R, 'PR, 'E, 'RO) t = Ojs.t
    let rec t_of_js :
      'R 'PR 'E 'RO .
        (Ojs.t -> 'R) ->
          (Ojs.t -> 'PR) ->
            (Ojs.t -> 'E) -> (Ojs.t -> 'RO) -> Ojs.t -> ('R, 'PR, 'E, 'RO) t
      = fun (type __R) -> fun (type __PR) -> fun (type __E) -> fun (type
      __RO) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__PR_of_js : Ojs.t -> __PR) ->
          fun (__E_of_js : Ojs.t -> __E) ->
            fun (__RO_of_js : Ojs.t -> __RO) -> fun (x12 : Ojs.t) -> x12
    and t_to_js :
      'R 'PR 'E 'RO .
        ('R -> Ojs.t) ->
          ('PR -> Ojs.t) ->
            ('E -> Ojs.t) -> ('RO -> Ojs.t) -> ('R, 'PR, 'E, 'RO) t -> Ojs.t
      = fun (type __R) -> fun (type __PR) -> fun (type __E) -> fun (type
      __RO) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__PR_to_js : __PR -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) ->
            fun (__RO_to_js : __RO -> Ojs.t) -> fun (x11 : Ojs.t) -> x11
    let (get____ : ('R, 'PR, 'E, 'RO) t -> ('PR * 'RO * EM.t) or_undefined) =
      fun (x13 : ('R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x18 : Ojs.t) ->
             let x19 = x18 in
             ((Obj.magic (Ojs.array_get x19 0)),
               (Obj.magic (Ojs.array_get x19 1)),
               (EM.t_of_js (Ojs.array_get x19 2))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x13) "___")
    let (get_____ : ('R, 'PR, 'E, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x20 : ('R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x25 : Ojs.t) ->
             let x26 = x25 in
             ((Obj.magic (Ojs.array_get x26 0)),
               (EM.t_of_js (Ojs.array_get x26 1))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x20) "____")
    let (get__pr : ('R, 'PR, 'E, 'RO) t -> 'PR or_undefined) =
      fun (x27 : ('R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js Obj.magic
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x27) "_pr")
    let (create : method_:string -> ('R, 'PR, 'E, 'RO) t) =
      fun ~method_:(x33 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ProtocolRequestType0")
             [|(Ojs.string_to_js x33)|])
    let (cast : ('R, 'PR, 'E, 'RO) t -> ('R, 'E) RequestType0.t) =
      fun (x38 : ('R, 'PR, 'E, 'RO) t) ->
        RequestType0.t_of_js Obj.magic Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x38)
    let (cast' : ('R, 'PR, 'E, 'RO) t -> 'PR ProgressType.t) =
      fun (x45 : ('R, 'PR, 'E, 'RO) t) ->
        ProgressType.t_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x45)
    let (cast'' : ('R, 'PR, 'E, 'RO) t -> 'RO RegistrationType.t) =
      fun (x51 : ('R, 'PR, 'E, 'RO) t) ->
        RegistrationType.t_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x51)
  end
module ProtocolRequestType =
  struct
    type ('P, 'R, 'PR, 'E, 'RO) t =
      ('P, 'R, 'PR, 'E, 'RO) ProtocolRequestType.t
    let rec t_of_js :
      'P 'R 'PR 'E 'RO .
        (Ojs.t -> 'P) ->
          (Ojs.t -> 'R) ->
            (Ojs.t -> 'PR) ->
              (Ojs.t -> 'E) ->
                (Ojs.t -> 'RO) -> Ojs.t -> ('P, 'R, 'PR, 'E, 'RO) t
      = fun (type __P) -> fun (type __R) -> fun (type __PR) -> fun (type __E)
      -> fun (type __RO) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__PR_of_js : Ojs.t -> __PR) ->
            fun (__E_of_js : Ojs.t -> __E) ->
              fun (__RO_of_js : Ojs.t -> __RO) ->
                fun (x63 : Ojs.t) ->
                  ProtocolRequestType.t_of_js __P_of_js __R_of_js __PR_of_js
                    __E_of_js __RO_of_js x63
    and t_to_js :
      'P 'R 'PR 'E 'RO .
        ('P -> Ojs.t) ->
          ('R -> Ojs.t) ->
            ('PR -> Ojs.t) ->
              ('E -> Ojs.t) ->
                ('RO -> Ojs.t) -> ('P, 'R, 'PR, 'E, 'RO) t -> Ojs.t
      = fun (type __P) -> fun (type __R) -> fun (type __PR) -> fun (type __E)
      -> fun (type __RO) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__PR_to_js : __PR -> Ojs.t) ->
            fun (__E_to_js : __E -> Ojs.t) ->
              fun (__RO_to_js : __RO -> Ojs.t) ->
                fun (x57 : (__P, __R, __PR, __E, __RO) ProtocolRequestType.t)
                  ->
                  ProtocolRequestType.t_to_js __P_to_js __R_to_js __PR_to_js
                    __E_to_js __RO_to_js x57
    let (get____ :
      ('P, 'R, 'PR, 'E, 'RO) t -> ('PR * 'RO * EM.t) or_undefined) =
      fun (x69 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x75 : Ojs.t) ->
             let x76 = x75 in
             ((Obj.magic (Ojs.array_get x76 0)),
               (Obj.magic (Ojs.array_get x76 1)),
               (EM.t_of_js (Ojs.array_get x76 2))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x69)
             "___")
    let (get_____ : ('P, 'R, 'PR, 'E, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x77 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x83 : Ojs.t) ->
             let x84 = x83 in
             ((Obj.magic (Ojs.array_get x84 0)),
               (EM.t_of_js (Ojs.array_get x84 1))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x77)
             "____")
    let (get__pr : ('P, 'R, 'PR, 'E, 'RO) t -> 'PR or_undefined) =
      fun (x85 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js Obj.magic
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x85)
             "_pr")
    let (create : method_:string -> ('P, 'R, 'PR, 'E, 'RO) t) =
      fun ~method_:(x92 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ProtocolRequestType")
             [|(Ojs.string_to_js x92)|])
    let (cast : ('P, 'R, 'PR, 'E, 'RO) t -> ('P, 'R, 'E) RequestType.t) =
      fun (x98 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        RequestType.t_of_js Obj.magic Obj.magic Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x98)
    let (cast' : ('P, 'R, 'PR, 'E, 'RO) t -> 'PR ProgressType.t) =
      fun (x107 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        ProgressType.t_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x107)
    let (cast'' : ('P, 'R, 'PR, 'E, 'RO) t -> 'RO RegistrationType.t) =
      fun (x114 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        RegistrationType.t_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x114)
  end
module ProtocolNotificationType0 =
  struct
    type 'RO t = 'RO ProtocolNotificationType.t
    let rec t_of_js : 'RO . (Ojs.t -> 'RO) -> Ojs.t -> 'RO t = fun (type
      __RO) ->
      fun (__RO_of_js : Ojs.t -> __RO) ->
        fun (x123 : Ojs.t) ->
          ProtocolNotificationType.t_of_js __RO_of_js x123
    and t_to_js : 'RO . ('RO -> Ojs.t) -> 'RO t -> Ojs.t = fun (type __RO) ->
      fun (__RO_to_js : __RO -> Ojs.t) ->
        fun (x121 : __RO ProtocolNotificationType.t) ->
          ProtocolNotificationType.t_to_js __RO_to_js x121
    let (get____ : 'RO t -> ('RO * EM.t) or_undefined) =
      fun (x125 : 'RO t) ->
        or_undefined_of_js
          (fun (x127 : Ojs.t) ->
             let x128 = x127 in
             ((Obj.magic (Ojs.array_get x128 0)),
               (EM.t_of_js (Ojs.array_get x128 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x125) "___")
    let (get_____ : 'RO t -> ('RO * EM.t) or_undefined) =
      fun (x129 : 'RO t) ->
        or_undefined_of_js
          (fun (x131 : Ojs.t) ->
             let x132 = x131 in
             ((Obj.magic (Ojs.array_get x132 0)),
               (EM.t_of_js (Ojs.array_get x132 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x129) "____")
    let (create : method_:string -> 'RO t) =
      fun ~method_:(x133 : string) ->
        t_of_js Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ProtocolNotificationType0")
             [|(Ojs.string_to_js x133)|])
    let (cast : 'RO t -> NotificationType0.t) =
      fun (x135 : 'RO t) ->
        NotificationType0.t_of_js (t_to_js Obj.magic x135)
    let (cast' : 'RO t -> 'RO RegistrationType.t) =
      fun (x137 : 'RO t) ->
        RegistrationType.t_of_js Obj.magic (t_to_js Obj.magic x137)
  end
module ProtocolNotificationType =
  struct
    type ('P, 'RO) t = Ojs.t
    let rec t_of_js :
      'P 'RO . (Ojs.t -> 'P) -> (Ojs.t -> 'RO) -> Ojs.t -> ('P, 'RO) t = fun
      (type __P) -> fun (type __RO) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__RO_of_js : Ojs.t -> __RO) -> fun (x141 : Ojs.t) -> x141
    and t_to_js :
      'P 'RO . ('P -> Ojs.t) -> ('RO -> Ojs.t) -> ('P, 'RO) t -> Ojs.t = fun
      (type __P) -> fun (type __RO) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__RO_to_js : __RO -> Ojs.t) -> fun (x140 : Ojs.t) -> x140
    let (get____ : ('P, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x142 : ('P, 'RO) t) ->
        or_undefined_of_js
          (fun (x145 : Ojs.t) ->
             let x146 = x145 in
             ((Obj.magic (Ojs.array_get x146 0)),
               (EM.t_of_js (Ojs.array_get x146 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x142) "___")
    let (get_____ : ('P, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x147 : ('P, 'RO) t) ->
        or_undefined_of_js
          (fun (x150 : Ojs.t) ->
             let x151 = x150 in
             ((Obj.magic (Ojs.array_get x151 0)),
               (EM.t_of_js (Ojs.array_get x151 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x147) "____")
    let (create : method_:string -> ('P, 'RO) t) =
      fun ~method_:(x152 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ProtocolNotificationType")
             [|(Ojs.string_to_js x152)|])
    let (cast : ('P, 'RO) t -> 'P NotificationType.t) =
      fun (x155 : ('P, 'RO) t) ->
        NotificationType.t_of_js Obj.magic (t_to_js Obj.magic Obj.magic x155)
    let (cast' : ('P, 'RO) t -> 'RO RegistrationType.t) =
      fun (x159 : ('P, 'RO) t) ->
        RegistrationType.t_of_js Obj.magic (t_to_js Obj.magic Obj.magic x159)
  end
