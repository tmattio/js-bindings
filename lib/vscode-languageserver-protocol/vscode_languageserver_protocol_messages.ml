[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module RegistrationType =
  struct
    type 'RO t = 'RO _RegistrationType
    let rec t_of_js : 'RO . (Ojs.t -> 'RO) -> Ojs.t -> 'RO t = fun (type
      __RO) ->
      fun (__RO_of_js : Ojs.t -> __RO) ->
        fun (x3 : Ojs.t) -> _RegistrationType_of_js __RO_of_js x3
    and t_to_js : 'RO . ('RO -> Ojs.t) -> 'RO t -> Ojs.t = fun (type __RO) ->
      fun (__RO_to_js : __RO -> Ojs.t) ->
        fun (x1 : __RO _RegistrationType) ->
          _RegistrationType_to_js __RO_to_js x1
    let (get_____ : 'RO t -> ('RO * EM.t) or_undefined) =
      fun (x5 : 'RO t) ->
        or_undefined_of_js
          (fun (x7 : Ojs.t) ->
             let x8 = x7 in
             ((Obj.magic (Ojs.array_get x8 0)),
               (EM.t_of_js (Ojs.array_get x8 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x5) "____")
    let (get_method : 'RO t -> string) =
      fun (x9 : 'RO t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x9) "method")
    let (create : method_:string -> 'RO t) =
      fun ~method_:(x11 : string) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegistrationType")
             [|(Ojs.string_to_js x11)|])
  end
module ProtocolRequestType0 =
  struct
    type ('R, 'PR, 'E, 'RO) t = ('R, 'PR, 'E, 'RO) _ProtocolRequestType0
    let rec t_of_js :
      'R 'PR 'E 'RO .
        (Ojs.t -> 'R) ->
          (Ojs.t -> 'PR) ->
            (Ojs.t -> 'E) -> (Ojs.t -> 'RO) -> Ojs.t -> ('R, 'PR, 'E, 'RO) t
      = fun (type __R) -> fun (type __PR) -> fun (type __E) -> fun (type
      __RO) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__PR_of_js : Ojs.t -> __PR) ->
          fun (__E_of_js : Ojs.t -> __E) ->
            fun (__RO_of_js : Ojs.t -> __RO) ->
              fun (x18 : Ojs.t) ->
                _ProtocolRequestType0_of_js __R_of_js __PR_of_js __E_of_js
                  __RO_of_js x18
    and t_to_js :
      'R 'PR 'E 'RO .
        ('R -> Ojs.t) ->
          ('PR -> Ojs.t) ->
            ('E -> Ojs.t) -> ('RO -> Ojs.t) -> ('R, 'PR, 'E, 'RO) t -> Ojs.t
      = fun (type __R) -> fun (type __PR) -> fun (type __E) -> fun (type
      __RO) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__PR_to_js : __PR -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) ->
            fun (__RO_to_js : __RO -> Ojs.t) ->
              fun (x13 : (__R, __PR, __E, __RO) _ProtocolRequestType0) ->
                _ProtocolRequestType0_to_js __R_to_js __PR_to_js __E_to_js
                  __RO_to_js x13
    let (get____ : ('R, 'PR, 'E, 'RO) t -> ('PR * 'RO * EM.t) or_undefined) =
      fun (x23 : ('R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x28 : Ojs.t) ->
             let x29 = x28 in
             ((Obj.magic (Ojs.array_get x29 0)),
               (Obj.magic (Ojs.array_get x29 1)),
               (EM.t_of_js (Ojs.array_get x29 2))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x23) "___")
    let (get_____ : ('R, 'PR, 'E, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x30 : ('R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x35 : Ojs.t) ->
             let x36 = x35 in
             ((Obj.magic (Ojs.array_get x36 0)),
               (EM.t_of_js (Ojs.array_get x36 1))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x30) "____")
    let (get__pr : ('R, 'PR, 'E, 'RO) t -> 'PR or_undefined) =
      fun (x37 : ('R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js Obj.magic
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x37) "_pr")
    let (create : method_:string -> ('R, 'PR, 'E, 'RO) t) =
      fun ~method_:(x43 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ProtocolRequestType0")
             [|(Ojs.string_to_js x43)|])
    let (cast : ('R, 'PR, 'E, 'RO) t -> ('R, 'E) RequestType0.t) =
      fun (x48 : ('R, 'PR, 'E, 'RO) t) ->
        RequestType0.t_of_js Obj.magic Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x48)
    let (cast' : ('R, 'PR, 'E, 'RO) t -> 'PR ProgressType.t) =
      fun (x55 : ('R, 'PR, 'E, 'RO) t) ->
        ProgressType.t_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x55)
    let (cast'' : ('R, 'PR, 'E, 'RO) t -> 'RO _RegistrationType) =
      fun (x61 : ('R, 'PR, 'E, 'RO) t) ->
        _RegistrationType_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x61)
  end
module ProtocolRequestType =
  struct
    type ('P, 'R, 'PR, 'E, 'RO) t =
      ('P, 'R, 'PR, 'E, 'RO) _ProtocolRequestType
    let rec t_of_js :
      'P 'R 'PR 'E 'RO .
        (Ojs.t -> 'P) ->
          (Ojs.t -> 'R) ->
            (Ojs.t -> 'PR) ->
              (Ojs.t -> 'E) ->
                (Ojs.t -> 'RO) -> Ojs.t -> ('P, 'R, 'PR, 'E, 'RO) t
      = fun (type __P) -> fun (type __R) -> fun (type __PR) -> fun (type __E)
      -> fun (type __RO) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__PR_of_js : Ojs.t -> __PR) ->
            fun (__E_of_js : Ojs.t -> __E) ->
              fun (__RO_of_js : Ojs.t -> __RO) ->
                fun (x73 : Ojs.t) ->
                  _ProtocolRequestType_of_js __P_of_js __R_of_js __PR_of_js
                    __E_of_js __RO_of_js x73
    and t_to_js :
      'P 'R 'PR 'E 'RO .
        ('P -> Ojs.t) ->
          ('R -> Ojs.t) ->
            ('PR -> Ojs.t) ->
              ('E -> Ojs.t) ->
                ('RO -> Ojs.t) -> ('P, 'R, 'PR, 'E, 'RO) t -> Ojs.t
      = fun (type __P) -> fun (type __R) -> fun (type __PR) -> fun (type __E)
      -> fun (type __RO) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__PR_to_js : __PR -> Ojs.t) ->
            fun (__E_to_js : __E -> Ojs.t) ->
              fun (__RO_to_js : __RO -> Ojs.t) ->
                fun (x67 : (__P, __R, __PR, __E, __RO) _ProtocolRequestType)
                  ->
                  _ProtocolRequestType_to_js __P_to_js __R_to_js __PR_to_js
                    __E_to_js __RO_to_js x67
    let (get____ :
      ('P, 'R, 'PR, 'E, 'RO) t -> ('PR * 'RO * EM.t) or_undefined) =
      fun (x79 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x85 : Ojs.t) ->
             let x86 = x85 in
             ((Obj.magic (Ojs.array_get x86 0)),
               (Obj.magic (Ojs.array_get x86 1)),
               (EM.t_of_js (Ojs.array_get x86 2))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x79)
             "___")
    let (get_____ : ('P, 'R, 'PR, 'E, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x87 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js
          (fun (x93 : Ojs.t) ->
             let x94 = x93 in
             ((Obj.magic (Ojs.array_get x94 0)),
               (EM.t_of_js (Ojs.array_get x94 1))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x87)
             "____")
    let (get__pr : ('P, 'R, 'PR, 'E, 'RO) t -> 'PR or_undefined) =
      fun (x95 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        or_undefined_of_js Obj.magic
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x95)
             "_pr")
    let (create : method_:string -> ('P, 'R, 'PR, 'E, 'RO) t) =
      fun ~method_:(x102 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ProtocolRequestType")
             [|(Ojs.string_to_js x102)|])
    let (cast : ('P, 'R, 'PR, 'E, 'RO) t -> ('P, 'R, 'E) RequestType.t) =
      fun (x108 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        RequestType.t_of_js Obj.magic Obj.magic Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x108)
    let (cast' : ('P, 'R, 'PR, 'E, 'RO) t -> 'PR ProgressType.t) =
      fun (x117 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        ProgressType.t_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x117)
    let (cast'' : ('P, 'R, 'PR, 'E, 'RO) t -> 'RO _RegistrationType) =
      fun (x124 : ('P, 'R, 'PR, 'E, 'RO) t) ->
        _RegistrationType_of_js Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x124)
  end
module ProtocolNotificationType0 =
  struct
    type 'RO t = 'RO _ProtocolNotificationType0
    let rec t_of_js : 'RO . (Ojs.t -> 'RO) -> Ojs.t -> 'RO t = fun (type
      __RO) ->
      fun (__RO_of_js : Ojs.t -> __RO) ->
        fun (x133 : Ojs.t) ->
          _ProtocolNotificationType0_of_js __RO_of_js x133
    and t_to_js : 'RO . ('RO -> Ojs.t) -> 'RO t -> Ojs.t = fun (type __RO) ->
      fun (__RO_to_js : __RO -> Ojs.t) ->
        fun (x131 : __RO _ProtocolNotificationType0) ->
          _ProtocolNotificationType0_to_js __RO_to_js x131
    let (get____ : 'RO t -> ('RO * EM.t) or_undefined) =
      fun (x135 : 'RO t) ->
        or_undefined_of_js
          (fun (x137 : Ojs.t) ->
             let x138 = x137 in
             ((Obj.magic (Ojs.array_get x138 0)),
               (EM.t_of_js (Ojs.array_get x138 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x135) "___")
    let (get_____ : 'RO t -> ('RO * EM.t) or_undefined) =
      fun (x139 : 'RO t) ->
        or_undefined_of_js
          (fun (x141 : Ojs.t) ->
             let x142 = x141 in
             ((Obj.magic (Ojs.array_get x142 0)),
               (EM.t_of_js (Ojs.array_get x142 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x139) "____")
    let (create : method_:string -> 'RO t) =
      fun ~method_:(x143 : string) ->
        t_of_js Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ProtocolNotificationType0")
             [|(Ojs.string_to_js x143)|])
    let (cast : 'RO t -> NotificationType0.t) =
      fun (x145 : 'RO t) ->
        NotificationType0.t_of_js (t_to_js Obj.magic x145)
    let (cast' : 'RO t -> 'RO _RegistrationType) =
      fun (x147 : 'RO t) ->
        _RegistrationType_of_js Obj.magic (t_to_js Obj.magic x147)
  end
module ProtocolNotificationType =
  struct
    type ('P, 'RO) t = ('P, 'RO) _ProtocolNotificationType
    let rec t_of_js :
      'P 'RO . (Ojs.t -> 'P) -> (Ojs.t -> 'RO) -> Ojs.t -> ('P, 'RO) t = fun
      (type __P) -> fun (type __RO) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__RO_of_js : Ojs.t -> __RO) ->
          fun (x153 : Ojs.t) ->
            _ProtocolNotificationType_of_js __P_of_js __RO_of_js x153
    and t_to_js :
      'P 'RO . ('P -> Ojs.t) -> ('RO -> Ojs.t) -> ('P, 'RO) t -> Ojs.t = fun
      (type __P) -> fun (type __RO) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__RO_to_js : __RO -> Ojs.t) ->
          fun (x150 : (__P, __RO) _ProtocolNotificationType) ->
            _ProtocolNotificationType_to_js __P_to_js __RO_to_js x150
    let (get____ : ('P, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x156 : ('P, 'RO) t) ->
        or_undefined_of_js
          (fun (x159 : Ojs.t) ->
             let x160 = x159 in
             ((Obj.magic (Ojs.array_get x160 0)),
               (EM.t_of_js (Ojs.array_get x160 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x156) "___")
    let (get_____ : ('P, 'RO) t -> ('RO * EM.t) or_undefined) =
      fun (x161 : ('P, 'RO) t) ->
        or_undefined_of_js
          (fun (x164 : Ojs.t) ->
             let x165 = x164 in
             ((Obj.magic (Ojs.array_get x165 0)),
               (EM.t_of_js (Ojs.array_get x165 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x161) "____")
    let (create : method_:string -> ('P, 'RO) t) =
      fun ~method_:(x166 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ProtocolNotificationType")
             [|(Ojs.string_to_js x166)|])
    let (cast : ('P, 'RO) t -> 'P NotificationType.t) =
      fun (x169 : ('P, 'RO) t) ->
        NotificationType.t_of_js Obj.magic (t_to_js Obj.magic Obj.magic x169)
    let (cast' : ('P, 'RO) t -> 'RO _RegistrationType) =
      fun (x173 : ('P, 'RO) t) ->
        _RegistrationType_of_js Obj.magic (t_to_js Obj.magic Obj.magic x173)
  end
