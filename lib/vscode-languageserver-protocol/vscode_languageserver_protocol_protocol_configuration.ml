[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_configuration : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3) "configuration")
    let (set_configuration : t -> bool -> unit) =
      fun (x4 : t) ->
        fun (x5 : bool) ->
          Ojs.set_prop_ascii (t_to_js x4) "configuration" (Ojs.bool_to_js x5)
  end
module ConfigurationClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7 : Ojs.t) -> x7
    and t_to_js : t -> Ojs.t = fun (x6 : Ojs.t) -> x6
    let (get_workspace : t -> AnonymousInterface0.t) =
      fun (x8 : t) ->
        AnonymousInterface0.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8) "workspace")
    let (set_workspace : t -> AnonymousInterface0.t -> unit) =
      fun (x9 : t) ->
        fun (x10 : AnonymousInterface0.t) ->
          Ojs.set_prop_ascii (t_to_js x9) "workspace"
            (AnonymousInterface0.t_to_js x10)
  end
module ConfigurationRequest =
  struct
    let (type_ :
      ((ConfigurationParams.t, PartialResultParams.t) intersection2,
        any list, never, unit, unit) ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js
        (fun (x11 : Ojs.t) ->
           intersection2_of_js ConfigurationParams.t_of_js
             PartialResultParams.t_of_js x11)
        (fun (x14 : Ojs.t) -> Ojs.list_of_js any_of_js x14) never_of_js
        Ojs.unit_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "ConfigurationRequest") "type")
    module HandlerSignature =
      struct
        type t = (ConfigurationParams.t, any list, unit) RequestHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x24 : Ojs.t) ->
            RequestHandler.t_of_js ConfigurationParams.t_of_js
              (fun (x26 : Ojs.t) -> Ojs.list_of_js any_of_js x26)
              Ojs.unit_of_js x24
        and t_to_js : t -> Ojs.t =
          fun
            (x19 : (ConfigurationParams.t, any list, unit) RequestHandler.t)
            ->
            RequestHandler.t_to_js ConfigurationParams.t_to_js
              (fun (x21 : any list) -> Ojs.list_to_js any_to_js x21)
              Ojs.unit_to_js x19
      end
    module MiddlewareSignature =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x30 : Ojs.t) -> x30
        and t_to_js : t -> Ojs.t = fun (x29 : Ojs.t) -> x29
        let (apply :
          t ->
            params:ConfigurationParams.t ->
              token:CancellationToken.t ->
                next:ConfigurationRequest_HandlerSignature.t ->
                  (any list, unit) HandlerResult.t)
          =
          fun (x34 : t) ->
            fun ~params:(x31 : ConfigurationParams.t) ->
              fun ~token:(x32 : CancellationToken.t) ->
                fun ~next:(x33 : ConfigurationRequest_HandlerSignature.t) ->
                  HandlerResult.t_of_js
                    (fun (x35 : Ojs.t) -> Ojs.list_of_js any_of_js x35)
                    Ojs.unit_of_js
                    (Ojs.apply (t_to_js x34)
                       [|(ConfigurationParams.t_to_js x31);(CancellationToken.t_to_js
                                                              x32);(ConfigurationRequest_HandlerSignature.t_to_js
                                                                    x33)|])
      end
  end
module ConfigurationItem =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x39 : Ojs.t) -> x39
    and t_to_js : t -> Ojs.t = fun (x38 : Ojs.t) -> x38
    let (get_scope_uri : t -> string) =
      fun (x40 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x40) "scopeUri")
    let (set_scope_uri : t -> string -> unit) =
      fun (x41 : t) ->
        fun (x42 : string) ->
          Ojs.set_prop_ascii (t_to_js x41) "scopeUri" (Ojs.string_to_js x42)
    let (get_section : t -> string) =
      fun (x43 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x43) "section")
    let (set_section : t -> string -> unit) =
      fun (x44 : t) ->
        fun (x45 : string) ->
          Ojs.set_prop_ascii (t_to_js x44) "section" (Ojs.string_to_js x45)
  end
module ConfigurationParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x47 : Ojs.t) -> x47
    and t_to_js : t -> Ojs.t = fun (x46 : Ojs.t) -> x46
    let (get_items : t -> ConfigurationItem.t list) =
      fun (x48 : t) ->
        Ojs.list_of_js ConfigurationItem.t_of_js
          (Ojs.get_prop_ascii (t_to_js x48) "items")
    let (set_items : t -> ConfigurationItem.t list -> unit) =
      fun (x50 : t) ->
        fun (x51 : ConfigurationItem.t list) ->
          Ojs.set_prop_ascii (t_to_js x50) "items"
            (Ojs.list_to_js ConfigurationItem.t_to_js x51)
  end
