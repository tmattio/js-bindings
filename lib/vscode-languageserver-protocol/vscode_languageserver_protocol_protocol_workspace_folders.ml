[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
open Vscode_jsonrpc
open Vscode_languageserver_protocol_messages
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_supported : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3) "supported")
    let (set_supported : t -> bool -> unit) =
      fun (x4 : t) ->
        fun (x5 : bool) ->
          Ojs.set_prop_ascii (t_to_js x4) "supported" (Ojs.bool_to_js x5)
    let (get_change_notifications : t -> bool or_string) =
      fun (x6 : t) ->
        or_string_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x6) "changeNotifications")
    let (set_change_notifications : t -> bool or_string -> unit) =
      fun (x8 : t) ->
        fun (x9 : bool or_string) ->
          Ojs.set_prop_ascii (t_to_js x8) "changeNotifications"
            (or_string_to_js Ojs.bool_to_js x9)
  end
module AnonymousInterface1 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x12 : Ojs.t) -> x12
    and t_to_js : t -> Ojs.t = fun (x11 : Ojs.t) -> x11
    let (get_workspace_folders : t -> bool) =
      fun (x13 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x13) "workspaceFolders")
    let (set_workspace_folders : t -> bool -> unit) =
      fun (x14 : t) ->
        fun (x15 : bool) ->
          Ojs.set_prop_ascii (t_to_js x14) "workspaceFolders"
            (Ojs.bool_to_js x15)
  end
module AnonymousInterface2 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x17 : Ojs.t) -> x17
    and t_to_js : t -> Ojs.t = fun (x16 : Ojs.t) -> x16
    let (get_workspace_folders : t -> AnonymousInterface0.t) =
      fun (x18 : t) ->
        AnonymousInterface0.t_of_js
          (Ojs.get_prop_ascii (t_to_js x18) "workspaceFolders")
    let (set_workspace_folders : t -> AnonymousInterface0.t -> unit) =
      fun (x19 : t) ->
        fun (x20 : AnonymousInterface0.t) ->
          Ojs.set_prop_ascii (t_to_js x19) "workspaceFolders"
            (AnonymousInterface0.t_to_js x20)
  end
module WorkspaceFolder =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x22 : Ojs.t) -> x22
    and t_to_js : t -> Ojs.t = fun (x21 : Ojs.t) -> x21
    let (get_uri : t -> string) =
      fun (x23 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x23) "uri")
    let (set_uri : t -> string -> unit) =
      fun (x24 : t) ->
        fun (x25 : string) ->
          Ojs.set_prop_ascii (t_to_js x24) "uri" (Ojs.string_to_js x25)
    let (get_name : t -> string) =
      fun (x26 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x26) "name")
    let (set_name : t -> string -> unit) =
      fun (x27 : t) ->
        fun (x28 : string) ->
          Ojs.set_prop_ascii (t_to_js x27) "name" (Ojs.string_to_js x28)
  end
module WorkspaceFoldersInitializeParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x30 : Ojs.t) -> x30
    and t_to_js : t -> Ojs.t = fun (x29 : Ojs.t) -> x29
    let (get_workspace_folders : t -> WorkspaceFolder.t list or_null) =
      fun (x31 : t) ->
        or_null_of_js
          (fun (x32 : Ojs.t) -> Ojs.list_of_js WorkspaceFolder.t_of_js x32)
          (Ojs.get_prop_ascii (t_to_js x31) "workspaceFolders")
    let (set_workspace_folders : t -> WorkspaceFolder.t list or_null -> unit)
      =
      fun (x34 : t) ->
        fun (x35 : WorkspaceFolder.t list or_null) ->
          Ojs.set_prop_ascii (t_to_js x34) "workspaceFolders"
            (or_null_to_js
               (fun (x36 : WorkspaceFolder.t list) ->
                  Ojs.list_to_js WorkspaceFolder.t_to_js x36) x35)
  end
module WorkspaceFoldersClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x39 : Ojs.t) -> x39
    and t_to_js : t -> Ojs.t = fun (x38 : Ojs.t) -> x38
    let (get_workspace : t -> AnonymousInterface1.t) =
      fun (x40 : t) ->
        AnonymousInterface1.t_of_js
          (Ojs.get_prop_ascii (t_to_js x40) "workspace")
    let (set_workspace : t -> AnonymousInterface1.t -> unit) =
      fun (x41 : t) ->
        fun (x42 : AnonymousInterface1.t) ->
          Ojs.set_prop_ascii (t_to_js x41) "workspace"
            (AnonymousInterface1.t_to_js x42)
  end
module WorkspaceFoldersServerCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x44 : Ojs.t) -> x44
    and t_to_js : t -> Ojs.t = fun (x43 : Ojs.t) -> x43
    let (get_workspace : t -> AnonymousInterface2.t) =
      fun (x45 : t) ->
        AnonymousInterface2.t_of_js
          (Ojs.get_prop_ascii (t_to_js x45) "workspace")
    let (set_workspace : t -> AnonymousInterface2.t -> unit) =
      fun (x46 : t) ->
        fun (x47 : AnonymousInterface2.t) ->
          Ojs.set_prop_ascii (t_to_js x46) "workspace"
            (AnonymousInterface2.t_to_js x47)
  end
module WorkspaceFoldersRequest =
  struct
    let (type_ :
      (WorkspaceFolder.t list or_null, never, unit, unit)
        ProtocolRequestType0.t)
      =
      ProtocolRequestType0.t_of_js
        (fun (x48 : Ojs.t) ->
           or_null_of_js
             (fun (x49 : Ojs.t) -> Ojs.list_of_js WorkspaceFolder.t_of_js x49)
             x48) never_of_js Ojs.unit_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "WorkspaceFoldersRequest") "type")
    module HandlerSignature =
      struct
        type t = (WorkspaceFolder.t list or_null, unit) RequestHandler0.t
        let rec t_of_js : Ojs.t -> t =
          fun (x59 : Ojs.t) ->
            RequestHandler0.t_of_js
              (fun (x60 : Ojs.t) ->
                 or_null_of_js
                   (fun (x61 : Ojs.t) ->
                      Ojs.list_of_js WorkspaceFolder.t_of_js x61) x60)
              Ojs.unit_of_js x59
        and t_to_js : t -> Ojs.t =
          fun
            (x54 : (WorkspaceFolder.t list or_null, unit) RequestHandler0.t)
            ->
            RequestHandler0.t_to_js
              (fun (x55 : WorkspaceFolder.t list or_null) ->
                 or_null_to_js
                   (fun (x56 : WorkspaceFolder.t list) ->
                      Ojs.list_to_js WorkspaceFolder.t_to_js x56) x55)
              Ojs.unit_to_js x54
      end
    module MiddlewareSignature =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x65 : Ojs.t) -> x65
        and t_to_js : t -> Ojs.t = fun (x64 : Ojs.t) -> x64
        let (apply :
          t ->
            token:CancellationToken.t ->
              next:WorkspaceFoldersRequest_HandlerSignature.t ->
                (WorkspaceFolder.t list or_null, unit) HandlerResult.t)
          =
          fun (x68 : t) ->
            fun ~token:(x66 : CancellationToken.t) ->
              fun ~next:(x67 : WorkspaceFoldersRequest_HandlerSignature.t) ->
                HandlerResult.t_of_js
                  (fun (x69 : Ojs.t) ->
                     or_null_of_js
                       (fun (x70 : Ojs.t) ->
                          Ojs.list_of_js WorkspaceFolder.t_of_js x70) x69)
                  Ojs.unit_of_js
                  (Ojs.apply (t_to_js x68)
                     [|(CancellationToken.t_to_js x66);(WorkspaceFoldersRequest_HandlerSignature.t_to_js
                                                          x67)|])
      end
  end
module WorkspaceFoldersChangeEvent =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x74 : Ojs.t) -> x74
    and t_to_js : t -> Ojs.t = fun (x73 : Ojs.t) -> x73
    let (get_added : t -> WorkspaceFolder.t list) =
      fun (x75 : t) ->
        Ojs.list_of_js WorkspaceFolder.t_of_js
          (Ojs.get_prop_ascii (t_to_js x75) "added")
    let (set_added : t -> WorkspaceFolder.t list -> unit) =
      fun (x77 : t) ->
        fun (x78 : WorkspaceFolder.t list) ->
          Ojs.set_prop_ascii (t_to_js x77) "added"
            (Ojs.list_to_js WorkspaceFolder.t_to_js x78)
    let (get_removed : t -> WorkspaceFolder.t list) =
      fun (x80 : t) ->
        Ojs.list_of_js WorkspaceFolder.t_of_js
          (Ojs.get_prop_ascii (t_to_js x80) "removed")
    let (set_removed : t -> WorkspaceFolder.t list -> unit) =
      fun (x82 : t) ->
        fun (x83 : WorkspaceFolder.t list) ->
          Ojs.set_prop_ascii (t_to_js x82) "removed"
            (Ojs.list_to_js WorkspaceFolder.t_to_js x83)
  end
module DidChangeWorkspaceFoldersParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x86 : Ojs.t) -> x86
    and t_to_js : t -> Ojs.t = fun (x85 : Ojs.t) -> x85
    let (get_event : t -> WorkspaceFoldersChangeEvent.t) =
      fun (x87 : t) ->
        WorkspaceFoldersChangeEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x87) "event")
    let (set_event : t -> WorkspaceFoldersChangeEvent.t -> unit) =
      fun (x88 : t) ->
        fun (x89 : WorkspaceFoldersChangeEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x88) "event"
            (WorkspaceFoldersChangeEvent.t_to_js x89)
  end
module DidChangeWorkspaceFoldersNotification =
  struct
    let (type_ :
      (DidChangeWorkspaceFoldersParams.t, unit) ProtocolNotificationType.t) =
      ProtocolNotificationType.t_of_js
        DidChangeWorkspaceFoldersParams.t_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global
              "DidChangeWorkspaceFoldersNotification") "type")
    module HandlerSignature =
      struct
        type t = DidChangeWorkspaceFoldersParams.t NotificationHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x94 : Ojs.t) ->
            NotificationHandler.t_of_js
              DidChangeWorkspaceFoldersParams.t_of_js x94
        and t_to_js : t -> Ojs.t =
          fun (x92 : DidChangeWorkspaceFoldersParams.t NotificationHandler.t)
            ->
            NotificationHandler.t_to_js
              DidChangeWorkspaceFoldersParams.t_to_js x92
      end
    module MiddlewareSignature =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x97 : Ojs.t) -> x97
        and t_to_js : t -> Ojs.t = fun (x96 : Ojs.t) -> x96
        let (apply :
          t ->
            params:DidChangeWorkspaceFoldersParams.t ->
              next:HandlerSignature.t -> unit)
          =
          fun (x100 : t) ->
            fun ~params:(x98 : DidChangeWorkspaceFoldersParams.t) ->
              fun ~next:(x99 : HandlerSignature.t) ->
                ignore
                  (Ojs.apply (t_to_js x100)
                     [|(DidChangeWorkspaceFoldersParams.t_to_js x98);(
                       HandlerSignature.t_to_js x99)|])
      end
  end
