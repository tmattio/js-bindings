[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_supported : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3) "supported")
    let (set_supported : t -> bool -> unit) =
      fun (x4 : t) ->
        fun (x5 : bool) ->
          Ojs.set_prop_ascii (t_to_js x4) "supported" (Ojs.bool_to_js x5)
    let (get_change_notifications : t -> bool or_string) =
      fun (x6 : t) ->
        or_string_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x6) "changeNotifications")
    let (set_change_notifications : t -> bool or_string -> unit) =
      fun (x8 : t) ->
        fun (x9 : bool or_string) ->
          Ojs.set_prop_ascii (t_to_js x8) "changeNotifications"
            (or_string_to_js Ojs.bool_to_js x9)
  end
module AnonymousInterface1 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x12 : Ojs.t) -> x12
    and t_to_js : t -> Ojs.t = fun (x11 : Ojs.t) -> x11
    let (get_workspace_folders : t -> bool) =
      fun (x13 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x13) "workspaceFolders")
    let (set_workspace_folders : t -> bool -> unit) =
      fun (x14 : t) ->
        fun (x15 : bool) ->
          Ojs.set_prop_ascii (t_to_js x14) "workspaceFolders"
            (Ojs.bool_to_js x15)
  end
module AnonymousInterface2 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x17 : Ojs.t) -> x17
    and t_to_js : t -> Ojs.t = fun (x16 : Ojs.t) -> x16
    let (get_workspace_folders : t -> AnonymousInterface0.t) =
      fun (x18 : t) ->
        AnonymousInterface0.t_of_js
          (Ojs.get_prop_ascii (t_to_js x18) "workspaceFolders")
    let (set_workspace_folders : t -> AnonymousInterface0.t -> unit) =
      fun (x19 : t) ->
        fun (x20 : AnonymousInterface0.t) ->
          Ojs.set_prop_ascii (t_to_js x19) "workspaceFolders"
            (AnonymousInterface0.t_to_js x20)
  end
module WorkspaceFoldersInitializeParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x22 : Ojs.t) -> x22
    and t_to_js : t -> Ojs.t = fun (x21 : Ojs.t) -> x21
    let (get_workspace_folders : t -> WorkspaceFolder.t list or_null) =
      fun (x23 : t) ->
        or_null_of_js
          (fun (x24 : Ojs.t) -> Ojs.list_of_js WorkspaceFolder.t_of_js x24)
          (Ojs.get_prop_ascii (t_to_js x23) "workspaceFolders")
    let (set_workspace_folders : t -> WorkspaceFolder.t list or_null -> unit)
      =
      fun (x26 : t) ->
        fun (x27 : WorkspaceFolder.t list or_null) ->
          Ojs.set_prop_ascii (t_to_js x26) "workspaceFolders"
            (or_null_to_js
               (fun (x28 : WorkspaceFolder.t list) ->
                  Ojs.list_to_js WorkspaceFolder.t_to_js x28) x27)
  end
module WorkspaceFoldersClientCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x31 : Ojs.t) -> x31
    and t_to_js : t -> Ojs.t = fun (x30 : Ojs.t) -> x30
    let (get_workspace : t -> AnonymousInterface1.t) =
      fun (x32 : t) ->
        AnonymousInterface1.t_of_js
          (Ojs.get_prop_ascii (t_to_js x32) "workspace")
    let (set_workspace : t -> AnonymousInterface1.t -> unit) =
      fun (x33 : t) ->
        fun (x34 : AnonymousInterface1.t) ->
          Ojs.set_prop_ascii (t_to_js x33) "workspace"
            (AnonymousInterface1.t_to_js x34)
  end
module WorkspaceFoldersServerCapabilities =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x36 : Ojs.t) -> x36
    and t_to_js : t -> Ojs.t = fun (x35 : Ojs.t) -> x35
    let (get_workspace : t -> AnonymousInterface2.t) =
      fun (x37 : t) ->
        AnonymousInterface2.t_of_js
          (Ojs.get_prop_ascii (t_to_js x37) "workspace")
    let (set_workspace : t -> AnonymousInterface2.t -> unit) =
      fun (x38 : t) ->
        fun (x39 : AnonymousInterface2.t) ->
          Ojs.set_prop_ascii (t_to_js x38) "workspace"
            (AnonymousInterface2.t_to_js x39)
  end
module WorkspaceFolder =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x41 : Ojs.t) -> x41
    and t_to_js : t -> Ojs.t = fun (x40 : Ojs.t) -> x40
    let (get_uri : t -> string) =
      fun (x42 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x42) "uri")
    let (set_uri : t -> string -> unit) =
      fun (x43 : t) ->
        fun (x44 : string) ->
          Ojs.set_prop_ascii (t_to_js x43) "uri" (Ojs.string_to_js x44)
    let (get_name : t -> string) =
      fun (x45 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x45) "name")
    let (set_name : t -> string -> unit) =
      fun (x46 : t) ->
        fun (x47 : string) ->
          Ojs.set_prop_ascii (t_to_js x46) "name" (Ojs.string_to_js x47)
  end
module WorkspaceFoldersRequest =
  struct
    let (type_ :
      (WorkspaceFolder.t list or_null, never, unit, unit)
        ProtocolRequestType0.t)
      =
      ProtocolRequestType0.t_of_js
        (fun (x48 : Ojs.t) ->
           or_null_of_js
             (fun (x49 : Ojs.t) -> Ojs.list_of_js WorkspaceFolder.t_of_js x49)
             x48) never_of_js Ojs.unit_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "WorkspaceFoldersRequest") "type")
    module HandlerSignature =
      struct
        type t = (WorkspaceFolder.t list or_null, unit) RequestHandler0.t
        let rec t_of_js : Ojs.t -> t =
          fun (x59 : Ojs.t) ->
            RequestHandler0.t_of_js
              (fun (x60 : Ojs.t) ->
                 or_null_of_js
                   (fun (x61 : Ojs.t) ->
                      Ojs.list_of_js WorkspaceFolder.t_of_js x61) x60)
              Ojs.unit_of_js x59
        and t_to_js : t -> Ojs.t =
          fun
            (x54 : (WorkspaceFolder.t list or_null, unit) RequestHandler0.t)
            ->
            RequestHandler0.t_to_js
              (fun (x55 : WorkspaceFolder.t list or_null) ->
                 or_null_to_js
                   (fun (x56 : WorkspaceFolder.t list) ->
                      Ojs.list_to_js WorkspaceFolder.t_to_js x56) x55)
              Ojs.unit_to_js x54
      end
    module MiddlewareSignature =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x65 : Ojs.t) -> x65
        and t_to_js : t -> Ojs.t = fun (x64 : Ojs.t) -> x64
        let (apply :
          t ->
            token:CancellationToken.t ->
              next:WorkspaceFoldersRequest_HandlerSignature.t ->
                (WorkspaceFolder.t list or_null, unit) HandlerResult.t)
          =
          fun (x68 : t) ->
            fun ~token:(x66 : CancellationToken.t) ->
              fun ~next:(x67 : WorkspaceFoldersRequest_HandlerSignature.t) ->
                HandlerResult.t_of_js
                  (fun (x69 : Ojs.t) ->
                     or_null_of_js
                       (fun (x70 : Ojs.t) ->
                          Ojs.list_of_js WorkspaceFolder.t_of_js x70) x69)
                  Ojs.unit_of_js
                  (Ojs.apply (t_to_js x68)
                     [|(CancellationToken.t_to_js x66);(WorkspaceFoldersRequest_HandlerSignature.t_to_js
                                                          x67)|])
      end
  end
module DidChangeWorkspaceFoldersNotification =
  struct
    let (type_ :
      (DidChangeWorkspaceFoldersParams.t, unit) ProtocolNotificationType.t) =
      ProtocolNotificationType.t_of_js
        DidChangeWorkspaceFoldersParams.t_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global
              "DidChangeWorkspaceFoldersNotification") "type")
    module HandlerSignature =
      struct
        type t = DidChangeWorkspaceFoldersParams.t NotificationHandler.t
        let rec t_of_js : Ojs.t -> t =
          fun (x77 : Ojs.t) ->
            NotificationHandler.t_of_js
              DidChangeWorkspaceFoldersParams.t_of_js x77
        and t_to_js : t -> Ojs.t =
          fun (x75 : DidChangeWorkspaceFoldersParams.t NotificationHandler.t)
            ->
            NotificationHandler.t_to_js
              DidChangeWorkspaceFoldersParams.t_to_js x75
      end
    module MiddlewareSignature =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x80 : Ojs.t) -> x80
        and t_to_js : t -> Ojs.t = fun (x79 : Ojs.t) -> x79
        let (apply :
          t ->
            params:DidChangeWorkspaceFoldersParams.t ->
              next:DidChangeWorkspaceFoldersNotification_HandlerSignature.t
                -> unit)
          =
          fun (x83 : t) ->
            fun ~params:(x81 : DidChangeWorkspaceFoldersParams.t) ->
              fun
                ~next:(x82 :
                        DidChangeWorkspaceFoldersNotification_HandlerSignature.t)
                ->
                ignore
                  (Ojs.apply (t_to_js x83)
                     [|(DidChangeWorkspaceFoldersParams.t_to_js x81);(
                       DidChangeWorkspaceFoldersNotification_HandlerSignature.t_to_js
                         x82)|])
      end
  end
module DidChangeWorkspaceFoldersParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x85 : Ojs.t) -> x85
    and t_to_js : t -> Ojs.t = fun (x84 : Ojs.t) -> x84
    let (get_event : t -> WorkspaceFoldersChangeEvent.t) =
      fun (x86 : t) ->
        WorkspaceFoldersChangeEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x86) "event")
    let (set_event : t -> WorkspaceFoldersChangeEvent.t -> unit) =
      fun (x87 : t) ->
        fun (x88 : WorkspaceFoldersChangeEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x87) "event"
            (WorkspaceFoldersChangeEvent.t_to_js x88)
  end
module WorkspaceFoldersChangeEvent =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x90 : Ojs.t) -> x90
    and t_to_js : t -> Ojs.t = fun (x89 : Ojs.t) -> x89
    let (get_added : t -> WorkspaceFolder.t list) =
      fun (x91 : t) ->
        Ojs.list_of_js WorkspaceFolder.t_of_js
          (Ojs.get_prop_ascii (t_to_js x91) "added")
    let (set_added : t -> WorkspaceFolder.t list -> unit) =
      fun (x93 : t) ->
        fun (x94 : WorkspaceFolder.t list) ->
          Ojs.set_prop_ascii (t_to_js x93) "added"
            (Ojs.list_to_js WorkspaceFolder.t_to_js x94)
    let (get_removed : t -> WorkspaceFolder.t list) =
      fun (x96 : t) ->
        Ojs.list_of_js WorkspaceFolder.t_of_js
          (Ojs.get_prop_ascii (t_to_js x96) "removed")
    let (set_removed : t -> WorkspaceFolder.t list -> unit) =
      fun (x98 : t) ->
        fun (x99 : WorkspaceFolder.t list) ->
          Ojs.set_prop_ascii (t_to_js x98) "removed"
            (Ojs.list_to_js WorkspaceFolder.t_to_js x99)
  end
