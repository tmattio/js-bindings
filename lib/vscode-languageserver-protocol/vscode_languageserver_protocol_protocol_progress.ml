[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Internal =
  struct
    module Types =
      struct
        type _WorkDoneProgressCancelNotification_HandlerSignature =
          _WorkDoneProgressCancelParams NotificationHandler.t
        and _WorkDoneProgressCreateRequest_HandlerSignature =
          (_WorkDoneProgressCreateParams, unit, unit) RequestHandler.t
        let rec _WorkDoneProgressCancelNotification_HandlerSignature_of_js :
          Ojs.t -> _WorkDoneProgressCancelNotification_HandlerSignature =
          fun (x3 : Ojs.t) ->
            NotificationHandler.t_of_js _WorkDoneProgressCancelParams_of_js
              x3
        and _WorkDoneProgressCancelNotification_HandlerSignature_to_js :
          _WorkDoneProgressCancelNotification_HandlerSignature -> Ojs.t =
          fun (x1 : _WorkDoneProgressCancelParams NotificationHandler.t) ->
            NotificationHandler.t_to_js _WorkDoneProgressCancelParams_to_js
              x1
        and _WorkDoneProgressCreateRequest_HandlerSignature_of_js :
          Ojs.t -> _WorkDoneProgressCreateRequest_HandlerSignature =
          fun (x9 : Ojs.t) ->
            RequestHandler.t_of_js _WorkDoneProgressCreateParams_of_js
              Ojs.unit_of_js Ojs.unit_of_js x9
        and _WorkDoneProgressCreateRequest_HandlerSignature_to_js :
          _WorkDoneProgressCreateRequest_HandlerSignature -> Ojs.t =
          fun
            (x5 :
              (_WorkDoneProgressCreateParams, unit, unit) RequestHandler.t)
            ->
            RequestHandler.t_to_js _WorkDoneProgressCreateParams_to_js
              Ojs.unit_to_js Ojs.unit_to_js x5
      end
  end
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x14 : Ojs.t) -> x14
    and t_to_js : t -> Ojs.t = fun (x13 : Ojs.t) -> x13
    let (get_workDoneProgress : t -> bool) =
      fun (x15 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x15) "workDoneProgress")
    let (set_workDoneProgress : t -> bool -> unit) =
      fun (x16 : t) ->
        fun (x17 : bool) ->
          Ojs.set_prop_ascii (t_to_js x16) "workDoneProgress"
            (Ojs.bool_to_js x17)
  end
module WorkDoneProgressClientCapabilities =
  struct
    type t = _WorkDoneProgressClientCapabilities
    let rec t_of_js : Ojs.t -> t =
      fun (x19 : Ojs.t) -> _WorkDoneProgressClientCapabilities_of_js x19
    and t_to_js : t -> Ojs.t =
      fun (x18 : _WorkDoneProgressClientCapabilities) ->
        _WorkDoneProgressClientCapabilities_to_js x18
    let (get_window : t -> AnonymousInterface0.t) =
      fun (x20 : t) ->
        AnonymousInterface0.t_of_js
          (Ojs.get_prop_ascii (t_to_js x20) "window")
    let (set_window : t -> AnonymousInterface0.t -> unit) =
      fun (x21 : t) ->
        fun (x22 : AnonymousInterface0.t) ->
          Ojs.set_prop_ascii (t_to_js x21) "window"
            (AnonymousInterface0.t_to_js x22)
  end
module WorkDoneProgressBegin =
  struct
    type t = _WorkDoneProgressBegin
    let rec t_of_js : Ojs.t -> t =
      fun (x24 : Ojs.t) -> _WorkDoneProgressBegin_of_js x24
    and t_to_js : t -> Ojs.t =
      fun (x23 : _WorkDoneProgressBegin) -> _WorkDoneProgressBegin_to_js x23
    let (get_kind : t -> [ `L_s0_begin ]) =
      fun (x25 : t) ->
        let x26 = Ojs.get_prop_ascii (t_to_js x25) "kind" in
        match Ojs.string_of_js x26 with
        | "begin" -> `L_s0_begin
        | _ -> assert false
    let (set_kind : t -> [ `L_s0_begin ] -> unit) =
      fun (x27 : t) ->
        fun (x28 : [ `L_s0_begin ]) ->
          Ojs.set_prop_ascii (t_to_js x27) "kind"
            (match x28 with | `L_s0_begin -> Ojs.string_to_js "LS0Begin")
    let (get_title : t -> string) =
      fun (x29 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x29) "title")
    let (set_title : t -> string -> unit) =
      fun (x30 : t) ->
        fun (x31 : string) ->
          Ojs.set_prop_ascii (t_to_js x30) "title" (Ojs.string_to_js x31)
    let (get_cancellable : t -> bool) =
      fun (x32 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x32) "cancellable")
    let (set_cancellable : t -> bool -> unit) =
      fun (x33 : t) ->
        fun (x34 : bool) ->
          Ojs.set_prop_ascii (t_to_js x33) "cancellable" (Ojs.bool_to_js x34)
    let (get_message : t -> string) =
      fun (x35 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x35) "message")
    let (set_message : t -> string -> unit) =
      fun (x36 : t) ->
        fun (x37 : string) ->
          Ojs.set_prop_ascii (t_to_js x36) "message" (Ojs.string_to_js x37)
    let (get_percentage : t -> Uinteger.t) =
      fun (x38 : t) ->
        Uinteger.t_of_js (Ojs.get_prop_ascii (t_to_js x38) "percentage")
    let (set_percentage : t -> Uinteger.t -> unit) =
      fun (x39 : t) ->
        fun (x40 : Uinteger.t) ->
          Ojs.set_prop_ascii (t_to_js x39) "percentage"
            (Uinteger.t_to_js x40)
  end
module WorkDoneProgressReport =
  struct
    type t = _WorkDoneProgressReport
    let rec t_of_js : Ojs.t -> t =
      fun (x42 : Ojs.t) -> _WorkDoneProgressReport_of_js x42
    and t_to_js : t -> Ojs.t =
      fun (x41 : _WorkDoneProgressReport) ->
        _WorkDoneProgressReport_to_js x41
    let (get_kind : t -> [ `L_s2_report ]) =
      fun (x43 : t) ->
        let x44 = Ojs.get_prop_ascii (t_to_js x43) "kind" in
        match Ojs.string_of_js x44 with
        | "report" -> `L_s2_report
        | _ -> assert false
    let (set_kind : t -> [ `L_s2_report ] -> unit) =
      fun (x45 : t) ->
        fun (x46 : [ `L_s2_report ]) ->
          Ojs.set_prop_ascii (t_to_js x45) "kind"
            (match x46 with | `L_s2_report -> Ojs.string_to_js "LS2Report")
    let (get_cancellable : t -> bool) =
      fun (x47 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x47) "cancellable")
    let (set_cancellable : t -> bool -> unit) =
      fun (x48 : t) ->
        fun (x49 : bool) ->
          Ojs.set_prop_ascii (t_to_js x48) "cancellable" (Ojs.bool_to_js x49)
    let (get_message : t -> string) =
      fun (x50 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x50) "message")
    let (set_message : t -> string -> unit) =
      fun (x51 : t) ->
        fun (x52 : string) ->
          Ojs.set_prop_ascii (t_to_js x51) "message" (Ojs.string_to_js x52)
    let (get_percentage : t -> Uinteger.t) =
      fun (x53 : t) ->
        Uinteger.t_of_js (Ojs.get_prop_ascii (t_to_js x53) "percentage")
    let (set_percentage : t -> Uinteger.t -> unit) =
      fun (x54 : t) ->
        fun (x55 : Uinteger.t) ->
          Ojs.set_prop_ascii (t_to_js x54) "percentage"
            (Uinteger.t_to_js x55)
  end
module WorkDoneProgressEnd =
  struct
    type t = _WorkDoneProgressEnd
    let rec t_of_js : Ojs.t -> t =
      fun (x57 : Ojs.t) -> _WorkDoneProgressEnd_of_js x57
    and t_to_js : t -> Ojs.t =
      fun (x56 : _WorkDoneProgressEnd) -> _WorkDoneProgressEnd_to_js x56
    let (get_kind : t -> [ `L_s1_end ]) =
      fun (x58 : t) ->
        let x59 = Ojs.get_prop_ascii (t_to_js x58) "kind" in
        match Ojs.string_of_js x59 with
        | "end" -> `L_s1_end
        | _ -> assert false
    let (set_kind : t -> [ `L_s1_end ] -> unit) =
      fun (x60 : t) ->
        fun (x61 : [ `L_s1_end ]) ->
          Ojs.set_prop_ascii (t_to_js x60) "kind"
            (match x61 with | `L_s1_end -> Ojs.string_to_js "LS1End")
    let (get_message : t -> string) =
      fun (x62 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x62) "message")
    let (set_message : t -> string -> unit) =
      fun (x63 : t) ->
        fun (x64 : string) ->
          Ojs.set_prop_ascii (t_to_js x63) "message" (Ojs.string_to_js x64)
  end
module WorkDoneProgress =
  struct
    let (type_ :
      [ `U_s0_begin of _WorkDoneProgressBegin 
      | `U_s1_end of _WorkDoneProgressEnd 
      | `U_s2_report of _WorkDoneProgressReport ] ProgressType.t) =
      ProgressType.t_of_js
        (fun (x65 : Ojs.t) ->
           let x66 = x65 in
           match Ojs.string_of_js (Ojs.get_prop_ascii x66 "kind") with
           | "begin" -> `U_s0_begin (_WorkDoneProgressBegin_of_js x66)
           | "end" -> `U_s1_end (_WorkDoneProgressEnd_of_js x66)
           | "report" -> `U_s2_report (_WorkDoneProgressReport_of_js x66)
           | _ -> assert false)
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "WorkDoneProgress") "type")
    let (is : value:any ProgressType.t -> bool) =
      fun ~value:(x67 : any ProgressType.t) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "WorkDoneProgress") "is"
             [|(ProgressType.t_to_js any_to_js x67)|])
  end
module WorkDoneProgressCreateParams =
  struct
    type t = _WorkDoneProgressCreateParams
    let rec t_of_js : Ojs.t -> t =
      fun (x70 : Ojs.t) -> _WorkDoneProgressCreateParams_of_js x70
    and t_to_js : t -> Ojs.t =
      fun (x69 : _WorkDoneProgressCreateParams) ->
        _WorkDoneProgressCreateParams_to_js x69
    let (get_token : t -> ProgressToken.t) =
      fun (x71 : t) ->
        ProgressToken.t_of_js (Ojs.get_prop_ascii (t_to_js x71) "token")
    let (set_token : t -> ProgressToken.t -> unit) =
      fun (x72 : t) ->
        fun (x73 : ProgressToken.t) ->
          Ojs.set_prop_ascii (t_to_js x72) "token"
            (ProgressToken.t_to_js x73)
  end
module WorkDoneProgressCreateRequest =
  struct
    let (type_ :
      (_WorkDoneProgressCreateParams, unit, never, unit, unit)
        ProtocolRequestType.t)
      =
      ProtocolRequestType.t_of_js _WorkDoneProgressCreateParams_of_js
        Ojs.unit_of_js never_of_js Ojs.unit_of_js Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "WorkDoneProgressCreateRequest")
           "type")
    module HandlerSignature =
      struct
        type t = _WorkDoneProgressCreateRequest_HandlerSignature
        let rec t_of_js : Ojs.t -> t =
          fun (x80 : Ojs.t) ->
            _WorkDoneProgressCreateRequest_HandlerSignature_of_js x80
        and t_to_js : t -> Ojs.t =
          fun (x79 : _WorkDoneProgressCreateRequest_HandlerSignature) ->
            _WorkDoneProgressCreateRequest_HandlerSignature_to_js x79
      end
  end
module WorkDoneProgressCancelParams =
  struct
    type t = _WorkDoneProgressCancelParams
    let rec t_of_js : Ojs.t -> t =
      fun (x82 : Ojs.t) -> _WorkDoneProgressCancelParams_of_js x82
    and t_to_js : t -> Ojs.t =
      fun (x81 : _WorkDoneProgressCancelParams) ->
        _WorkDoneProgressCancelParams_to_js x81
    let (get_token : t -> ProgressToken.t) =
      fun (x83 : t) ->
        ProgressToken.t_of_js (Ojs.get_prop_ascii (t_to_js x83) "token")
    let (set_token : t -> ProgressToken.t -> unit) =
      fun (x84 : t) ->
        fun (x85 : ProgressToken.t) ->
          Ojs.set_prop_ascii (t_to_js x84) "token"
            (ProgressToken.t_to_js x85)
  end
module WorkDoneProgressCancelNotification =
  struct
    let (type_ :
      (_WorkDoneProgressCancelParams, unit) ProtocolNotificationType.t) =
      ProtocolNotificationType.t_of_js _WorkDoneProgressCancelParams_of_js
        Ojs.unit_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global
              "WorkDoneProgressCancelNotification") "type")
    module HandlerSignature =
      struct
        type t = _WorkDoneProgressCancelNotification_HandlerSignature
        let rec t_of_js : Ojs.t -> t =
          fun (x89 : Ojs.t) ->
            _WorkDoneProgressCancelNotification_HandlerSignature_of_js x89
        and t_to_js : t -> Ojs.t =
          fun (x88 : _WorkDoneProgressCancelNotification_HandlerSignature) ->
            _WorkDoneProgressCancelNotification_HandlerSignature_to_js x88
      end
  end
