[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
  end
module Inspector =
  struct
    module InspectorNotification =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) -> fun (__T_of_js : Ojs.t -> __T) -> fun (x4 : Ojs.t) -> x4
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x3 : Ojs.t) -> x3
        let (get_method : 'T t -> string) =
          fun (x5 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x5) "method")
        let (set_method : 'T t -> string -> unit) =
          fun (x7 : 'T t) ->
            fun (x8 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x7) "method"
                (Ojs.string_to_js x8)
        let (get_params : 'T t -> 'T) =
          fun (x10 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x10) "params")
        let (set_params : 'T t -> 'T -> unit) =
          fun (x12 : 'T t) ->
            fun (x13 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x12) "params"
                (Obj.magic x13)
      end
    module Schema =
      struct
        module Domain =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x16 : Ojs.t) -> x16
            and t_to_js : t -> Ojs.t = fun (x15 : Ojs.t) -> x15
            let (get_name : t -> string) =
              fun (x17 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x17) "name")
            let (set_name : t -> string -> unit) =
              fun (x18 : t) ->
                fun (x19 : string) ->
                  Ojs.set_prop_ascii (t_to_js x18) "name"
                    (Ojs.string_to_js x19)
            let (get_version : t -> string) =
              fun (x20 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x20) "version")
            let (set_version : t -> string -> unit) =
              fun (x21 : t) ->
                fun (x22 : string) ->
                  Ojs.set_prop_ascii (t_to_js x21) "version"
                    (Ojs.string_to_js x22)
          end
        module GetDomainsReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x24 : Ojs.t) -> x24
            and t_to_js : t -> Ojs.t = fun (x23 : Ojs.t) -> x23
            let (get_domains : t -> Domain.t list) =
              fun (x25 : t) ->
                Ojs.list_of_js Domain.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x25) "domains")
            let (set_domains : t -> Domain.t list -> unit) =
              fun (x27 : t) ->
                fun (x28 : Domain.t list) ->
                  Ojs.set_prop_ascii (t_to_js x27) "domains"
                    (Ojs.list_to_js Domain.t_to_js x28)
          end
      end
    module Runtime =
      struct
        module ScriptId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x31 : Ojs.t) -> Ojs.string_of_js x31
            and t_to_js : t -> Ojs.t =
              fun (x30 : string) -> Ojs.string_to_js x30
          end
        module RemoteObjectId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x33 : Ojs.t) -> Ojs.string_of_js x33
            and t_to_js : t -> Ojs.t =
              fun (x32 : string) -> Ojs.string_to_js x32
          end
        module UnserializableValue =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x35 : Ojs.t) -> Ojs.string_of_js x35
            and t_to_js : t -> Ojs.t =
              fun (x34 : string) -> Ojs.string_to_js x34
          end
        module CustomPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x37 : Ojs.t) -> x37
            and t_to_js : t -> Ojs.t = fun (x36 : Ojs.t) -> x36
            let (get_header : t -> string) =
              fun (x38 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x38) "header")
            let (set_header : t -> string -> unit) =
              fun (x39 : t) ->
                fun (x40 : string) ->
                  Ojs.set_prop_ascii (t_to_js x39) "header"
                    (Ojs.string_to_js x40)
            let (get_has_body : t -> bool) =
              fun (x41 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x41) "hasBody")
            let (set_has_body : t -> bool -> unit) =
              fun (x42 : t) ->
                fun (x43 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x42) "hasBody"
                    (Ojs.bool_to_js x43)
            let (get_formatter_object_id : t -> RemoteObjectId.t) =
              fun (x44 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x44) "formatterObjectId")
            let (set_formatter_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x45 : t) ->
                fun (x46 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x45) "formatterObjectId"
                    (RemoteObjectId.t_to_js x46)
            let (get_bind_remote_object_function_id : t -> RemoteObjectId.t)
              =
              fun (x47 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x47)
                     "bindRemoteObjectFunctionId")
            let (set_bind_remote_object_function_id :
              t -> RemoteObjectId.t -> unit) =
              fun (x48 : t) ->
                fun (x49 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x48)
                    "bindRemoteObjectFunctionId" (RemoteObjectId.t_to_js x49)
            let (get_config_object_id : t -> RemoteObjectId.t) =
              fun (x50 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x50) "configObjectId")
            let (set_config_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x51 : t) ->
                fun (x52 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x51) "configObjectId"
                    (RemoteObjectId.t_to_js x52)
          end
        module PropertyPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x54 : Ojs.t) -> x54
            and t_to_js : t -> Ojs.t = fun (x53 : Ojs.t) -> x53
            let (get_name : t -> string) =
              fun (x55 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x55) "name")
            let (set_name : t -> string -> unit) =
              fun (x56 : t) ->
                fun (x57 : string) ->
                  Ojs.set_prop_ascii (t_to_js x56) "name"
                    (Ojs.string_to_js x57)
            let (get_type : t -> string) =
              fun (x58 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x58) "type")
            let (set_type : t -> string -> unit) =
              fun (x59 : t) ->
                fun (x60 : string) ->
                  Ojs.set_prop_ascii (t_to_js x59) "type"
                    (Ojs.string_to_js x60)
            let (get_value : t -> string) =
              fun (x61 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x61) "value")
            let (set_value : t -> string -> unit) =
              fun (x62 : t) ->
                fun (x63 : string) ->
                  Ojs.set_prop_ascii (t_to_js x62) "value"
                    (Ojs.string_to_js x63)
            let (get_subtype : t -> string) =
              fun (x64 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x64) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x65 : t) ->
                fun (x66 : string) ->
                  Ojs.set_prop_ascii (t_to_js x65) "subtype"
                    (Ojs.string_to_js x66)
          end
        module EntryPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x68 : Ojs.t) -> x68
            and t_to_js : t -> Ojs.t = fun (x67 : Ojs.t) -> x67
          end
        module ObjectPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x70 : Ojs.t) -> x70
            and t_to_js : t -> Ojs.t = fun (x69 : Ojs.t) -> x69
            let (get_type : t -> string) =
              fun (x71 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x71) "type")
            let (set_type : t -> string -> unit) =
              fun (x72 : t) ->
                fun (x73 : string) ->
                  Ojs.set_prop_ascii (t_to_js x72) "type"
                    (Ojs.string_to_js x73)
            let (get_subtype : t -> string) =
              fun (x74 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x74) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x75 : t) ->
                fun (x76 : string) ->
                  Ojs.set_prop_ascii (t_to_js x75) "subtype"
                    (Ojs.string_to_js x76)
            let (get_description : t -> string) =
              fun (x77 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x77) "description")
            let (set_description : t -> string -> unit) =
              fun (x78 : t) ->
                fun (x79 : string) ->
                  Ojs.set_prop_ascii (t_to_js x78) "description"
                    (Ojs.string_to_js x79)
            let (get_overflow : t -> bool) =
              fun (x80 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x80) "overflow")
            let (set_overflow : t -> bool -> unit) =
              fun (x81 : t) ->
                fun (x82 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x81) "overflow"
                    (Ojs.bool_to_js x82)
            let (get_properties : t -> PropertyPreview.t list) =
              fun (x83 : t) ->
                Ojs.list_of_js PropertyPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x83) "properties")
            let (set_properties : t -> PropertyPreview.t list -> unit) =
              fun (x85 : t) ->
                fun (x86 : PropertyPreview.t list) ->
                  Ojs.set_prop_ascii (t_to_js x85) "properties"
                    (Ojs.list_to_js PropertyPreview.t_to_js x86)
            let (get_entries : t -> EntryPreview.t list) =
              fun (x88 : t) ->
                Ojs.list_of_js EntryPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x88) "entries")
            let (set_entries : t -> EntryPreview.t list -> unit) =
              fun (x90 : t) ->
                fun (x91 : EntryPreview.t list) ->
                  Ojs.set_prop_ascii (t_to_js x90) "entries"
                    (Ojs.list_to_js EntryPreview.t_to_js x91)
          end
        module RemoteObject =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x94 : Ojs.t) -> x94
            and t_to_js : t -> Ojs.t = fun (x93 : Ojs.t) -> x93
            let (get_type : t -> string) =
              fun (x95 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x95) "type")
            let (set_type : t -> string -> unit) =
              fun (x96 : t) ->
                fun (x97 : string) ->
                  Ojs.set_prop_ascii (t_to_js x96) "type"
                    (Ojs.string_to_js x97)
            let (get_subtype : t -> string) =
              fun (x98 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x98) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x99 : t) ->
                fun (x100 : string) ->
                  Ojs.set_prop_ascii (t_to_js x99) "subtype"
                    (Ojs.string_to_js x100)
            let (get_class_name : t -> string) =
              fun (x101 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x101) "className")
            let (set_class_name : t -> string -> unit) =
              fun (x102 : t) ->
                fun (x103 : string) ->
                  Ojs.set_prop_ascii (t_to_js x102) "className"
                    (Ojs.string_to_js x103)
            let (get_value : t -> any) =
              fun (x104 : t) ->
                any_of_js (Ojs.get_prop_ascii (t_to_js x104) "value")
            let (set_value : t -> any -> unit) =
              fun (x105 : t) ->
                fun (x106 : any) ->
                  Ojs.set_prop_ascii (t_to_js x105) "value" (any_to_js x106)
            let (get_unserializable_value : t -> UnserializableValue.t) =
              fun (x107 : t) ->
                UnserializableValue.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x107) "unserializableValue")
            let (set_unserializable_value :
              t -> UnserializableValue.t -> unit) =
              fun (x108 : t) ->
                fun (x109 : UnserializableValue.t) ->
                  Ojs.set_prop_ascii (t_to_js x108) "unserializableValue"
                    (UnserializableValue.t_to_js x109)
            let (get_description : t -> string) =
              fun (x110 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x110) "description")
            let (set_description : t -> string -> unit) =
              fun (x111 : t) ->
                fun (x112 : string) ->
                  Ojs.set_prop_ascii (t_to_js x111) "description"
                    (Ojs.string_to_js x112)
            let (get_object_id : t -> RemoteObjectId.t) =
              fun (x113 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x113) "objectId")
            let (set_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x114 : t) ->
                fun (x115 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x114) "objectId"
                    (RemoteObjectId.t_to_js x115)
            let (get_preview : t -> ObjectPreview.t) =
              fun (x116 : t) ->
                ObjectPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x116) "preview")
            let (set_preview : t -> ObjectPreview.t -> unit) =
              fun (x117 : t) ->
                fun (x118 : ObjectPreview.t) ->
                  Ojs.set_prop_ascii (t_to_js x117) "preview"
                    (ObjectPreview.t_to_js x118)
            let (get_custom_preview : t -> CustomPreview.t) =
              fun (x119 : t) ->
                CustomPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x119) "customPreview")
            let (set_custom_preview : t -> CustomPreview.t -> unit) =
              fun (x120 : t) ->
                fun (x121 : CustomPreview.t) ->
                  Ojs.set_prop_ascii (t_to_js x120) "customPreview"
                    (CustomPreview.t_to_js x121)
          end
        module PropertyDescriptor =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x123 : Ojs.t) -> x123
            and t_to_js : t -> Ojs.t = fun (x122 : Ojs.t) -> x122
            let (get_name : t -> string) =
              fun (x124 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x124) "name")
            let (set_name : t -> string -> unit) =
              fun (x125 : t) ->
                fun (x126 : string) ->
                  Ojs.set_prop_ascii (t_to_js x125) "name"
                    (Ojs.string_to_js x126)
            let (get_value : t -> RemoteObject.t) =
              fun (x127 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x127) "value")
            let (set_value : t -> RemoteObject.t -> unit) =
              fun (x128 : t) ->
                fun (x129 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x128) "value"
                    (RemoteObject.t_to_js x129)
            let (get_writable : t -> bool) =
              fun (x130 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x130) "writable")
            let (set_writable : t -> bool -> unit) =
              fun (x131 : t) ->
                fun (x132 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x131) "writable"
                    (Ojs.bool_to_js x132)
            let (get_get : t -> RemoteObject.t) =
              fun (x133 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x133) "get")
            let (set_get : t -> RemoteObject.t -> unit) =
              fun (x134 : t) ->
                fun (x135 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x134) "get"
                    (RemoteObject.t_to_js x135)
            let (get_set : t -> RemoteObject.t) =
              fun (x136 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x136) "set")
            let (set_set : t -> RemoteObject.t -> unit) =
              fun (x137 : t) ->
                fun (x138 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x137) "set"
                    (RemoteObject.t_to_js x138)
            let (get_configurable : t -> bool) =
              fun (x139 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x139) "configurable")
            let (set_configurable : t -> bool -> unit) =
              fun (x140 : t) ->
                fun (x141 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x140) "configurable"
                    (Ojs.bool_to_js x141)
            let (get_enumerable : t -> bool) =
              fun (x142 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x142) "enumerable")
            let (set_enumerable : t -> bool -> unit) =
              fun (x143 : t) ->
                fun (x144 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x143) "enumerable"
                    (Ojs.bool_to_js x144)
            let (get_was_thrown : t -> bool) =
              fun (x145 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x145) "wasThrown")
            let (set_was_thrown : t -> bool -> unit) =
              fun (x146 : t) ->
                fun (x147 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x146) "wasThrown"
                    (Ojs.bool_to_js x147)
            let (get_is_own : t -> bool) =
              fun (x148 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x148) "isOwn")
            let (set_is_own : t -> bool -> unit) =
              fun (x149 : t) ->
                fun (x150 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x149) "isOwn"
                    (Ojs.bool_to_js x150)
            let (get_symbol : t -> RemoteObject.t) =
              fun (x151 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x151) "symbol")
            let (set_symbol : t -> RemoteObject.t -> unit) =
              fun (x152 : t) ->
                fun (x153 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x152) "symbol"
                    (RemoteObject.t_to_js x153)
          end
        module InternalPropertyDescriptor =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x155 : Ojs.t) -> x155
            and t_to_js : t -> Ojs.t = fun (x154 : Ojs.t) -> x154
            let (get_name : t -> string) =
              fun (x156 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x156) "name")
            let (set_name : t -> string -> unit) =
              fun (x157 : t) ->
                fun (x158 : string) ->
                  Ojs.set_prop_ascii (t_to_js x157) "name"
                    (Ojs.string_to_js x158)
            let (get_value : t -> RemoteObject.t) =
              fun (x159 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x159) "value")
            let (set_value : t -> RemoteObject.t -> unit) =
              fun (x160 : t) ->
                fun (x161 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x160) "value"
                    (RemoteObject.t_to_js x161)
          end
        module CallArgument =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x163 : Ojs.t) -> x163
            and t_to_js : t -> Ojs.t = fun (x162 : Ojs.t) -> x162
            let (get_value : t -> any) =
              fun (x164 : t) ->
                any_of_js (Ojs.get_prop_ascii (t_to_js x164) "value")
            let (set_value : t -> any -> unit) =
              fun (x165 : t) ->
                fun (x166 : any) ->
                  Ojs.set_prop_ascii (t_to_js x165) "value" (any_to_js x166)
            let (get_unserializable_value : t -> UnserializableValue.t) =
              fun (x167 : t) ->
                UnserializableValue.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x167) "unserializableValue")
            let (set_unserializable_value :
              t -> UnserializableValue.t -> unit) =
              fun (x168 : t) ->
                fun (x169 : UnserializableValue.t) ->
                  Ojs.set_prop_ascii (t_to_js x168) "unserializableValue"
                    (UnserializableValue.t_to_js x169)
            let (get_object_id : t -> RemoteObjectId.t) =
              fun (x170 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x170) "objectId")
            let (set_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x171 : t) ->
                fun (x172 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x171) "objectId"
                    (RemoteObjectId.t_to_js x172)
          end
        module ExecutionContextId =
          struct
            type t = int
            let rec t_of_js : Ojs.t -> t =
              fun (x174 : Ojs.t) -> Ojs.int_of_js x174
            and t_to_js : t -> Ojs.t = fun (x173 : int) -> Ojs.int_to_js x173
          end
        module ExecutionContextDescription =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x176 : Ojs.t) -> x176
            and t_to_js : t -> Ojs.t = fun (x175 : Ojs.t) -> x175
            let (get_id : t -> ExecutionContextId.t) =
              fun (x177 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x177) "id")
            let (set_id : t -> ExecutionContextId.t -> unit) =
              fun (x178 : t) ->
                fun (x179 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x178) "id"
                    (ExecutionContextId.t_to_js x179)
            let (get_origin : t -> string) =
              fun (x180 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x180) "origin")
            let (set_origin : t -> string -> unit) =
              fun (x181 : t) ->
                fun (x182 : string) ->
                  Ojs.set_prop_ascii (t_to_js x181) "origin"
                    (Ojs.string_to_js x182)
            let (get_name : t -> string) =
              fun (x183 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x183) "name")
            let (set_name : t -> string -> unit) =
              fun (x184 : t) ->
                fun (x185 : string) ->
                  Ojs.set_prop_ascii (t_to_js x184) "name"
                    (Ojs.string_to_js x185)
            let (get_aux_data : t -> AnonymousInterface0.t) =
              fun (x186 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x186) "auxData")
            let (set_aux_data : t -> AnonymousInterface0.t -> unit) =
              fun (x187 : t) ->
                fun (x188 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x187) "auxData"
                    (AnonymousInterface0.t_to_js x188)
          end
        module Timestamp =
          struct
            type t = int
            let rec t_of_js : Ojs.t -> t =
              fun (x190 : Ojs.t) -> Ojs.int_of_js x190
            and t_to_js : t -> Ojs.t = fun (x189 : int) -> Ojs.int_to_js x189
          end
        module CallFrame =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x192 : Ojs.t) -> x192
            and t_to_js : t -> Ojs.t = fun (x191 : Ojs.t) -> x191
            let (get_function_name : t -> string) =
              fun (x193 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x193) "functionName")
            let (set_function_name : t -> string -> unit) =
              fun (x194 : t) ->
                fun (x195 : string) ->
                  Ojs.set_prop_ascii (t_to_js x194) "functionName"
                    (Ojs.string_to_js x195)
            let (get_script_id : t -> ScriptId.t) =
              fun (x196 : t) ->
                ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x196) "scriptId")
            let (set_script_id : t -> ScriptId.t -> unit) =
              fun (x197 : t) ->
                fun (x198 : ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x197) "scriptId"
                    (ScriptId.t_to_js x198)
            let (get_url : t -> string) =
              fun (x199 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x199) "url")
            let (set_url : t -> string -> unit) =
              fun (x200 : t) ->
                fun (x201 : string) ->
                  Ojs.set_prop_ascii (t_to_js x200) "url"
                    (Ojs.string_to_js x201)
            let (get_line_number : t -> int) =
              fun (x202 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x202) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x203 : t) ->
                fun (x204 : int) ->
                  Ojs.set_prop_ascii (t_to_js x203) "lineNumber"
                    (Ojs.int_to_js x204)
            let (get_column_number : t -> int) =
              fun (x205 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x205) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x206 : t) ->
                fun (x207 : int) ->
                  Ojs.set_prop_ascii (t_to_js x206) "columnNumber"
                    (Ojs.int_to_js x207)
          end
        module UniqueDebuggerId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x209 : Ojs.t) -> Ojs.string_of_js x209
            and t_to_js : t -> Ojs.t =
              fun (x208 : string) -> Ojs.string_to_js x208
          end
        module StackTraceId =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x211 : Ojs.t) -> x211
            and t_to_js : t -> Ojs.t = fun (x210 : Ojs.t) -> x210
            let (get_id : t -> string) =
              fun (x212 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x212) "id")
            let (set_id : t -> string -> unit) =
              fun (x213 : t) ->
                fun (x214 : string) ->
                  Ojs.set_prop_ascii (t_to_js x213) "id"
                    (Ojs.string_to_js x214)
            let (get_debugger_id : t -> UniqueDebuggerId.t) =
              fun (x215 : t) ->
                UniqueDebuggerId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x215) "debuggerId")
            let (set_debugger_id : t -> UniqueDebuggerId.t -> unit) =
              fun (x216 : t) ->
                fun (x217 : UniqueDebuggerId.t) ->
                  Ojs.set_prop_ascii (t_to_js x216) "debuggerId"
                    (UniqueDebuggerId.t_to_js x217)
          end
        module StackTrace =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x219 : Ojs.t) -> x219
            and t_to_js : t -> Ojs.t = fun (x218 : Ojs.t) -> x218
            let (get_description : t -> string) =
              fun (x220 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x220) "description")
            let (set_description : t -> string -> unit) =
              fun (x221 : t) ->
                fun (x222 : string) ->
                  Ojs.set_prop_ascii (t_to_js x221) "description"
                    (Ojs.string_to_js x222)
            let (get_call_frames : t -> CallFrame.t list) =
              fun (x223 : t) ->
                Ojs.list_of_js CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x223) "callFrames")
            let (set_call_frames : t -> CallFrame.t list -> unit) =
              fun (x225 : t) ->
                fun (x226 : CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x225) "callFrames"
                    (Ojs.list_to_js CallFrame.t_to_js x226)
            let (get_parent : t -> t) =
              fun (x228 : t) ->
                t_of_js (Ojs.get_prop_ascii (t_to_js x228) "parent")
            let (set_parent : t -> t -> unit) =
              fun (x229 : t) ->
                fun (x230 : t) ->
                  Ojs.set_prop_ascii (t_to_js x229) "parent" (t_to_js x230)
            let (get_parent_id : t -> StackTraceId.t) =
              fun (x231 : t) ->
                StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x231) "parentId")
            let (set_parent_id : t -> StackTraceId.t -> unit) =
              fun (x232 : t) ->
                fun (x233 : StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x232) "parentId"
                    (StackTraceId.t_to_js x233)
          end
        module ExceptionDetails =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x235 : Ojs.t) -> x235
            and t_to_js : t -> Ojs.t = fun (x234 : Ojs.t) -> x234
            let (get_exception_id : t -> int) =
              fun (x236 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x236) "exceptionId")
            let (set_exception_id : t -> int -> unit) =
              fun (x237 : t) ->
                fun (x238 : int) ->
                  Ojs.set_prop_ascii (t_to_js x237) "exceptionId"
                    (Ojs.int_to_js x238)
            let (get_text : t -> string) =
              fun (x239 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x239) "text")
            let (set_text : t -> string -> unit) =
              fun (x240 : t) ->
                fun (x241 : string) ->
                  Ojs.set_prop_ascii (t_to_js x240) "text"
                    (Ojs.string_to_js x241)
            let (get_line_number : t -> int) =
              fun (x242 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x242) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x243 : t) ->
                fun (x244 : int) ->
                  Ojs.set_prop_ascii (t_to_js x243) "lineNumber"
                    (Ojs.int_to_js x244)
            let (get_column_number : t -> int) =
              fun (x245 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x245) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x246 : t) ->
                fun (x247 : int) ->
                  Ojs.set_prop_ascii (t_to_js x246) "columnNumber"
                    (Ojs.int_to_js x247)
            let (get_script_id : t -> ScriptId.t) =
              fun (x248 : t) ->
                ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x248) "scriptId")
            let (set_script_id : t -> ScriptId.t -> unit) =
              fun (x249 : t) ->
                fun (x250 : ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x249) "scriptId"
                    (ScriptId.t_to_js x250)
            let (get_url : t -> string) =
              fun (x251 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x251) "url")
            let (set_url : t -> string -> unit) =
              fun (x252 : t) ->
                fun (x253 : string) ->
                  Ojs.set_prop_ascii (t_to_js x252) "url"
                    (Ojs.string_to_js x253)
            let (get_stack_trace : t -> StackTrace.t) =
              fun (x254 : t) ->
                StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x254) "stackTrace")
            let (set_stack_trace : t -> StackTrace.t -> unit) =
              fun (x255 : t) ->
                fun (x256 : StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x255) "stackTrace"
                    (StackTrace.t_to_js x256)
            let (get_exception : t -> RemoteObject.t) =
              fun (x257 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x257) "exception")
            let (set_exception : t -> RemoteObject.t -> unit) =
              fun (x258 : t) ->
                fun (x259 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x258) "exception"
                    (RemoteObject.t_to_js x259)
            let (get_execution_context_id : t -> ExecutionContextId.t) =
              fun (x260 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x260) "executionContextId")
            let (set_execution_context_id :
              t -> ExecutionContextId.t -> unit) =
              fun (x261 : t) ->
                fun (x262 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x261) "executionContextId"
                    (ExecutionContextId.t_to_js x262)
          end
        module EvaluateParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x264 : Ojs.t) -> x264
            and t_to_js : t -> Ojs.t = fun (x263 : Ojs.t) -> x263
            let (get_expression : t -> string) =
              fun (x265 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x265) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x266 : t) ->
                fun (x267 : string) ->
                  Ojs.set_prop_ascii (t_to_js x266) "expression"
                    (Ojs.string_to_js x267)
            let (get_object_group : t -> string) =
              fun (x268 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x268) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x269 : t) ->
                fun (x270 : string) ->
                  Ojs.set_prop_ascii (t_to_js x269) "objectGroup"
                    (Ojs.string_to_js x270)
            let (get_include_command_line_api : t -> bool) =
              fun (x271 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x271) "includeCommandLineAPI")
            let (set_include_command_line_api : t -> bool -> unit) =
              fun (x272 : t) ->
                fun (x273 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x272) "includeCommandLineAPI"
                    (Ojs.bool_to_js x273)
            let (get_silent : t -> bool) =
              fun (x274 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x274) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x275 : t) ->
                fun (x276 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x275) "silent"
                    (Ojs.bool_to_js x276)
            let (get_context_id : t -> ExecutionContextId.t) =
              fun (x277 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x277) "contextId")
            let (set_context_id : t -> ExecutionContextId.t -> unit) =
              fun (x278 : t) ->
                fun (x279 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x278) "contextId"
                    (ExecutionContextId.t_to_js x279)
            let (get_return_by_value : t -> bool) =
              fun (x280 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x280) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x281 : t) ->
                fun (x282 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x281) "returnByValue"
                    (Ojs.bool_to_js x282)
            let (get_generate_preview : t -> bool) =
              fun (x283 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x283) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x284 : t) ->
                fun (x285 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x284) "generatePreview"
                    (Ojs.bool_to_js x285)
            let (get_user_gesture : t -> bool) =
              fun (x286 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x286) "userGesture")
            let (set_user_gesture : t -> bool -> unit) =
              fun (x287 : t) ->
                fun (x288 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x287) "userGesture"
                    (Ojs.bool_to_js x288)
            let (get_await_promise : t -> bool) =
              fun (x289 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x289) "awaitPromise")
            let (set_await_promise : t -> bool -> unit) =
              fun (x290 : t) ->
                fun (x291 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x290) "awaitPromise"
                    (Ojs.bool_to_js x291)
          end
        module AwaitPromiseParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x293 : Ojs.t) -> x293
            and t_to_js : t -> Ojs.t = fun (x292 : Ojs.t) -> x292
            let (get_promise_object_id : t -> RemoteObjectId.t) =
              fun (x294 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x294) "promiseObjectId")
            let (set_promise_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x295 : t) ->
                fun (x296 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x295) "promiseObjectId"
                    (RemoteObjectId.t_to_js x296)
            let (get_return_by_value : t -> bool) =
              fun (x297 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x297) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x298 : t) ->
                fun (x299 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x298) "returnByValue"
                    (Ojs.bool_to_js x299)
            let (get_generate_preview : t -> bool) =
              fun (x300 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x300) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x301 : t) ->
                fun (x302 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x301) "generatePreview"
                    (Ojs.bool_to_js x302)
          end
        module CallFunctionOnParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x304 : Ojs.t) -> x304
            and t_to_js : t -> Ojs.t = fun (x303 : Ojs.t) -> x303
            let (get_function_declaration : t -> string) =
              fun (x305 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x305) "functionDeclaration")
            let (set_function_declaration : t -> string -> unit) =
              fun (x306 : t) ->
                fun (x307 : string) ->
                  Ojs.set_prop_ascii (t_to_js x306) "functionDeclaration"
                    (Ojs.string_to_js x307)
            let (get_object_id : t -> RemoteObjectId.t) =
              fun (x308 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x308) "objectId")
            let (set_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x309 : t) ->
                fun (x310 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x309) "objectId"
                    (RemoteObjectId.t_to_js x310)
            let (get_arguments : t -> CallArgument.t list) =
              fun (x311 : t) ->
                Ojs.list_of_js CallArgument.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x311) "arguments")
            let (set_arguments : t -> CallArgument.t list -> unit) =
              fun (x313 : t) ->
                fun (x314 : CallArgument.t list) ->
                  Ojs.set_prop_ascii (t_to_js x313) "arguments"
                    (Ojs.list_to_js CallArgument.t_to_js x314)
            let (get_silent : t -> bool) =
              fun (x316 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x316) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x317 : t) ->
                fun (x318 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x317) "silent"
                    (Ojs.bool_to_js x318)
            let (get_return_by_value : t -> bool) =
              fun (x319 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x319) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x320 : t) ->
                fun (x321 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x320) "returnByValue"
                    (Ojs.bool_to_js x321)
            let (get_generate_preview : t -> bool) =
              fun (x322 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x322) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x323 : t) ->
                fun (x324 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x323) "generatePreview"
                    (Ojs.bool_to_js x324)
            let (get_user_gesture : t -> bool) =
              fun (x325 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x325) "userGesture")
            let (set_user_gesture : t -> bool -> unit) =
              fun (x326 : t) ->
                fun (x327 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x326) "userGesture"
                    (Ojs.bool_to_js x327)
            let (get_await_promise : t -> bool) =
              fun (x328 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x328) "awaitPromise")
            let (set_await_promise : t -> bool -> unit) =
              fun (x329 : t) ->
                fun (x330 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x329) "awaitPromise"
                    (Ojs.bool_to_js x330)
            let (get_execution_context_id : t -> ExecutionContextId.t) =
              fun (x331 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x331) "executionContextId")
            let (set_execution_context_id :
              t -> ExecutionContextId.t -> unit) =
              fun (x332 : t) ->
                fun (x333 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x332) "executionContextId"
                    (ExecutionContextId.t_to_js x333)
            let (get_object_group : t -> string) =
              fun (x334 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x334) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x335 : t) ->
                fun (x336 : string) ->
                  Ojs.set_prop_ascii (t_to_js x335) "objectGroup"
                    (Ojs.string_to_js x336)
          end
        module GetPropertiesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x338 : Ojs.t) -> x338
            and t_to_js : t -> Ojs.t = fun (x337 : Ojs.t) -> x337
            let (get_object_id : t -> RemoteObjectId.t) =
              fun (x339 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x339) "objectId")
            let (set_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x340 : t) ->
                fun (x341 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x340) "objectId"
                    (RemoteObjectId.t_to_js x341)
            let (get_own_properties : t -> bool) =
              fun (x342 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x342) "ownProperties")
            let (set_own_properties : t -> bool -> unit) =
              fun (x343 : t) ->
                fun (x344 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x343) "ownProperties"
                    (Ojs.bool_to_js x344)
            let (get_accessor_properties_only : t -> bool) =
              fun (x345 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x345) "accessorPropertiesOnly")
            let (set_accessor_properties_only : t -> bool -> unit) =
              fun (x346 : t) ->
                fun (x347 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x346) "accessorPropertiesOnly"
                    (Ojs.bool_to_js x347)
            let (get_generate_preview : t -> bool) =
              fun (x348 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x348) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x349 : t) ->
                fun (x350 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x349) "generatePreview"
                    (Ojs.bool_to_js x350)
          end
        module ReleaseObjectParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x352 : Ojs.t) -> x352
            and t_to_js : t -> Ojs.t = fun (x351 : Ojs.t) -> x351
            let (get_object_id : t -> RemoteObjectId.t) =
              fun (x353 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x353) "objectId")
            let (set_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x354 : t) ->
                fun (x355 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x354) "objectId"
                    (RemoteObjectId.t_to_js x355)
          end
        module ReleaseObjectGroupParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x357 : Ojs.t) -> x357
            and t_to_js : t -> Ojs.t = fun (x356 : Ojs.t) -> x356
            let (get_object_group : t -> string) =
              fun (x358 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x358) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x359 : t) ->
                fun (x360 : string) ->
                  Ojs.set_prop_ascii (t_to_js x359) "objectGroup"
                    (Ojs.string_to_js x360)
          end
        module SetCustomObjectFormatterEnabledParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x362 : Ojs.t) -> x362
            and t_to_js : t -> Ojs.t = fun (x361 : Ojs.t) -> x361
            let (get_enabled : t -> bool) =
              fun (x363 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x363) "enabled")
            let (set_enabled : t -> bool -> unit) =
              fun (x364 : t) ->
                fun (x365 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x364) "enabled"
                    (Ojs.bool_to_js x365)
          end
        module CompileScriptParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x367 : Ojs.t) -> x367
            and t_to_js : t -> Ojs.t = fun (x366 : Ojs.t) -> x366
            let (get_expression : t -> string) =
              fun (x368 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x368) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x369 : t) ->
                fun (x370 : string) ->
                  Ojs.set_prop_ascii (t_to_js x369) "expression"
                    (Ojs.string_to_js x370)
            let (get_source_url : t -> string) =
              fun (x371 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x371) "sourceURL")
            let (set_source_url : t -> string -> unit) =
              fun (x372 : t) ->
                fun (x373 : string) ->
                  Ojs.set_prop_ascii (t_to_js x372) "sourceURL"
                    (Ojs.string_to_js x373)
            let (get_persist_script : t -> bool) =
              fun (x374 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x374) "persistScript")
            let (set_persist_script : t -> bool -> unit) =
              fun (x375 : t) ->
                fun (x376 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x375) "persistScript"
                    (Ojs.bool_to_js x376)
            let (get_execution_context_id : t -> ExecutionContextId.t) =
              fun (x377 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x377) "executionContextId")
            let (set_execution_context_id :
              t -> ExecutionContextId.t -> unit) =
              fun (x378 : t) ->
                fun (x379 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x378) "executionContextId"
                    (ExecutionContextId.t_to_js x379)
          end
        module RunScriptParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x381 : Ojs.t) -> x381
            and t_to_js : t -> Ojs.t = fun (x380 : Ojs.t) -> x380
            let (get_script_id : t -> ScriptId.t) =
              fun (x382 : t) ->
                ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x382) "scriptId")
            let (set_script_id : t -> ScriptId.t -> unit) =
              fun (x383 : t) ->
                fun (x384 : ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x383) "scriptId"
                    (ScriptId.t_to_js x384)
            let (get_execution_context_id : t -> ExecutionContextId.t) =
              fun (x385 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x385) "executionContextId")
            let (set_execution_context_id :
              t -> ExecutionContextId.t -> unit) =
              fun (x386 : t) ->
                fun (x387 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x386) "executionContextId"
                    (ExecutionContextId.t_to_js x387)
            let (get_object_group : t -> string) =
              fun (x388 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x388) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x389 : t) ->
                fun (x390 : string) ->
                  Ojs.set_prop_ascii (t_to_js x389) "objectGroup"
                    (Ojs.string_to_js x390)
            let (get_silent : t -> bool) =
              fun (x391 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x391) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x392 : t) ->
                fun (x393 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x392) "silent"
                    (Ojs.bool_to_js x393)
            let (get_include_command_line_api : t -> bool) =
              fun (x394 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x394) "includeCommandLineAPI")
            let (set_include_command_line_api : t -> bool -> unit) =
              fun (x395 : t) ->
                fun (x396 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x395) "includeCommandLineAPI"
                    (Ojs.bool_to_js x396)
            let (get_return_by_value : t -> bool) =
              fun (x397 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x397) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x398 : t) ->
                fun (x399 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x398) "returnByValue"
                    (Ojs.bool_to_js x399)
            let (get_generate_preview : t -> bool) =
              fun (x400 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x400) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x401 : t) ->
                fun (x402 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x401) "generatePreview"
                    (Ojs.bool_to_js x402)
            let (get_await_promise : t -> bool) =
              fun (x403 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x403) "awaitPromise")
            let (set_await_promise : t -> bool -> unit) =
              fun (x404 : t) ->
                fun (x405 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x404) "awaitPromise"
                    (Ojs.bool_to_js x405)
          end
        module QueryObjectsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x407 : Ojs.t) -> x407
            and t_to_js : t -> Ojs.t = fun (x406 : Ojs.t) -> x406
            let (get_prototype_object_id : t -> RemoteObjectId.t) =
              fun (x408 : t) ->
                RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x408) "prototypeObjectId")
            let (set_prototype_object_id : t -> RemoteObjectId.t -> unit) =
              fun (x409 : t) ->
                fun (x410 : RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x409) "prototypeObjectId"
                    (RemoteObjectId.t_to_js x410)
          end
        module GlobalLexicalScopeNamesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x412 : Ojs.t) -> x412
            and t_to_js : t -> Ojs.t = fun (x411 : Ojs.t) -> x411
            let (get_execution_context_id : t -> ExecutionContextId.t) =
              fun (x413 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x413) "executionContextId")
            let (set_execution_context_id :
              t -> ExecutionContextId.t -> unit) =
              fun (x414 : t) ->
                fun (x415 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x414) "executionContextId"
                    (ExecutionContextId.t_to_js x415)
          end
        module EvaluateReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x417 : Ojs.t) -> x417
            and t_to_js : t -> Ojs.t = fun (x416 : Ojs.t) -> x416
            let (get_result : t -> RemoteObject.t) =
              fun (x418 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x418) "result")
            let (set_result : t -> RemoteObject.t -> unit) =
              fun (x419 : t) ->
                fun (x420 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x419) "result"
                    (RemoteObject.t_to_js x420)
            let (get_exception_details : t -> ExceptionDetails.t) =
              fun (x421 : t) ->
                ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x421) "exceptionDetails")
            let (set_exception_details : t -> ExceptionDetails.t -> unit) =
              fun (x422 : t) ->
                fun (x423 : ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x422) "exceptionDetails"
                    (ExceptionDetails.t_to_js x423)
          end
        module AwaitPromiseReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x425 : Ojs.t) -> x425
            and t_to_js : t -> Ojs.t = fun (x424 : Ojs.t) -> x424
            let (get_result : t -> RemoteObject.t) =
              fun (x426 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x426) "result")
            let (set_result : t -> RemoteObject.t -> unit) =
              fun (x427 : t) ->
                fun (x428 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x427) "result"
                    (RemoteObject.t_to_js x428)
            let (get_exception_details : t -> ExceptionDetails.t) =
              fun (x429 : t) ->
                ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x429) "exceptionDetails")
            let (set_exception_details : t -> ExceptionDetails.t -> unit) =
              fun (x430 : t) ->
                fun (x431 : ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x430) "exceptionDetails"
                    (ExceptionDetails.t_to_js x431)
          end
        module CallFunctionOnReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x433 : Ojs.t) -> x433
            and t_to_js : t -> Ojs.t = fun (x432 : Ojs.t) -> x432
            let (get_result : t -> RemoteObject.t) =
              fun (x434 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x434) "result")
            let (set_result : t -> RemoteObject.t -> unit) =
              fun (x435 : t) ->
                fun (x436 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x435) "result"
                    (RemoteObject.t_to_js x436)
            let (get_exception_details : t -> ExceptionDetails.t) =
              fun (x437 : t) ->
                ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x437) "exceptionDetails")
            let (set_exception_details : t -> ExceptionDetails.t -> unit) =
              fun (x438 : t) ->
                fun (x439 : ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x438) "exceptionDetails"
                    (ExceptionDetails.t_to_js x439)
          end
        module GetPropertiesReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x441 : Ojs.t) -> x441
            and t_to_js : t -> Ojs.t = fun (x440 : Ojs.t) -> x440
            let (get_result : t -> PropertyDescriptor.t list) =
              fun (x442 : t) ->
                Ojs.list_of_js PropertyDescriptor.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x442) "result")
            let (set_result : t -> PropertyDescriptor.t list -> unit) =
              fun (x444 : t) ->
                fun (x445 : PropertyDescriptor.t list) ->
                  Ojs.set_prop_ascii (t_to_js x444) "result"
                    (Ojs.list_to_js PropertyDescriptor.t_to_js x445)
            let (get_internal_properties :
              t -> InternalPropertyDescriptor.t list) =
              fun (x447 : t) ->
                Ojs.list_of_js InternalPropertyDescriptor.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x447) "internalProperties")
            let (set_internal_properties :
              t -> InternalPropertyDescriptor.t list -> unit) =
              fun (x449 : t) ->
                fun (x450 : InternalPropertyDescriptor.t list) ->
                  Ojs.set_prop_ascii (t_to_js x449) "internalProperties"
                    (Ojs.list_to_js InternalPropertyDescriptor.t_to_js x450)
            let (get_exception_details : t -> ExceptionDetails.t) =
              fun (x452 : t) ->
                ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x452) "exceptionDetails")
            let (set_exception_details : t -> ExceptionDetails.t -> unit) =
              fun (x453 : t) ->
                fun (x454 : ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x453) "exceptionDetails"
                    (ExceptionDetails.t_to_js x454)
          end
        module CompileScriptReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x456 : Ojs.t) -> x456
            and t_to_js : t -> Ojs.t = fun (x455 : Ojs.t) -> x455
            let (get_script_id : t -> ScriptId.t) =
              fun (x457 : t) ->
                ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x457) "scriptId")
            let (set_script_id : t -> ScriptId.t -> unit) =
              fun (x458 : t) ->
                fun (x459 : ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x458) "scriptId"
                    (ScriptId.t_to_js x459)
            let (get_exception_details : t -> ExceptionDetails.t) =
              fun (x460 : t) ->
                ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x460) "exceptionDetails")
            let (set_exception_details : t -> ExceptionDetails.t -> unit) =
              fun (x461 : t) ->
                fun (x462 : ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x461) "exceptionDetails"
                    (ExceptionDetails.t_to_js x462)
          end
        module RunScriptReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x464 : Ojs.t) -> x464
            and t_to_js : t -> Ojs.t = fun (x463 : Ojs.t) -> x463
            let (get_result : t -> RemoteObject.t) =
              fun (x465 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x465) "result")
            let (set_result : t -> RemoteObject.t -> unit) =
              fun (x466 : t) ->
                fun (x467 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x466) "result"
                    (RemoteObject.t_to_js x467)
            let (get_exception_details : t -> ExceptionDetails.t) =
              fun (x468 : t) ->
                ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x468) "exceptionDetails")
            let (set_exception_details : t -> ExceptionDetails.t -> unit) =
              fun (x469 : t) ->
                fun (x470 : ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x469) "exceptionDetails"
                    (ExceptionDetails.t_to_js x470)
          end
        module QueryObjectsReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x472 : Ojs.t) -> x472
            and t_to_js : t -> Ojs.t = fun (x471 : Ojs.t) -> x471
            let (get_objects : t -> RemoteObject.t) =
              fun (x473 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x473) "objects")
            let (set_objects : t -> RemoteObject.t -> unit) =
              fun (x474 : t) ->
                fun (x475 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x474) "objects"
                    (RemoteObject.t_to_js x475)
          end
        module GlobalLexicalScopeNamesReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x477 : Ojs.t) -> x477
            and t_to_js : t -> Ojs.t = fun (x476 : Ojs.t) -> x476
            let (get_names : t -> string list) =
              fun (x478 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x478) "names")
            let (set_names : t -> string list -> unit) =
              fun (x480 : t) ->
                fun (x481 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x480) "names"
                    (Ojs.list_to_js Ojs.string_to_js x481)
          end
        module ExecutionContextCreatedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x484 : Ojs.t) -> x484
            and t_to_js : t -> Ojs.t = fun (x483 : Ojs.t) -> x483
            let (get_context : t -> ExecutionContextDescription.t) =
              fun (x485 : t) ->
                ExecutionContextDescription.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x485) "context")
            let (set_context : t -> ExecutionContextDescription.t -> unit) =
              fun (x486 : t) ->
                fun (x487 : ExecutionContextDescription.t) ->
                  Ojs.set_prop_ascii (t_to_js x486) "context"
                    (ExecutionContextDescription.t_to_js x487)
          end
        module ExecutionContextDestroyedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x489 : Ojs.t) -> x489
            and t_to_js : t -> Ojs.t = fun (x488 : Ojs.t) -> x488
            let (get_execution_context_id : t -> ExecutionContextId.t) =
              fun (x490 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x490) "executionContextId")
            let (set_execution_context_id :
              t -> ExecutionContextId.t -> unit) =
              fun (x491 : t) ->
                fun (x492 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x491) "executionContextId"
                    (ExecutionContextId.t_to_js x492)
          end
        module ExceptionThrownEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x494 : Ojs.t) -> x494
            and t_to_js : t -> Ojs.t = fun (x493 : Ojs.t) -> x493
            let (get_timestamp : t -> Timestamp.t) =
              fun (x495 : t) ->
                Timestamp.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x495) "timestamp")
            let (set_timestamp : t -> Timestamp.t -> unit) =
              fun (x496 : t) ->
                fun (x497 : Timestamp.t) ->
                  Ojs.set_prop_ascii (t_to_js x496) "timestamp"
                    (Timestamp.t_to_js x497)
            let (get_exception_details : t -> ExceptionDetails.t) =
              fun (x498 : t) ->
                ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x498) "exceptionDetails")
            let (set_exception_details : t -> ExceptionDetails.t -> unit) =
              fun (x499 : t) ->
                fun (x500 : ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x499) "exceptionDetails"
                    (ExceptionDetails.t_to_js x500)
          end
        module ExceptionRevokedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x502 : Ojs.t) -> x502
            and t_to_js : t -> Ojs.t = fun (x501 : Ojs.t) -> x501
            let (get_reason : t -> string) =
              fun (x503 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x503) "reason")
            let (set_reason : t -> string -> unit) =
              fun (x504 : t) ->
                fun (x505 : string) ->
                  Ojs.set_prop_ascii (t_to_js x504) "reason"
                    (Ojs.string_to_js x505)
            let (get_exception_id : t -> int) =
              fun (x506 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x506) "exceptionId")
            let (set_exception_id : t -> int -> unit) =
              fun (x507 : t) ->
                fun (x508 : int) ->
                  Ojs.set_prop_ascii (t_to_js x507) "exceptionId"
                    (Ojs.int_to_js x508)
          end
        module ConsoleAPICalledEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x510 : Ojs.t) -> x510
            and t_to_js : t -> Ojs.t = fun (x509 : Ojs.t) -> x509
            let (get_type : t -> string) =
              fun (x511 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x511) "type")
            let (set_type : t -> string -> unit) =
              fun (x512 : t) ->
                fun (x513 : string) ->
                  Ojs.set_prop_ascii (t_to_js x512) "type"
                    (Ojs.string_to_js x513)
            let (get_args : t -> RemoteObject.t list) =
              fun (x514 : t) ->
                Ojs.list_of_js RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x514) "args")
            let (set_args : t -> RemoteObject.t list -> unit) =
              fun (x516 : t) ->
                fun (x517 : RemoteObject.t list) ->
                  Ojs.set_prop_ascii (t_to_js x516) "args"
                    (Ojs.list_to_js RemoteObject.t_to_js x517)
            let (get_execution_context_id : t -> ExecutionContextId.t) =
              fun (x519 : t) ->
                ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x519) "executionContextId")
            let (set_execution_context_id :
              t -> ExecutionContextId.t -> unit) =
              fun (x520 : t) ->
                fun (x521 : ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x520) "executionContextId"
                    (ExecutionContextId.t_to_js x521)
            let (get_timestamp : t -> Timestamp.t) =
              fun (x522 : t) ->
                Timestamp.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x522) "timestamp")
            let (set_timestamp : t -> Timestamp.t -> unit) =
              fun (x523 : t) ->
                fun (x524 : Timestamp.t) ->
                  Ojs.set_prop_ascii (t_to_js x523) "timestamp"
                    (Timestamp.t_to_js x524)
            let (get_stack_trace : t -> StackTrace.t) =
              fun (x525 : t) ->
                StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x525) "stackTrace")
            let (set_stack_trace : t -> StackTrace.t -> unit) =
              fun (x526 : t) ->
                fun (x527 : StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x526) "stackTrace"
                    (StackTrace.t_to_js x527)
            let (get_context : t -> string) =
              fun (x528 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x528) "context")
            let (set_context : t -> string -> unit) =
              fun (x529 : t) ->
                fun (x530 : string) ->
                  Ojs.set_prop_ascii (t_to_js x529) "context"
                    (Ojs.string_to_js x530)
          end
        module InspectRequestedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x532 : Ojs.t) -> x532
            and t_to_js : t -> Ojs.t = fun (x531 : Ojs.t) -> x531
            let (get_object : t -> RemoteObject.t) =
              fun (x533 : t) ->
                RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x533) "object")
            let (set_object : t -> RemoteObject.t -> unit) =
              fun (x534 : t) ->
                fun (x535 : RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x534) "object"
                    (RemoteObject.t_to_js x535)
            let (get_hints : t -> AnonymousInterface0.t) =
              fun (x536 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x536) "hints")
            let (set_hints : t -> AnonymousInterface0.t -> unit) =
              fun (x537 : t) ->
                fun (x538 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x537) "hints"
                    (AnonymousInterface0.t_to_js x538)
          end
      end
    module Debugger =
      struct
        module BreakpointId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x540 : Ojs.t) -> Ojs.string_of_js x540
            and t_to_js : t -> Ojs.t =
              fun (x539 : string) -> Ojs.string_to_js x539
          end
        module CallFrameId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x542 : Ojs.t) -> Ojs.string_of_js x542
            and t_to_js : t -> Ojs.t =
              fun (x541 : string) -> Ojs.string_to_js x541
          end
        module Location =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x544 : Ojs.t) -> x544
            and t_to_js : t -> Ojs.t = fun (x543 : Ojs.t) -> x543
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x545 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x545) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x546 : t) ->
                fun (x547 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x546) "scriptId"
                    (Runtime.ScriptId.t_to_js x547)
            let (get_line_number : t -> int) =
              fun (x548 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x548) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x549 : t) ->
                fun (x550 : int) ->
                  Ojs.set_prop_ascii (t_to_js x549) "lineNumber"
                    (Ojs.int_to_js x550)
            let (get_column_number : t -> int) =
              fun (x551 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x551) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x552 : t) ->
                fun (x553 : int) ->
                  Ojs.set_prop_ascii (t_to_js x552) "columnNumber"
                    (Ojs.int_to_js x553)
          end
        module ScriptPosition =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x555 : Ojs.t) -> x555
            and t_to_js : t -> Ojs.t = fun (x554 : Ojs.t) -> x554
            let (get_line_number : t -> int) =
              fun (x556 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x556) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x557 : t) ->
                fun (x558 : int) ->
                  Ojs.set_prop_ascii (t_to_js x557) "lineNumber"
                    (Ojs.int_to_js x558)
            let (get_column_number : t -> int) =
              fun (x559 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x559) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x560 : t) ->
                fun (x561 : int) ->
                  Ojs.set_prop_ascii (t_to_js x560) "columnNumber"
                    (Ojs.int_to_js x561)
          end
        module Scope =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x563 : Ojs.t) -> x563
            and t_to_js : t -> Ojs.t = fun (x562 : Ojs.t) -> x562
            let (get_type : t -> string) =
              fun (x564 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x564) "type")
            let (set_type : t -> string -> unit) =
              fun (x565 : t) ->
                fun (x566 : string) ->
                  Ojs.set_prop_ascii (t_to_js x565) "type"
                    (Ojs.string_to_js x566)
            let (get_object : t -> Runtime.RemoteObject.t) =
              fun (x567 : t) ->
                Runtime.RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x567) "object")
            let (set_object : t -> Runtime.RemoteObject.t -> unit) =
              fun (x568 : t) ->
                fun (x569 : Runtime.RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x568) "object"
                    (Runtime.RemoteObject.t_to_js x569)
            let (get_name : t -> string) =
              fun (x570 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x570) "name")
            let (set_name : t -> string -> unit) =
              fun (x571 : t) ->
                fun (x572 : string) ->
                  Ojs.set_prop_ascii (t_to_js x571) "name"
                    (Ojs.string_to_js x572)
            let (get_start_location : t -> Location.t) =
              fun (x573 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x573) "startLocation")
            let (set_start_location : t -> Location.t -> unit) =
              fun (x574 : t) ->
                fun (x575 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x574) "startLocation"
                    (Location.t_to_js x575)
            let (get_end_location : t -> Location.t) =
              fun (x576 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x576) "endLocation")
            let (set_end_location : t -> Location.t -> unit) =
              fun (x577 : t) ->
                fun (x578 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x577) "endLocation"
                    (Location.t_to_js x578)
          end
        module CallFrame =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x580 : Ojs.t) -> x580
            and t_to_js : t -> Ojs.t = fun (x579 : Ojs.t) -> x579
            let (get_call_frame_id : t -> CallFrameId.t) =
              fun (x581 : t) ->
                CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x581) "callFrameId")
            let (set_call_frame_id : t -> CallFrameId.t -> unit) =
              fun (x582 : t) ->
                fun (x583 : CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x582) "callFrameId"
                    (CallFrameId.t_to_js x583)
            let (get_function_name : t -> string) =
              fun (x584 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x584) "functionName")
            let (set_function_name : t -> string -> unit) =
              fun (x585 : t) ->
                fun (x586 : string) ->
                  Ojs.set_prop_ascii (t_to_js x585) "functionName"
                    (Ojs.string_to_js x586)
            let (get_function_location : t -> Location.t) =
              fun (x587 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x587) "functionLocation")
            let (set_function_location : t -> Location.t -> unit) =
              fun (x588 : t) ->
                fun (x589 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x588) "functionLocation"
                    (Location.t_to_js x589)
            let (get_location : t -> Location.t) =
              fun (x590 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x590) "location")
            let (set_location : t -> Location.t -> unit) =
              fun (x591 : t) ->
                fun (x592 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x591) "location"
                    (Location.t_to_js x592)
            let (get_url : t -> string) =
              fun (x593 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x593) "url")
            let (set_url : t -> string -> unit) =
              fun (x594 : t) ->
                fun (x595 : string) ->
                  Ojs.set_prop_ascii (t_to_js x594) "url"
                    (Ojs.string_to_js x595)
            let (get_scope_chain : t -> Scope.t list) =
              fun (x596 : t) ->
                Ojs.list_of_js Scope.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x596) "scopeChain")
            let (set_scope_chain : t -> Scope.t list -> unit) =
              fun (x598 : t) ->
                fun (x599 : Scope.t list) ->
                  Ojs.set_prop_ascii (t_to_js x598) "scopeChain"
                    (Ojs.list_to_js Scope.t_to_js x599)
            let (get_this : t -> Runtime.RemoteObject.t) =
              fun (x601 : t) ->
                Runtime.RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x601) "this")
            let (set_this : t -> Runtime.RemoteObject.t -> unit) =
              fun (x602 : t) ->
                fun (x603 : Runtime.RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x602) "this"
                    (Runtime.RemoteObject.t_to_js x603)
            let (get_return_value : t -> Runtime.RemoteObject.t) =
              fun (x604 : t) ->
                Runtime.RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x604) "returnValue")
            let (set_return_value : t -> Runtime.RemoteObject.t -> unit) =
              fun (x605 : t) ->
                fun (x606 : Runtime.RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x605) "returnValue"
                    (Runtime.RemoteObject.t_to_js x606)
          end
        module SearchMatch =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x608 : Ojs.t) -> x608
            and t_to_js : t -> Ojs.t = fun (x607 : Ojs.t) -> x607
            let (get_line_number : t -> int) =
              fun (x609 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x609) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x610 : t) ->
                fun (x611 : int) ->
                  Ojs.set_prop_ascii (t_to_js x610) "lineNumber"
                    (Ojs.int_to_js x611)
            let (get_line_content : t -> string) =
              fun (x612 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x612) "lineContent")
            let (set_line_content : t -> string -> unit) =
              fun (x613 : t) ->
                fun (x614 : string) ->
                  Ojs.set_prop_ascii (t_to_js x613) "lineContent"
                    (Ojs.string_to_js x614)
          end
        module BreakLocation =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x616 : Ojs.t) -> x616
            and t_to_js : t -> Ojs.t = fun (x615 : Ojs.t) -> x615
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x617 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x617) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x618 : t) ->
                fun (x619 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x618) "scriptId"
                    (Runtime.ScriptId.t_to_js x619)
            let (get_line_number : t -> int) =
              fun (x620 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x620) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x621 : t) ->
                fun (x622 : int) ->
                  Ojs.set_prop_ascii (t_to_js x621) "lineNumber"
                    (Ojs.int_to_js x622)
            let (get_column_number : t -> int) =
              fun (x623 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x623) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x624 : t) ->
                fun (x625 : int) ->
                  Ojs.set_prop_ascii (t_to_js x624) "columnNumber"
                    (Ojs.int_to_js x625)
            let (get_type : t -> string) =
              fun (x626 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x626) "type")
            let (set_type : t -> string -> unit) =
              fun (x627 : t) ->
                fun (x628 : string) ->
                  Ojs.set_prop_ascii (t_to_js x627) "type"
                    (Ojs.string_to_js x628)
          end
        module SetBreakpointsActiveParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x630 : Ojs.t) -> x630
            and t_to_js : t -> Ojs.t = fun (x629 : Ojs.t) -> x629
            let (get_active : t -> bool) =
              fun (x631 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x631) "active")
            let (set_active : t -> bool -> unit) =
              fun (x632 : t) ->
                fun (x633 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x632) "active"
                    (Ojs.bool_to_js x633)
          end
        module SetSkipAllPausesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x635 : Ojs.t) -> x635
            and t_to_js : t -> Ojs.t = fun (x634 : Ojs.t) -> x634
            let (get_skip : t -> bool) =
              fun (x636 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x636) "skip")
            let (set_skip : t -> bool -> unit) =
              fun (x637 : t) ->
                fun (x638 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x637) "skip"
                    (Ojs.bool_to_js x638)
          end
        module SetBreakpointByUrlParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x640 : Ojs.t) -> x640
            and t_to_js : t -> Ojs.t = fun (x639 : Ojs.t) -> x639
            let (get_line_number : t -> int) =
              fun (x641 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x641) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x642 : t) ->
                fun (x643 : int) ->
                  Ojs.set_prop_ascii (t_to_js x642) "lineNumber"
                    (Ojs.int_to_js x643)
            let (get_url : t -> string) =
              fun (x644 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x644) "url")
            let (set_url : t -> string -> unit) =
              fun (x645 : t) ->
                fun (x646 : string) ->
                  Ojs.set_prop_ascii (t_to_js x645) "url"
                    (Ojs.string_to_js x646)
            let (get_url_regex : t -> string) =
              fun (x647 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x647) "urlRegex")
            let (set_url_regex : t -> string -> unit) =
              fun (x648 : t) ->
                fun (x649 : string) ->
                  Ojs.set_prop_ascii (t_to_js x648) "urlRegex"
                    (Ojs.string_to_js x649)
            let (get_script_hash : t -> string) =
              fun (x650 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x650) "scriptHash")
            let (set_script_hash : t -> string -> unit) =
              fun (x651 : t) ->
                fun (x652 : string) ->
                  Ojs.set_prop_ascii (t_to_js x651) "scriptHash"
                    (Ojs.string_to_js x652)
            let (get_column_number : t -> int) =
              fun (x653 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x653) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x654 : t) ->
                fun (x655 : int) ->
                  Ojs.set_prop_ascii (t_to_js x654) "columnNumber"
                    (Ojs.int_to_js x655)
            let (get_condition : t -> string) =
              fun (x656 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x656) "condition")
            let (set_condition : t -> string -> unit) =
              fun (x657 : t) ->
                fun (x658 : string) ->
                  Ojs.set_prop_ascii (t_to_js x657) "condition"
                    (Ojs.string_to_js x658)
          end
        module SetBreakpointParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x660 : Ojs.t) -> x660
            and t_to_js : t -> Ojs.t = fun (x659 : Ojs.t) -> x659
            let (get_location : t -> Location.t) =
              fun (x661 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x661) "location")
            let (set_location : t -> Location.t -> unit) =
              fun (x662 : t) ->
                fun (x663 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x662) "location"
                    (Location.t_to_js x663)
            let (get_condition : t -> string) =
              fun (x664 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x664) "condition")
            let (set_condition : t -> string -> unit) =
              fun (x665 : t) ->
                fun (x666 : string) ->
                  Ojs.set_prop_ascii (t_to_js x665) "condition"
                    (Ojs.string_to_js x666)
          end
        module RemoveBreakpointParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x668 : Ojs.t) -> x668
            and t_to_js : t -> Ojs.t = fun (x667 : Ojs.t) -> x667
            let (get_breakpoint_id : t -> BreakpointId.t) =
              fun (x669 : t) ->
                BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x669) "breakpointId")
            let (set_breakpoint_id : t -> BreakpointId.t -> unit) =
              fun (x670 : t) ->
                fun (x671 : BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x670) "breakpointId"
                    (BreakpointId.t_to_js x671)
          end
        module GetPossibleBreakpointsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x673 : Ojs.t) -> x673
            and t_to_js : t -> Ojs.t = fun (x672 : Ojs.t) -> x672
            let (get_start : t -> Location.t) =
              fun (x674 : t) ->
                Location.t_of_js (Ojs.get_prop_ascii (t_to_js x674) "start")
            let (set_start : t -> Location.t -> unit) =
              fun (x675 : t) ->
                fun (x676 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x675) "start"
                    (Location.t_to_js x676)
            let (get_end : t -> Location.t) =
              fun (x677 : t) ->
                Location.t_of_js (Ojs.get_prop_ascii (t_to_js x677) "end")
            let (set_end : t -> Location.t -> unit) =
              fun (x678 : t) ->
                fun (x679 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x678) "end"
                    (Location.t_to_js x679)
            let (get_restrict_to_function : t -> bool) =
              fun (x680 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x680) "restrictToFunction")
            let (set_restrict_to_function : t -> bool -> unit) =
              fun (x681 : t) ->
                fun (x682 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x681) "restrictToFunction"
                    (Ojs.bool_to_js x682)
          end
        module ContinueToLocationParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x684 : Ojs.t) -> x684
            and t_to_js : t -> Ojs.t = fun (x683 : Ojs.t) -> x683
            let (get_location : t -> Location.t) =
              fun (x685 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x685) "location")
            let (set_location : t -> Location.t -> unit) =
              fun (x686 : t) ->
                fun (x687 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x686) "location"
                    (Location.t_to_js x687)
            let (get_target_call_frames : t -> string) =
              fun (x688 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x688) "targetCallFrames")
            let (set_target_call_frames : t -> string -> unit) =
              fun (x689 : t) ->
                fun (x690 : string) ->
                  Ojs.set_prop_ascii (t_to_js x689) "targetCallFrames"
                    (Ojs.string_to_js x690)
          end
        module PauseOnAsyncCallParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x692 : Ojs.t) -> x692
            and t_to_js : t -> Ojs.t = fun (x691 : Ojs.t) -> x691
            let (get_parent_stack_trace_id : t -> Runtime.StackTraceId.t) =
              fun (x693 : t) ->
                Runtime.StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x693) "parentStackTraceId")
            let (set_parent_stack_trace_id :
              t -> Runtime.StackTraceId.t -> unit) =
              fun (x694 : t) ->
                fun (x695 : Runtime.StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x694) "parentStackTraceId"
                    (Runtime.StackTraceId.t_to_js x695)
          end
        module StepIntoParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x697 : Ojs.t) -> x697
            and t_to_js : t -> Ojs.t = fun (x696 : Ojs.t) -> x696
            let (get_break_on_async_call : t -> bool) =
              fun (x698 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x698) "breakOnAsyncCall")
            let (set_break_on_async_call : t -> bool -> unit) =
              fun (x699 : t) ->
                fun (x700 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x699) "breakOnAsyncCall"
                    (Ojs.bool_to_js x700)
          end
        module GetStackTraceParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x702 : Ojs.t) -> x702
            and t_to_js : t -> Ojs.t = fun (x701 : Ojs.t) -> x701
            let (get_stack_trace_id : t -> Runtime.StackTraceId.t) =
              fun (x703 : t) ->
                Runtime.StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x703) "stackTraceId")
            let (set_stack_trace_id : t -> Runtime.StackTraceId.t -> unit) =
              fun (x704 : t) ->
                fun (x705 : Runtime.StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x704) "stackTraceId"
                    (Runtime.StackTraceId.t_to_js x705)
          end
        module SearchInContentParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x707 : Ojs.t) -> x707
            and t_to_js : t -> Ojs.t = fun (x706 : Ojs.t) -> x706
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x708 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x708) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x709 : t) ->
                fun (x710 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x709) "scriptId"
                    (Runtime.ScriptId.t_to_js x710)
            let (get_query : t -> string) =
              fun (x711 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x711) "query")
            let (set_query : t -> string -> unit) =
              fun (x712 : t) ->
                fun (x713 : string) ->
                  Ojs.set_prop_ascii (t_to_js x712) "query"
                    (Ojs.string_to_js x713)
            let (get_case_sensitive : t -> bool) =
              fun (x714 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x714) "caseSensitive")
            let (set_case_sensitive : t -> bool -> unit) =
              fun (x715 : t) ->
                fun (x716 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x715) "caseSensitive"
                    (Ojs.bool_to_js x716)
            let (get_is_regex : t -> bool) =
              fun (x717 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x717) "isRegex")
            let (set_is_regex : t -> bool -> unit) =
              fun (x718 : t) ->
                fun (x719 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x718) "isRegex"
                    (Ojs.bool_to_js x719)
          end
        module SetScriptSourceParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x721 : Ojs.t) -> x721
            and t_to_js : t -> Ojs.t = fun (x720 : Ojs.t) -> x720
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x722 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x722) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x723 : t) ->
                fun (x724 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x723) "scriptId"
                    (Runtime.ScriptId.t_to_js x724)
            let (get_script_source : t -> string) =
              fun (x725 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x725) "scriptSource")
            let (set_script_source : t -> string -> unit) =
              fun (x726 : t) ->
                fun (x727 : string) ->
                  Ojs.set_prop_ascii (t_to_js x726) "scriptSource"
                    (Ojs.string_to_js x727)
            let (get_dry_run : t -> bool) =
              fun (x728 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x728) "dryRun")
            let (set_dry_run : t -> bool -> unit) =
              fun (x729 : t) ->
                fun (x730 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x729) "dryRun"
                    (Ojs.bool_to_js x730)
          end
        module RestartFrameParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x732 : Ojs.t) -> x732
            and t_to_js : t -> Ojs.t = fun (x731 : Ojs.t) -> x731
            let (get_call_frame_id : t -> CallFrameId.t) =
              fun (x733 : t) ->
                CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x733) "callFrameId")
            let (set_call_frame_id : t -> CallFrameId.t -> unit) =
              fun (x734 : t) ->
                fun (x735 : CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x734) "callFrameId"
                    (CallFrameId.t_to_js x735)
          end
        module GetScriptSourceParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x737 : Ojs.t) -> x737
            and t_to_js : t -> Ojs.t = fun (x736 : Ojs.t) -> x736
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x738 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x738) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x739 : t) ->
                fun (x740 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x739) "scriptId"
                    (Runtime.ScriptId.t_to_js x740)
          end
        module SetPauseOnExceptionsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x742 : Ojs.t) -> x742
            and t_to_js : t -> Ojs.t = fun (x741 : Ojs.t) -> x741
            let (get_state : t -> string) =
              fun (x743 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x743) "state")
            let (set_state : t -> string -> unit) =
              fun (x744 : t) ->
                fun (x745 : string) ->
                  Ojs.set_prop_ascii (t_to_js x744) "state"
                    (Ojs.string_to_js x745)
          end
        module EvaluateOnCallFrameParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x747 : Ojs.t) -> x747
            and t_to_js : t -> Ojs.t = fun (x746 : Ojs.t) -> x746
            let (get_call_frame_id : t -> CallFrameId.t) =
              fun (x748 : t) ->
                CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x748) "callFrameId")
            let (set_call_frame_id : t -> CallFrameId.t -> unit) =
              fun (x749 : t) ->
                fun (x750 : CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x749) "callFrameId"
                    (CallFrameId.t_to_js x750)
            let (get_expression : t -> string) =
              fun (x751 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x751) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x752 : t) ->
                fun (x753 : string) ->
                  Ojs.set_prop_ascii (t_to_js x752) "expression"
                    (Ojs.string_to_js x753)
            let (get_object_group : t -> string) =
              fun (x754 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x754) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x755 : t) ->
                fun (x756 : string) ->
                  Ojs.set_prop_ascii (t_to_js x755) "objectGroup"
                    (Ojs.string_to_js x756)
            let (get_include_command_line_api : t -> bool) =
              fun (x757 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x757) "includeCommandLineAPI")
            let (set_include_command_line_api : t -> bool -> unit) =
              fun (x758 : t) ->
                fun (x759 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x758) "includeCommandLineAPI"
                    (Ojs.bool_to_js x759)
            let (get_silent : t -> bool) =
              fun (x760 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x760) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x761 : t) ->
                fun (x762 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x761) "silent"
                    (Ojs.bool_to_js x762)
            let (get_return_by_value : t -> bool) =
              fun (x763 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x763) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x764 : t) ->
                fun (x765 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x764) "returnByValue"
                    (Ojs.bool_to_js x765)
            let (get_generate_preview : t -> bool) =
              fun (x766 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x766) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x767 : t) ->
                fun (x768 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x767) "generatePreview"
                    (Ojs.bool_to_js x768)
            let (get_throw_on_side_effect : t -> bool) =
              fun (x769 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x769) "throwOnSideEffect")
            let (set_throw_on_side_effect : t -> bool -> unit) =
              fun (x770 : t) ->
                fun (x771 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x770) "throwOnSideEffect"
                    (Ojs.bool_to_js x771)
          end
        module SetVariableValueParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x773 : Ojs.t) -> x773
            and t_to_js : t -> Ojs.t = fun (x772 : Ojs.t) -> x772
            let (get_scope_number : t -> int) =
              fun (x774 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x774) "scopeNumber")
            let (set_scope_number : t -> int -> unit) =
              fun (x775 : t) ->
                fun (x776 : int) ->
                  Ojs.set_prop_ascii (t_to_js x775) "scopeNumber"
                    (Ojs.int_to_js x776)
            let (get_variable_name : t -> string) =
              fun (x777 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x777) "variableName")
            let (set_variable_name : t -> string -> unit) =
              fun (x778 : t) ->
                fun (x779 : string) ->
                  Ojs.set_prop_ascii (t_to_js x778) "variableName"
                    (Ojs.string_to_js x779)
            let (get_new_value : t -> Runtime.CallArgument.t) =
              fun (x780 : t) ->
                Runtime.CallArgument.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x780) "newValue")
            let (set_new_value : t -> Runtime.CallArgument.t -> unit) =
              fun (x781 : t) ->
                fun (x782 : Runtime.CallArgument.t) ->
                  Ojs.set_prop_ascii (t_to_js x781) "newValue"
                    (Runtime.CallArgument.t_to_js x782)
            let (get_call_frame_id : t -> CallFrameId.t) =
              fun (x783 : t) ->
                CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x783) "callFrameId")
            let (set_call_frame_id : t -> CallFrameId.t -> unit) =
              fun (x784 : t) ->
                fun (x785 : CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x784) "callFrameId"
                    (CallFrameId.t_to_js x785)
          end
        module SetReturnValueParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x787 : Ojs.t) -> x787
            and t_to_js : t -> Ojs.t = fun (x786 : Ojs.t) -> x786
            let (get_new_value : t -> Runtime.CallArgument.t) =
              fun (x788 : t) ->
                Runtime.CallArgument.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x788) "newValue")
            let (set_new_value : t -> Runtime.CallArgument.t -> unit) =
              fun (x789 : t) ->
                fun (x790 : Runtime.CallArgument.t) ->
                  Ojs.set_prop_ascii (t_to_js x789) "newValue"
                    (Runtime.CallArgument.t_to_js x790)
          end
        module SetAsyncCallStackDepthParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x792 : Ojs.t) -> x792
            and t_to_js : t -> Ojs.t = fun (x791 : Ojs.t) -> x791
            let (get_max_depth : t -> int) =
              fun (x793 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x793) "maxDepth")
            let (set_max_depth : t -> int -> unit) =
              fun (x794 : t) ->
                fun (x795 : int) ->
                  Ojs.set_prop_ascii (t_to_js x794) "maxDepth"
                    (Ojs.int_to_js x795)
          end
        module SetBlackboxPatternsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x797 : Ojs.t) -> x797
            and t_to_js : t -> Ojs.t = fun (x796 : Ojs.t) -> x796
            let (get_patterns : t -> string list) =
              fun (x798 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x798) "patterns")
            let (set_patterns : t -> string list -> unit) =
              fun (x800 : t) ->
                fun (x801 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x800) "patterns"
                    (Ojs.list_to_js Ojs.string_to_js x801)
          end
        module SetBlackboxedRangesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x804 : Ojs.t) -> x804
            and t_to_js : t -> Ojs.t = fun (x803 : Ojs.t) -> x803
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x805 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x805) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x806 : t) ->
                fun (x807 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x806) "scriptId"
                    (Runtime.ScriptId.t_to_js x807)
            let (get_positions : t -> ScriptPosition.t list) =
              fun (x808 : t) ->
                Ojs.list_of_js ScriptPosition.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x808) "positions")
            let (set_positions : t -> ScriptPosition.t list -> unit) =
              fun (x810 : t) ->
                fun (x811 : ScriptPosition.t list) ->
                  Ojs.set_prop_ascii (t_to_js x810) "positions"
                    (Ojs.list_to_js ScriptPosition.t_to_js x811)
          end
        module EnableReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x814 : Ojs.t) -> x814
            and t_to_js : t -> Ojs.t = fun (x813 : Ojs.t) -> x813
            let (get_debugger_id : t -> Runtime.UniqueDebuggerId.t) =
              fun (x815 : t) ->
                Runtime.UniqueDebuggerId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x815) "debuggerId")
            let (set_debugger_id : t -> Runtime.UniqueDebuggerId.t -> unit) =
              fun (x816 : t) ->
                fun (x817 : Runtime.UniqueDebuggerId.t) ->
                  Ojs.set_prop_ascii (t_to_js x816) "debuggerId"
                    (Runtime.UniqueDebuggerId.t_to_js x817)
          end
        module SetBreakpointByUrlReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x819 : Ojs.t) -> x819
            and t_to_js : t -> Ojs.t = fun (x818 : Ojs.t) -> x818
            let (get_breakpoint_id : t -> BreakpointId.t) =
              fun (x820 : t) ->
                BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x820) "breakpointId")
            let (set_breakpoint_id : t -> BreakpointId.t -> unit) =
              fun (x821 : t) ->
                fun (x822 : BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x821) "breakpointId"
                    (BreakpointId.t_to_js x822)
            let (get_locations : t -> Location.t list) =
              fun (x823 : t) ->
                Ojs.list_of_js Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x823) "locations")
            let (set_locations : t -> Location.t list -> unit) =
              fun (x825 : t) ->
                fun (x826 : Location.t list) ->
                  Ojs.set_prop_ascii (t_to_js x825) "locations"
                    (Ojs.list_to_js Location.t_to_js x826)
          end
        module SetBreakpointReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x829 : Ojs.t) -> x829
            and t_to_js : t -> Ojs.t = fun (x828 : Ojs.t) -> x828
            let (get_breakpoint_id : t -> BreakpointId.t) =
              fun (x830 : t) ->
                BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x830) "breakpointId")
            let (set_breakpoint_id : t -> BreakpointId.t -> unit) =
              fun (x831 : t) ->
                fun (x832 : BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x831) "breakpointId"
                    (BreakpointId.t_to_js x832)
            let (get_actual_location : t -> Location.t) =
              fun (x833 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x833) "actualLocation")
            let (set_actual_location : t -> Location.t -> unit) =
              fun (x834 : t) ->
                fun (x835 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x834) "actualLocation"
                    (Location.t_to_js x835)
          end
        module GetPossibleBreakpointsReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x837 : Ojs.t) -> x837
            and t_to_js : t -> Ojs.t = fun (x836 : Ojs.t) -> x836
            let (get_locations : t -> BreakLocation.t list) =
              fun (x838 : t) ->
                Ojs.list_of_js BreakLocation.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x838) "locations")
            let (set_locations : t -> BreakLocation.t list -> unit) =
              fun (x840 : t) ->
                fun (x841 : BreakLocation.t list) ->
                  Ojs.set_prop_ascii (t_to_js x840) "locations"
                    (Ojs.list_to_js BreakLocation.t_to_js x841)
          end
        module GetStackTraceReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x844 : Ojs.t) -> x844
            and t_to_js : t -> Ojs.t = fun (x843 : Ojs.t) -> x843
            let (get_stack_trace : t -> Runtime.StackTrace.t) =
              fun (x845 : t) ->
                Runtime.StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x845) "stackTrace")
            let (set_stack_trace : t -> Runtime.StackTrace.t -> unit) =
              fun (x846 : t) ->
                fun (x847 : Runtime.StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x846) "stackTrace"
                    (Runtime.StackTrace.t_to_js x847)
          end
        module SearchInContentReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x849 : Ojs.t) -> x849
            and t_to_js : t -> Ojs.t = fun (x848 : Ojs.t) -> x848
            let (get_result : t -> SearchMatch.t list) =
              fun (x850 : t) ->
                Ojs.list_of_js SearchMatch.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x850) "result")
            let (set_result : t -> SearchMatch.t list -> unit) =
              fun (x852 : t) ->
                fun (x853 : SearchMatch.t list) ->
                  Ojs.set_prop_ascii (t_to_js x852) "result"
                    (Ojs.list_to_js SearchMatch.t_to_js x853)
          end
        module SetScriptSourceReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x856 : Ojs.t) -> x856
            and t_to_js : t -> Ojs.t = fun (x855 : Ojs.t) -> x855
            let (get_call_frames : t -> CallFrame.t list) =
              fun (x857 : t) ->
                Ojs.list_of_js CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x857) "callFrames")
            let (set_call_frames : t -> CallFrame.t list -> unit) =
              fun (x859 : t) ->
                fun (x860 : CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x859) "callFrames"
                    (Ojs.list_to_js CallFrame.t_to_js x860)
            let (get_stack_changed : t -> bool) =
              fun (x862 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x862) "stackChanged")
            let (set_stack_changed : t -> bool -> unit) =
              fun (x863 : t) ->
                fun (x864 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x863) "stackChanged"
                    (Ojs.bool_to_js x864)
            let (get_async_stack_trace : t -> Runtime.StackTrace.t) =
              fun (x865 : t) ->
                Runtime.StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x865) "asyncStackTrace")
            let (set_async_stack_trace : t -> Runtime.StackTrace.t -> unit) =
              fun (x866 : t) ->
                fun (x867 : Runtime.StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x866) "asyncStackTrace"
                    (Runtime.StackTrace.t_to_js x867)
            let (get_async_stack_trace_id : t -> Runtime.StackTraceId.t) =
              fun (x868 : t) ->
                Runtime.StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x868) "asyncStackTraceId")
            let (set_async_stack_trace_id :
              t -> Runtime.StackTraceId.t -> unit) =
              fun (x869 : t) ->
                fun (x870 : Runtime.StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x869) "asyncStackTraceId"
                    (Runtime.StackTraceId.t_to_js x870)
            let (get_exception_details : t -> Runtime.ExceptionDetails.t) =
              fun (x871 : t) ->
                Runtime.ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x871) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime.ExceptionDetails.t -> unit) =
              fun (x872 : t) ->
                fun (x873 : Runtime.ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x872) "exceptionDetails"
                    (Runtime.ExceptionDetails.t_to_js x873)
          end
        module RestartFrameReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x875 : Ojs.t) -> x875
            and t_to_js : t -> Ojs.t = fun (x874 : Ojs.t) -> x874
            let (get_call_frames : t -> CallFrame.t list) =
              fun (x876 : t) ->
                Ojs.list_of_js CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x876) "callFrames")
            let (set_call_frames : t -> CallFrame.t list -> unit) =
              fun (x878 : t) ->
                fun (x879 : CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x878) "callFrames"
                    (Ojs.list_to_js CallFrame.t_to_js x879)
            let (get_async_stack_trace : t -> Runtime.StackTrace.t) =
              fun (x881 : t) ->
                Runtime.StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x881) "asyncStackTrace")
            let (set_async_stack_trace : t -> Runtime.StackTrace.t -> unit) =
              fun (x882 : t) ->
                fun (x883 : Runtime.StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x882) "asyncStackTrace"
                    (Runtime.StackTrace.t_to_js x883)
            let (get_async_stack_trace_id : t -> Runtime.StackTraceId.t) =
              fun (x884 : t) ->
                Runtime.StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x884) "asyncStackTraceId")
            let (set_async_stack_trace_id :
              t -> Runtime.StackTraceId.t -> unit) =
              fun (x885 : t) ->
                fun (x886 : Runtime.StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x885) "asyncStackTraceId"
                    (Runtime.StackTraceId.t_to_js x886)
          end
        module GetScriptSourceReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x888 : Ojs.t) -> x888
            and t_to_js : t -> Ojs.t = fun (x887 : Ojs.t) -> x887
            let (get_script_source : t -> string) =
              fun (x889 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x889) "scriptSource")
            let (set_script_source : t -> string -> unit) =
              fun (x890 : t) ->
                fun (x891 : string) ->
                  Ojs.set_prop_ascii (t_to_js x890) "scriptSource"
                    (Ojs.string_to_js x891)
          end
        module EvaluateOnCallFrameReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x893 : Ojs.t) -> x893
            and t_to_js : t -> Ojs.t = fun (x892 : Ojs.t) -> x892
            let (get_result : t -> Runtime.RemoteObject.t) =
              fun (x894 : t) ->
                Runtime.RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x894) "result")
            let (set_result : t -> Runtime.RemoteObject.t -> unit) =
              fun (x895 : t) ->
                fun (x896 : Runtime.RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x895) "result"
                    (Runtime.RemoteObject.t_to_js x896)
            let (get_exception_details : t -> Runtime.ExceptionDetails.t) =
              fun (x897 : t) ->
                Runtime.ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x897) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime.ExceptionDetails.t -> unit) =
              fun (x898 : t) ->
                fun (x899 : Runtime.ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x898) "exceptionDetails"
                    (Runtime.ExceptionDetails.t_to_js x899)
          end
        module ScriptParsedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x901 : Ojs.t) -> x901
            and t_to_js : t -> Ojs.t = fun (x900 : Ojs.t) -> x900
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x902 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x902) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x903 : t) ->
                fun (x904 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x903) "scriptId"
                    (Runtime.ScriptId.t_to_js x904)
            let (get_url : t -> string) =
              fun (x905 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x905) "url")
            let (set_url : t -> string -> unit) =
              fun (x906 : t) ->
                fun (x907 : string) ->
                  Ojs.set_prop_ascii (t_to_js x906) "url"
                    (Ojs.string_to_js x907)
            let (get_start_line : t -> int) =
              fun (x908 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x908) "startLine")
            let (set_start_line : t -> int -> unit) =
              fun (x909 : t) ->
                fun (x910 : int) ->
                  Ojs.set_prop_ascii (t_to_js x909) "startLine"
                    (Ojs.int_to_js x910)
            let (get_start_column : t -> int) =
              fun (x911 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x911) "startColumn")
            let (set_start_column : t -> int -> unit) =
              fun (x912 : t) ->
                fun (x913 : int) ->
                  Ojs.set_prop_ascii (t_to_js x912) "startColumn"
                    (Ojs.int_to_js x913)
            let (get_end_line : t -> int) =
              fun (x914 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x914) "endLine")
            let (set_end_line : t -> int -> unit) =
              fun (x915 : t) ->
                fun (x916 : int) ->
                  Ojs.set_prop_ascii (t_to_js x915) "endLine"
                    (Ojs.int_to_js x916)
            let (get_end_column : t -> int) =
              fun (x917 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x917) "endColumn")
            let (set_end_column : t -> int -> unit) =
              fun (x918 : t) ->
                fun (x919 : int) ->
                  Ojs.set_prop_ascii (t_to_js x918) "endColumn"
                    (Ojs.int_to_js x919)
            let (get_execution_context_id :
              t -> Runtime.ExecutionContextId.t) =
              fun (x920 : t) ->
                Runtime.ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x920) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime.ExecutionContextId.t -> unit) =
              fun (x921 : t) ->
                fun (x922 : Runtime.ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x921) "executionContextId"
                    (Runtime.ExecutionContextId.t_to_js x922)
            let (get_hash : t -> string) =
              fun (x923 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x923) "hash")
            let (set_hash : t -> string -> unit) =
              fun (x924 : t) ->
                fun (x925 : string) ->
                  Ojs.set_prop_ascii (t_to_js x924) "hash"
                    (Ojs.string_to_js x925)
            let (get_execution_context_aux_data : t -> AnonymousInterface0.t)
              =
              fun (x926 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x926)
                     "executionContextAuxData")
            let (set_execution_context_aux_data :
              t -> AnonymousInterface0.t -> unit) =
              fun (x927 : t) ->
                fun (x928 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x927) "executionContextAuxData"
                    (AnonymousInterface0.t_to_js x928)
            let (get_is_live_edit : t -> bool) =
              fun (x929 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x929) "isLiveEdit")
            let (set_is_live_edit : t -> bool -> unit) =
              fun (x930 : t) ->
                fun (x931 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x930) "isLiveEdit"
                    (Ojs.bool_to_js x931)
            let (get_source_map_url : t -> string) =
              fun (x932 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x932) "sourceMapURL")
            let (set_source_map_url : t -> string -> unit) =
              fun (x933 : t) ->
                fun (x934 : string) ->
                  Ojs.set_prop_ascii (t_to_js x933) "sourceMapURL"
                    (Ojs.string_to_js x934)
            let (get_has_source_url : t -> bool) =
              fun (x935 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x935) "hasSourceURL")
            let (set_has_source_url : t -> bool -> unit) =
              fun (x936 : t) ->
                fun (x937 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x936) "hasSourceURL"
                    (Ojs.bool_to_js x937)
            let (get_is_module : t -> bool) =
              fun (x938 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x938) "isModule")
            let (set_is_module : t -> bool -> unit) =
              fun (x939 : t) ->
                fun (x940 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x939) "isModule"
                    (Ojs.bool_to_js x940)
            let (get_length : t -> int) =
              fun (x941 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x941) "length")
            let (set_length : t -> int -> unit) =
              fun (x942 : t) ->
                fun (x943 : int) ->
                  Ojs.set_prop_ascii (t_to_js x942) "length"
                    (Ojs.int_to_js x943)
            let (get_stack_trace : t -> Runtime.StackTrace.t) =
              fun (x944 : t) ->
                Runtime.StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x944) "stackTrace")
            let (set_stack_trace : t -> Runtime.StackTrace.t -> unit) =
              fun (x945 : t) ->
                fun (x946 : Runtime.StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x945) "stackTrace"
                    (Runtime.StackTrace.t_to_js x946)
          end
        module ScriptFailedToParseEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x948 : Ojs.t) -> x948
            and t_to_js : t -> Ojs.t = fun (x947 : Ojs.t) -> x947
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x949 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x949) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x950 : t) ->
                fun (x951 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x950) "scriptId"
                    (Runtime.ScriptId.t_to_js x951)
            let (get_url : t -> string) =
              fun (x952 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x952) "url")
            let (set_url : t -> string -> unit) =
              fun (x953 : t) ->
                fun (x954 : string) ->
                  Ojs.set_prop_ascii (t_to_js x953) "url"
                    (Ojs.string_to_js x954)
            let (get_start_line : t -> int) =
              fun (x955 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x955) "startLine")
            let (set_start_line : t -> int -> unit) =
              fun (x956 : t) ->
                fun (x957 : int) ->
                  Ojs.set_prop_ascii (t_to_js x956) "startLine"
                    (Ojs.int_to_js x957)
            let (get_start_column : t -> int) =
              fun (x958 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x958) "startColumn")
            let (set_start_column : t -> int -> unit) =
              fun (x959 : t) ->
                fun (x960 : int) ->
                  Ojs.set_prop_ascii (t_to_js x959) "startColumn"
                    (Ojs.int_to_js x960)
            let (get_end_line : t -> int) =
              fun (x961 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x961) "endLine")
            let (set_end_line : t -> int -> unit) =
              fun (x962 : t) ->
                fun (x963 : int) ->
                  Ojs.set_prop_ascii (t_to_js x962) "endLine"
                    (Ojs.int_to_js x963)
            let (get_end_column : t -> int) =
              fun (x964 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x964) "endColumn")
            let (set_end_column : t -> int -> unit) =
              fun (x965 : t) ->
                fun (x966 : int) ->
                  Ojs.set_prop_ascii (t_to_js x965) "endColumn"
                    (Ojs.int_to_js x966)
            let (get_execution_context_id :
              t -> Runtime.ExecutionContextId.t) =
              fun (x967 : t) ->
                Runtime.ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x967) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime.ExecutionContextId.t -> unit) =
              fun (x968 : t) ->
                fun (x969 : Runtime.ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x968) "executionContextId"
                    (Runtime.ExecutionContextId.t_to_js x969)
            let (get_hash : t -> string) =
              fun (x970 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x970) "hash")
            let (set_hash : t -> string -> unit) =
              fun (x971 : t) ->
                fun (x972 : string) ->
                  Ojs.set_prop_ascii (t_to_js x971) "hash"
                    (Ojs.string_to_js x972)
            let (get_execution_context_aux_data : t -> AnonymousInterface0.t)
              =
              fun (x973 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x973)
                     "executionContextAuxData")
            let (set_execution_context_aux_data :
              t -> AnonymousInterface0.t -> unit) =
              fun (x974 : t) ->
                fun (x975 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x974) "executionContextAuxData"
                    (AnonymousInterface0.t_to_js x975)
            let (get_source_map_url : t -> string) =
              fun (x976 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x976) "sourceMapURL")
            let (set_source_map_url : t -> string -> unit) =
              fun (x977 : t) ->
                fun (x978 : string) ->
                  Ojs.set_prop_ascii (t_to_js x977) "sourceMapURL"
                    (Ojs.string_to_js x978)
            let (get_has_source_url : t -> bool) =
              fun (x979 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x979) "hasSourceURL")
            let (set_has_source_url : t -> bool -> unit) =
              fun (x980 : t) ->
                fun (x981 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x980) "hasSourceURL"
                    (Ojs.bool_to_js x981)
            let (get_is_module : t -> bool) =
              fun (x982 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x982) "isModule")
            let (set_is_module : t -> bool -> unit) =
              fun (x983 : t) ->
                fun (x984 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x983) "isModule"
                    (Ojs.bool_to_js x984)
            let (get_length : t -> int) =
              fun (x985 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x985) "length")
            let (set_length : t -> int -> unit) =
              fun (x986 : t) ->
                fun (x987 : int) ->
                  Ojs.set_prop_ascii (t_to_js x986) "length"
                    (Ojs.int_to_js x987)
            let (get_stack_trace : t -> Runtime.StackTrace.t) =
              fun (x988 : t) ->
                Runtime.StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x988) "stackTrace")
            let (set_stack_trace : t -> Runtime.StackTrace.t -> unit) =
              fun (x989 : t) ->
                fun (x990 : Runtime.StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x989) "stackTrace"
                    (Runtime.StackTrace.t_to_js x990)
          end
        module BreakpointResolvedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x992 : Ojs.t) -> x992
            and t_to_js : t -> Ojs.t = fun (x991 : Ojs.t) -> x991
            let (get_breakpoint_id : t -> BreakpointId.t) =
              fun (x993 : t) ->
                BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x993) "breakpointId")
            let (set_breakpoint_id : t -> BreakpointId.t -> unit) =
              fun (x994 : t) ->
                fun (x995 : BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x994) "breakpointId"
                    (BreakpointId.t_to_js x995)
            let (get_location : t -> Location.t) =
              fun (x996 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x996) "location")
            let (set_location : t -> Location.t -> unit) =
              fun (x997 : t) ->
                fun (x998 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x997) "location"
                    (Location.t_to_js x998)
          end
        module PausedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1000 : Ojs.t) -> x1000
            and t_to_js : t -> Ojs.t = fun (x999 : Ojs.t) -> x999
            let (get_call_frames : t -> CallFrame.t list) =
              fun (x1001 : t) ->
                Ojs.list_of_js CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1001) "callFrames")
            let (set_call_frames : t -> CallFrame.t list -> unit) =
              fun (x1003 : t) ->
                fun (x1004 : CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1003) "callFrames"
                    (Ojs.list_to_js CallFrame.t_to_js x1004)
            let (get_reason : t -> string) =
              fun (x1006 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1006) "reason")
            let (set_reason : t -> string -> unit) =
              fun (x1007 : t) ->
                fun (x1008 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1007) "reason"
                    (Ojs.string_to_js x1008)
            let (get_data : t -> AnonymousInterface0.t) =
              fun (x1009 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1009) "data")
            let (set_data : t -> AnonymousInterface0.t -> unit) =
              fun (x1010 : t) ->
                fun (x1011 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x1010) "data"
                    (AnonymousInterface0.t_to_js x1011)
            let (get_hit_breakpoints : t -> string list) =
              fun (x1012 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1012) "hitBreakpoints")
            let (set_hit_breakpoints : t -> string list -> unit) =
              fun (x1014 : t) ->
                fun (x1015 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1014) "hitBreakpoints"
                    (Ojs.list_to_js Ojs.string_to_js x1015)
            let (get_async_stack_trace : t -> Runtime.StackTrace.t) =
              fun (x1017 : t) ->
                Runtime.StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1017) "asyncStackTrace")
            let (set_async_stack_trace : t -> Runtime.StackTrace.t -> unit) =
              fun (x1018 : t) ->
                fun (x1019 : Runtime.StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x1018) "asyncStackTrace"
                    (Runtime.StackTrace.t_to_js x1019)
            let (get_async_stack_trace_id : t -> Runtime.StackTraceId.t) =
              fun (x1020 : t) ->
                Runtime.StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1020) "asyncStackTraceId")
            let (set_async_stack_trace_id :
              t -> Runtime.StackTraceId.t -> unit) =
              fun (x1021 : t) ->
                fun (x1022 : Runtime.StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1021) "asyncStackTraceId"
                    (Runtime.StackTraceId.t_to_js x1022)
            let (get_async_call_stack_trace_id : t -> Runtime.StackTraceId.t)
              =
              fun (x1023 : t) ->
                Runtime.StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1023) "asyncCallStackTraceId")
            let (set_async_call_stack_trace_id :
              t -> Runtime.StackTraceId.t -> unit) =
              fun (x1024 : t) ->
                fun (x1025 : Runtime.StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1024) "asyncCallStackTraceId"
                    (Runtime.StackTraceId.t_to_js x1025)
          end
      end
    module Console =
      struct
        module ConsoleMessage =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1027 : Ojs.t) -> x1027
            and t_to_js : t -> Ojs.t = fun (x1026 : Ojs.t) -> x1026
            let (get_source : t -> string) =
              fun (x1028 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1028) "source")
            let (set_source : t -> string -> unit) =
              fun (x1029 : t) ->
                fun (x1030 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1029) "source"
                    (Ojs.string_to_js x1030)
            let (get_level : t -> string) =
              fun (x1031 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1031) "level")
            let (set_level : t -> string -> unit) =
              fun (x1032 : t) ->
                fun (x1033 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1032) "level"
                    (Ojs.string_to_js x1033)
            let (get_text : t -> string) =
              fun (x1034 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1034) "text")
            let (set_text : t -> string -> unit) =
              fun (x1035 : t) ->
                fun (x1036 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1035) "text"
                    (Ojs.string_to_js x1036)
            let (get_url : t -> string) =
              fun (x1037 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1037) "url")
            let (set_url : t -> string -> unit) =
              fun (x1038 : t) ->
                fun (x1039 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1038) "url"
                    (Ojs.string_to_js x1039)
            let (get_line : t -> int) =
              fun (x1040 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1040) "line")
            let (set_line : t -> int -> unit) =
              fun (x1041 : t) ->
                fun (x1042 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1041) "line"
                    (Ojs.int_to_js x1042)
            let (get_column : t -> int) =
              fun (x1043 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1043) "column")
            let (set_column : t -> int -> unit) =
              fun (x1044 : t) ->
                fun (x1045 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1044) "column"
                    (Ojs.int_to_js x1045)
          end
        module MessageAddedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1047 : Ojs.t) -> x1047
            and t_to_js : t -> Ojs.t = fun (x1046 : Ojs.t) -> x1046
            let (get_message : t -> ConsoleMessage.t) =
              fun (x1048 : t) ->
                ConsoleMessage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1048) "message")
            let (set_message : t -> ConsoleMessage.t -> unit) =
              fun (x1049 : t) ->
                fun (x1050 : ConsoleMessage.t) ->
                  Ojs.set_prop_ascii (t_to_js x1049) "message"
                    (ConsoleMessage.t_to_js x1050)
          end
      end
    module Profiler =
      struct
        module PositionTickInfo =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1052 : Ojs.t) -> x1052
            and t_to_js : t -> Ojs.t = fun (x1051 : Ojs.t) -> x1051
            let (get_line : t -> int) =
              fun (x1053 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1053) "line")
            let (set_line : t -> int -> unit) =
              fun (x1054 : t) ->
                fun (x1055 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1054) "line"
                    (Ojs.int_to_js x1055)
            let (get_ticks : t -> int) =
              fun (x1056 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1056) "ticks")
            let (set_ticks : t -> int -> unit) =
              fun (x1057 : t) ->
                fun (x1058 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1057) "ticks"
                    (Ojs.int_to_js x1058)
          end
        module ProfileNode =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1060 : Ojs.t) -> x1060
            and t_to_js : t -> Ojs.t = fun (x1059 : Ojs.t) -> x1059
            let (get_id : t -> int) =
              fun (x1061 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1061) "id")
            let (set_id : t -> int -> unit) =
              fun (x1062 : t) ->
                fun (x1063 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1062) "id"
                    (Ojs.int_to_js x1063)
            let (get_call_frame : t -> Runtime.CallFrame.t) =
              fun (x1064 : t) ->
                Runtime.CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1064) "callFrame")
            let (set_call_frame : t -> Runtime.CallFrame.t -> unit) =
              fun (x1065 : t) ->
                fun (x1066 : Runtime.CallFrame.t) ->
                  Ojs.set_prop_ascii (t_to_js x1065) "callFrame"
                    (Runtime.CallFrame.t_to_js x1066)
            let (get_hit_count : t -> int) =
              fun (x1067 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1067) "hitCount")
            let (set_hit_count : t -> int -> unit) =
              fun (x1068 : t) ->
                fun (x1069 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1068) "hitCount"
                    (Ojs.int_to_js x1069)
            let (get_children : t -> int list) =
              fun (x1070 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1070) "children")
            let (set_children : t -> int list -> unit) =
              fun (x1072 : t) ->
                fun (x1073 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1072) "children"
                    (Ojs.list_to_js Ojs.int_to_js x1073)
            let (get_deopt_reason : t -> string) =
              fun (x1075 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1075) "deoptReason")
            let (set_deopt_reason : t -> string -> unit) =
              fun (x1076 : t) ->
                fun (x1077 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1076) "deoptReason"
                    (Ojs.string_to_js x1077)
            let (get_position_ticks : t -> PositionTickInfo.t list) =
              fun (x1078 : t) ->
                Ojs.list_of_js PositionTickInfo.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1078) "positionTicks")
            let (set_position_ticks : t -> PositionTickInfo.t list -> unit) =
              fun (x1080 : t) ->
                fun (x1081 : PositionTickInfo.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1080) "positionTicks"
                    (Ojs.list_to_js PositionTickInfo.t_to_js x1081)
          end
        module Profile =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1084 : Ojs.t) -> x1084
            and t_to_js : t -> Ojs.t = fun (x1083 : Ojs.t) -> x1083
            let (get_nodes : t -> ProfileNode.t list) =
              fun (x1085 : t) ->
                Ojs.list_of_js ProfileNode.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1085) "nodes")
            let (set_nodes : t -> ProfileNode.t list -> unit) =
              fun (x1087 : t) ->
                fun (x1088 : ProfileNode.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1087) "nodes"
                    (Ojs.list_to_js ProfileNode.t_to_js x1088)
            let (get_start_time : t -> int) =
              fun (x1090 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1090) "startTime")
            let (set_start_time : t -> int -> unit) =
              fun (x1091 : t) ->
                fun (x1092 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1091) "startTime"
                    (Ojs.int_to_js x1092)
            let (get_end_time : t -> int) =
              fun (x1093 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1093) "endTime")
            let (set_end_time : t -> int -> unit) =
              fun (x1094 : t) ->
                fun (x1095 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1094) "endTime"
                    (Ojs.int_to_js x1095)
            let (get_samples : t -> int list) =
              fun (x1096 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1096) "samples")
            let (set_samples : t -> int list -> unit) =
              fun (x1098 : t) ->
                fun (x1099 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1098) "samples"
                    (Ojs.list_to_js Ojs.int_to_js x1099)
            let (get_time_deltas : t -> int list) =
              fun (x1101 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1101) "timeDeltas")
            let (set_time_deltas : t -> int list -> unit) =
              fun (x1103 : t) ->
                fun (x1104 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1103) "timeDeltas"
                    (Ojs.list_to_js Ojs.int_to_js x1104)
          end
        module CoverageRange =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1107 : Ojs.t) -> x1107
            and t_to_js : t -> Ojs.t = fun (x1106 : Ojs.t) -> x1106
            let (get_start_offset : t -> int) =
              fun (x1108 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1108) "startOffset")
            let (set_start_offset : t -> int -> unit) =
              fun (x1109 : t) ->
                fun (x1110 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1109) "startOffset"
                    (Ojs.int_to_js x1110)
            let (get_end_offset : t -> int) =
              fun (x1111 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1111) "endOffset")
            let (set_end_offset : t -> int -> unit) =
              fun (x1112 : t) ->
                fun (x1113 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1112) "endOffset"
                    (Ojs.int_to_js x1113)
            let (get_count : t -> int) =
              fun (x1114 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1114) "count")
            let (set_count : t -> int -> unit) =
              fun (x1115 : t) ->
                fun (x1116 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1115) "count"
                    (Ojs.int_to_js x1116)
          end
        module FunctionCoverage =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1118 : Ojs.t) -> x1118
            and t_to_js : t -> Ojs.t = fun (x1117 : Ojs.t) -> x1117
            let (get_function_name : t -> string) =
              fun (x1119 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1119) "functionName")
            let (set_function_name : t -> string -> unit) =
              fun (x1120 : t) ->
                fun (x1121 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1120) "functionName"
                    (Ojs.string_to_js x1121)
            let (get_ranges : t -> CoverageRange.t list) =
              fun (x1122 : t) ->
                Ojs.list_of_js CoverageRange.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1122) "ranges")
            let (set_ranges : t -> CoverageRange.t list -> unit) =
              fun (x1124 : t) ->
                fun (x1125 : CoverageRange.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1124) "ranges"
                    (Ojs.list_to_js CoverageRange.t_to_js x1125)
            let (get_is_block_coverage : t -> bool) =
              fun (x1127 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1127) "isBlockCoverage")
            let (set_is_block_coverage : t -> bool -> unit) =
              fun (x1128 : t) ->
                fun (x1129 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1128) "isBlockCoverage"
                    (Ojs.bool_to_js x1129)
          end
        module ScriptCoverage =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1131 : Ojs.t) -> x1131
            and t_to_js : t -> Ojs.t = fun (x1130 : Ojs.t) -> x1130
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x1132 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1132) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x1133 : t) ->
                fun (x1134 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1133) "scriptId"
                    (Runtime.ScriptId.t_to_js x1134)
            let (get_url : t -> string) =
              fun (x1135 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1135) "url")
            let (set_url : t -> string -> unit) =
              fun (x1136 : t) ->
                fun (x1137 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1136) "url"
                    (Ojs.string_to_js x1137)
            let (get_functions : t -> FunctionCoverage.t list) =
              fun (x1138 : t) ->
                Ojs.list_of_js FunctionCoverage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1138) "functions")
            let (set_functions : t -> FunctionCoverage.t list -> unit) =
              fun (x1140 : t) ->
                fun (x1141 : FunctionCoverage.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1140) "functions"
                    (Ojs.list_to_js FunctionCoverage.t_to_js x1141)
          end
        module TypeObject =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1144 : Ojs.t) -> x1144
            and t_to_js : t -> Ojs.t = fun (x1143 : Ojs.t) -> x1143
            let (get_name : t -> string) =
              fun (x1145 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1145) "name")
            let (set_name : t -> string -> unit) =
              fun (x1146 : t) ->
                fun (x1147 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1146) "name"
                    (Ojs.string_to_js x1147)
          end
        module TypeProfileEntry =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1149 : Ojs.t) -> x1149
            and t_to_js : t -> Ojs.t = fun (x1148 : Ojs.t) -> x1148
            let (get_offset : t -> int) =
              fun (x1150 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1150) "offset")
            let (set_offset : t -> int -> unit) =
              fun (x1151 : t) ->
                fun (x1152 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1151) "offset"
                    (Ojs.int_to_js x1152)
            let (get_types : t -> TypeObject.t list) =
              fun (x1153 : t) ->
                Ojs.list_of_js TypeObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1153) "types")
            let (set_types : t -> TypeObject.t list -> unit) =
              fun (x1155 : t) ->
                fun (x1156 : TypeObject.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1155) "types"
                    (Ojs.list_to_js TypeObject.t_to_js x1156)
          end
        module ScriptTypeProfile =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1159 : Ojs.t) -> x1159
            and t_to_js : t -> Ojs.t = fun (x1158 : Ojs.t) -> x1158
            let (get_script_id : t -> Runtime.ScriptId.t) =
              fun (x1160 : t) ->
                Runtime.ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1160) "scriptId")
            let (set_script_id : t -> Runtime.ScriptId.t -> unit) =
              fun (x1161 : t) ->
                fun (x1162 : Runtime.ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1161) "scriptId"
                    (Runtime.ScriptId.t_to_js x1162)
            let (get_url : t -> string) =
              fun (x1163 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1163) "url")
            let (set_url : t -> string -> unit) =
              fun (x1164 : t) ->
                fun (x1165 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1164) "url"
                    (Ojs.string_to_js x1165)
            let (get_entries : t -> TypeProfileEntry.t list) =
              fun (x1166 : t) ->
                Ojs.list_of_js TypeProfileEntry.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1166) "entries")
            let (set_entries : t -> TypeProfileEntry.t list -> unit) =
              fun (x1168 : t) ->
                fun (x1169 : TypeProfileEntry.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1168) "entries"
                    (Ojs.list_to_js TypeProfileEntry.t_to_js x1169)
          end
        module SetSamplingIntervalParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1172 : Ojs.t) -> x1172
            and t_to_js : t -> Ojs.t = fun (x1171 : Ojs.t) -> x1171
            let (get_interval : t -> int) =
              fun (x1173 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1173) "interval")
            let (set_interval : t -> int -> unit) =
              fun (x1174 : t) ->
                fun (x1175 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1174) "interval"
                    (Ojs.int_to_js x1175)
          end
        module StartPreciseCoverageParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1177 : Ojs.t) -> x1177
            and t_to_js : t -> Ojs.t = fun (x1176 : Ojs.t) -> x1176
            let (get_call_count : t -> bool) =
              fun (x1178 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1178) "callCount")
            let (set_call_count : t -> bool -> unit) =
              fun (x1179 : t) ->
                fun (x1180 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1179) "callCount"
                    (Ojs.bool_to_js x1180)
            let (get_detailed : t -> bool) =
              fun (x1181 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1181) "detailed")
            let (set_detailed : t -> bool -> unit) =
              fun (x1182 : t) ->
                fun (x1183 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1182) "detailed"
                    (Ojs.bool_to_js x1183)
          end
        module StopReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1185 : Ojs.t) -> x1185
            and t_to_js : t -> Ojs.t = fun (x1184 : Ojs.t) -> x1184
            let (get_profile : t -> Profile.t) =
              fun (x1186 : t) ->
                Profile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1186) "profile")
            let (set_profile : t -> Profile.t -> unit) =
              fun (x1187 : t) ->
                fun (x1188 : Profile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1187) "profile"
                    (Profile.t_to_js x1188)
          end
        module TakePreciseCoverageReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1190 : Ojs.t) -> x1190
            and t_to_js : t -> Ojs.t = fun (x1189 : Ojs.t) -> x1189
            let (get_result : t -> ScriptCoverage.t list) =
              fun (x1191 : t) ->
                Ojs.list_of_js ScriptCoverage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1191) "result")
            let (set_result : t -> ScriptCoverage.t list -> unit) =
              fun (x1193 : t) ->
                fun (x1194 : ScriptCoverage.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1193) "result"
                    (Ojs.list_to_js ScriptCoverage.t_to_js x1194)
          end
        module GetBestEffortCoverageReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1197 : Ojs.t) -> x1197
            and t_to_js : t -> Ojs.t = fun (x1196 : Ojs.t) -> x1196
            let (get_result : t -> ScriptCoverage.t list) =
              fun (x1198 : t) ->
                Ojs.list_of_js ScriptCoverage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1198) "result")
            let (set_result : t -> ScriptCoverage.t list -> unit) =
              fun (x1200 : t) ->
                fun (x1201 : ScriptCoverage.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1200) "result"
                    (Ojs.list_to_js ScriptCoverage.t_to_js x1201)
          end
        module TakeTypeProfileReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1204 : Ojs.t) -> x1204
            and t_to_js : t -> Ojs.t = fun (x1203 : Ojs.t) -> x1203
            let (get_result : t -> ScriptTypeProfile.t list) =
              fun (x1205 : t) ->
                Ojs.list_of_js ScriptTypeProfile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1205) "result")
            let (set_result : t -> ScriptTypeProfile.t list -> unit) =
              fun (x1207 : t) ->
                fun (x1208 : ScriptTypeProfile.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1207) "result"
                    (Ojs.list_to_js ScriptTypeProfile.t_to_js x1208)
          end
        module ConsoleProfileStartedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1211 : Ojs.t) -> x1211
            and t_to_js : t -> Ojs.t = fun (x1210 : Ojs.t) -> x1210
            let (get_id : t -> string) =
              fun (x1212 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1212) "id")
            let (set_id : t -> string -> unit) =
              fun (x1213 : t) ->
                fun (x1214 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1213) "id"
                    (Ojs.string_to_js x1214)
            let (get_location : t -> Debugger.Location.t) =
              fun (x1215 : t) ->
                Debugger.Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1215) "location")
            let (set_location : t -> Debugger.Location.t -> unit) =
              fun (x1216 : t) ->
                fun (x1217 : Debugger.Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x1216) "location"
                    (Debugger.Location.t_to_js x1217)
            let (get_title : t -> string) =
              fun (x1218 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1218) "title")
            let (set_title : t -> string -> unit) =
              fun (x1219 : t) ->
                fun (x1220 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1219) "title"
                    (Ojs.string_to_js x1220)
          end
        module ConsoleProfileFinishedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1222 : Ojs.t) -> x1222
            and t_to_js : t -> Ojs.t = fun (x1221 : Ojs.t) -> x1221
            let (get_id : t -> string) =
              fun (x1223 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1223) "id")
            let (set_id : t -> string -> unit) =
              fun (x1224 : t) ->
                fun (x1225 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1224) "id"
                    (Ojs.string_to_js x1225)
            let (get_location : t -> Debugger.Location.t) =
              fun (x1226 : t) ->
                Debugger.Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1226) "location")
            let (set_location : t -> Debugger.Location.t -> unit) =
              fun (x1227 : t) ->
                fun (x1228 : Debugger.Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x1227) "location"
                    (Debugger.Location.t_to_js x1228)
            let (get_profile : t -> Profile.t) =
              fun (x1229 : t) ->
                Profile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1229) "profile")
            let (set_profile : t -> Profile.t -> unit) =
              fun (x1230 : t) ->
                fun (x1231 : Profile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1230) "profile"
                    (Profile.t_to_js x1231)
            let (get_title : t -> string) =
              fun (x1232 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1232) "title")
            let (set_title : t -> string -> unit) =
              fun (x1233 : t) ->
                fun (x1234 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1233) "title"
                    (Ojs.string_to_js x1234)
          end
      end
    module HeapProfiler =
      struct
        module HeapSnapshotObjectId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x1236 : Ojs.t) -> Ojs.string_of_js x1236
            and t_to_js : t -> Ojs.t =
              fun (x1235 : string) -> Ojs.string_to_js x1235
          end
        module SamplingHeapProfileNode =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1238 : Ojs.t) -> x1238
            and t_to_js : t -> Ojs.t = fun (x1237 : Ojs.t) -> x1237
            let (get_call_frame : t -> Runtime.CallFrame.t) =
              fun (x1239 : t) ->
                Runtime.CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1239) "callFrame")
            let (set_call_frame : t -> Runtime.CallFrame.t -> unit) =
              fun (x1240 : t) ->
                fun (x1241 : Runtime.CallFrame.t) ->
                  Ojs.set_prop_ascii (t_to_js x1240) "callFrame"
                    (Runtime.CallFrame.t_to_js x1241)
            let (get_self_size : t -> int) =
              fun (x1242 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1242) "selfSize")
            let (set_self_size : t -> int -> unit) =
              fun (x1243 : t) ->
                fun (x1244 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1243) "selfSize"
                    (Ojs.int_to_js x1244)
            let (get_children : t -> t list) =
              fun (x1245 : t) ->
                Ojs.list_of_js t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1245) "children")
            let (set_children : t -> t list -> unit) =
              fun (x1247 : t) ->
                fun (x1248 : t list) ->
                  Ojs.set_prop_ascii (t_to_js x1247) "children"
                    (Ojs.list_to_js t_to_js x1248)
          end
        module SamplingHeapProfile =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1251 : Ojs.t) -> x1251
            and t_to_js : t -> Ojs.t = fun (x1250 : Ojs.t) -> x1250
            let (get_head : t -> SamplingHeapProfileNode.t) =
              fun (x1252 : t) ->
                SamplingHeapProfileNode.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1252) "head")
            let (set_head : t -> SamplingHeapProfileNode.t -> unit) =
              fun (x1253 : t) ->
                fun (x1254 : SamplingHeapProfileNode.t) ->
                  Ojs.set_prop_ascii (t_to_js x1253) "head"
                    (SamplingHeapProfileNode.t_to_js x1254)
          end
        module StartTrackingHeapObjectsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1256 : Ojs.t) -> x1256
            and t_to_js : t -> Ojs.t = fun (x1255 : Ojs.t) -> x1255
            let (get_track_allocations : t -> bool) =
              fun (x1257 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1257) "trackAllocations")
            let (set_track_allocations : t -> bool -> unit) =
              fun (x1258 : t) ->
                fun (x1259 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1258) "trackAllocations"
                    (Ojs.bool_to_js x1259)
          end
        module StopTrackingHeapObjectsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1261 : Ojs.t) -> x1261
            and t_to_js : t -> Ojs.t = fun (x1260 : Ojs.t) -> x1260
            let (get_report_progress : t -> bool) =
              fun (x1262 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1262) "reportProgress")
            let (set_report_progress : t -> bool -> unit) =
              fun (x1263 : t) ->
                fun (x1264 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1263) "reportProgress"
                    (Ojs.bool_to_js x1264)
          end
        module TakeHeapSnapshotParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1266 : Ojs.t) -> x1266
            and t_to_js : t -> Ojs.t = fun (x1265 : Ojs.t) -> x1265
            let (get_report_progress : t -> bool) =
              fun (x1267 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1267) "reportProgress")
            let (set_report_progress : t -> bool -> unit) =
              fun (x1268 : t) ->
                fun (x1269 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1268) "reportProgress"
                    (Ojs.bool_to_js x1269)
          end
        module GetObjectByHeapObjectIdParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1271 : Ojs.t) -> x1271
            and t_to_js : t -> Ojs.t = fun (x1270 : Ojs.t) -> x1270
            let (get_object_id : t -> HeapSnapshotObjectId.t) =
              fun (x1272 : t) ->
                HeapSnapshotObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1272) "objectId")
            let (set_object_id : t -> HeapSnapshotObjectId.t -> unit) =
              fun (x1273 : t) ->
                fun (x1274 : HeapSnapshotObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1273) "objectId"
                    (HeapSnapshotObjectId.t_to_js x1274)
            let (get_object_group : t -> string) =
              fun (x1275 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1275) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x1276 : t) ->
                fun (x1277 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1276) "objectGroup"
                    (Ojs.string_to_js x1277)
          end
        module AddInspectedHeapObjectParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1279 : Ojs.t) -> x1279
            and t_to_js : t -> Ojs.t = fun (x1278 : Ojs.t) -> x1278
            let (get_heap_object_id : t -> HeapSnapshotObjectId.t) =
              fun (x1280 : t) ->
                HeapSnapshotObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1280) "heapObjectId")
            let (set_heap_object_id : t -> HeapSnapshotObjectId.t -> unit) =
              fun (x1281 : t) ->
                fun (x1282 : HeapSnapshotObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1281) "heapObjectId"
                    (HeapSnapshotObjectId.t_to_js x1282)
          end
        module GetHeapObjectIdParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1284 : Ojs.t) -> x1284
            and t_to_js : t -> Ojs.t = fun (x1283 : Ojs.t) -> x1283
            let (get_object_id : t -> Runtime.RemoteObjectId.t) =
              fun (x1285 : t) ->
                Runtime.RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1285) "objectId")
            let (set_object_id : t -> Runtime.RemoteObjectId.t -> unit) =
              fun (x1286 : t) ->
                fun (x1287 : Runtime.RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1286) "objectId"
                    (Runtime.RemoteObjectId.t_to_js x1287)
          end
        module StartSamplingParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1289 : Ojs.t) -> x1289
            and t_to_js : t -> Ojs.t = fun (x1288 : Ojs.t) -> x1288
            let (get_sampling_interval : t -> int) =
              fun (x1290 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1290) "samplingInterval")
            let (set_sampling_interval : t -> int -> unit) =
              fun (x1291 : t) ->
                fun (x1292 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1291) "samplingInterval"
                    (Ojs.int_to_js x1292)
          end
        module GetObjectByHeapObjectIdReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1294 : Ojs.t) -> x1294
            and t_to_js : t -> Ojs.t = fun (x1293 : Ojs.t) -> x1293
            let (get_result : t -> Runtime.RemoteObject.t) =
              fun (x1295 : t) ->
                Runtime.RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1295) "result")
            let (set_result : t -> Runtime.RemoteObject.t -> unit) =
              fun (x1296 : t) ->
                fun (x1297 : Runtime.RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x1296) "result"
                    (Runtime.RemoteObject.t_to_js x1297)
          end
        module GetHeapObjectIdReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1299 : Ojs.t) -> x1299
            and t_to_js : t -> Ojs.t = fun (x1298 : Ojs.t) -> x1298
            let (get_heap_snapshot_object_id : t -> HeapSnapshotObjectId.t) =
              fun (x1300 : t) ->
                HeapSnapshotObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1300) "heapSnapshotObjectId")
            let (set_heap_snapshot_object_id :
              t -> HeapSnapshotObjectId.t -> unit) =
              fun (x1301 : t) ->
                fun (x1302 : HeapSnapshotObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1301) "heapSnapshotObjectId"
                    (HeapSnapshotObjectId.t_to_js x1302)
          end
        module StopSamplingReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1304 : Ojs.t) -> x1304
            and t_to_js : t -> Ojs.t = fun (x1303 : Ojs.t) -> x1303
            let (get_profile : t -> SamplingHeapProfile.t) =
              fun (x1305 : t) ->
                SamplingHeapProfile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1305) "profile")
            let (set_profile : t -> SamplingHeapProfile.t -> unit) =
              fun (x1306 : t) ->
                fun (x1307 : SamplingHeapProfile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1306) "profile"
                    (SamplingHeapProfile.t_to_js x1307)
          end
        module GetSamplingProfileReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1309 : Ojs.t) -> x1309
            and t_to_js : t -> Ojs.t = fun (x1308 : Ojs.t) -> x1308
            let (get_profile : t -> SamplingHeapProfile.t) =
              fun (x1310 : t) ->
                SamplingHeapProfile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1310) "profile")
            let (set_profile : t -> SamplingHeapProfile.t -> unit) =
              fun (x1311 : t) ->
                fun (x1312 : SamplingHeapProfile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1311) "profile"
                    (SamplingHeapProfile.t_to_js x1312)
          end
        module AddHeapSnapshotChunkEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1314 : Ojs.t) -> x1314
            and t_to_js : t -> Ojs.t = fun (x1313 : Ojs.t) -> x1313
            let (get_chunk : t -> string) =
              fun (x1315 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1315) "chunk")
            let (set_chunk : t -> string -> unit) =
              fun (x1316 : t) ->
                fun (x1317 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1316) "chunk"
                    (Ojs.string_to_js x1317)
          end
        module ReportHeapSnapshotProgressEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1319 : Ojs.t) -> x1319
            and t_to_js : t -> Ojs.t = fun (x1318 : Ojs.t) -> x1318
            let (get_done : t -> int) =
              fun (x1320 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1320) "done")
            let (set_done : t -> int -> unit) =
              fun (x1321 : t) ->
                fun (x1322 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1321) "done"
                    (Ojs.int_to_js x1322)
            let (get_total : t -> int) =
              fun (x1323 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1323) "total")
            let (set_total : t -> int -> unit) =
              fun (x1324 : t) ->
                fun (x1325 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1324) "total"
                    (Ojs.int_to_js x1325)
            let (get_finished : t -> bool) =
              fun (x1326 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1326) "finished")
            let (set_finished : t -> bool -> unit) =
              fun (x1327 : t) ->
                fun (x1328 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1327) "finished"
                    (Ojs.bool_to_js x1328)
          end
        module LastSeenObjectIdEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1330 : Ojs.t) -> x1330
            and t_to_js : t -> Ojs.t = fun (x1329 : Ojs.t) -> x1329
            let (get_last_seen_object_id : t -> int) =
              fun (x1331 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1331) "lastSeenObjectId")
            let (set_last_seen_object_id : t -> int -> unit) =
              fun (x1332 : t) ->
                fun (x1333 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1332) "lastSeenObjectId"
                    (Ojs.int_to_js x1333)
            let (get_timestamp : t -> int) =
              fun (x1334 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1334) "timestamp")
            let (set_timestamp : t -> int -> unit) =
              fun (x1335 : t) ->
                fun (x1336 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1335) "timestamp"
                    (Ojs.int_to_js x1336)
          end
        module HeapStatsUpdateEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1338 : Ojs.t) -> x1338
            and t_to_js : t -> Ojs.t = fun (x1337 : Ojs.t) -> x1337
            let (get_stats_update : t -> int list) =
              fun (x1339 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1339) "statsUpdate")
            let (set_stats_update : t -> int list -> unit) =
              fun (x1341 : t) ->
                fun (x1342 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1341) "statsUpdate"
                    (Ojs.list_to_js Ojs.int_to_js x1342)
          end
      end
    module NodeTracing =
      struct
        module TraceConfig =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1345 : Ojs.t) -> x1345
            and t_to_js : t -> Ojs.t = fun (x1344 : Ojs.t) -> x1344
            let (get_record_mode : t -> string) =
              fun (x1346 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1346) "recordMode")
            let (set_record_mode : t -> string -> unit) =
              fun (x1347 : t) ->
                fun (x1348 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1347) "recordMode"
                    (Ojs.string_to_js x1348)
            let (get_included_categories : t -> string list) =
              fun (x1349 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1349) "includedCategories")
            let (set_included_categories : t -> string list -> unit) =
              fun (x1351 : t) ->
                fun (x1352 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1351) "includedCategories"
                    (Ojs.list_to_js Ojs.string_to_js x1352)
          end
        module StartParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1355 : Ojs.t) -> x1355
            and t_to_js : t -> Ojs.t = fun (x1354 : Ojs.t) -> x1354
            let (get_trace_config : t -> TraceConfig.t) =
              fun (x1356 : t) ->
                TraceConfig.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1356) "traceConfig")
            let (set_trace_config : t -> TraceConfig.t -> unit) =
              fun (x1357 : t) ->
                fun (x1358 : TraceConfig.t) ->
                  Ojs.set_prop_ascii (t_to_js x1357) "traceConfig"
                    (TraceConfig.t_to_js x1358)
          end
        module GetCategoriesReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1360 : Ojs.t) -> x1360
            and t_to_js : t -> Ojs.t = fun (x1359 : Ojs.t) -> x1359
            let (get_categories : t -> string list) =
              fun (x1361 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1361) "categories")
            let (set_categories : t -> string list -> unit) =
              fun (x1363 : t) ->
                fun (x1364 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1363) "categories"
                    (Ojs.list_to_js Ojs.string_to_js x1364)
          end
        module DataCollectedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1367 : Ojs.t) -> x1367
            and t_to_js : t -> Ojs.t = fun (x1366 : Ojs.t) -> x1366
            let (get_value : t -> AnonymousInterface0.t list) =
              fun (x1368 : t) ->
                Ojs.list_of_js AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1368) "value")
            let (set_value : t -> AnonymousInterface0.t list -> unit) =
              fun (x1370 : t) ->
                fun (x1371 : AnonymousInterface0.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1370) "value"
                    (Ojs.list_to_js AnonymousInterface0.t_to_js x1371)
          end
      end
    module NodeWorker =
      struct
        module WorkerID =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x1374 : Ojs.t) -> Ojs.string_of_js x1374
            and t_to_js : t -> Ojs.t =
              fun (x1373 : string) -> Ojs.string_to_js x1373
          end
        module SessionID =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x1376 : Ojs.t) -> Ojs.string_of_js x1376
            and t_to_js : t -> Ojs.t =
              fun (x1375 : string) -> Ojs.string_to_js x1375
          end
        module WorkerInfo =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1378 : Ojs.t) -> x1378
            and t_to_js : t -> Ojs.t = fun (x1377 : Ojs.t) -> x1377
            let (get_worker_id : t -> WorkerID.t) =
              fun (x1379 : t) ->
                WorkerID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1379) "workerId")
            let (set_worker_id : t -> WorkerID.t -> unit) =
              fun (x1380 : t) ->
                fun (x1381 : WorkerID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1380) "workerId"
                    (WorkerID.t_to_js x1381)
            let (get_type : t -> string) =
              fun (x1382 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1382) "type")
            let (set_type : t -> string -> unit) =
              fun (x1383 : t) ->
                fun (x1384 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1383) "type"
                    (Ojs.string_to_js x1384)
            let (get_title : t -> string) =
              fun (x1385 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1385) "title")
            let (set_title : t -> string -> unit) =
              fun (x1386 : t) ->
                fun (x1387 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1386) "title"
                    (Ojs.string_to_js x1387)
            let (get_url : t -> string) =
              fun (x1388 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1388) "url")
            let (set_url : t -> string -> unit) =
              fun (x1389 : t) ->
                fun (x1390 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1389) "url"
                    (Ojs.string_to_js x1390)
          end
        module SendMessageToWorkerParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1392 : Ojs.t) -> x1392
            and t_to_js : t -> Ojs.t = fun (x1391 : Ojs.t) -> x1391
            let (get_message : t -> string) =
              fun (x1393 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1393) "message")
            let (set_message : t -> string -> unit) =
              fun (x1394 : t) ->
                fun (x1395 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1394) "message"
                    (Ojs.string_to_js x1395)
            let (get_session_id : t -> SessionID.t) =
              fun (x1396 : t) ->
                SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1396) "sessionId")
            let (set_session_id : t -> SessionID.t -> unit) =
              fun (x1397 : t) ->
                fun (x1398 : SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1397) "sessionId"
                    (SessionID.t_to_js x1398)
          end
        module EnableParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1400 : Ojs.t) -> x1400
            and t_to_js : t -> Ojs.t = fun (x1399 : Ojs.t) -> x1399
            let (get_wait_for_debugger_on_start : t -> bool) =
              fun (x1401 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1401)
                     "waitForDebuggerOnStart")
            let (set_wait_for_debugger_on_start : t -> bool -> unit) =
              fun (x1402 : t) ->
                fun (x1403 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1402) "waitForDebuggerOnStart"
                    (Ojs.bool_to_js x1403)
          end
        module DetachParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1405 : Ojs.t) -> x1405
            and t_to_js : t -> Ojs.t = fun (x1404 : Ojs.t) -> x1404
            let (get_session_id : t -> SessionID.t) =
              fun (x1406 : t) ->
                SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1406) "sessionId")
            let (set_session_id : t -> SessionID.t -> unit) =
              fun (x1407 : t) ->
                fun (x1408 : SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1407) "sessionId"
                    (SessionID.t_to_js x1408)
          end
        module AttachedToWorkerEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1410 : Ojs.t) -> x1410
            and t_to_js : t -> Ojs.t = fun (x1409 : Ojs.t) -> x1409
            let (get_session_id : t -> SessionID.t) =
              fun (x1411 : t) ->
                SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1411) "sessionId")
            let (set_session_id : t -> SessionID.t -> unit) =
              fun (x1412 : t) ->
                fun (x1413 : SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1412) "sessionId"
                    (SessionID.t_to_js x1413)
            let (get_worker_info : t -> WorkerInfo.t) =
              fun (x1414 : t) ->
                WorkerInfo.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1414) "workerInfo")
            let (set_worker_info : t -> WorkerInfo.t -> unit) =
              fun (x1415 : t) ->
                fun (x1416 : WorkerInfo.t) ->
                  Ojs.set_prop_ascii (t_to_js x1415) "workerInfo"
                    (WorkerInfo.t_to_js x1416)
            let (get_waiting_for_debugger : t -> bool) =
              fun (x1417 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1417) "waitingForDebugger")
            let (set_waiting_for_debugger : t -> bool -> unit) =
              fun (x1418 : t) ->
                fun (x1419 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1418) "waitingForDebugger"
                    (Ojs.bool_to_js x1419)
          end
        module DetachedFromWorkerEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1421 : Ojs.t) -> x1421
            and t_to_js : t -> Ojs.t = fun (x1420 : Ojs.t) -> x1420
            let (get_session_id : t -> SessionID.t) =
              fun (x1422 : t) ->
                SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1422) "sessionId")
            let (set_session_id : t -> SessionID.t -> unit) =
              fun (x1423 : t) ->
                fun (x1424 : SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1423) "sessionId"
                    (SessionID.t_to_js x1424)
          end
        module ReceivedMessageFromWorkerEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1426 : Ojs.t) -> x1426
            and t_to_js : t -> Ojs.t = fun (x1425 : Ojs.t) -> x1425
            let (get_session_id : t -> SessionID.t) =
              fun (x1427 : t) ->
                SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1427) "sessionId")
            let (set_session_id : t -> SessionID.t -> unit) =
              fun (x1428 : t) ->
                fun (x1429 : SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1428) "sessionId"
                    (SessionID.t_to_js x1429)
            let (get_message : t -> string) =
              fun (x1430 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1430) "message")
            let (set_message : t -> string -> unit) =
              fun (x1431 : t) ->
                fun (x1432 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1431) "message"
                    (Ojs.string_to_js x1432)
          end
      end
    module NodeRuntime =
      struct
        module NotifyWhenWaitingForDisconnectParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1434 : Ojs.t) -> x1434
            and t_to_js : t -> Ojs.t = fun (x1433 : Ojs.t) -> x1433
            let (get_enabled : t -> bool) =
              fun (x1435 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1435) "enabled")
            let (set_enabled : t -> bool -> unit) =
              fun (x1436 : t) ->
                fun (x1437 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1436) "enabled"
                    (Ojs.bool_to_js x1437)
          end
      end
    module Session =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1439 : Ojs.t) -> x1439
        and t_to_js : t -> Ojs.t = fun (x1438 : Ojs.t) -> x1438
        let (create : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.new_obj (Ojs.get_prop_ascii Import.inspector "Session")
                 [||])
        let (connect : t -> unit) =
          fun (x1440 : t) -> ignore (Ojs.call (t_to_js x1440) "connect" [||])
        let (disconnect : t -> unit) =
          fun (x1441 : t) ->
            ignore (Ojs.call (t_to_js x1441) "disconnect" [||])
        let (post :
          t ->
            method_:string ->
              ?params:AnonymousInterface0.t ->
                ?callback:(err:Error.t or_null ->
                             ?params:AnonymousInterface0.t -> unit -> unit)
                  -> unit -> unit)
          =
          fun (x1452 : t) ->
            fun ~method_:(x1442 : string) ->
              fun ?params:(x1443 : AnonymousInterface0.t option) ->
                fun
                  ?callback:(x1444 :
                              (err:Error.t or_null ->
                                 ?params:AnonymousInterface0.t ->
                                   unit -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1453 = t_to_js x1452 in
                       Ojs.call (Ojs.get_prop_ascii x1453 "post") "apply"
                         [|x1453;((let x1445 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1445 "push"
                                        [|(Ojs.string_to_js x1442)|]);
                                   (match x1443 with
                                    | Some x1451 ->
                                        ignore
                                          (Ojs.call x1445 "push"
                                             [|(AnonymousInterface0.t_to_js
                                                  x1451)|])
                                    | None -> ());
                                   (match x1444 with
                                    | Some x1446 ->
                                        ignore
                                          (Ojs.call x1445 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1447 : Ojs.t) ->
                                                     fun (x1449 : Ojs.t) ->
                                                       x1446
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1447)
                                                         ?params:(Ojs.option_of_js
                                                                    AnonymousInterface0.t_of_js
                                                                    x1449) ()))|])
                                    | None -> ());
                                   x1445))|])
        let (post' :
          t ->
            method_:string ->
              ?callback:(err:Error.t or_null ->
                           ?params:AnonymousInterface0.t -> unit -> unit)
                -> unit -> unit)
          =
          fun (x1462 : t) ->
            fun ~method_:(x1454 : string) ->
              fun
                ?callback:(x1455 :
                            (err:Error.t or_null ->
                               ?params:AnonymousInterface0.t -> unit -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1463 = t_to_js x1462 in
                     Ojs.call (Ojs.get_prop_ascii x1463 "post") "apply"
                       [|x1463;((let x1456 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1456 "push"
                                      [|(Ojs.string_to_js x1454)|]);
                                 (match x1455 with
                                  | Some x1457 ->
                                      ignore
                                        (Ojs.call x1456 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1458 : Ojs.t) ->
                                                   fun (x1460 : Ojs.t) ->
                                                     x1457
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1458)
                                                       ?params:(Ojs.option_of_js
                                                                  AnonymousInterface0.t_of_js
                                                                  x1460) ()))|])
                                  | None -> ());
                                 x1456))|])
        let (post'' :
          t ->
            method_:[ `Schema_getDomains ] ->
              ?callback:(err:Error.t or_null ->
                           params:Schema.GetDomainsReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1471 : t) ->
            fun ~method_:(x1464 : [ `Schema_getDomains ]) ->
              fun
                ?callback:(x1465 :
                            (err:Error.t or_null ->
                               params:Schema.GetDomainsReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1472 = t_to_js x1471 in
                     Ojs.call (Ojs.get_prop_ascii x1472 "post") "apply"
                       [|x1472;((let x1466 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1466 "push"
                                      [|((match x1464 with
                                          | `Schema_getDomains ->
                                              Ojs.string_to_js
                                                "SchemaGetDomains"))|]);
                                 (match x1465 with
                                  | Some x1467 ->
                                      ignore
                                        (Ojs.call x1466 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1468 : Ojs.t) ->
                                                   fun (x1470 : Ojs.t) ->
                                                     x1467
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1468)
                                                       ~params:(Schema.GetDomainsReturnType.t_of_js
                                                                  x1470)))|])
                                  | None -> ());
                                 x1466))|])
        let (post''' :
          t ->
            method_:[ `Runtime_evaluate ] ->
              ?params:Runtime.EvaluateParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.EvaluateReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1482 : t) ->
            fun ~method_:(x1473 : [ `Runtime_evaluate ]) ->
              fun ?params:(x1474 : Runtime.EvaluateParameterType.t option) ->
                fun
                  ?callback:(x1475 :
                              (err:Error.t or_null ->
                                 params:Runtime.EvaluateReturnType.t -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1483 = t_to_js x1482 in
                       Ojs.call (Ojs.get_prop_ascii x1483 "post") "apply"
                         [|x1483;((let x1476 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1476 "push"
                                        [|((match x1473 with
                                            | `Runtime_evaluate ->
                                                Ojs.string_to_js
                                                  "RuntimeEvaluate"))|]);
                                   (match x1474 with
                                    | Some x1481 ->
                                        ignore
                                          (Ojs.call x1476 "push"
                                             [|(Runtime.EvaluateParameterType.t_to_js
                                                  x1481)|])
                                    | None -> ());
                                   (match x1475 with
                                    | Some x1477 ->
                                        ignore
                                          (Ojs.call x1476 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1478 : Ojs.t) ->
                                                     fun (x1480 : Ojs.t) ->
                                                       x1477
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1478)
                                                         ~params:(Runtime.EvaluateReturnType.t_of_js
                                                                    x1480)))|])
                                    | None -> ());
                                   x1476))|])
        let (post'''' :
          t ->
            method_:[ `Runtime_evaluate ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.EvaluateReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1491 : t) ->
            fun ~method_:(x1484 : [ `Runtime_evaluate ]) ->
              fun
                ?callback:(x1485 :
                            (err:Error.t or_null ->
                               params:Runtime.EvaluateReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1492 = t_to_js x1491 in
                     Ojs.call (Ojs.get_prop_ascii x1492 "post") "apply"
                       [|x1492;((let x1486 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1486 "push"
                                      [|((match x1484 with
                                          | `Runtime_evaluate ->
                                              Ojs.string_to_js
                                                "RuntimeEvaluate"))|]);
                                 (match x1485 with
                                  | Some x1487 ->
                                      ignore
                                        (Ojs.call x1486 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1488 : Ojs.t) ->
                                                   fun (x1490 : Ojs.t) ->
                                                     x1487
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1488)
                                                       ~params:(Runtime.EvaluateReturnType.t_of_js
                                                                  x1490)))|])
                                  | None -> ());
                                 x1486))|])
        let (post''''' :
          t ->
            method_:[ `Runtime_awaitPromise ] ->
              ?params:Runtime.AwaitPromiseParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.AwaitPromiseReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1502 : t) ->
            fun ~method_:(x1493 : [ `Runtime_awaitPromise ]) ->
              fun
                ?params:(x1494 : Runtime.AwaitPromiseParameterType.t option)
                ->
                fun
                  ?callback:(x1495 :
                              (err:Error.t or_null ->
                                 params:Runtime.AwaitPromiseReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1503 = t_to_js x1502 in
                       Ojs.call (Ojs.get_prop_ascii x1503 "post") "apply"
                         [|x1503;((let x1496 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1496 "push"
                                        [|((match x1493 with
                                            | `Runtime_awaitPromise ->
                                                Ojs.string_to_js
                                                  "RuntimeAwaitPromise"))|]);
                                   (match x1494 with
                                    | Some x1501 ->
                                        ignore
                                          (Ojs.call x1496 "push"
                                             [|(Runtime.AwaitPromiseParameterType.t_to_js
                                                  x1501)|])
                                    | None -> ());
                                   (match x1495 with
                                    | Some x1497 ->
                                        ignore
                                          (Ojs.call x1496 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1498 : Ojs.t) ->
                                                     fun (x1500 : Ojs.t) ->
                                                       x1497
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1498)
                                                         ~params:(Runtime.AwaitPromiseReturnType.t_of_js
                                                                    x1500)))|])
                                    | None -> ());
                                   x1496))|])
        let (post'''''' :
          t ->
            method_:[ `Runtime_awaitPromise ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.AwaitPromiseReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1511 : t) ->
            fun ~method_:(x1504 : [ `Runtime_awaitPromise ]) ->
              fun
                ?callback:(x1505 :
                            (err:Error.t or_null ->
                               params:Runtime.AwaitPromiseReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1512 = t_to_js x1511 in
                     Ojs.call (Ojs.get_prop_ascii x1512 "post") "apply"
                       [|x1512;((let x1506 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1506 "push"
                                      [|((match x1504 with
                                          | `Runtime_awaitPromise ->
                                              Ojs.string_to_js
                                                "RuntimeAwaitPromise"))|]);
                                 (match x1505 with
                                  | Some x1507 ->
                                      ignore
                                        (Ojs.call x1506 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1508 : Ojs.t) ->
                                                   fun (x1510 : Ojs.t) ->
                                                     x1507
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1508)
                                                       ~params:(Runtime.AwaitPromiseReturnType.t_of_js
                                                                  x1510)))|])
                                  | None -> ());
                                 x1506))|])
        let (post''''''' :
          t ->
            method_:[ `Runtime_callFunctionOn ] ->
              ?params:Runtime.CallFunctionOnParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.CallFunctionOnReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1522 : t) ->
            fun ~method_:(x1513 : [ `Runtime_callFunctionOn ]) ->
              fun
                ?params:(x1514 :
                          Runtime.CallFunctionOnParameterType.t option)
                ->
                fun
                  ?callback:(x1515 :
                              (err:Error.t or_null ->
                                 params:Runtime.CallFunctionOnReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1523 = t_to_js x1522 in
                       Ojs.call (Ojs.get_prop_ascii x1523 "post") "apply"
                         [|x1523;((let x1516 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1516 "push"
                                        [|((match x1513 with
                                            | `Runtime_callFunctionOn ->
                                                Ojs.string_to_js
                                                  "RuntimeCallFunctionOn"))|]);
                                   (match x1514 with
                                    | Some x1521 ->
                                        ignore
                                          (Ojs.call x1516 "push"
                                             [|(Runtime.CallFunctionOnParameterType.t_to_js
                                                  x1521)|])
                                    | None -> ());
                                   (match x1515 with
                                    | Some x1517 ->
                                        ignore
                                          (Ojs.call x1516 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1518 : Ojs.t) ->
                                                     fun (x1520 : Ojs.t) ->
                                                       x1517
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1518)
                                                         ~params:(Runtime.CallFunctionOnReturnType.t_of_js
                                                                    x1520)))|])
                                    | None -> ());
                                   x1516))|])
        let (post'''''''' :
          t ->
            method_:[ `Runtime_callFunctionOn ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.CallFunctionOnReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1531 : t) ->
            fun ~method_:(x1524 : [ `Runtime_callFunctionOn ]) ->
              fun
                ?callback:(x1525 :
                            (err:Error.t or_null ->
                               params:Runtime.CallFunctionOnReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1532 = t_to_js x1531 in
                     Ojs.call (Ojs.get_prop_ascii x1532 "post") "apply"
                       [|x1532;((let x1526 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1526 "push"
                                      [|((match x1524 with
                                          | `Runtime_callFunctionOn ->
                                              Ojs.string_to_js
                                                "RuntimeCallFunctionOn"))|]);
                                 (match x1525 with
                                  | Some x1527 ->
                                      ignore
                                        (Ojs.call x1526 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1528 : Ojs.t) ->
                                                   fun (x1530 : Ojs.t) ->
                                                     x1527
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1528)
                                                       ~params:(Runtime.CallFunctionOnReturnType.t_of_js
                                                                  x1530)))|])
                                  | None -> ());
                                 x1526))|])
        let (post''''''''' :
          t ->
            method_:[ `Runtime_getProperties ] ->
              ?params:Runtime.GetPropertiesParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.GetPropertiesReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1542 : t) ->
            fun ~method_:(x1533 : [ `Runtime_getProperties ]) ->
              fun
                ?params:(x1534 : Runtime.GetPropertiesParameterType.t option)
                ->
                fun
                  ?callback:(x1535 :
                              (err:Error.t or_null ->
                                 params:Runtime.GetPropertiesReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1543 = t_to_js x1542 in
                       Ojs.call (Ojs.get_prop_ascii x1543 "post") "apply"
                         [|x1543;((let x1536 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1536 "push"
                                        [|((match x1533 with
                                            | `Runtime_getProperties ->
                                                Ojs.string_to_js
                                                  "RuntimeGetProperties"))|]);
                                   (match x1534 with
                                    | Some x1541 ->
                                        ignore
                                          (Ojs.call x1536 "push"
                                             [|(Runtime.GetPropertiesParameterType.t_to_js
                                                  x1541)|])
                                    | None -> ());
                                   (match x1535 with
                                    | Some x1537 ->
                                        ignore
                                          (Ojs.call x1536 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1538 : Ojs.t) ->
                                                     fun (x1540 : Ojs.t) ->
                                                       x1537
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1538)
                                                         ~params:(Runtime.GetPropertiesReturnType.t_of_js
                                                                    x1540)))|])
                                    | None -> ());
                                   x1536))|])
        let (post'''''''''' :
          t ->
            method_:[ `Runtime_getProperties ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.GetPropertiesReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1551 : t) ->
            fun ~method_:(x1544 : [ `Runtime_getProperties ]) ->
              fun
                ?callback:(x1545 :
                            (err:Error.t or_null ->
                               params:Runtime.GetPropertiesReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1552 = t_to_js x1551 in
                     Ojs.call (Ojs.get_prop_ascii x1552 "post") "apply"
                       [|x1552;((let x1546 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1546 "push"
                                      [|((match x1544 with
                                          | `Runtime_getProperties ->
                                              Ojs.string_to_js
                                                "RuntimeGetProperties"))|]);
                                 (match x1545 with
                                  | Some x1547 ->
                                      ignore
                                        (Ojs.call x1546 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1548 : Ojs.t) ->
                                                   fun (x1550 : Ojs.t) ->
                                                     x1547
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1548)
                                                       ~params:(Runtime.GetPropertiesReturnType.t_of_js
                                                                  x1550)))|])
                                  | None -> ());
                                 x1546))|])
        let (post''''''''''' :
          t ->
            method_:[ `Runtime_releaseObject ] ->
              ?params:Runtime.ReleaseObjectParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1561 : t) ->
            fun ~method_:(x1553 : [ `Runtime_releaseObject ]) ->
              fun
                ?params:(x1554 : Runtime.ReleaseObjectParameterType.t option)
                ->
                fun ?callback:(x1555 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1562 = t_to_js x1561 in
                       Ojs.call (Ojs.get_prop_ascii x1562 "post") "apply"
                         [|x1562;((let x1556 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1556 "push"
                                        [|((match x1553 with
                                            | `Runtime_releaseObject ->
                                                Ojs.string_to_js
                                                  "RuntimeReleaseObject"))|]);
                                   (match x1554 with
                                    | Some x1560 ->
                                        ignore
                                          (Ojs.call x1556 "push"
                                             [|(Runtime.ReleaseObjectParameterType.t_to_js
                                                  x1560)|])
                                    | None -> ());
                                   (match x1555 with
                                    | Some x1557 ->
                                        ignore
                                          (Ojs.call x1556 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1558 : Ojs.t) ->
                                                     x1557
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1558)))|])
                                    | None -> ());
                                   x1556))|])
        let (post'''''''''''' :
          t ->
            method_:[ `Runtime_releaseObject ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1569 : t) ->
            fun ~method_:(x1563 : [ `Runtime_releaseObject ]) ->
              fun ?callback:(x1564 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1570 = t_to_js x1569 in
                     Ojs.call (Ojs.get_prop_ascii x1570 "post") "apply"
                       [|x1570;((let x1565 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1565 "push"
                                      [|((match x1563 with
                                          | `Runtime_releaseObject ->
                                              Ojs.string_to_js
                                                "RuntimeReleaseObject"))|]);
                                 (match x1564 with
                                  | Some x1566 ->
                                      ignore
                                        (Ojs.call x1565 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1567 : Ojs.t) ->
                                                   x1566
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1567)))|])
                                  | None -> ());
                                 x1565))|])
        let (post''''''''''''' :
          t ->
            method_:[ `Runtime_releaseObjectGroup ] ->
              ?params:Runtime.ReleaseObjectGroupParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1579 : t) ->
            fun ~method_:(x1571 : [ `Runtime_releaseObjectGroup ]) ->
              fun
                ?params:(x1572 :
                          Runtime.ReleaseObjectGroupParameterType.t option)
                ->
                fun ?callback:(x1573 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1580 = t_to_js x1579 in
                       Ojs.call (Ojs.get_prop_ascii x1580 "post") "apply"
                         [|x1580;((let x1574 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1574 "push"
                                        [|((match x1571 with
                                            | `Runtime_releaseObjectGroup ->
                                                Ojs.string_to_js
                                                  "RuntimeReleaseObjectGroup"))|]);
                                   (match x1572 with
                                    | Some x1578 ->
                                        ignore
                                          (Ojs.call x1574 "push"
                                             [|(Runtime.ReleaseObjectGroupParameterType.t_to_js
                                                  x1578)|])
                                    | None -> ());
                                   (match x1573 with
                                    | Some x1575 ->
                                        ignore
                                          (Ojs.call x1574 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1576 : Ojs.t) ->
                                                     x1575
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1576)))|])
                                    | None -> ());
                                   x1574))|])
        let (post'''''''''''''' :
          t ->
            method_:[ `Runtime_releaseObjectGroup ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1587 : t) ->
            fun ~method_:(x1581 : [ `Runtime_releaseObjectGroup ]) ->
              fun ?callback:(x1582 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1588 = t_to_js x1587 in
                     Ojs.call (Ojs.get_prop_ascii x1588 "post") "apply"
                       [|x1588;((let x1583 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1583 "push"
                                      [|((match x1581 with
                                          | `Runtime_releaseObjectGroup ->
                                              Ojs.string_to_js
                                                "RuntimeReleaseObjectGroup"))|]);
                                 (match x1582 with
                                  | Some x1584 ->
                                      ignore
                                        (Ojs.call x1583 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1585 : Ojs.t) ->
                                                   x1584
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1585)))|])
                                  | None -> ());
                                 x1583))|])
        let (post''''''''''''''' :
          t ->
            method_:[ `Runtime_runIfWaitingForDebugger ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1595 : t) ->
            fun ~method_:(x1589 : [ `Runtime_runIfWaitingForDebugger ]) ->
              fun ?callback:(x1590 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1596 = t_to_js x1595 in
                     Ojs.call (Ojs.get_prop_ascii x1596 "post") "apply"
                       [|x1596;((let x1591 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1591 "push"
                                      [|((match x1589 with
                                          | `Runtime_runIfWaitingForDebugger
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeRunIfWaitingForDebugger"))|]);
                                 (match x1590 with
                                  | Some x1592 ->
                                      ignore
                                        (Ojs.call x1591 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1593 : Ojs.t) ->
                                                   x1592
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1593)))|])
                                  | None -> ());
                                 x1591))|])
        let (post'''''''''''''''' :
          t ->
            method_:[ `Runtime_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1603 : t) ->
            fun ~method_:(x1597 : [ `Runtime_enable ]) ->
              fun ?callback:(x1598 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1604 = t_to_js x1603 in
                     Ojs.call (Ojs.get_prop_ascii x1604 "post") "apply"
                       [|x1604;((let x1599 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1599 "push"
                                      [|((match x1597 with
                                          | `Runtime_enable ->
                                              Ojs.string_to_js
                                                "RuntimeEnable"))|]);
                                 (match x1598 with
                                  | Some x1600 ->
                                      ignore
                                        (Ojs.call x1599 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1601 : Ojs.t) ->
                                                   x1600
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1601)))|])
                                  | None -> ());
                                 x1599))|])
        let (post''''''''''''''''' :
          t ->
            method_:[ `Runtime_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1611 : t) ->
            fun ~method_:(x1605 : [ `Runtime_disable ]) ->
              fun ?callback:(x1606 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1612 = t_to_js x1611 in
                     Ojs.call (Ojs.get_prop_ascii x1612 "post") "apply"
                       [|x1612;((let x1607 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1607 "push"
                                      [|((match x1605 with
                                          | `Runtime_disable ->
                                              Ojs.string_to_js
                                                "RuntimeDisable"))|]);
                                 (match x1606 with
                                  | Some x1608 ->
                                      ignore
                                        (Ojs.call x1607 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1609 : Ojs.t) ->
                                                   x1608
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1609)))|])
                                  | None -> ());
                                 x1607))|])
        let (post'''''''''''''''''' :
          t ->
            method_:[ `Runtime_discardConsoleEntries ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1619 : t) ->
            fun ~method_:(x1613 : [ `Runtime_discardConsoleEntries ]) ->
              fun ?callback:(x1614 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1620 = t_to_js x1619 in
                     Ojs.call (Ojs.get_prop_ascii x1620 "post") "apply"
                       [|x1620;((let x1615 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1615 "push"
                                      [|((match x1613 with
                                          | `Runtime_discardConsoleEntries ->
                                              Ojs.string_to_js
                                                "RuntimeDiscardConsoleEntries"))|]);
                                 (match x1614 with
                                  | Some x1616 ->
                                      ignore
                                        (Ojs.call x1615 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1617 : Ojs.t) ->
                                                   x1616
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1617)))|])
                                  | None -> ());
                                 x1615))|])
        let (post''''''''''''''''''' :
          t ->
            method_:[ `Runtime_setCustomObjectFormatterEnabled ] ->
              ?params:Runtime.SetCustomObjectFormatterEnabledParameterType.t
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1629 : t) ->
            fun
              ~method_:(x1621 : [ `Runtime_setCustomObjectFormatterEnabled ])
              ->
              fun
                ?params:(x1622 :
                          Runtime.SetCustomObjectFormatterEnabledParameterType.t
                            option)
                ->
                fun ?callback:(x1623 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1630 = t_to_js x1629 in
                       Ojs.call (Ojs.get_prop_ascii x1630 "post") "apply"
                         [|x1630;((let x1624 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1624 "push"
                                        [|((match x1621 with
                                            | `Runtime_setCustomObjectFormatterEnabled
                                                ->
                                                Ojs.string_to_js
                                                  "RuntimeSetCustomObjectFormatterEnabled"))|]);
                                   (match x1622 with
                                    | Some x1628 ->
                                        ignore
                                          (Ojs.call x1624 "push"
                                             [|(Runtime.SetCustomObjectFormatterEnabledParameterType.t_to_js
                                                  x1628)|])
                                    | None -> ());
                                   (match x1623 with
                                    | Some x1625 ->
                                        ignore
                                          (Ojs.call x1624 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1626 : Ojs.t) ->
                                                     x1625
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1626)))|])
                                    | None -> ());
                                   x1624))|])
        let (post'''''''''''''''''''' :
          t ->
            method_:[ `Runtime_setCustomObjectFormatterEnabled ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1637 : t) ->
            fun
              ~method_:(x1631 : [ `Runtime_setCustomObjectFormatterEnabled ])
              ->
              fun ?callback:(x1632 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1638 = t_to_js x1637 in
                     Ojs.call (Ojs.get_prop_ascii x1638 "post") "apply"
                       [|x1638;((let x1633 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1633 "push"
                                      [|((match x1631 with
                                          | `Runtime_setCustomObjectFormatterEnabled
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeSetCustomObjectFormatterEnabled"))|]);
                                 (match x1632 with
                                  | Some x1634 ->
                                      ignore
                                        (Ojs.call x1633 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1635 : Ojs.t) ->
                                                   x1634
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1635)))|])
                                  | None -> ());
                                 x1633))|])
        let (post''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_compileScript ] ->
              ?params:Runtime.CompileScriptParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.CompileScriptReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1648 : t) ->
            fun ~method_:(x1639 : [ `Runtime_compileScript ]) ->
              fun
                ?params:(x1640 : Runtime.CompileScriptParameterType.t option)
                ->
                fun
                  ?callback:(x1641 :
                              (err:Error.t or_null ->
                                 params:Runtime.CompileScriptReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1649 = t_to_js x1648 in
                       Ojs.call (Ojs.get_prop_ascii x1649 "post") "apply"
                         [|x1649;((let x1642 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1642 "push"
                                        [|((match x1639 with
                                            | `Runtime_compileScript ->
                                                Ojs.string_to_js
                                                  "RuntimeCompileScript"))|]);
                                   (match x1640 with
                                    | Some x1647 ->
                                        ignore
                                          (Ojs.call x1642 "push"
                                             [|(Runtime.CompileScriptParameterType.t_to_js
                                                  x1647)|])
                                    | None -> ());
                                   (match x1641 with
                                    | Some x1643 ->
                                        ignore
                                          (Ojs.call x1642 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1644 : Ojs.t) ->
                                                     fun (x1646 : Ojs.t) ->
                                                       x1643
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1644)
                                                         ~params:(Runtime.CompileScriptReturnType.t_of_js
                                                                    x1646)))|])
                                    | None -> ());
                                   x1642))|])
        let (post'''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_compileScript ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.CompileScriptReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1657 : t) ->
            fun ~method_:(x1650 : [ `Runtime_compileScript ]) ->
              fun
                ?callback:(x1651 :
                            (err:Error.t or_null ->
                               params:Runtime.CompileScriptReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1658 = t_to_js x1657 in
                     Ojs.call (Ojs.get_prop_ascii x1658 "post") "apply"
                       [|x1658;((let x1652 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1652 "push"
                                      [|((match x1650 with
                                          | `Runtime_compileScript ->
                                              Ojs.string_to_js
                                                "RuntimeCompileScript"))|]);
                                 (match x1651 with
                                  | Some x1653 ->
                                      ignore
                                        (Ojs.call x1652 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1654 : Ojs.t) ->
                                                   fun (x1656 : Ojs.t) ->
                                                     x1653
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1654)
                                                       ~params:(Runtime.CompileScriptReturnType.t_of_js
                                                                  x1656)))|])
                                  | None -> ());
                                 x1652))|])
        let (post''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_runScript ] ->
              ?params:Runtime.RunScriptParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.RunScriptReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1668 : t) ->
            fun ~method_:(x1659 : [ `Runtime_runScript ]) ->
              fun ?params:(x1660 : Runtime.RunScriptParameterType.t option)
                ->
                fun
                  ?callback:(x1661 :
                              (err:Error.t or_null ->
                                 params:Runtime.RunScriptReturnType.t -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1669 = t_to_js x1668 in
                       Ojs.call (Ojs.get_prop_ascii x1669 "post") "apply"
                         [|x1669;((let x1662 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1662 "push"
                                        [|((match x1659 with
                                            | `Runtime_runScript ->
                                                Ojs.string_to_js
                                                  "RuntimeRunScript"))|]);
                                   (match x1660 with
                                    | Some x1667 ->
                                        ignore
                                          (Ojs.call x1662 "push"
                                             [|(Runtime.RunScriptParameterType.t_to_js
                                                  x1667)|])
                                    | None -> ());
                                   (match x1661 with
                                    | Some x1663 ->
                                        ignore
                                          (Ojs.call x1662 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1664 : Ojs.t) ->
                                                     fun (x1666 : Ojs.t) ->
                                                       x1663
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1664)
                                                         ~params:(Runtime.RunScriptReturnType.t_of_js
                                                                    x1666)))|])
                                    | None -> ());
                                   x1662))|])
        let (post'''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_runScript ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.RunScriptReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1677 : t) ->
            fun ~method_:(x1670 : [ `Runtime_runScript ]) ->
              fun
                ?callback:(x1671 :
                            (err:Error.t or_null ->
                               params:Runtime.RunScriptReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1678 = t_to_js x1677 in
                     Ojs.call (Ojs.get_prop_ascii x1678 "post") "apply"
                       [|x1678;((let x1672 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1672 "push"
                                      [|((match x1670 with
                                          | `Runtime_runScript ->
                                              Ojs.string_to_js
                                                "RuntimeRunScript"))|]);
                                 (match x1671 with
                                  | Some x1673 ->
                                      ignore
                                        (Ojs.call x1672 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1674 : Ojs.t) ->
                                                   fun (x1676 : Ojs.t) ->
                                                     x1673
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1674)
                                                       ~params:(Runtime.RunScriptReturnType.t_of_js
                                                                  x1676)))|])
                                  | None -> ());
                                 x1672))|])
        let (post''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_queryObjects ] ->
              ?params:Runtime.QueryObjectsParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.QueryObjectsReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1688 : t) ->
            fun ~method_:(x1679 : [ `Runtime_queryObjects ]) ->
              fun
                ?params:(x1680 : Runtime.QueryObjectsParameterType.t option)
                ->
                fun
                  ?callback:(x1681 :
                              (err:Error.t or_null ->
                                 params:Runtime.QueryObjectsReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1689 = t_to_js x1688 in
                       Ojs.call (Ojs.get_prop_ascii x1689 "post") "apply"
                         [|x1689;((let x1682 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1682 "push"
                                        [|((match x1679 with
                                            | `Runtime_queryObjects ->
                                                Ojs.string_to_js
                                                  "RuntimeQueryObjects"))|]);
                                   (match x1680 with
                                    | Some x1687 ->
                                        ignore
                                          (Ojs.call x1682 "push"
                                             [|(Runtime.QueryObjectsParameterType.t_to_js
                                                  x1687)|])
                                    | None -> ());
                                   (match x1681 with
                                    | Some x1683 ->
                                        ignore
                                          (Ojs.call x1682 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1684 : Ojs.t) ->
                                                     fun (x1686 : Ojs.t) ->
                                                       x1683
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1684)
                                                         ~params:(Runtime.QueryObjectsReturnType.t_of_js
                                                                    x1686)))|])
                                    | None -> ());
                                   x1682))|])
        let (post'''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_queryObjects ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.QueryObjectsReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1697 : t) ->
            fun ~method_:(x1690 : [ `Runtime_queryObjects ]) ->
              fun
                ?callback:(x1691 :
                            (err:Error.t or_null ->
                               params:Runtime.QueryObjectsReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1698 = t_to_js x1697 in
                     Ojs.call (Ojs.get_prop_ascii x1698 "post") "apply"
                       [|x1698;((let x1692 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1692 "push"
                                      [|((match x1690 with
                                          | `Runtime_queryObjects ->
                                              Ojs.string_to_js
                                                "RuntimeQueryObjects"))|]);
                                 (match x1691 with
                                  | Some x1693 ->
                                      ignore
                                        (Ojs.call x1692 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1694 : Ojs.t) ->
                                                   fun (x1696 : Ojs.t) ->
                                                     x1693
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1694)
                                                       ~params:(Runtime.QueryObjectsReturnType.t_of_js
                                                                  x1696)))|])
                                  | None -> ());
                                 x1692))|])
        let (post''''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_globalLexicalScopeNames ] ->
              ?params:Runtime.GlobalLexicalScopeNamesParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime.GlobalLexicalScopeNamesReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1708 : t) ->
            fun ~method_:(x1699 : [ `Runtime_globalLexicalScopeNames ]) ->
              fun
                ?params:(x1700 :
                          Runtime.GlobalLexicalScopeNamesParameterType.t
                            option)
                ->
                fun
                  ?callback:(x1701 :
                              (err:Error.t or_null ->
                                 params:Runtime.GlobalLexicalScopeNamesReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1709 = t_to_js x1708 in
                       Ojs.call (Ojs.get_prop_ascii x1709 "post") "apply"
                         [|x1709;((let x1702 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1702 "push"
                                        [|((match x1699 with
                                            | `Runtime_globalLexicalScopeNames
                                                ->
                                                Ojs.string_to_js
                                                  "RuntimeGlobalLexicalScopeNames"))|]);
                                   (match x1700 with
                                    | Some x1707 ->
                                        ignore
                                          (Ojs.call x1702 "push"
                                             [|(Runtime.GlobalLexicalScopeNamesParameterType.t_to_js
                                                  x1707)|])
                                    | None -> ());
                                   (match x1701 with
                                    | Some x1703 ->
                                        ignore
                                          (Ojs.call x1702 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1704 : Ojs.t) ->
                                                     fun (x1706 : Ojs.t) ->
                                                       x1703
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1704)
                                                         ~params:(Runtime.GlobalLexicalScopeNamesReturnType.t_of_js
                                                                    x1706)))|])
                                    | None -> ());
                                   x1702))|])
        let (post'''''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_globalLexicalScopeNames ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime.GlobalLexicalScopeNamesReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x1717 : t) ->
            fun ~method_:(x1710 : [ `Runtime_globalLexicalScopeNames ]) ->
              fun
                ?callback:(x1711 :
                            (err:Error.t or_null ->
                               params:Runtime.GlobalLexicalScopeNamesReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1718 = t_to_js x1717 in
                     Ojs.call (Ojs.get_prop_ascii x1718 "post") "apply"
                       [|x1718;((let x1712 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1712 "push"
                                      [|((match x1710 with
                                          | `Runtime_globalLexicalScopeNames
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeGlobalLexicalScopeNames"))|]);
                                 (match x1711 with
                                  | Some x1713 ->
                                      ignore
                                        (Ojs.call x1712 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1714 : Ojs.t) ->
                                                   fun (x1716 : Ojs.t) ->
                                                     x1713
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1714)
                                                       ~params:(Runtime.GlobalLexicalScopeNamesReturnType.t_of_js
                                                                  x1716)))|])
                                  | None -> ());
                                 x1712))|])
        let (post''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_enable ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.EnableReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1726 : t) ->
            fun ~method_:(x1719 : [ `Debugger_enable ]) ->
              fun
                ?callback:(x1720 :
                            (err:Error.t or_null ->
                               params:Debugger.EnableReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1727 = t_to_js x1726 in
                     Ojs.call (Ojs.get_prop_ascii x1727 "post") "apply"
                       [|x1727;((let x1721 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1721 "push"
                                      [|((match x1719 with
                                          | `Debugger_enable ->
                                              Ojs.string_to_js
                                                "DebuggerEnable"))|]);
                                 (match x1720 with
                                  | Some x1722 ->
                                      ignore
                                        (Ojs.call x1721 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1723 : Ojs.t) ->
                                                   fun (x1725 : Ojs.t) ->
                                                     x1722
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1723)
                                                       ~params:(Debugger.EnableReturnType.t_of_js
                                                                  x1725)))|])
                                  | None -> ());
                                 x1721))|])
        let (post'''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1734 : t) ->
            fun ~method_:(x1728 : [ `Debugger_disable ]) ->
              fun ?callback:(x1729 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1735 = t_to_js x1734 in
                     Ojs.call (Ojs.get_prop_ascii x1735 "post") "apply"
                       [|x1735;((let x1730 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1730 "push"
                                      [|((match x1728 with
                                          | `Debugger_disable ->
                                              Ojs.string_to_js
                                                "DebuggerDisable"))|]);
                                 (match x1729 with
                                  | Some x1731 ->
                                      ignore
                                        (Ojs.call x1730 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1732 : Ojs.t) ->
                                                   x1731
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1732)))|])
                                  | None -> ());
                                 x1730))|])
        let (post''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointsActive ] ->
              ?params:Debugger.SetBreakpointsActiveParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1744 : t) ->
            fun ~method_:(x1736 : [ `Debugger_setBreakpointsActive ]) ->
              fun
                ?params:(x1737 :
                          Debugger.SetBreakpointsActiveParameterType.t option)
                ->
                fun ?callback:(x1738 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1745 = t_to_js x1744 in
                       Ojs.call (Ojs.get_prop_ascii x1745 "post") "apply"
                         [|x1745;((let x1739 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1739 "push"
                                        [|((match x1736 with
                                            | `Debugger_setBreakpointsActive
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpointsActive"))|]);
                                   (match x1737 with
                                    | Some x1743 ->
                                        ignore
                                          (Ojs.call x1739 "push"
                                             [|(Debugger.SetBreakpointsActiveParameterType.t_to_js
                                                  x1743)|])
                                    | None -> ());
                                   (match x1738 with
                                    | Some x1740 ->
                                        ignore
                                          (Ojs.call x1739 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1741 : Ojs.t) ->
                                                     x1740
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1741)))|])
                                    | None -> ());
                                   x1739))|])
        let (post'''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointsActive ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1752 : t) ->
            fun ~method_:(x1746 : [ `Debugger_setBreakpointsActive ]) ->
              fun ?callback:(x1747 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1753 = t_to_js x1752 in
                     Ojs.call (Ojs.get_prop_ascii x1753 "post") "apply"
                       [|x1753;((let x1748 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1748 "push"
                                      [|((match x1746 with
                                          | `Debugger_setBreakpointsActive ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpointsActive"))|]);
                                 (match x1747 with
                                  | Some x1749 ->
                                      ignore
                                        (Ojs.call x1748 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1750 : Ojs.t) ->
                                                   x1749
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1750)))|])
                                  | None -> ());
                                 x1748))|])
        let (post''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setSkipAllPauses ] ->
              ?params:Debugger.SetSkipAllPausesParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1762 : t) ->
            fun ~method_:(x1754 : [ `Debugger_setSkipAllPauses ]) ->
              fun
                ?params:(x1755 :
                          Debugger.SetSkipAllPausesParameterType.t option)
                ->
                fun ?callback:(x1756 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1763 = t_to_js x1762 in
                       Ojs.call (Ojs.get_prop_ascii x1763 "post") "apply"
                         [|x1763;((let x1757 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1757 "push"
                                        [|((match x1754 with
                                            | `Debugger_setSkipAllPauses ->
                                                Ojs.string_to_js
                                                  "DebuggerSetSkipAllPauses"))|]);
                                   (match x1755 with
                                    | Some x1761 ->
                                        ignore
                                          (Ojs.call x1757 "push"
                                             [|(Debugger.SetSkipAllPausesParameterType.t_to_js
                                                  x1761)|])
                                    | None -> ());
                                   (match x1756 with
                                    | Some x1758 ->
                                        ignore
                                          (Ojs.call x1757 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1759 : Ojs.t) ->
                                                     x1758
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1759)))|])
                                    | None -> ());
                                   x1757))|])
        let (post'''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setSkipAllPauses ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1770 : t) ->
            fun ~method_:(x1764 : [ `Debugger_setSkipAllPauses ]) ->
              fun ?callback:(x1765 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1771 = t_to_js x1770 in
                     Ojs.call (Ojs.get_prop_ascii x1771 "post") "apply"
                       [|x1771;((let x1766 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1766 "push"
                                      [|((match x1764 with
                                          | `Debugger_setSkipAllPauses ->
                                              Ojs.string_to_js
                                                "DebuggerSetSkipAllPauses"))|]);
                                 (match x1765 with
                                  | Some x1767 ->
                                      ignore
                                        (Ojs.call x1766 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1768 : Ojs.t) ->
                                                   x1767
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1768)))|])
                                  | None -> ());
                                 x1766))|])
        let (post''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointByUrl ] ->
              ?params:Debugger.SetBreakpointByUrlParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.SetBreakpointByUrlReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1781 : t) ->
            fun ~method_:(x1772 : [ `Debugger_setBreakpointByUrl ]) ->
              fun
                ?params:(x1773 :
                          Debugger.SetBreakpointByUrlParameterType.t option)
                ->
                fun
                  ?callback:(x1774 :
                              (err:Error.t or_null ->
                                 params:Debugger.SetBreakpointByUrlReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1782 = t_to_js x1781 in
                       Ojs.call (Ojs.get_prop_ascii x1782 "post") "apply"
                         [|x1782;((let x1775 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1775 "push"
                                        [|((match x1772 with
                                            | `Debugger_setBreakpointByUrl ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpointByUrl"))|]);
                                   (match x1773 with
                                    | Some x1780 ->
                                        ignore
                                          (Ojs.call x1775 "push"
                                             [|(Debugger.SetBreakpointByUrlParameterType.t_to_js
                                                  x1780)|])
                                    | None -> ());
                                   (match x1774 with
                                    | Some x1776 ->
                                        ignore
                                          (Ojs.call x1775 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1777 : Ojs.t) ->
                                                     fun (x1779 : Ojs.t) ->
                                                       x1776
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1777)
                                                         ~params:(Debugger.SetBreakpointByUrlReturnType.t_of_js
                                                                    x1779)))|])
                                    | None -> ());
                                   x1775))|])
        let (post'''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointByUrl ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.SetBreakpointByUrlReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x1790 : t) ->
            fun ~method_:(x1783 : [ `Debugger_setBreakpointByUrl ]) ->
              fun
                ?callback:(x1784 :
                            (err:Error.t or_null ->
                               params:Debugger.SetBreakpointByUrlReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1791 = t_to_js x1790 in
                     Ojs.call (Ojs.get_prop_ascii x1791 "post") "apply"
                       [|x1791;((let x1785 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1785 "push"
                                      [|((match x1783 with
                                          | `Debugger_setBreakpointByUrl ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpointByUrl"))|]);
                                 (match x1784 with
                                  | Some x1786 ->
                                      ignore
                                        (Ojs.call x1785 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1787 : Ojs.t) ->
                                                   fun (x1789 : Ojs.t) ->
                                                     x1786
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1787)
                                                       ~params:(Debugger.SetBreakpointByUrlReturnType.t_of_js
                                                                  x1789)))|])
                                  | None -> ());
                                 x1785))|])
        let (post''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpoint ] ->
              ?params:Debugger.SetBreakpointParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.SetBreakpointReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1801 : t) ->
            fun ~method_:(x1792 : [ `Debugger_setBreakpoint ]) ->
              fun
                ?params:(x1793 :
                          Debugger.SetBreakpointParameterType.t option)
                ->
                fun
                  ?callback:(x1794 :
                              (err:Error.t or_null ->
                                 params:Debugger.SetBreakpointReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1802 = t_to_js x1801 in
                       Ojs.call (Ojs.get_prop_ascii x1802 "post") "apply"
                         [|x1802;((let x1795 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1795 "push"
                                        [|((match x1792 with
                                            | `Debugger_setBreakpoint ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpoint"))|]);
                                   (match x1793 with
                                    | Some x1800 ->
                                        ignore
                                          (Ojs.call x1795 "push"
                                             [|(Debugger.SetBreakpointParameterType.t_to_js
                                                  x1800)|])
                                    | None -> ());
                                   (match x1794 with
                                    | Some x1796 ->
                                        ignore
                                          (Ojs.call x1795 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1797 : Ojs.t) ->
                                                     fun (x1799 : Ojs.t) ->
                                                       x1796
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1797)
                                                         ~params:(Debugger.SetBreakpointReturnType.t_of_js
                                                                    x1799)))|])
                                    | None -> ());
                                   x1795))|])
        let (post'''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpoint ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.SetBreakpointReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1810 : t) ->
            fun ~method_:(x1803 : [ `Debugger_setBreakpoint ]) ->
              fun
                ?callback:(x1804 :
                            (err:Error.t or_null ->
                               params:Debugger.SetBreakpointReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1811 = t_to_js x1810 in
                     Ojs.call (Ojs.get_prop_ascii x1811 "post") "apply"
                       [|x1811;((let x1805 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1805 "push"
                                      [|((match x1803 with
                                          | `Debugger_setBreakpoint ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpoint"))|]);
                                 (match x1804 with
                                  | Some x1806 ->
                                      ignore
                                        (Ojs.call x1805 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1807 : Ojs.t) ->
                                                   fun (x1809 : Ojs.t) ->
                                                     x1806
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1807)
                                                       ~params:(Debugger.SetBreakpointReturnType.t_of_js
                                                                  x1809)))|])
                                  | None -> ());
                                 x1805))|])
        let (post''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_removeBreakpoint ] ->
              ?params:Debugger.RemoveBreakpointParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1820 : t) ->
            fun ~method_:(x1812 : [ `Debugger_removeBreakpoint ]) ->
              fun
                ?params:(x1813 :
                          Debugger.RemoveBreakpointParameterType.t option)
                ->
                fun ?callback:(x1814 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1821 = t_to_js x1820 in
                       Ojs.call (Ojs.get_prop_ascii x1821 "post") "apply"
                         [|x1821;((let x1815 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1815 "push"
                                        [|((match x1812 with
                                            | `Debugger_removeBreakpoint ->
                                                Ojs.string_to_js
                                                  "DebuggerRemoveBreakpoint"))|]);
                                   (match x1813 with
                                    | Some x1819 ->
                                        ignore
                                          (Ojs.call x1815 "push"
                                             [|(Debugger.RemoveBreakpointParameterType.t_to_js
                                                  x1819)|])
                                    | None -> ());
                                   (match x1814 with
                                    | Some x1816 ->
                                        ignore
                                          (Ojs.call x1815 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1817 : Ojs.t) ->
                                                     x1816
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1817)))|])
                                    | None -> ());
                                   x1815))|])
        let (post'''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_removeBreakpoint ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1828 : t) ->
            fun ~method_:(x1822 : [ `Debugger_removeBreakpoint ]) ->
              fun ?callback:(x1823 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1829 = t_to_js x1828 in
                     Ojs.call (Ojs.get_prop_ascii x1829 "post") "apply"
                       [|x1829;((let x1824 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1824 "push"
                                      [|((match x1822 with
                                          | `Debugger_removeBreakpoint ->
                                              Ojs.string_to_js
                                                "DebuggerRemoveBreakpoint"))|]);
                                 (match x1823 with
                                  | Some x1825 ->
                                      ignore
                                        (Ojs.call x1824 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1826 : Ojs.t) ->
                                                   x1825
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1826)))|])
                                  | None -> ());
                                 x1824))|])
        let (post''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getPossibleBreakpoints ] ->
              ?params:Debugger.GetPossibleBreakpointsParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.GetPossibleBreakpointsReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1839 : t) ->
            fun ~method_:(x1830 : [ `Debugger_getPossibleBreakpoints ]) ->
              fun
                ?params:(x1831 :
                          Debugger.GetPossibleBreakpointsParameterType.t
                            option)
                ->
                fun
                  ?callback:(x1832 :
                              (err:Error.t or_null ->
                                 params:Debugger.GetPossibleBreakpointsReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1840 = t_to_js x1839 in
                       Ojs.call (Ojs.get_prop_ascii x1840 "post") "apply"
                         [|x1840;((let x1833 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1833 "push"
                                        [|((match x1830 with
                                            | `Debugger_getPossibleBreakpoints
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerGetPossibleBreakpoints"))|]);
                                   (match x1831 with
                                    | Some x1838 ->
                                        ignore
                                          (Ojs.call x1833 "push"
                                             [|(Debugger.GetPossibleBreakpointsParameterType.t_to_js
                                                  x1838)|])
                                    | None -> ());
                                   (match x1832 with
                                    | Some x1834 ->
                                        ignore
                                          (Ojs.call x1833 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1835 : Ojs.t) ->
                                                     fun (x1837 : Ojs.t) ->
                                                       x1834
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1835)
                                                         ~params:(Debugger.GetPossibleBreakpointsReturnType.t_of_js
                                                                    x1837)))|])
                                    | None -> ());
                                   x1833))|])
        let (post'''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getPossibleBreakpoints ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.GetPossibleBreakpointsReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x1848 : t) ->
            fun ~method_:(x1841 : [ `Debugger_getPossibleBreakpoints ]) ->
              fun
                ?callback:(x1842 :
                            (err:Error.t or_null ->
                               params:Debugger.GetPossibleBreakpointsReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1849 = t_to_js x1848 in
                     Ojs.call (Ojs.get_prop_ascii x1849 "post") "apply"
                       [|x1849;((let x1843 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1843 "push"
                                      [|((match x1841 with
                                          | `Debugger_getPossibleBreakpoints
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerGetPossibleBreakpoints"))|]);
                                 (match x1842 with
                                  | Some x1844 ->
                                      ignore
                                        (Ojs.call x1843 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1845 : Ojs.t) ->
                                                   fun (x1847 : Ojs.t) ->
                                                     x1844
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1845)
                                                       ~params:(Debugger.GetPossibleBreakpointsReturnType.t_of_js
                                                                  x1847)))|])
                                  | None -> ());
                                 x1843))|])
        let (post''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_continueToLocation ] ->
              ?params:Debugger.ContinueToLocationParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1858 : t) ->
            fun ~method_:(x1850 : [ `Debugger_continueToLocation ]) ->
              fun
                ?params:(x1851 :
                          Debugger.ContinueToLocationParameterType.t option)
                ->
                fun ?callback:(x1852 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1859 = t_to_js x1858 in
                       Ojs.call (Ojs.get_prop_ascii x1859 "post") "apply"
                         [|x1859;((let x1853 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1853 "push"
                                        [|((match x1850 with
                                            | `Debugger_continueToLocation ->
                                                Ojs.string_to_js
                                                  "DebuggerContinueToLocation"))|]);
                                   (match x1851 with
                                    | Some x1857 ->
                                        ignore
                                          (Ojs.call x1853 "push"
                                             [|(Debugger.ContinueToLocationParameterType.t_to_js
                                                  x1857)|])
                                    | None -> ());
                                   (match x1852 with
                                    | Some x1854 ->
                                        ignore
                                          (Ojs.call x1853 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1855 : Ojs.t) ->
                                                     x1854
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1855)))|])
                                    | None -> ());
                                   x1853))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_continueToLocation ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1866 : t) ->
            fun ~method_:(x1860 : [ `Debugger_continueToLocation ]) ->
              fun ?callback:(x1861 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1867 = t_to_js x1866 in
                     Ojs.call (Ojs.get_prop_ascii x1867 "post") "apply"
                       [|x1867;((let x1862 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1862 "push"
                                      [|((match x1860 with
                                          | `Debugger_continueToLocation ->
                                              Ojs.string_to_js
                                                "DebuggerContinueToLocation"))|]);
                                 (match x1861 with
                                  | Some x1863 ->
                                      ignore
                                        (Ojs.call x1862 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1864 : Ojs.t) ->
                                                   x1863
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1864)))|])
                                  | None -> ());
                                 x1862))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pauseOnAsyncCall ] ->
              ?params:Debugger.PauseOnAsyncCallParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1876 : t) ->
            fun ~method_:(x1868 : [ `Debugger_pauseOnAsyncCall ]) ->
              fun
                ?params:(x1869 :
                          Debugger.PauseOnAsyncCallParameterType.t option)
                ->
                fun ?callback:(x1870 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1877 = t_to_js x1876 in
                       Ojs.call (Ojs.get_prop_ascii x1877 "post") "apply"
                         [|x1877;((let x1871 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1871 "push"
                                        [|((match x1868 with
                                            | `Debugger_pauseOnAsyncCall ->
                                                Ojs.string_to_js
                                                  "DebuggerPauseOnAsyncCall"))|]);
                                   (match x1869 with
                                    | Some x1875 ->
                                        ignore
                                          (Ojs.call x1871 "push"
                                             [|(Debugger.PauseOnAsyncCallParameterType.t_to_js
                                                  x1875)|])
                                    | None -> ());
                                   (match x1870 with
                                    | Some x1872 ->
                                        ignore
                                          (Ojs.call x1871 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1873 : Ojs.t) ->
                                                     x1872
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1873)))|])
                                    | None -> ());
                                   x1871))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pauseOnAsyncCall ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1884 : t) ->
            fun ~method_:(x1878 : [ `Debugger_pauseOnAsyncCall ]) ->
              fun ?callback:(x1879 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1885 = t_to_js x1884 in
                     Ojs.call (Ojs.get_prop_ascii x1885 "post") "apply"
                       [|x1885;((let x1880 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1880 "push"
                                      [|((match x1878 with
                                          | `Debugger_pauseOnAsyncCall ->
                                              Ojs.string_to_js
                                                "DebuggerPauseOnAsyncCall"))|]);
                                 (match x1879 with
                                  | Some x1881 ->
                                      ignore
                                        (Ojs.call x1880 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1882 : Ojs.t) ->
                                                   x1881
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1882)))|])
                                  | None -> ());
                                 x1880))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepOver ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1892 : t) ->
            fun ~method_:(x1886 : [ `Debugger_stepOver ]) ->
              fun ?callback:(x1887 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1893 = t_to_js x1892 in
                     Ojs.call (Ojs.get_prop_ascii x1893 "post") "apply"
                       [|x1893;((let x1888 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1888 "push"
                                      [|((match x1886 with
                                          | `Debugger_stepOver ->
                                              Ojs.string_to_js
                                                "DebuggerStepOver"))|]);
                                 (match x1887 with
                                  | Some x1889 ->
                                      ignore
                                        (Ojs.call x1888 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1890 : Ojs.t) ->
                                                   x1889
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1890)))|])
                                  | None -> ());
                                 x1888))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepInto ] ->
              ?params:Debugger.StepIntoParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1902 : t) ->
            fun ~method_:(x1894 : [ `Debugger_stepInto ]) ->
              fun ?params:(x1895 : Debugger.StepIntoParameterType.t option)
                ->
                fun ?callback:(x1896 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1903 = t_to_js x1902 in
                       Ojs.call (Ojs.get_prop_ascii x1903 "post") "apply"
                         [|x1903;((let x1897 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1897 "push"
                                        [|((match x1894 with
                                            | `Debugger_stepInto ->
                                                Ojs.string_to_js
                                                  "DebuggerStepInto"))|]);
                                   (match x1895 with
                                    | Some x1901 ->
                                        ignore
                                          (Ojs.call x1897 "push"
                                             [|(Debugger.StepIntoParameterType.t_to_js
                                                  x1901)|])
                                    | None -> ());
                                   (match x1896 with
                                    | Some x1898 ->
                                        ignore
                                          (Ojs.call x1897 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1899 : Ojs.t) ->
                                                     x1898
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1899)))|])
                                    | None -> ());
                                   x1897))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepInto ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1910 : t) ->
            fun ~method_:(x1904 : [ `Debugger_stepInto ]) ->
              fun ?callback:(x1905 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1911 = t_to_js x1910 in
                     Ojs.call (Ojs.get_prop_ascii x1911 "post") "apply"
                       [|x1911;((let x1906 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1906 "push"
                                      [|((match x1904 with
                                          | `Debugger_stepInto ->
                                              Ojs.string_to_js
                                                "DebuggerStepInto"))|]);
                                 (match x1905 with
                                  | Some x1907 ->
                                      ignore
                                        (Ojs.call x1906 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1908 : Ojs.t) ->
                                                   x1907
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1908)))|])
                                  | None -> ());
                                 x1906))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepOut ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1918 : t) ->
            fun ~method_:(x1912 : [ `Debugger_stepOut ]) ->
              fun ?callback:(x1913 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1919 = t_to_js x1918 in
                     Ojs.call (Ojs.get_prop_ascii x1919 "post") "apply"
                       [|x1919;((let x1914 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1914 "push"
                                      [|((match x1912 with
                                          | `Debugger_stepOut ->
                                              Ojs.string_to_js
                                                "DebuggerStepOut"))|]);
                                 (match x1913 with
                                  | Some x1915 ->
                                      ignore
                                        (Ojs.call x1914 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1916 : Ojs.t) ->
                                                   x1915
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1916)))|])
                                  | None -> ());
                                 x1914))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pause ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1926 : t) ->
            fun ~method_:(x1920 : [ `Debugger_pause ]) ->
              fun ?callback:(x1921 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1927 = t_to_js x1926 in
                     Ojs.call (Ojs.get_prop_ascii x1927 "post") "apply"
                       [|x1927;((let x1922 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1922 "push"
                                      [|((match x1920 with
                                          | `Debugger_pause ->
                                              Ojs.string_to_js
                                                "DebuggerPause"))|]);
                                 (match x1921 with
                                  | Some x1923 ->
                                      ignore
                                        (Ojs.call x1922 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1924 : Ojs.t) ->
                                                   x1923
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1924)))|])
                                  | None -> ());
                                 x1922))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_scheduleStepIntoAsync ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1934 : t) ->
            fun ~method_:(x1928 : [ `Debugger_scheduleStepIntoAsync ]) ->
              fun ?callback:(x1929 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1935 = t_to_js x1934 in
                     Ojs.call (Ojs.get_prop_ascii x1935 "post") "apply"
                       [|x1935;((let x1930 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1930 "push"
                                      [|((match x1928 with
                                          | `Debugger_scheduleStepIntoAsync
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerScheduleStepIntoAsync"))|]);
                                 (match x1929 with
                                  | Some x1931 ->
                                      ignore
                                        (Ojs.call x1930 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1932 : Ojs.t) ->
                                                   x1931
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1932)))|])
                                  | None -> ());
                                 x1930))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_resume ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1942 : t) ->
            fun ~method_:(x1936 : [ `Debugger_resume ]) ->
              fun ?callback:(x1937 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1943 = t_to_js x1942 in
                     Ojs.call (Ojs.get_prop_ascii x1943 "post") "apply"
                       [|x1943;((let x1938 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1938 "push"
                                      [|((match x1936 with
                                          | `Debugger_resume ->
                                              Ojs.string_to_js
                                                "DebuggerResume"))|]);
                                 (match x1937 with
                                  | Some x1939 ->
                                      ignore
                                        (Ojs.call x1938 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1940 : Ojs.t) ->
                                                   x1939
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1940)))|])
                                  | None -> ());
                                 x1938))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getStackTrace ] ->
              ?params:Debugger.GetStackTraceParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.GetStackTraceReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1953 : t) ->
            fun ~method_:(x1944 : [ `Debugger_getStackTrace ]) ->
              fun
                ?params:(x1945 :
                          Debugger.GetStackTraceParameterType.t option)
                ->
                fun
                  ?callback:(x1946 :
                              (err:Error.t or_null ->
                                 params:Debugger.GetStackTraceReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1954 = t_to_js x1953 in
                       Ojs.call (Ojs.get_prop_ascii x1954 "post") "apply"
                         [|x1954;((let x1947 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1947 "push"
                                        [|((match x1944 with
                                            | `Debugger_getStackTrace ->
                                                Ojs.string_to_js
                                                  "DebuggerGetStackTrace"))|]);
                                   (match x1945 with
                                    | Some x1952 ->
                                        ignore
                                          (Ojs.call x1947 "push"
                                             [|(Debugger.GetStackTraceParameterType.t_to_js
                                                  x1952)|])
                                    | None -> ());
                                   (match x1946 with
                                    | Some x1948 ->
                                        ignore
                                          (Ojs.call x1947 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1949 : Ojs.t) ->
                                                     fun (x1951 : Ojs.t) ->
                                                       x1948
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1949)
                                                         ~params:(Debugger.GetStackTraceReturnType.t_of_js
                                                                    x1951)))|])
                                    | None -> ());
                                   x1947))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getStackTrace ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.GetStackTraceReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1962 : t) ->
            fun ~method_:(x1955 : [ `Debugger_getStackTrace ]) ->
              fun
                ?callback:(x1956 :
                            (err:Error.t or_null ->
                               params:Debugger.GetStackTraceReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1963 = t_to_js x1962 in
                     Ojs.call (Ojs.get_prop_ascii x1963 "post") "apply"
                       [|x1963;((let x1957 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1957 "push"
                                      [|((match x1955 with
                                          | `Debugger_getStackTrace ->
                                              Ojs.string_to_js
                                                "DebuggerGetStackTrace"))|]);
                                 (match x1956 with
                                  | Some x1958 ->
                                      ignore
                                        (Ojs.call x1957 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1959 : Ojs.t) ->
                                                   fun (x1961 : Ojs.t) ->
                                                     x1958
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1959)
                                                       ~params:(Debugger.GetStackTraceReturnType.t_of_js
                                                                  x1961)))|])
                                  | None -> ());
                                 x1957))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_searchInContent ] ->
              ?params:Debugger.SearchInContentParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.SearchInContentReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1973 : t) ->
            fun ~method_:(x1964 : [ `Debugger_searchInContent ]) ->
              fun
                ?params:(x1965 :
                          Debugger.SearchInContentParameterType.t option)
                ->
                fun
                  ?callback:(x1966 :
                              (err:Error.t or_null ->
                                 params:Debugger.SearchInContentReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1974 = t_to_js x1973 in
                       Ojs.call (Ojs.get_prop_ascii x1974 "post") "apply"
                         [|x1974;((let x1967 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1967 "push"
                                        [|((match x1964 with
                                            | `Debugger_searchInContent ->
                                                Ojs.string_to_js
                                                  "DebuggerSearchInContent"))|]);
                                   (match x1965 with
                                    | Some x1972 ->
                                        ignore
                                          (Ojs.call x1967 "push"
                                             [|(Debugger.SearchInContentParameterType.t_to_js
                                                  x1972)|])
                                    | None -> ());
                                   (match x1966 with
                                    | Some x1968 ->
                                        ignore
                                          (Ojs.call x1967 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1969 : Ojs.t) ->
                                                     fun (x1971 : Ojs.t) ->
                                                       x1968
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1969)
                                                         ~params:(Debugger.SearchInContentReturnType.t_of_js
                                                                    x1971)))|])
                                    | None -> ());
                                   x1967))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_searchInContent ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.SearchInContentReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x1982 : t) ->
            fun ~method_:(x1975 : [ `Debugger_searchInContent ]) ->
              fun
                ?callback:(x1976 :
                            (err:Error.t or_null ->
                               params:Debugger.SearchInContentReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1983 = t_to_js x1982 in
                     Ojs.call (Ojs.get_prop_ascii x1983 "post") "apply"
                       [|x1983;((let x1977 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1977 "push"
                                      [|((match x1975 with
                                          | `Debugger_searchInContent ->
                                              Ojs.string_to_js
                                                "DebuggerSearchInContent"))|]);
                                 (match x1976 with
                                  | Some x1978 ->
                                      ignore
                                        (Ojs.call x1977 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1979 : Ojs.t) ->
                                                   fun (x1981 : Ojs.t) ->
                                                     x1978
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1979)
                                                       ~params:(Debugger.SearchInContentReturnType.t_of_js
                                                                  x1981)))|])
                                  | None -> ());
                                 x1977))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setScriptSource ] ->
              ?params:Debugger.SetScriptSourceParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.SetScriptSourceReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1993 : t) ->
            fun ~method_:(x1984 : [ `Debugger_setScriptSource ]) ->
              fun
                ?params:(x1985 :
                          Debugger.SetScriptSourceParameterType.t option)
                ->
                fun
                  ?callback:(x1986 :
                              (err:Error.t or_null ->
                                 params:Debugger.SetScriptSourceReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1994 = t_to_js x1993 in
                       Ojs.call (Ojs.get_prop_ascii x1994 "post") "apply"
                         [|x1994;((let x1987 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1987 "push"
                                        [|((match x1984 with
                                            | `Debugger_setScriptSource ->
                                                Ojs.string_to_js
                                                  "DebuggerSetScriptSource"))|]);
                                   (match x1985 with
                                    | Some x1992 ->
                                        ignore
                                          (Ojs.call x1987 "push"
                                             [|(Debugger.SetScriptSourceParameterType.t_to_js
                                                  x1992)|])
                                    | None -> ());
                                   (match x1986 with
                                    | Some x1988 ->
                                        ignore
                                          (Ojs.call x1987 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1989 : Ojs.t) ->
                                                     fun (x1991 : Ojs.t) ->
                                                       x1988
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1989)
                                                         ~params:(Debugger.SetScriptSourceReturnType.t_of_js
                                                                    x1991)))|])
                                    | None -> ());
                                   x1987))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setScriptSource ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.SetScriptSourceReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2002 : t) ->
            fun ~method_:(x1995 : [ `Debugger_setScriptSource ]) ->
              fun
                ?callback:(x1996 :
                            (err:Error.t or_null ->
                               params:Debugger.SetScriptSourceReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2003 = t_to_js x2002 in
                     Ojs.call (Ojs.get_prop_ascii x2003 "post") "apply"
                       [|x2003;((let x1997 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1997 "push"
                                      [|((match x1995 with
                                          | `Debugger_setScriptSource ->
                                              Ojs.string_to_js
                                                "DebuggerSetScriptSource"))|]);
                                 (match x1996 with
                                  | Some x1998 ->
                                      ignore
                                        (Ojs.call x1997 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1999 : Ojs.t) ->
                                                   fun (x2001 : Ojs.t) ->
                                                     x1998
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1999)
                                                       ~params:(Debugger.SetScriptSourceReturnType.t_of_js
                                                                  x2001)))|])
                                  | None -> ());
                                 x1997))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_restartFrame ] ->
              ?params:Debugger.RestartFrameParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.RestartFrameReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x2013 : t) ->
            fun ~method_:(x2004 : [ `Debugger_restartFrame ]) ->
              fun
                ?params:(x2005 : Debugger.RestartFrameParameterType.t option)
                ->
                fun
                  ?callback:(x2006 :
                              (err:Error.t or_null ->
                                 params:Debugger.RestartFrameReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2014 = t_to_js x2013 in
                       Ojs.call (Ojs.get_prop_ascii x2014 "post") "apply"
                         [|x2014;((let x2007 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2007 "push"
                                        [|((match x2004 with
                                            | `Debugger_restartFrame ->
                                                Ojs.string_to_js
                                                  "DebuggerRestartFrame"))|]);
                                   (match x2005 with
                                    | Some x2012 ->
                                        ignore
                                          (Ojs.call x2007 "push"
                                             [|(Debugger.RestartFrameParameterType.t_to_js
                                                  x2012)|])
                                    | None -> ());
                                   (match x2006 with
                                    | Some x2008 ->
                                        ignore
                                          (Ojs.call x2007 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2009 : Ojs.t) ->
                                                     fun (x2011 : Ojs.t) ->
                                                       x2008
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2009)
                                                         ~params:(Debugger.RestartFrameReturnType.t_of_js
                                                                    x2011)))|])
                                    | None -> ());
                                   x2007))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_restartFrame ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.RestartFrameReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x2022 : t) ->
            fun ~method_:(x2015 : [ `Debugger_restartFrame ]) ->
              fun
                ?callback:(x2016 :
                            (err:Error.t or_null ->
                               params:Debugger.RestartFrameReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2023 = t_to_js x2022 in
                     Ojs.call (Ojs.get_prop_ascii x2023 "post") "apply"
                       [|x2023;((let x2017 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2017 "push"
                                      [|((match x2015 with
                                          | `Debugger_restartFrame ->
                                              Ojs.string_to_js
                                                "DebuggerRestartFrame"))|]);
                                 (match x2016 with
                                  | Some x2018 ->
                                      ignore
                                        (Ojs.call x2017 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2019 : Ojs.t) ->
                                                   fun (x2021 : Ojs.t) ->
                                                     x2018
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2019)
                                                       ~params:(Debugger.RestartFrameReturnType.t_of_js
                                                                  x2021)))|])
                                  | None -> ());
                                 x2017))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_getScriptSource ] ->
              ?params:Debugger.GetScriptSourceParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.GetScriptSourceReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x2033 : t) ->
            fun ~method_:(x2024 : [ `Debugger_getScriptSource ]) ->
              fun
                ?params:(x2025 :
                          Debugger.GetScriptSourceParameterType.t option)
                ->
                fun
                  ?callback:(x2026 :
                              (err:Error.t or_null ->
                                 params:Debugger.GetScriptSourceReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2034 = t_to_js x2033 in
                       Ojs.call (Ojs.get_prop_ascii x2034 "post") "apply"
                         [|x2034;((let x2027 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2027 "push"
                                        [|((match x2024 with
                                            | `Debugger_getScriptSource ->
                                                Ojs.string_to_js
                                                  "DebuggerGetScriptSource"))|]);
                                   (match x2025 with
                                    | Some x2032 ->
                                        ignore
                                          (Ojs.call x2027 "push"
                                             [|(Debugger.GetScriptSourceParameterType.t_to_js
                                                  x2032)|])
                                    | None -> ());
                                   (match x2026 with
                                    | Some x2028 ->
                                        ignore
                                          (Ojs.call x2027 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2029 : Ojs.t) ->
                                                     fun (x2031 : Ojs.t) ->
                                                       x2028
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2029)
                                                         ~params:(Debugger.GetScriptSourceReturnType.t_of_js
                                                                    x2031)))|])
                                    | None -> ());
                                   x2027))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_getScriptSource ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.GetScriptSourceReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2042 : t) ->
            fun ~method_:(x2035 : [ `Debugger_getScriptSource ]) ->
              fun
                ?callback:(x2036 :
                            (err:Error.t or_null ->
                               params:Debugger.GetScriptSourceReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2043 = t_to_js x2042 in
                     Ojs.call (Ojs.get_prop_ascii x2043 "post") "apply"
                       [|x2043;((let x2037 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2037 "push"
                                      [|((match x2035 with
                                          | `Debugger_getScriptSource ->
                                              Ojs.string_to_js
                                                "DebuggerGetScriptSource"))|]);
                                 (match x2036 with
                                  | Some x2038 ->
                                      ignore
                                        (Ojs.call x2037 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2039 : Ojs.t) ->
                                                   fun (x2041 : Ojs.t) ->
                                                     x2038
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2039)
                                                       ~params:(Debugger.GetScriptSourceReturnType.t_of_js
                                                                  x2041)))|])
                                  | None -> ());
                                 x2037))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setPauseOnExceptions ] ->
              ?params:Debugger.SetPauseOnExceptionsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2052 : t) ->
            fun ~method_:(x2044 : [ `Debugger_setPauseOnExceptions ]) ->
              fun
                ?params:(x2045 :
                          Debugger.SetPauseOnExceptionsParameterType.t option)
                ->
                fun ?callback:(x2046 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2053 = t_to_js x2052 in
                       Ojs.call (Ojs.get_prop_ascii x2053 "post") "apply"
                         [|x2053;((let x2047 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2047 "push"
                                        [|((match x2044 with
                                            | `Debugger_setPauseOnExceptions
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetPauseOnExceptions"))|]);
                                   (match x2045 with
                                    | Some x2051 ->
                                        ignore
                                          (Ojs.call x2047 "push"
                                             [|(Debugger.SetPauseOnExceptionsParameterType.t_to_js
                                                  x2051)|])
                                    | None -> ());
                                   (match x2046 with
                                    | Some x2048 ->
                                        ignore
                                          (Ojs.call x2047 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2049 : Ojs.t) ->
                                                     x2048
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2049)))|])
                                    | None -> ());
                                   x2047))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setPauseOnExceptions ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2060 : t) ->
            fun ~method_:(x2054 : [ `Debugger_setPauseOnExceptions ]) ->
              fun ?callback:(x2055 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2061 = t_to_js x2060 in
                     Ojs.call (Ojs.get_prop_ascii x2061 "post") "apply"
                       [|x2061;((let x2056 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2056 "push"
                                      [|((match x2054 with
                                          | `Debugger_setPauseOnExceptions ->
                                              Ojs.string_to_js
                                                "DebuggerSetPauseOnExceptions"))|]);
                                 (match x2055 with
                                  | Some x2057 ->
                                      ignore
                                        (Ojs.call x2056 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2058 : Ojs.t) ->
                                                   x2057
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2058)))|])
                                  | None -> ());
                                 x2056))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_evaluateOnCallFrame ] ->
              ?params:Debugger.EvaluateOnCallFrameParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger.EvaluateOnCallFrameReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2071 : t) ->
            fun ~method_:(x2062 : [ `Debugger_evaluateOnCallFrame ]) ->
              fun
                ?params:(x2063 :
                          Debugger.EvaluateOnCallFrameParameterType.t option)
                ->
                fun
                  ?callback:(x2064 :
                              (err:Error.t or_null ->
                                 params:Debugger.EvaluateOnCallFrameReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2072 = t_to_js x2071 in
                       Ojs.call (Ojs.get_prop_ascii x2072 "post") "apply"
                         [|x2072;((let x2065 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2065 "push"
                                        [|((match x2062 with
                                            | `Debugger_evaluateOnCallFrame
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerEvaluateOnCallFrame"))|]);
                                   (match x2063 with
                                    | Some x2070 ->
                                        ignore
                                          (Ojs.call x2065 "push"
                                             [|(Debugger.EvaluateOnCallFrameParameterType.t_to_js
                                                  x2070)|])
                                    | None -> ());
                                   (match x2064 with
                                    | Some x2066 ->
                                        ignore
                                          (Ojs.call x2065 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2067 : Ojs.t) ->
                                                     fun (x2069 : Ojs.t) ->
                                                       x2066
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2067)
                                                         ~params:(Debugger.EvaluateOnCallFrameReturnType.t_of_js
                                                                    x2069)))|])
                                    | None -> ());
                                   x2065))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_evaluateOnCallFrame ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger.EvaluateOnCallFrameReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2080 : t) ->
            fun ~method_:(x2073 : [ `Debugger_evaluateOnCallFrame ]) ->
              fun
                ?callback:(x2074 :
                            (err:Error.t or_null ->
                               params:Debugger.EvaluateOnCallFrameReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2081 = t_to_js x2080 in
                     Ojs.call (Ojs.get_prop_ascii x2081 "post") "apply"
                       [|x2081;((let x2075 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2075 "push"
                                      [|((match x2073 with
                                          | `Debugger_evaluateOnCallFrame ->
                                              Ojs.string_to_js
                                                "DebuggerEvaluateOnCallFrame"))|]);
                                 (match x2074 with
                                  | Some x2076 ->
                                      ignore
                                        (Ojs.call x2075 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2077 : Ojs.t) ->
                                                   fun (x2079 : Ojs.t) ->
                                                     x2076
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2077)
                                                       ~params:(Debugger.EvaluateOnCallFrameReturnType.t_of_js
                                                                  x2079)))|])
                                  | None -> ());
                                 x2075))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setVariableValue ] ->
              ?params:Debugger.SetVariableValueParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2090 : t) ->
            fun ~method_:(x2082 : [ `Debugger_setVariableValue ]) ->
              fun
                ?params:(x2083 :
                          Debugger.SetVariableValueParameterType.t option)
                ->
                fun ?callback:(x2084 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2091 = t_to_js x2090 in
                       Ojs.call (Ojs.get_prop_ascii x2091 "post") "apply"
                         [|x2091;((let x2085 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2085 "push"
                                        [|((match x2082 with
                                            | `Debugger_setVariableValue ->
                                                Ojs.string_to_js
                                                  "DebuggerSetVariableValue"))|]);
                                   (match x2083 with
                                    | Some x2089 ->
                                        ignore
                                          (Ojs.call x2085 "push"
                                             [|(Debugger.SetVariableValueParameterType.t_to_js
                                                  x2089)|])
                                    | None -> ());
                                   (match x2084 with
                                    | Some x2086 ->
                                        ignore
                                          (Ojs.call x2085 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2087 : Ojs.t) ->
                                                     x2086
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2087)))|])
                                    | None -> ());
                                   x2085))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setVariableValue ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2098 : t) ->
            fun ~method_:(x2092 : [ `Debugger_setVariableValue ]) ->
              fun ?callback:(x2093 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2099 = t_to_js x2098 in
                     Ojs.call (Ojs.get_prop_ascii x2099 "post") "apply"
                       [|x2099;((let x2094 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2094 "push"
                                      [|((match x2092 with
                                          | `Debugger_setVariableValue ->
                                              Ojs.string_to_js
                                                "DebuggerSetVariableValue"))|]);
                                 (match x2093 with
                                  | Some x2095 ->
                                      ignore
                                        (Ojs.call x2094 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2096 : Ojs.t) ->
                                                   x2095
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2096)))|])
                                  | None -> ());
                                 x2094))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setReturnValue ] ->
              ?params:Debugger.SetReturnValueParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2108 : t) ->
            fun ~method_:(x2100 : [ `Debugger_setReturnValue ]) ->
              fun
                ?params:(x2101 :
                          Debugger.SetReturnValueParameterType.t option)
                ->
                fun ?callback:(x2102 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2109 = t_to_js x2108 in
                       Ojs.call (Ojs.get_prop_ascii x2109 "post") "apply"
                         [|x2109;((let x2103 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2103 "push"
                                        [|((match x2100 with
                                            | `Debugger_setReturnValue ->
                                                Ojs.string_to_js
                                                  "DebuggerSetReturnValue"))|]);
                                   (match x2101 with
                                    | Some x2107 ->
                                        ignore
                                          (Ojs.call x2103 "push"
                                             [|(Debugger.SetReturnValueParameterType.t_to_js
                                                  x2107)|])
                                    | None -> ());
                                   (match x2102 with
                                    | Some x2104 ->
                                        ignore
                                          (Ojs.call x2103 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2105 : Ojs.t) ->
                                                     x2104
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2105)))|])
                                    | None -> ());
                                   x2103))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setReturnValue ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2116 : t) ->
            fun ~method_:(x2110 : [ `Debugger_setReturnValue ]) ->
              fun ?callback:(x2111 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2117 = t_to_js x2116 in
                     Ojs.call (Ojs.get_prop_ascii x2117 "post") "apply"
                       [|x2117;((let x2112 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2112 "push"
                                      [|((match x2110 with
                                          | `Debugger_setReturnValue ->
                                              Ojs.string_to_js
                                                "DebuggerSetReturnValue"))|]);
                                 (match x2111 with
                                  | Some x2113 ->
                                      ignore
                                        (Ojs.call x2112 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2114 : Ojs.t) ->
                                                   x2113
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2114)))|])
                                  | None -> ());
                                 x2112))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setAsyncCallStackDepth ] ->
              ?params:Debugger.SetAsyncCallStackDepthParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2126 : t) ->
            fun ~method_:(x2118 : [ `Debugger_setAsyncCallStackDepth ]) ->
              fun
                ?params:(x2119 :
                          Debugger.SetAsyncCallStackDepthParameterType.t
                            option)
                ->
                fun ?callback:(x2120 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2127 = t_to_js x2126 in
                       Ojs.call (Ojs.get_prop_ascii x2127 "post") "apply"
                         [|x2127;((let x2121 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2121 "push"
                                        [|((match x2118 with
                                            | `Debugger_setAsyncCallStackDepth
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetAsyncCallStackDepth"))|]);
                                   (match x2119 with
                                    | Some x2125 ->
                                        ignore
                                          (Ojs.call x2121 "push"
                                             [|(Debugger.SetAsyncCallStackDepthParameterType.t_to_js
                                                  x2125)|])
                                    | None -> ());
                                   (match x2120 with
                                    | Some x2122 ->
                                        ignore
                                          (Ojs.call x2121 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2123 : Ojs.t) ->
                                                     x2122
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2123)))|])
                                    | None -> ());
                                   x2121))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setAsyncCallStackDepth ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2134 : t) ->
            fun ~method_:(x2128 : [ `Debugger_setAsyncCallStackDepth ]) ->
              fun ?callback:(x2129 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2135 = t_to_js x2134 in
                     Ojs.call (Ojs.get_prop_ascii x2135 "post") "apply"
                       [|x2135;((let x2130 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2130 "push"
                                      [|((match x2128 with
                                          | `Debugger_setAsyncCallStackDepth
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerSetAsyncCallStackDepth"))|]);
                                 (match x2129 with
                                  | Some x2131 ->
                                      ignore
                                        (Ojs.call x2130 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2132 : Ojs.t) ->
                                                   x2131
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2132)))|])
                                  | None -> ());
                                 x2130))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxPatterns ] ->
              ?params:Debugger.SetBlackboxPatternsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2144 : t) ->
            fun ~method_:(x2136 : [ `Debugger_setBlackboxPatterns ]) ->
              fun
                ?params:(x2137 :
                          Debugger.SetBlackboxPatternsParameterType.t option)
                ->
                fun ?callback:(x2138 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2145 = t_to_js x2144 in
                       Ojs.call (Ojs.get_prop_ascii x2145 "post") "apply"
                         [|x2145;((let x2139 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2139 "push"
                                        [|((match x2136 with
                                            | `Debugger_setBlackboxPatterns
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBlackboxPatterns"))|]);
                                   (match x2137 with
                                    | Some x2143 ->
                                        ignore
                                          (Ojs.call x2139 "push"
                                             [|(Debugger.SetBlackboxPatternsParameterType.t_to_js
                                                  x2143)|])
                                    | None -> ());
                                   (match x2138 with
                                    | Some x2140 ->
                                        ignore
                                          (Ojs.call x2139 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2141 : Ojs.t) ->
                                                     x2140
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2141)))|])
                                    | None -> ());
                                   x2139))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxPatterns ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2152 : t) ->
            fun ~method_:(x2146 : [ `Debugger_setBlackboxPatterns ]) ->
              fun ?callback:(x2147 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2153 = t_to_js x2152 in
                     Ojs.call (Ojs.get_prop_ascii x2153 "post") "apply"
                       [|x2153;((let x2148 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2148 "push"
                                      [|((match x2146 with
                                          | `Debugger_setBlackboxPatterns ->
                                              Ojs.string_to_js
                                                "DebuggerSetBlackboxPatterns"))|]);
                                 (match x2147 with
                                  | Some x2149 ->
                                      ignore
                                        (Ojs.call x2148 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2150 : Ojs.t) ->
                                                   x2149
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2150)))|])
                                  | None -> ());
                                 x2148))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxedRanges ] ->
              ?params:Debugger.SetBlackboxedRangesParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2162 : t) ->
            fun ~method_:(x2154 : [ `Debugger_setBlackboxedRanges ]) ->
              fun
                ?params:(x2155 :
                          Debugger.SetBlackboxedRangesParameterType.t option)
                ->
                fun ?callback:(x2156 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2163 = t_to_js x2162 in
                       Ojs.call (Ojs.get_prop_ascii x2163 "post") "apply"
                         [|x2163;((let x2157 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2157 "push"
                                        [|((match x2154 with
                                            | `Debugger_setBlackboxedRanges
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBlackboxedRanges"))|]);
                                   (match x2155 with
                                    | Some x2161 ->
                                        ignore
                                          (Ojs.call x2157 "push"
                                             [|(Debugger.SetBlackboxedRangesParameterType.t_to_js
                                                  x2161)|])
                                    | None -> ());
                                   (match x2156 with
                                    | Some x2158 ->
                                        ignore
                                          (Ojs.call x2157 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2159 : Ojs.t) ->
                                                     x2158
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2159)))|])
                                    | None -> ());
                                   x2157))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxedRanges ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2170 : t) ->
            fun ~method_:(x2164 : [ `Debugger_setBlackboxedRanges ]) ->
              fun ?callback:(x2165 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2171 = t_to_js x2170 in
                     Ojs.call (Ojs.get_prop_ascii x2171 "post") "apply"
                       [|x2171;((let x2166 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2166 "push"
                                      [|((match x2164 with
                                          | `Debugger_setBlackboxedRanges ->
                                              Ojs.string_to_js
                                                "DebuggerSetBlackboxedRanges"))|]);
                                 (match x2165 with
                                  | Some x2167 ->
                                      ignore
                                        (Ojs.call x2166 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2168 : Ojs.t) ->
                                                   x2167
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2168)))|])
                                  | None -> ());
                                 x2166))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2178 : t) ->
            fun ~method_:(x2172 : [ `Console_enable ]) ->
              fun ?callback:(x2173 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2179 = t_to_js x2178 in
                     Ojs.call (Ojs.get_prop_ascii x2179 "post") "apply"
                       [|x2179;((let x2174 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2174 "push"
                                      [|((match x2172 with
                                          | `Console_enable ->
                                              Ojs.string_to_js
                                                "ConsoleEnable"))|]);
                                 (match x2173 with
                                  | Some x2175 ->
                                      ignore
                                        (Ojs.call x2174 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2176 : Ojs.t) ->
                                                   x2175
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2176)))|])
                                  | None -> ());
                                 x2174))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2186 : t) ->
            fun ~method_:(x2180 : [ `Console_disable ]) ->
              fun ?callback:(x2181 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2187 = t_to_js x2186 in
                     Ojs.call (Ojs.get_prop_ascii x2187 "post") "apply"
                       [|x2187;((let x2182 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2182 "push"
                                      [|((match x2180 with
                                          | `Console_disable ->
                                              Ojs.string_to_js
                                                "ConsoleDisable"))|]);
                                 (match x2181 with
                                  | Some x2183 ->
                                      ignore
                                        (Ojs.call x2182 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2184 : Ojs.t) ->
                                                   x2183
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2184)))|])
                                  | None -> ());
                                 x2182))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_clearMessages ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2194 : t) ->
            fun ~method_:(x2188 : [ `Console_clearMessages ]) ->
              fun ?callback:(x2189 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2195 = t_to_js x2194 in
                     Ojs.call (Ojs.get_prop_ascii x2195 "post") "apply"
                       [|x2195;((let x2190 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2190 "push"
                                      [|((match x2188 with
                                          | `Console_clearMessages ->
                                              Ojs.string_to_js
                                                "ConsoleClearMessages"))|]);
                                 (match x2189 with
                                  | Some x2191 ->
                                      ignore
                                        (Ojs.call x2190 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2192 : Ojs.t) ->
                                                   x2191
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2192)))|])
                                  | None -> ());
                                 x2190))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2202 : t) ->
            fun ~method_:(x2196 : [ `Profiler_enable ]) ->
              fun ?callback:(x2197 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2203 = t_to_js x2202 in
                     Ojs.call (Ojs.get_prop_ascii x2203 "post") "apply"
                       [|x2203;((let x2198 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2198 "push"
                                      [|((match x2196 with
                                          | `Profiler_enable ->
                                              Ojs.string_to_js
                                                "ProfilerEnable"))|]);
                                 (match x2197 with
                                  | Some x2199 ->
                                      ignore
                                        (Ojs.call x2198 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2200 : Ojs.t) ->
                                                   x2199
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2200)))|])
                                  | None -> ());
                                 x2198))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2210 : t) ->
            fun ~method_:(x2204 : [ `Profiler_disable ]) ->
              fun ?callback:(x2205 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2211 = t_to_js x2210 in
                     Ojs.call (Ojs.get_prop_ascii x2211 "post") "apply"
                       [|x2211;((let x2206 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2206 "push"
                                      [|((match x2204 with
                                          | `Profiler_disable ->
                                              Ojs.string_to_js
                                                "ProfilerDisable"))|]);
                                 (match x2205 with
                                  | Some x2207 ->
                                      ignore
                                        (Ojs.call x2206 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2208 : Ojs.t) ->
                                                   x2207
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2208)))|])
                                  | None -> ());
                                 x2206))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_setSamplingInterval ] ->
              ?params:Profiler.SetSamplingIntervalParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2220 : t) ->
            fun ~method_:(x2212 : [ `Profiler_setSamplingInterval ]) ->
              fun
                ?params:(x2213 :
                          Profiler.SetSamplingIntervalParameterType.t option)
                ->
                fun ?callback:(x2214 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2221 = t_to_js x2220 in
                       Ojs.call (Ojs.get_prop_ascii x2221 "post") "apply"
                         [|x2221;((let x2215 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2215 "push"
                                        [|((match x2212 with
                                            | `Profiler_setSamplingInterval
                                                ->
                                                Ojs.string_to_js
                                                  "ProfilerSetSamplingInterval"))|]);
                                   (match x2213 with
                                    | Some x2219 ->
                                        ignore
                                          (Ojs.call x2215 "push"
                                             [|(Profiler.SetSamplingIntervalParameterType.t_to_js
                                                  x2219)|])
                                    | None -> ());
                                   (match x2214 with
                                    | Some x2216 ->
                                        ignore
                                          (Ojs.call x2215 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2217 : Ojs.t) ->
                                                     x2216
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2217)))|])
                                    | None -> ());
                                   x2215))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_setSamplingInterval ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2228 : t) ->
            fun ~method_:(x2222 : [ `Profiler_setSamplingInterval ]) ->
              fun ?callback:(x2223 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2229 = t_to_js x2228 in
                     Ojs.call (Ojs.get_prop_ascii x2229 "post") "apply"
                       [|x2229;((let x2224 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2224 "push"
                                      [|((match x2222 with
                                          | `Profiler_setSamplingInterval ->
                                              Ojs.string_to_js
                                                "ProfilerSetSamplingInterval"))|]);
                                 (match x2223 with
                                  | Some x2225 ->
                                      ignore
                                        (Ojs.call x2224 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2226 : Ojs.t) ->
                                                   x2225
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2226)))|])
                                  | None -> ());
                                 x2224))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_start ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2236 : t) ->
            fun ~method_:(x2230 : [ `Profiler_start ]) ->
              fun ?callback:(x2231 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2237 = t_to_js x2236 in
                     Ojs.call (Ojs.get_prop_ascii x2237 "post") "apply"
                       [|x2237;((let x2232 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2232 "push"
                                      [|((match x2230 with
                                          | `Profiler_start ->
                                              Ojs.string_to_js
                                                "ProfilerStart"))|]);
                                 (match x2231 with
                                  | Some x2233 ->
                                      ignore
                                        (Ojs.call x2232 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2234 : Ojs.t) ->
                                                   x2233
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2234)))|])
                                  | None -> ());
                                 x2232))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stop ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler.StopReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x2245 : t) ->
            fun ~method_:(x2238 : [ `Profiler_stop ]) ->
              fun
                ?callback:(x2239 :
                            (err:Error.t or_null ->
                               params:Profiler.StopReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2246 = t_to_js x2245 in
                     Ojs.call (Ojs.get_prop_ascii x2246 "post") "apply"
                       [|x2246;((let x2240 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2240 "push"
                                      [|((match x2238 with
                                          | `Profiler_stop ->
                                              Ojs.string_to_js "ProfilerStop"))|]);
                                 (match x2239 with
                                  | Some x2241 ->
                                      ignore
                                        (Ojs.call x2240 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2242 : Ojs.t) ->
                                                   fun (x2244 : Ojs.t) ->
                                                     x2241
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2242)
                                                       ~params:(Profiler.StopReturnType.t_of_js
                                                                  x2244)))|])
                                  | None -> ());
                                 x2240))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startPreciseCoverage ] ->
              ?params:Profiler.StartPreciseCoverageParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2255 : t) ->
            fun ~method_:(x2247 : [ `Profiler_startPreciseCoverage ]) ->
              fun
                ?params:(x2248 :
                          Profiler.StartPreciseCoverageParameterType.t option)
                ->
                fun ?callback:(x2249 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2256 = t_to_js x2255 in
                       Ojs.call (Ojs.get_prop_ascii x2256 "post") "apply"
                         [|x2256;((let x2250 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2250 "push"
                                        [|((match x2247 with
                                            | `Profiler_startPreciseCoverage
                                                ->
                                                Ojs.string_to_js
                                                  "ProfilerStartPreciseCoverage"))|]);
                                   (match x2248 with
                                    | Some x2254 ->
                                        ignore
                                          (Ojs.call x2250 "push"
                                             [|(Profiler.StartPreciseCoverageParameterType.t_to_js
                                                  x2254)|])
                                    | None -> ());
                                   (match x2249 with
                                    | Some x2251 ->
                                        ignore
                                          (Ojs.call x2250 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2252 : Ojs.t) ->
                                                     x2251
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2252)))|])
                                    | None -> ());
                                   x2250))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startPreciseCoverage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2263 : t) ->
            fun ~method_:(x2257 : [ `Profiler_startPreciseCoverage ]) ->
              fun ?callback:(x2258 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2264 = t_to_js x2263 in
                     Ojs.call (Ojs.get_prop_ascii x2264 "post") "apply"
                       [|x2264;((let x2259 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2259 "push"
                                      [|((match x2257 with
                                          | `Profiler_startPreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerStartPreciseCoverage"))|]);
                                 (match x2258 with
                                  | Some x2260 ->
                                      ignore
                                        (Ojs.call x2259 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2261 : Ojs.t) ->
                                                   x2260
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2261)))|])
                                  | None -> ());
                                 x2259))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stopPreciseCoverage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2271 : t) ->
            fun ~method_:(x2265 : [ `Profiler_stopPreciseCoverage ]) ->
              fun ?callback:(x2266 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2272 = t_to_js x2271 in
                     Ojs.call (Ojs.get_prop_ascii x2272 "post") "apply"
                       [|x2272;((let x2267 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2267 "push"
                                      [|((match x2265 with
                                          | `Profiler_stopPreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerStopPreciseCoverage"))|]);
                                 (match x2266 with
                                  | Some x2268 ->
                                      ignore
                                        (Ojs.call x2267 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2269 : Ojs.t) ->
                                                   x2268
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2269)))|])
                                  | None -> ());
                                 x2267))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_takePreciseCoverage ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler.TakePreciseCoverageReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2280 : t) ->
            fun ~method_:(x2273 : [ `Profiler_takePreciseCoverage ]) ->
              fun
                ?callback:(x2274 :
                            (err:Error.t or_null ->
                               params:Profiler.TakePreciseCoverageReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2281 = t_to_js x2280 in
                     Ojs.call (Ojs.get_prop_ascii x2281 "post") "apply"
                       [|x2281;((let x2275 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2275 "push"
                                      [|((match x2273 with
                                          | `Profiler_takePreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerTakePreciseCoverage"))|]);
                                 (match x2274 with
                                  | Some x2276 ->
                                      ignore
                                        (Ojs.call x2275 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2277 : Ojs.t) ->
                                                   fun (x2279 : Ojs.t) ->
                                                     x2276
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2277)
                                                       ~params:(Profiler.TakePreciseCoverageReturnType.t_of_js
                                                                  x2279)))|])
                                  | None -> ());
                                 x2275))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_getBestEffortCoverage ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler.GetBestEffortCoverageReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x2289 : t) ->
            fun ~method_:(x2282 : [ `Profiler_getBestEffortCoverage ]) ->
              fun
                ?callback:(x2283 :
                            (err:Error.t or_null ->
                               params:Profiler.GetBestEffortCoverageReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2290 = t_to_js x2289 in
                     Ojs.call (Ojs.get_prop_ascii x2290 "post") "apply"
                       [|x2290;((let x2284 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2284 "push"
                                      [|((match x2282 with
                                          | `Profiler_getBestEffortCoverage
                                              ->
                                              Ojs.string_to_js
                                                "ProfilerGetBestEffortCoverage"))|]);
                                 (match x2283 with
                                  | Some x2285 ->
                                      ignore
                                        (Ojs.call x2284 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2286 : Ojs.t) ->
                                                   fun (x2288 : Ojs.t) ->
                                                     x2285
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2286)
                                                       ~params:(Profiler.GetBestEffortCoverageReturnType.t_of_js
                                                                  x2288)))|])
                                  | None -> ());
                                 x2284))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startTypeProfile ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2297 : t) ->
            fun ~method_:(x2291 : [ `Profiler_startTypeProfile ]) ->
              fun ?callback:(x2292 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2298 = t_to_js x2297 in
                     Ojs.call (Ojs.get_prop_ascii x2298 "post") "apply"
                       [|x2298;((let x2293 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2293 "push"
                                      [|((match x2291 with
                                          | `Profiler_startTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerStartTypeProfile"))|]);
                                 (match x2292 with
                                  | Some x2294 ->
                                      ignore
                                        (Ojs.call x2293 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2295 : Ojs.t) ->
                                                   x2294
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2295)))|])
                                  | None -> ());
                                 x2293))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stopTypeProfile ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2305 : t) ->
            fun ~method_:(x2299 : [ `Profiler_stopTypeProfile ]) ->
              fun ?callback:(x2300 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2306 = t_to_js x2305 in
                     Ojs.call (Ojs.get_prop_ascii x2306 "post") "apply"
                       [|x2306;((let x2301 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2301 "push"
                                      [|((match x2299 with
                                          | `Profiler_stopTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerStopTypeProfile"))|]);
                                 (match x2300 with
                                  | Some x2302 ->
                                      ignore
                                        (Ojs.call x2301 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2303 : Ojs.t) ->
                                                   x2302
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2303)))|])
                                  | None -> ());
                                 x2301))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_takeTypeProfile ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler.TakeTypeProfileReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2314 : t) ->
            fun ~method_:(x2307 : [ `Profiler_takeTypeProfile ]) ->
              fun
                ?callback:(x2308 :
                            (err:Error.t or_null ->
                               params:Profiler.TakeTypeProfileReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2315 = t_to_js x2314 in
                     Ojs.call (Ojs.get_prop_ascii x2315 "post") "apply"
                       [|x2315;((let x2309 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2309 "push"
                                      [|((match x2307 with
                                          | `Profiler_takeTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerTakeTypeProfile"))|]);
                                 (match x2308 with
                                  | Some x2310 ->
                                      ignore
                                        (Ojs.call x2309 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2311 : Ojs.t) ->
                                                   fun (x2313 : Ojs.t) ->
                                                     x2310
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2311)
                                                       ~params:(Profiler.TakeTypeProfileReturnType.t_of_js
                                                                  x2313)))|])
                                  | None -> ());
                                 x2309))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2322 : t) ->
            fun ~method_:(x2316 : [ `HeapProfiler_enable ]) ->
              fun ?callback:(x2317 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2323 = t_to_js x2322 in
                     Ojs.call (Ojs.get_prop_ascii x2323 "post") "apply"
                       [|x2323;((let x2318 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2318 "push"
                                      [|((match x2316 with
                                          | `HeapProfiler_enable ->
                                              Ojs.string_to_js
                                                "HeapProfilerEnable"))|]);
                                 (match x2317 with
                                  | Some x2319 ->
                                      ignore
                                        (Ojs.call x2318 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2320 : Ojs.t) ->
                                                   x2319
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2320)))|])
                                  | None -> ());
                                 x2318))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2330 : t) ->
            fun ~method_:(x2324 : [ `HeapProfiler_disable ]) ->
              fun ?callback:(x2325 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2331 = t_to_js x2330 in
                     Ojs.call (Ojs.get_prop_ascii x2331 "post") "apply"
                       [|x2331;((let x2326 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2326 "push"
                                      [|((match x2324 with
                                          | `HeapProfiler_disable ->
                                              Ojs.string_to_js
                                                "HeapProfilerDisable"))|]);
                                 (match x2325 with
                                  | Some x2327 ->
                                      ignore
                                        (Ojs.call x2326 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2328 : Ojs.t) ->
                                                   x2327
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2328)))|])
                                  | None -> ());
                                 x2326))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startTrackingHeapObjects ] ->
              ?params:HeapProfiler.StartTrackingHeapObjectsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2340 : t) ->
            fun ~method_:(x2332 : [ `HeapProfiler_startTrackingHeapObjects ])
              ->
              fun
                ?params:(x2333 :
                          HeapProfiler.StartTrackingHeapObjectsParameterType.t
                            option)
                ->
                fun ?callback:(x2334 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2341 = t_to_js x2340 in
                       Ojs.call (Ojs.get_prop_ascii x2341 "post") "apply"
                         [|x2341;((let x2335 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2335 "push"
                                        [|((match x2332 with
                                            | `HeapProfiler_startTrackingHeapObjects
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStartTrackingHeapObjects"))|]);
                                   (match x2333 with
                                    | Some x2339 ->
                                        ignore
                                          (Ojs.call x2335 "push"
                                             [|(HeapProfiler.StartTrackingHeapObjectsParameterType.t_to_js
                                                  x2339)|])
                                    | None -> ());
                                   (match x2334 with
                                    | Some x2336 ->
                                        ignore
                                          (Ojs.call x2335 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2337 : Ojs.t) ->
                                                     x2336
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2337)))|])
                                    | None -> ());
                                   x2335))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startTrackingHeapObjects ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2348 : t) ->
            fun ~method_:(x2342 : [ `HeapProfiler_startTrackingHeapObjects ])
              ->
              fun ?callback:(x2343 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2349 = t_to_js x2348 in
                     Ojs.call (Ojs.get_prop_ascii x2349 "post") "apply"
                       [|x2349;((let x2344 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2344 "push"
                                      [|((match x2342 with
                                          | `HeapProfiler_startTrackingHeapObjects
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerStartTrackingHeapObjects"))|]);
                                 (match x2343 with
                                  | Some x2345 ->
                                      ignore
                                        (Ojs.call x2344 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2346 : Ojs.t) ->
                                                   x2345
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2346)))|])
                                  | None -> ());
                                 x2344))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopTrackingHeapObjects ] ->
              ?params:HeapProfiler.StopTrackingHeapObjectsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2358 : t) ->
            fun ~method_:(x2350 : [ `HeapProfiler_stopTrackingHeapObjects ])
              ->
              fun
                ?params:(x2351 :
                          HeapProfiler.StopTrackingHeapObjectsParameterType.t
                            option)
                ->
                fun ?callback:(x2352 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2359 = t_to_js x2358 in
                       Ojs.call (Ojs.get_prop_ascii x2359 "post") "apply"
                         [|x2359;((let x2353 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2353 "push"
                                        [|((match x2350 with
                                            | `HeapProfiler_stopTrackingHeapObjects
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStopTrackingHeapObjects"))|]);
                                   (match x2351 with
                                    | Some x2357 ->
                                        ignore
                                          (Ojs.call x2353 "push"
                                             [|(HeapProfiler.StopTrackingHeapObjectsParameterType.t_to_js
                                                  x2357)|])
                                    | None -> ());
                                   (match x2352 with
                                    | Some x2354 ->
                                        ignore
                                          (Ojs.call x2353 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2355 : Ojs.t) ->
                                                     x2354
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2355)))|])
                                    | None -> ());
                                   x2353))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopTrackingHeapObjects ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2366 : t) ->
            fun ~method_:(x2360 : [ `HeapProfiler_stopTrackingHeapObjects ])
              ->
              fun ?callback:(x2361 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2367 = t_to_js x2366 in
                     Ojs.call (Ojs.get_prop_ascii x2367 "post") "apply"
                       [|x2367;((let x2362 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2362 "push"
                                      [|((match x2360 with
                                          | `HeapProfiler_stopTrackingHeapObjects
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerStopTrackingHeapObjects"))|]);
                                 (match x2361 with
                                  | Some x2363 ->
                                      ignore
                                        (Ojs.call x2362 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2364 : Ojs.t) ->
                                                   x2363
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2364)))|])
                                  | None -> ());
                                 x2362))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_takeHeapSnapshot ] ->
              ?params:HeapProfiler.TakeHeapSnapshotParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2376 : t) ->
            fun ~method_:(x2368 : [ `HeapProfiler_takeHeapSnapshot ]) ->
              fun
                ?params:(x2369 :
                          HeapProfiler.TakeHeapSnapshotParameterType.t option)
                ->
                fun ?callback:(x2370 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2377 = t_to_js x2376 in
                       Ojs.call (Ojs.get_prop_ascii x2377 "post") "apply"
                         [|x2377;((let x2371 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2371 "push"
                                        [|((match x2368 with
                                            | `HeapProfiler_takeHeapSnapshot
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerTakeHeapSnapshot"))|]);
                                   (match x2369 with
                                    | Some x2375 ->
                                        ignore
                                          (Ojs.call x2371 "push"
                                             [|(HeapProfiler.TakeHeapSnapshotParameterType.t_to_js
                                                  x2375)|])
                                    | None -> ());
                                   (match x2370 with
                                    | Some x2372 ->
                                        ignore
                                          (Ojs.call x2371 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2373 : Ojs.t) ->
                                                     x2372
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2373)))|])
                                    | None -> ());
                                   x2371))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_takeHeapSnapshot ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2384 : t) ->
            fun ~method_:(x2378 : [ `HeapProfiler_takeHeapSnapshot ]) ->
              fun ?callback:(x2379 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2385 = t_to_js x2384 in
                     Ojs.call (Ojs.get_prop_ascii x2385 "post") "apply"
                       [|x2385;((let x2380 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2380 "push"
                                      [|((match x2378 with
                                          | `HeapProfiler_takeHeapSnapshot ->
                                              Ojs.string_to_js
                                                "HeapProfilerTakeHeapSnapshot"))|]);
                                 (match x2379 with
                                  | Some x2381 ->
                                      ignore
                                        (Ojs.call x2380 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2382 : Ojs.t) ->
                                                   x2381
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2382)))|])
                                  | None -> ());
                                 x2380))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_collectGarbage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2392 : t) ->
            fun ~method_:(x2386 : [ `HeapProfiler_collectGarbage ]) ->
              fun ?callback:(x2387 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2393 = t_to_js x2392 in
                     Ojs.call (Ojs.get_prop_ascii x2393 "post") "apply"
                       [|x2393;((let x2388 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2388 "push"
                                      [|((match x2386 with
                                          | `HeapProfiler_collectGarbage ->
                                              Ojs.string_to_js
                                                "HeapProfilerCollectGarbage"))|]);
                                 (match x2387 with
                                  | Some x2389 ->
                                      ignore
                                        (Ojs.call x2388 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2390 : Ojs.t) ->
                                                   x2389
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2390)))|])
                                  | None -> ());
                                 x2388))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getObjectByHeapObjectId ] ->
              ?params:HeapProfiler.GetObjectByHeapObjectIdParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:HeapProfiler.GetObjectByHeapObjectIdReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2403 : t) ->
            fun ~method_:(x2394 : [ `HeapProfiler_getObjectByHeapObjectId ])
              ->
              fun
                ?params:(x2395 :
                          HeapProfiler.GetObjectByHeapObjectIdParameterType.t
                            option)
                ->
                fun
                  ?callback:(x2396 :
                              (err:Error.t or_null ->
                                 params:HeapProfiler.GetObjectByHeapObjectIdReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2404 = t_to_js x2403 in
                       Ojs.call (Ojs.get_prop_ascii x2404 "post") "apply"
                         [|x2404;((let x2397 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2397 "push"
                                        [|((match x2394 with
                                            | `HeapProfiler_getObjectByHeapObjectId
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerGetObjectByHeapObjectId"))|]);
                                   (match x2395 with
                                    | Some x2402 ->
                                        ignore
                                          (Ojs.call x2397 "push"
                                             [|(HeapProfiler.GetObjectByHeapObjectIdParameterType.t_to_js
                                                  x2402)|])
                                    | None -> ());
                                   (match x2396 with
                                    | Some x2398 ->
                                        ignore
                                          (Ojs.call x2397 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2399 : Ojs.t) ->
                                                     fun (x2401 : Ojs.t) ->
                                                       x2398
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2399)
                                                         ~params:(HeapProfiler.GetObjectByHeapObjectIdReturnType.t_of_js
                                                                    x2401)))|])
                                    | None -> ());
                                   x2397))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getObjectByHeapObjectId ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler.GetObjectByHeapObjectIdReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x2412 : t) ->
            fun ~method_:(x2405 : [ `HeapProfiler_getObjectByHeapObjectId ])
              ->
              fun
                ?callback:(x2406 :
                            (err:Error.t or_null ->
                               params:HeapProfiler.GetObjectByHeapObjectIdReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2413 = t_to_js x2412 in
                     Ojs.call (Ojs.get_prop_ascii x2413 "post") "apply"
                       [|x2413;((let x2407 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2407 "push"
                                      [|((match x2405 with
                                          | `HeapProfiler_getObjectByHeapObjectId
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetObjectByHeapObjectId"))|]);
                                 (match x2406 with
                                  | Some x2408 ->
                                      ignore
                                        (Ojs.call x2407 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2409 : Ojs.t) ->
                                                   fun (x2411 : Ojs.t) ->
                                                     x2408
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2409)
                                                       ~params:(HeapProfiler.GetObjectByHeapObjectIdReturnType.t_of_js
                                                                  x2411)))|])
                                  | None -> ());
                                 x2407))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_addInspectedHeapObject ] ->
              ?params:HeapProfiler.AddInspectedHeapObjectParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2422 : t) ->
            fun ~method_:(x2414 : [ `HeapProfiler_addInspectedHeapObject ])
              ->
              fun
                ?params:(x2415 :
                          HeapProfiler.AddInspectedHeapObjectParameterType.t
                            option)
                ->
                fun ?callback:(x2416 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2423 = t_to_js x2422 in
                       Ojs.call (Ojs.get_prop_ascii x2423 "post") "apply"
                         [|x2423;((let x2417 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2417 "push"
                                        [|((match x2414 with
                                            | `HeapProfiler_addInspectedHeapObject
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerAddInspectedHeapObject"))|]);
                                   (match x2415 with
                                    | Some x2421 ->
                                        ignore
                                          (Ojs.call x2417 "push"
                                             [|(HeapProfiler.AddInspectedHeapObjectParameterType.t_to_js
                                                  x2421)|])
                                    | None -> ());
                                   (match x2416 with
                                    | Some x2418 ->
                                        ignore
                                          (Ojs.call x2417 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2419 : Ojs.t) ->
                                                     x2418
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2419)))|])
                                    | None -> ());
                                   x2417))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_addInspectedHeapObject ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2430 : t) ->
            fun ~method_:(x2424 : [ `HeapProfiler_addInspectedHeapObject ])
              ->
              fun ?callback:(x2425 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2431 = t_to_js x2430 in
                     Ojs.call (Ojs.get_prop_ascii x2431 "post") "apply"
                       [|x2431;((let x2426 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2426 "push"
                                      [|((match x2424 with
                                          | `HeapProfiler_addInspectedHeapObject
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerAddInspectedHeapObject"))|]);
                                 (match x2425 with
                                  | Some x2427 ->
                                      ignore
                                        (Ojs.call x2426 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2428 : Ojs.t) ->
                                                   x2427
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2428)))|])
                                  | None -> ());
                                 x2426))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getHeapObjectId ] ->
              ?params:HeapProfiler.GetHeapObjectIdParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:HeapProfiler.GetHeapObjectIdReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2441 : t) ->
            fun ~method_:(x2432 : [ `HeapProfiler_getHeapObjectId ]) ->
              fun
                ?params:(x2433 :
                          HeapProfiler.GetHeapObjectIdParameterType.t option)
                ->
                fun
                  ?callback:(x2434 :
                              (err:Error.t or_null ->
                                 params:HeapProfiler.GetHeapObjectIdReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2442 = t_to_js x2441 in
                       Ojs.call (Ojs.get_prop_ascii x2442 "post") "apply"
                         [|x2442;((let x2435 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2435 "push"
                                        [|((match x2432 with
                                            | `HeapProfiler_getHeapObjectId
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerGetHeapObjectId"))|]);
                                   (match x2433 with
                                    | Some x2440 ->
                                        ignore
                                          (Ojs.call x2435 "push"
                                             [|(HeapProfiler.GetHeapObjectIdParameterType.t_to_js
                                                  x2440)|])
                                    | None -> ());
                                   (match x2434 with
                                    | Some x2436 ->
                                        ignore
                                          (Ojs.call x2435 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2437 : Ojs.t) ->
                                                     fun (x2439 : Ojs.t) ->
                                                       x2436
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2437)
                                                         ~params:(HeapProfiler.GetHeapObjectIdReturnType.t_of_js
                                                                    x2439)))|])
                                    | None -> ());
                                   x2435))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getHeapObjectId ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler.GetHeapObjectIdReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2450 : t) ->
            fun ~method_:(x2443 : [ `HeapProfiler_getHeapObjectId ]) ->
              fun
                ?callback:(x2444 :
                            (err:Error.t or_null ->
                               params:HeapProfiler.GetHeapObjectIdReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2451 = t_to_js x2450 in
                     Ojs.call (Ojs.get_prop_ascii x2451 "post") "apply"
                       [|x2451;((let x2445 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2445 "push"
                                      [|((match x2443 with
                                          | `HeapProfiler_getHeapObjectId ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetHeapObjectId"))|]);
                                 (match x2444 with
                                  | Some x2446 ->
                                      ignore
                                        (Ojs.call x2445 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2447 : Ojs.t) ->
                                                   fun (x2449 : Ojs.t) ->
                                                     x2446
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2447)
                                                       ~params:(HeapProfiler.GetHeapObjectIdReturnType.t_of_js
                                                                  x2449)))|])
                                  | None -> ());
                                 x2445))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startSampling ] ->
              ?params:HeapProfiler.StartSamplingParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2460 : t) ->
            fun ~method_:(x2452 : [ `HeapProfiler_startSampling ]) ->
              fun
                ?params:(x2453 :
                          HeapProfiler.StartSamplingParameterType.t option)
                ->
                fun ?callback:(x2454 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2461 = t_to_js x2460 in
                       Ojs.call (Ojs.get_prop_ascii x2461 "post") "apply"
                         [|x2461;((let x2455 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2455 "push"
                                        [|((match x2452 with
                                            | `HeapProfiler_startSampling ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStartSampling"))|]);
                                   (match x2453 with
                                    | Some x2459 ->
                                        ignore
                                          (Ojs.call x2455 "push"
                                             [|(HeapProfiler.StartSamplingParameterType.t_to_js
                                                  x2459)|])
                                    | None -> ());
                                   (match x2454 with
                                    | Some x2456 ->
                                        ignore
                                          (Ojs.call x2455 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2457 : Ojs.t) ->
                                                     x2456
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2457)))|])
                                    | None -> ());
                                   x2455))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startSampling ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2468 : t) ->
            fun ~method_:(x2462 : [ `HeapProfiler_startSampling ]) ->
              fun ?callback:(x2463 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2469 = t_to_js x2468 in
                     Ojs.call (Ojs.get_prop_ascii x2469 "post") "apply"
                       [|x2469;((let x2464 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2464 "push"
                                      [|((match x2462 with
                                          | `HeapProfiler_startSampling ->
                                              Ojs.string_to_js
                                                "HeapProfilerStartSampling"))|]);
                                 (match x2463 with
                                  | Some x2465 ->
                                      ignore
                                        (Ojs.call x2464 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2466 : Ojs.t) ->
                                                   x2465
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2466)))|])
                                  | None -> ());
                                 x2464))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopSampling ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler.StopSamplingReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2477 : t) ->
            fun ~method_:(x2470 : [ `HeapProfiler_stopSampling ]) ->
              fun
                ?callback:(x2471 :
                            (err:Error.t or_null ->
                               params:HeapProfiler.StopSamplingReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2478 = t_to_js x2477 in
                     Ojs.call (Ojs.get_prop_ascii x2478 "post") "apply"
                       [|x2478;((let x2472 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2472 "push"
                                      [|((match x2470 with
                                          | `HeapProfiler_stopSampling ->
                                              Ojs.string_to_js
                                                "HeapProfilerStopSampling"))|]);
                                 (match x2471 with
                                  | Some x2473 ->
                                      ignore
                                        (Ojs.call x2472 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2474 : Ojs.t) ->
                                                   fun (x2476 : Ojs.t) ->
                                                     x2473
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2474)
                                                       ~params:(HeapProfiler.StopSamplingReturnType.t_of_js
                                                                  x2476)))|])
                                  | None -> ());
                                 x2472))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getSamplingProfile ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler.GetSamplingProfileReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x2486 : t) ->
            fun ~method_:(x2479 : [ `HeapProfiler_getSamplingProfile ]) ->
              fun
                ?callback:(x2480 :
                            (err:Error.t or_null ->
                               params:HeapProfiler.GetSamplingProfileReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2487 = t_to_js x2486 in
                     Ojs.call (Ojs.get_prop_ascii x2487 "post") "apply"
                       [|x2487;((let x2481 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2481 "push"
                                      [|((match x2479 with
                                          | `HeapProfiler_getSamplingProfile
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetSamplingProfile"))|]);
                                 (match x2480 with
                                  | Some x2482 ->
                                      ignore
                                        (Ojs.call x2481 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2483 : Ojs.t) ->
                                                   fun (x2485 : Ojs.t) ->
                                                     x2482
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2483)
                                                       ~params:(HeapProfiler.GetSamplingProfileReturnType.t_of_js
                                                                  x2485)))|])
                                  | None -> ());
                                 x2481))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_getCategories ] ->
              ?callback:(err:Error.t or_null ->
                           params:NodeTracing.GetCategoriesReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2495 : t) ->
            fun ~method_:(x2488 : [ `NodeTracing_getCategories ]) ->
              fun
                ?callback:(x2489 :
                            (err:Error.t or_null ->
                               params:NodeTracing.GetCategoriesReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2496 = t_to_js x2495 in
                     Ojs.call (Ojs.get_prop_ascii x2496 "post") "apply"
                       [|x2496;((let x2490 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2490 "push"
                                      [|((match x2488 with
                                          | `NodeTracing_getCategories ->
                                              Ojs.string_to_js
                                                "NodeTracingGetCategories"))|]);
                                 (match x2489 with
                                  | Some x2491 ->
                                      ignore
                                        (Ojs.call x2490 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2492 : Ojs.t) ->
                                                   fun (x2494 : Ojs.t) ->
                                                     x2491
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2492)
                                                       ~params:(NodeTracing.GetCategoriesReturnType.t_of_js
                                                                  x2494)))|])
                                  | None -> ());
                                 x2490))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_start ] ->
              ?params:NodeTracing.StartParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2505 : t) ->
            fun ~method_:(x2497 : [ `NodeTracing_start ]) ->
              fun ?params:(x2498 : NodeTracing.StartParameterType.t option)
                ->
                fun ?callback:(x2499 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2506 = t_to_js x2505 in
                       Ojs.call (Ojs.get_prop_ascii x2506 "post") "apply"
                         [|x2506;((let x2500 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2500 "push"
                                        [|((match x2497 with
                                            | `NodeTracing_start ->
                                                Ojs.string_to_js
                                                  "NodeTracingStart"))|]);
                                   (match x2498 with
                                    | Some x2504 ->
                                        ignore
                                          (Ojs.call x2500 "push"
                                             [|(NodeTracing.StartParameterType.t_to_js
                                                  x2504)|])
                                    | None -> ());
                                   (match x2499 with
                                    | Some x2501 ->
                                        ignore
                                          (Ojs.call x2500 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2502 : Ojs.t) ->
                                                     x2501
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2502)))|])
                                    | None -> ());
                                   x2500))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_start ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2513 : t) ->
            fun ~method_:(x2507 : [ `NodeTracing_start ]) ->
              fun ?callback:(x2508 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2514 = t_to_js x2513 in
                     Ojs.call (Ojs.get_prop_ascii x2514 "post") "apply"
                       [|x2514;((let x2509 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2509 "push"
                                      [|((match x2507 with
                                          | `NodeTracing_start ->
                                              Ojs.string_to_js
                                                "NodeTracingStart"))|]);
                                 (match x2508 with
                                  | Some x2510 ->
                                      ignore
                                        (Ojs.call x2509 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2511 : Ojs.t) ->
                                                   x2510
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2511)))|])
                                  | None -> ());
                                 x2509))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_stop ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2521 : t) ->
            fun ~method_:(x2515 : [ `NodeTracing_stop ]) ->
              fun ?callback:(x2516 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2522 = t_to_js x2521 in
                     Ojs.call (Ojs.get_prop_ascii x2522 "post") "apply"
                       [|x2522;((let x2517 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2517 "push"
                                      [|((match x2515 with
                                          | `NodeTracing_stop ->
                                              Ojs.string_to_js
                                                "NodeTracingStop"))|]);
                                 (match x2516 with
                                  | Some x2518 ->
                                      ignore
                                        (Ojs.call x2517 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2519 : Ojs.t) ->
                                                   x2518
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2519)))|])
                                  | None -> ());
                                 x2517))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_sendMessageToWorker ] ->
              ?params:NodeWorker.SendMessageToWorkerParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2531 : t) ->
            fun ~method_:(x2523 : [ `NodeWorker_sendMessageToWorker ]) ->
              fun
                ?params:(x2524 :
                          NodeWorker.SendMessageToWorkerParameterType.t
                            option)
                ->
                fun ?callback:(x2525 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2532 = t_to_js x2531 in
                       Ojs.call (Ojs.get_prop_ascii x2532 "post") "apply"
                         [|x2532;((let x2526 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2526 "push"
                                        [|((match x2523 with
                                            | `NodeWorker_sendMessageToWorker
                                                ->
                                                Ojs.string_to_js
                                                  "NodeWorkerSendMessageToWorker"))|]);
                                   (match x2524 with
                                    | Some x2530 ->
                                        ignore
                                          (Ojs.call x2526 "push"
                                             [|(NodeWorker.SendMessageToWorkerParameterType.t_to_js
                                                  x2530)|])
                                    | None -> ());
                                   (match x2525 with
                                    | Some x2527 ->
                                        ignore
                                          (Ojs.call x2526 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2528 : Ojs.t) ->
                                                     x2527
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2528)))|])
                                    | None -> ());
                                   x2526))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_sendMessageToWorker ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2539 : t) ->
            fun ~method_:(x2533 : [ `NodeWorker_sendMessageToWorker ]) ->
              fun ?callback:(x2534 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2540 = t_to_js x2539 in
                     Ojs.call (Ojs.get_prop_ascii x2540 "post") "apply"
                       [|x2540;((let x2535 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2535 "push"
                                      [|((match x2533 with
                                          | `NodeWorker_sendMessageToWorker
                                              ->
                                              Ojs.string_to_js
                                                "NodeWorkerSendMessageToWorker"))|]);
                                 (match x2534 with
                                  | Some x2536 ->
                                      ignore
                                        (Ojs.call x2535 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2537 : Ojs.t) ->
                                                   x2536
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2537)))|])
                                  | None -> ());
                                 x2535))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_enable ] ->
              ?params:NodeWorker.EnableParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2549 : t) ->
            fun ~method_:(x2541 : [ `NodeWorker_enable ]) ->
              fun ?params:(x2542 : NodeWorker.EnableParameterType.t option)
                ->
                fun ?callback:(x2543 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2550 = t_to_js x2549 in
                       Ojs.call (Ojs.get_prop_ascii x2550 "post") "apply"
                         [|x2550;((let x2544 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2544 "push"
                                        [|((match x2541 with
                                            | `NodeWorker_enable ->
                                                Ojs.string_to_js
                                                  "NodeWorkerEnable"))|]);
                                   (match x2542 with
                                    | Some x2548 ->
                                        ignore
                                          (Ojs.call x2544 "push"
                                             [|(NodeWorker.EnableParameterType.t_to_js
                                                  x2548)|])
                                    | None -> ());
                                   (match x2543 with
                                    | Some x2545 ->
                                        ignore
                                          (Ojs.call x2544 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2546 : Ojs.t) ->
                                                     x2545
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2546)))|])
                                    | None -> ());
                                   x2544))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2557 : t) ->
            fun ~method_:(x2551 : [ `NodeWorker_enable ]) ->
              fun ?callback:(x2552 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2558 = t_to_js x2557 in
                     Ojs.call (Ojs.get_prop_ascii x2558 "post") "apply"
                       [|x2558;((let x2553 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2553 "push"
                                      [|((match x2551 with
                                          | `NodeWorker_enable ->
                                              Ojs.string_to_js
                                                "NodeWorkerEnable"))|]);
                                 (match x2552 with
                                  | Some x2554 ->
                                      ignore
                                        (Ojs.call x2553 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2555 : Ojs.t) ->
                                                   x2554
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2555)))|])
                                  | None -> ());
                                 x2553))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2565 : t) ->
            fun ~method_:(x2559 : [ `NodeWorker_disable ]) ->
              fun ?callback:(x2560 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2566 = t_to_js x2565 in
                     Ojs.call (Ojs.get_prop_ascii x2566 "post") "apply"
                       [|x2566;((let x2561 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2561 "push"
                                      [|((match x2559 with
                                          | `NodeWorker_disable ->
                                              Ojs.string_to_js
                                                "NodeWorkerDisable"))|]);
                                 (match x2560 with
                                  | Some x2562 ->
                                      ignore
                                        (Ojs.call x2561 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2563 : Ojs.t) ->
                                                   x2562
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2563)))|])
                                  | None -> ());
                                 x2561))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_detach ] ->
              ?params:NodeWorker.DetachParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2575 : t) ->
            fun ~method_:(x2567 : [ `NodeWorker_detach ]) ->
              fun ?params:(x2568 : NodeWorker.DetachParameterType.t option)
                ->
                fun ?callback:(x2569 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2576 = t_to_js x2575 in
                       Ojs.call (Ojs.get_prop_ascii x2576 "post") "apply"
                         [|x2576;((let x2570 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2570 "push"
                                        [|((match x2567 with
                                            | `NodeWorker_detach ->
                                                Ojs.string_to_js
                                                  "NodeWorkerDetach"))|]);
                                   (match x2568 with
                                    | Some x2574 ->
                                        ignore
                                          (Ojs.call x2570 "push"
                                             [|(NodeWorker.DetachParameterType.t_to_js
                                                  x2574)|])
                                    | None -> ());
                                   (match x2569 with
                                    | Some x2571 ->
                                        ignore
                                          (Ojs.call x2570 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2572 : Ojs.t) ->
                                                     x2571
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2572)))|])
                                    | None -> ());
                                   x2570))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_detach ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2583 : t) ->
            fun ~method_:(x2577 : [ `NodeWorker_detach ]) ->
              fun ?callback:(x2578 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2584 = t_to_js x2583 in
                     Ojs.call (Ojs.get_prop_ascii x2584 "post") "apply"
                       [|x2584;((let x2579 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2579 "push"
                                      [|((match x2577 with
                                          | `NodeWorker_detach ->
                                              Ojs.string_to_js
                                                "NodeWorkerDetach"))|]);
                                 (match x2578 with
                                  | Some x2580 ->
                                      ignore
                                        (Ojs.call x2579 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2581 : Ojs.t) ->
                                                   x2580
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2581)))|])
                                  | None -> ());
                                 x2579))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeRuntime_notifyWhenWaitingForDisconnect ] ->
              ?params:NodeRuntime.NotifyWhenWaitingForDisconnectParameterType.t
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2593 : t) ->
            fun
              ~method_:(x2585 :
                         [ `NodeRuntime_notifyWhenWaitingForDisconnect ])
              ->
              fun
                ?params:(x2586 :
                          NodeRuntime.NotifyWhenWaitingForDisconnectParameterType.t
                            option)
                ->
                fun ?callback:(x2587 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2594 = t_to_js x2593 in
                       Ojs.call (Ojs.get_prop_ascii x2594 "post") "apply"
                         [|x2594;((let x2588 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2588 "push"
                                        [|((match x2585 with
                                            | `NodeRuntime_notifyWhenWaitingForDisconnect
                                                ->
                                                Ojs.string_to_js
                                                  "NodeRuntimeNotifyWhenWaitingForDisconnect"))|]);
                                   (match x2586 with
                                    | Some x2592 ->
                                        ignore
                                          (Ojs.call x2588 "push"
                                             [|(NodeRuntime.NotifyWhenWaitingForDisconnectParameterType.t_to_js
                                                  x2592)|])
                                    | None -> ());
                                   (match x2587 with
                                    | Some x2589 ->
                                        ignore
                                          (Ojs.call x2588 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2590 : Ojs.t) ->
                                                     x2589
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2590)))|])
                                    | None -> ());
                                   x2588))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeRuntime_notifyWhenWaitingForDisconnect ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2601 : t) ->
            fun
              ~method_:(x2595 :
                         [ `NodeRuntime_notifyWhenWaitingForDisconnect ])
              ->
              fun ?callback:(x2596 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2602 = t_to_js x2601 in
                     Ojs.call (Ojs.get_prop_ascii x2602 "post") "apply"
                       [|x2602;((let x2597 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2597 "push"
                                      [|((match x2595 with
                                          | `NodeRuntime_notifyWhenWaitingForDisconnect
                                              ->
                                              Ojs.string_to_js
                                                "NodeRuntimeNotifyWhenWaitingForDisconnect"))|]);
                                 (match x2596 with
                                  | Some x2598 ->
                                      ignore
                                        (Ojs.call x2597 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2599 : Ojs.t) ->
                                                   x2598
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2599)))|])
                                  | None -> ());
                                 x2597))|])
        let (add_listener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x2607 : t) ->
            fun ~event:(x2603 : string) ->
              fun ~listener:(x2604 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2607) "addListener"
                     [|(Ojs.string_to_js x2603);(Ojs.fun_to_js_args
                                                   (fun (x2605 : _) ->
                                                      x2604
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2605 0)))|])
        let (add_listener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t InspectorNotification.t
                          -> unit)
                -> t)
          =
          fun (x2612 : t) ->
            fun ~event:(x2608 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2609 :
                            message:AnonymousInterface0.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2612) "addListener"
                     [|((match x2608 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2610 : Ojs.t) ->
                            x2609
                              ~message:(InspectorNotification.t_of_js
                                          AnonymousInterface0.t_of_js x2610)))|])
        let (add_listener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:Runtime.ExecutionContextCreatedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2617 : t) ->
            fun ~event:(x2613 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2614 :
                            message:Runtime.ExecutionContextCreatedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2617) "addListener"
                     [|((match x2613 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2615 :
                                                                    Ojs.t) ->
                                                                    x2614
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Runtime.ExecutionContextCreatedEventDataType.t_of_js
                                                                    x2615)))|])
        let (add_listener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:Runtime.ExecutionContextDestroyedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2622 : t) ->
            fun ~event:(x2618 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2619 :
                            message:Runtime.ExecutionContextDestroyedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2622) "addListener"
                     [|((match x2618 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2620 : Ojs.t) ->
                            x2619
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExecutionContextDestroyedEventDataType.t_of_js
                                          x2620)))|])
        let (add_listener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2625 : t) ->
            fun ~event:(x2623 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2624 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2625) "addListener"
                     [|((match x2623 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2624 ()))|])
        let (add_listener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:Runtime.ExceptionThrownEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2630 : t) ->
            fun ~event:(x2626 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x2627 :
                            message:Runtime.ExceptionThrownEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2630) "addListener"
                     [|((match x2626 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x2628 : Ojs.t) ->
                            x2627
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionThrownEventDataType.t_of_js
                                          x2628)))|])
        let (add_listener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:Runtime.ExceptionRevokedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2635 : t) ->
            fun ~event:(x2631 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x2632 :
                            message:Runtime.ExceptionRevokedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2635) "addListener"
                     [|((match x2631 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x2633 : Ojs.t) ->
                            x2632
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionRevokedEventDataType.t_of_js
                                          x2633)))|])
        let (add_listener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:Runtime.ConsoleAPICalledEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2640 : t) ->
            fun ~event:(x2636 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x2637 :
                            message:Runtime.ConsoleAPICalledEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2640) "addListener"
                     [|((match x2636 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x2638 : Ojs.t) ->
                            x2637
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ConsoleAPICalledEventDataType.t_of_js
                                          x2638)))|])
        let (add_listener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:Runtime.InspectRequestedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2645 : t) ->
            fun ~event:(x2641 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x2642 :
                            message:Runtime.InspectRequestedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2645) "addListener"
                     [|((match x2641 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x2643 : Ojs.t) ->
                            x2642
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.InspectRequestedEventDataType.t_of_js
                                          x2643)))|])
        let (add_listener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:Debugger.ScriptParsedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2650 : t) ->
            fun ~event:(x2646 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x2647 :
                            message:Debugger.ScriptParsedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2650) "addListener"
                     [|((match x2646 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x2648 : Ojs.t) ->
                            x2647
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptParsedEventDataType.t_of_js
                                          x2648)))|])
        let (add_listener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:Debugger.ScriptFailedToParseEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2655 : t) ->
            fun ~event:(x2651 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x2652 :
                            message:Debugger.ScriptFailedToParseEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2655) "addListener"
                     [|((match x2651 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x2653 : Ojs.t) ->
                            x2652
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptFailedToParseEventDataType.t_of_js
                                          x2653)))|])
        let (add_listener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:Debugger.BreakpointResolvedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2660 : t) ->
            fun ~event:(x2656 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x2657 :
                            message:Debugger.BreakpointResolvedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2660) "addListener"
                     [|((match x2656 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x2658 : Ojs.t) ->
                            x2657
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.BreakpointResolvedEventDataType.t_of_js
                                          x2658)))|])
        let (add_listener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:Debugger.PausedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2665 : t) ->
            fun ~event:(x2661 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x2662 :
                            message:Debugger.PausedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2665) "addListener"
                     [|((match x2661 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x2663 :
                                                                    Ojs.t) ->
                                                                    x2662
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Debugger.PausedEventDataType.t_of_js
                                                                    x2663)))|])
        let (add_listener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x2668 : t) ->
            fun ~event:(x2666 : [ `Debugger_resumed ]) ->
              fun ~listener:(x2667 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2668) "addListener"
                     [|((match x2666 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2667 ()))|])
        let (add_listener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:Console.MessageAddedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2673 : t) ->
            fun ~event:(x2669 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x2670 :
                            message:Console.MessageAddedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2673) "addListener"
                     [|((match x2669 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x2671 : Ojs.t) ->
                            x2670
                              ~message:(InspectorNotification.t_of_js
                                          Console.MessageAddedEventDataType.t_of_js
                                          x2671)))|])
        let (add_listener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:Profiler.ConsoleProfileStartedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2678 : t) ->
            fun ~event:(x2674 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x2675 :
                            message:Profiler.ConsoleProfileStartedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2678) "addListener"
                     [|((match x2674 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x2676 : Ojs.t) ->
                            x2675
                              ~message:(InspectorNotification.t_of_js
                                          Profiler.ConsoleProfileStartedEventDataType.t_of_js
                                          x2676)))|])
        let (add_listener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:Profiler.ConsoleProfileFinishedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2683 : t) ->
            fun ~event:(x2679 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x2680 :
                            message:Profiler.ConsoleProfileFinishedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2683) "addListener"
                     [|((match x2679 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2681 :
                                                                    Ojs.t) ->
                                                                    x2680
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Profiler.ConsoleProfileFinishedEventDataType.t_of_js
                                                                    x2681)))|])
        let (add_listener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2688 : t) ->
            fun ~event:(x2684 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x2685 :
                            message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2688) "addListener"
                     [|((match x2684 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x2686 : Ojs.t) ->
                            x2685
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.AddHeapSnapshotChunkEventDataType.t_of_js
                                          x2686)))|])
        let (add_listener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2691 : t) ->
            fun ~event:(x2689 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x2690 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2691) "addListener"
                     [|((match x2689 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x2690 ()))|])
        let (add_listener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2696 : t) ->
            fun ~event:(x2692 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x2693 :
                            message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2696) "addListener"
                     [|((match x2692 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x2694 : Ojs.t) ->
                            x2693
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.ReportHeapSnapshotProgressEventDataType.t_of_js
                                          x2694)))|])
        let (add_listener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:HeapProfiler.LastSeenObjectIdEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2701 : t) ->
            fun ~event:(x2697 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x2698 :
                            message:HeapProfiler.LastSeenObjectIdEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2701) "addListener"
                     [|((match x2697 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x2699 : Ojs.t) ->
                            x2698
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.LastSeenObjectIdEventDataType.t_of_js
                                          x2699)))|])
        let (add_listener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:HeapProfiler.HeapStatsUpdateEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2706 : t) ->
            fun ~event:(x2702 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x2703 :
                            message:HeapProfiler.HeapStatsUpdateEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2706) "addListener"
                     [|((match x2702 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x2704 : Ojs.t) ->
                            x2703
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.HeapStatsUpdateEventDataType.t_of_js
                                          x2704)))|])
        let (add_listener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:NodeTracing.DataCollectedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2711 : t) ->
            fun ~event:(x2707 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x2708 :
                            message:NodeTracing.DataCollectedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2711) "addListener"
                     [|((match x2707 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x2709 : Ojs.t) ->
                            x2708
                              ~message:(InspectorNotification.t_of_js
                                          NodeTracing.DataCollectedEventDataType.t_of_js
                                          x2709)))|])
        let (add_listener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2714 : t) ->
            fun ~event:(x2712 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x2713 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2714) "addListener"
                     [|((match x2712 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x2713 ()))|])
        let (add_listener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:NodeWorker.AttachedToWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2719 : t) ->
            fun ~event:(x2715 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x2716 :
                            message:NodeWorker.AttachedToWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2719) "addListener"
                     [|((match x2715 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2717 : Ojs.t) ->
                            x2716
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.AttachedToWorkerEventDataType.t_of_js
                                          x2717)))|])
        let (add_listener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:NodeWorker.DetachedFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2724 : t) ->
            fun ~event:(x2720 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x2721 :
                            message:NodeWorker.DetachedFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2724) "addListener"
                     [|((match x2720 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2722 : Ojs.t) ->
                            x2721
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.DetachedFromWorkerEventDataType.t_of_js
                                          x2722)))|])
        let (add_listener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2729 : t) ->
            fun ~event:(x2725 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x2726 :
                            message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2729) "addListener"
                     [|((match x2725 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2727 : Ojs.t) ->
                            x2726
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.ReceivedMessageFromWorkerEventDataType.t_of_js
                                          x2727)))|])
        let (add_listener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2732 : t) ->
            fun ~event:(x2730 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x2731 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2732) "addListener"
                     [|((match x2730 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2731 ()))|])
        let (emit : t -> event:symbol or_string -> args:any list -> bool) =
          fun (x2738 : t) ->
            fun ~event:(x2733 : symbol or_string) ->
              fun ~args:(x2734 : any list) ->
                Ojs.bool_of_js
                  (let x2739 = t_to_js x2738 in
                   Ojs.call (Ojs.get_prop_ascii x2739 "emit") "apply"
                     [|x2739;((let x2735 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2735 "push"
                                    [|(or_string_to_js symbol_to_js x2733)|]);
                               List.iter
                                 (fun (x2736 : any) ->
                                    ignore
                                      (Ojs.call x2735 "push"
                                         [|(any_to_js x2736)|])) x2734;
                               x2735))|])
        let (emit' :
          t ->
            event:[ `inspectorNotification ] ->
              message:AnonymousInterface0.t InspectorNotification.t -> bool)
          =
          fun (x2743 : t) ->
            fun ~event:(x2740 : [ `inspectorNotification ]) ->
              fun
                ~message:(x2741 :
                           AnonymousInterface0.t InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2743) "emit"
                     [|((match x2740 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       InspectorNotification.t_to_js
                         AnonymousInterface0.t_to_js x2741)|])
        let (emit'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              message:Runtime.ExecutionContextCreatedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2747 : t) ->
            fun ~event:(x2744 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~message:(x2745 :
                           Runtime.ExecutionContextCreatedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2747) "emit"
                     [|((match x2744 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(InspectorNotification.t_to_js
                                                                    Runtime.ExecutionContextCreatedEventDataType.t_to_js
                                                                    x2745)|])
        let (emit''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              message:Runtime.ExecutionContextDestroyedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2751 : t) ->
            fun ~event:(x2748 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~message:(x2749 :
                           Runtime.ExecutionContextDestroyedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2751) "emit"
                     [|((match x2748 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       InspectorNotification.t_to_js
                         Runtime.ExecutionContextDestroyedEventDataType.t_to_js
                         x2749)|])
        let (emit'''' :
          t -> event:[ `Runtime_executionContextsCleared ] -> bool) =
          fun (x2753 : t) ->
            fun ~event:(x2752 : [ `Runtime_executionContextsCleared ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2753) "emit"
                   [|((match x2752 with
                       | `Runtime_executionContextsCleared ->
                           Ojs.string_to_js "RuntimeExecutionContextsCleared"))|])
        let (emit''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              message:Runtime.ExceptionThrownEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2757 : t) ->
            fun ~event:(x2754 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~message:(x2755 :
                           Runtime.ExceptionThrownEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2757) "emit"
                     [|((match x2754 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       InspectorNotification.t_to_js
                         Runtime.ExceptionThrownEventDataType.t_to_js x2755)|])
        let (emit'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              message:Runtime.ExceptionRevokedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2761 : t) ->
            fun ~event:(x2758 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~message:(x2759 :
                           Runtime.ExceptionRevokedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2761) "emit"
                     [|((match x2758 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       InspectorNotification.t_to_js
                         Runtime.ExceptionRevokedEventDataType.t_to_js x2759)|])
        let (emit''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              message:Runtime.ConsoleAPICalledEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2765 : t) ->
            fun ~event:(x2762 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~message:(x2763 :
                           Runtime.ConsoleAPICalledEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2765) "emit"
                     [|((match x2762 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       InspectorNotification.t_to_js
                         Runtime.ConsoleAPICalledEventDataType.t_to_js x2763)|])
        let (emit'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              message:Runtime.InspectRequestedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2769 : t) ->
            fun ~event:(x2766 : [ `Runtime_inspectRequested ]) ->
              fun
                ~message:(x2767 :
                           Runtime.InspectRequestedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2769) "emit"
                     [|((match x2766 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       InspectorNotification.t_to_js
                         Runtime.InspectRequestedEventDataType.t_to_js x2767)|])
        let (emit''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              message:Debugger.ScriptParsedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2773 : t) ->
            fun ~event:(x2770 : [ `Debugger_scriptParsed ]) ->
              fun
                ~message:(x2771 :
                           Debugger.ScriptParsedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2773) "emit"
                     [|((match x2770 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       InspectorNotification.t_to_js
                         Debugger.ScriptParsedEventDataType.t_to_js x2771)|])
        let (emit'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              message:Debugger.ScriptFailedToParseEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2777 : t) ->
            fun ~event:(x2774 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~message:(x2775 :
                           Debugger.ScriptFailedToParseEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2777) "emit"
                     [|((match x2774 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       InspectorNotification.t_to_js
                         Debugger.ScriptFailedToParseEventDataType.t_to_js
                         x2775)|])
        let (emit''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              message:Debugger.BreakpointResolvedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2781 : t) ->
            fun ~event:(x2778 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~message:(x2779 :
                           Debugger.BreakpointResolvedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2781) "emit"
                     [|((match x2778 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       InspectorNotification.t_to_js
                         Debugger.BreakpointResolvedEventDataType.t_to_js
                         x2779)|])
        let (emit'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              message:Debugger.PausedEventDataType.t InspectorNotification.t
                -> bool)
          =
          fun (x2785 : t) ->
            fun ~event:(x2782 : [ `Debugger_paused ]) ->
              fun
                ~message:(x2783 :
                           Debugger.PausedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2785) "emit"
                     [|((match x2782 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(InspectorNotification.t_to_js
                                                                    Debugger.PausedEventDataType.t_to_js
                                                                    x2783)|])
        let (emit''''''''''''' : t -> event:[ `Debugger_resumed ] -> bool) =
          fun (x2787 : t) ->
            fun ~event:(x2786 : [ `Debugger_resumed ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2787) "emit"
                   [|((match x2786 with
                       | `Debugger_resumed ->
                           Ojs.string_to_js "DebuggerResumed"))|])
        let (emit'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              message:Console.MessageAddedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2791 : t) ->
            fun ~event:(x2788 : [ `Console_messageAdded ]) ->
              fun
                ~message:(x2789 :
                           Console.MessageAddedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2791) "emit"
                     [|((match x2788 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       InspectorNotification.t_to_js
                         Console.MessageAddedEventDataType.t_to_js x2789)|])
        let (emit''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              message:Profiler.ConsoleProfileStartedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2795 : t) ->
            fun ~event:(x2792 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~message:(x2793 :
                           Profiler.ConsoleProfileStartedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2795) "emit"
                     [|((match x2792 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       InspectorNotification.t_to_js
                         Profiler.ConsoleProfileStartedEventDataType.t_to_js
                         x2793)|])
        let (emit'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              message:Profiler.ConsoleProfileFinishedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2799 : t) ->
            fun ~event:(x2796 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~message:(x2797 :
                           Profiler.ConsoleProfileFinishedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2799) "emit"
                     [|((match x2796 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(InspectorNotification.t_to_js
                                                                    Profiler.ConsoleProfileFinishedEventDataType.t_to_js
                                                                    x2797)|])
        let (emit''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2803 : t) ->
            fun ~event:(x2800 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~message:(x2801 :
                           HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2803) "emit"
                     [|((match x2800 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       InspectorNotification.t_to_js
                         HeapProfiler.AddHeapSnapshotChunkEventDataType.t_to_js
                         x2801)|])
        let (emit'''''''''''''''''' :
          t -> event:[ `HeapProfiler_resetProfiles ] -> bool) =
          fun (x2805 : t) ->
            fun ~event:(x2804 : [ `HeapProfiler_resetProfiles ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2805) "emit"
                   [|((match x2804 with
                       | `HeapProfiler_resetProfiles ->
                           Ojs.string_to_js "HeapProfilerResetProfiles"))|])
        let (emit''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2809 : t) ->
            fun ~event:(x2806 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~message:(x2807 :
                           HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2809) "emit"
                     [|((match x2806 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       InspectorNotification.t_to_js
                         HeapProfiler.ReportHeapSnapshotProgressEventDataType.t_to_js
                         x2807)|])
        let (emit'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              message:HeapProfiler.LastSeenObjectIdEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2813 : t) ->
            fun ~event:(x2810 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~message:(x2811 :
                           HeapProfiler.LastSeenObjectIdEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2813) "emit"
                     [|((match x2810 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       InspectorNotification.t_to_js
                         HeapProfiler.LastSeenObjectIdEventDataType.t_to_js
                         x2811)|])
        let (emit''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              message:HeapProfiler.HeapStatsUpdateEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2817 : t) ->
            fun ~event:(x2814 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~message:(x2815 :
                           HeapProfiler.HeapStatsUpdateEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2817) "emit"
                     [|((match x2814 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       InspectorNotification.t_to_js
                         HeapProfiler.HeapStatsUpdateEventDataType.t_to_js
                         x2815)|])
        let (emit'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              message:NodeTracing.DataCollectedEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2821 : t) ->
            fun ~event:(x2818 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~message:(x2819 :
                           NodeTracing.DataCollectedEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2821) "emit"
                     [|((match x2818 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       InspectorNotification.t_to_js
                         NodeTracing.DataCollectedEventDataType.t_to_js x2819)|])
        let (emit''''''''''''''''''''''' :
          t -> event:[ `NodeTracing_tracingComplete ] -> bool) =
          fun (x2823 : t) ->
            fun ~event:(x2822 : [ `NodeTracing_tracingComplete ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2823) "emit"
                   [|((match x2822 with
                       | `NodeTracing_tracingComplete ->
                           Ojs.string_to_js "NodeTracingTracingComplete"))|])
        let (emit'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              message:NodeWorker.AttachedToWorkerEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2827 : t) ->
            fun ~event:(x2824 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~message:(x2825 :
                           NodeWorker.AttachedToWorkerEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2827) "emit"
                     [|((match x2824 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       InspectorNotification.t_to_js
                         NodeWorker.AttachedToWorkerEventDataType.t_to_js
                         x2825)|])
        let (emit''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              message:NodeWorker.DetachedFromWorkerEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2831 : t) ->
            fun ~event:(x2828 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~message:(x2829 :
                           NodeWorker.DetachedFromWorkerEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2831) "emit"
                     [|((match x2828 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       InspectorNotification.t_to_js
                         NodeWorker.DetachedFromWorkerEventDataType.t_to_js
                         x2829)|])
        let (emit'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                InspectorNotification.t -> bool)
          =
          fun (x2835 : t) ->
            fun ~event:(x2832 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~message:(x2833 :
                           NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                             InspectorNotification.t)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2835) "emit"
                     [|((match x2832 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       InspectorNotification.t_to_js
                         NodeWorker.ReceivedMessageFromWorkerEventDataType.t_to_js
                         x2833)|])
        let (emit''''''''''''''''''''''''''' :
          t -> event:[ `NodeRuntime_waitingForDisconnect ] -> bool) =
          fun (x2837 : t) ->
            fun ~event:(x2836 : [ `NodeRuntime_waitingForDisconnect ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2837) "emit"
                   [|((match x2836 with
                       | `NodeRuntime_waitingForDisconnect ->
                           Ojs.string_to_js "NodeRuntimeWaitingForDisconnect"))|])
        let (on : t -> event:string -> listener:(args:any list -> unit) -> t)
          =
          fun (x2842 : t) ->
            fun ~event:(x2838 : string) ->
              fun ~listener:(x2839 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2842) "on"
                     [|(Ojs.string_to_js x2838);(Ojs.fun_to_js_args
                                                   (fun (x2840 : _) ->
                                                      x2839
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2840 0)))|])
        let (on' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t InspectorNotification.t
                          -> unit)
                -> t)
          =
          fun (x2847 : t) ->
            fun ~event:(x2843 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2844 :
                            message:AnonymousInterface0.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2847) "on"
                     [|((match x2843 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2845 : Ojs.t) ->
                            x2844
                              ~message:(InspectorNotification.t_of_js
                                          AnonymousInterface0.t_of_js x2845)))|])
        let (on'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:Runtime.ExecutionContextCreatedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2852 : t) ->
            fun ~event:(x2848 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2849 :
                            message:Runtime.ExecutionContextCreatedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2852) "on"
                     [|((match x2848 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2850 :
                                                                    Ojs.t) ->
                                                                    x2849
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Runtime.ExecutionContextCreatedEventDataType.t_of_js
                                                                    x2850)))|])
        let (on''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:Runtime.ExecutionContextDestroyedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2857 : t) ->
            fun ~event:(x2853 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2854 :
                            message:Runtime.ExecutionContextDestroyedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2857) "on"
                     [|((match x2853 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2855 : Ojs.t) ->
                            x2854
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExecutionContextDestroyedEventDataType.t_of_js
                                          x2855)))|])
        let (on'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2860 : t) ->
            fun ~event:(x2858 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2859 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2860) "on"
                     [|((match x2858 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2859 ()))|])
        let (on''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:Runtime.ExceptionThrownEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2865 : t) ->
            fun ~event:(x2861 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x2862 :
                            message:Runtime.ExceptionThrownEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2865) "on"
                     [|((match x2861 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x2863 : Ojs.t) ->
                            x2862
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionThrownEventDataType.t_of_js
                                          x2863)))|])
        let (on'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:Runtime.ExceptionRevokedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2870 : t) ->
            fun ~event:(x2866 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x2867 :
                            message:Runtime.ExceptionRevokedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2870) "on"
                     [|((match x2866 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x2868 : Ojs.t) ->
                            x2867
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionRevokedEventDataType.t_of_js
                                          x2868)))|])
        let (on''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:Runtime.ConsoleAPICalledEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2875 : t) ->
            fun ~event:(x2871 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x2872 :
                            message:Runtime.ConsoleAPICalledEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2875) "on"
                     [|((match x2871 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x2873 : Ojs.t) ->
                            x2872
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ConsoleAPICalledEventDataType.t_of_js
                                          x2873)))|])
        let (on'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:Runtime.InspectRequestedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2880 : t) ->
            fun ~event:(x2876 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x2877 :
                            message:Runtime.InspectRequestedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2880) "on"
                     [|((match x2876 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x2878 : Ojs.t) ->
                            x2877
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.InspectRequestedEventDataType.t_of_js
                                          x2878)))|])
        let (on''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:Debugger.ScriptParsedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2885 : t) ->
            fun ~event:(x2881 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x2882 :
                            message:Debugger.ScriptParsedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2885) "on"
                     [|((match x2881 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x2883 : Ojs.t) ->
                            x2882
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptParsedEventDataType.t_of_js
                                          x2883)))|])
        let (on'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:Debugger.ScriptFailedToParseEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2890 : t) ->
            fun ~event:(x2886 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x2887 :
                            message:Debugger.ScriptFailedToParseEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2890) "on"
                     [|((match x2886 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x2888 : Ojs.t) ->
                            x2887
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptFailedToParseEventDataType.t_of_js
                                          x2888)))|])
        let (on''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:Debugger.BreakpointResolvedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2895 : t) ->
            fun ~event:(x2891 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x2892 :
                            message:Debugger.BreakpointResolvedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2895) "on"
                     [|((match x2891 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x2893 : Ojs.t) ->
                            x2892
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.BreakpointResolvedEventDataType.t_of_js
                                          x2893)))|])
        let (on'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:Debugger.PausedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2900 : t) ->
            fun ~event:(x2896 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x2897 :
                            message:Debugger.PausedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2900) "on"
                     [|((match x2896 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x2898 :
                                                                    Ojs.t) ->
                                                                    x2897
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Debugger.PausedEventDataType.t_of_js
                                                                    x2898)))|])
        let (on''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x2903 : t) ->
            fun ~event:(x2901 : [ `Debugger_resumed ]) ->
              fun ~listener:(x2902 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2903) "on"
                     [|((match x2901 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2902 ()))|])
        let (on'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:Console.MessageAddedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2908 : t) ->
            fun ~event:(x2904 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x2905 :
                            message:Console.MessageAddedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2908) "on"
                     [|((match x2904 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x2906 : Ojs.t) ->
                            x2905
                              ~message:(InspectorNotification.t_of_js
                                          Console.MessageAddedEventDataType.t_of_js
                                          x2906)))|])
        let (on''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:Profiler.ConsoleProfileStartedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2913 : t) ->
            fun ~event:(x2909 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x2910 :
                            message:Profiler.ConsoleProfileStartedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2913) "on"
                     [|((match x2909 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x2911 : Ojs.t) ->
                            x2910
                              ~message:(InspectorNotification.t_of_js
                                          Profiler.ConsoleProfileStartedEventDataType.t_of_js
                                          x2911)))|])
        let (on'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:Profiler.ConsoleProfileFinishedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2918 : t) ->
            fun ~event:(x2914 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x2915 :
                            message:Profiler.ConsoleProfileFinishedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2918) "on"
                     [|((match x2914 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2916 :
                                                                    Ojs.t) ->
                                                                    x2915
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Profiler.ConsoleProfileFinishedEventDataType.t_of_js
                                                                    x2916)))|])
        let (on''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2923 : t) ->
            fun ~event:(x2919 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x2920 :
                            message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2923) "on"
                     [|((match x2919 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x2921 : Ojs.t) ->
                            x2920
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.AddHeapSnapshotChunkEventDataType.t_of_js
                                          x2921)))|])
        let (on'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2926 : t) ->
            fun ~event:(x2924 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x2925 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2926) "on"
                     [|((match x2924 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x2925 ()))|])
        let (on''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2931 : t) ->
            fun ~event:(x2927 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x2928 :
                            message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2931) "on"
                     [|((match x2927 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x2929 : Ojs.t) ->
                            x2928
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.ReportHeapSnapshotProgressEventDataType.t_of_js
                                          x2929)))|])
        let (on'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:HeapProfiler.LastSeenObjectIdEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2936 : t) ->
            fun ~event:(x2932 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x2933 :
                            message:HeapProfiler.LastSeenObjectIdEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2936) "on"
                     [|((match x2932 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x2934 : Ojs.t) ->
                            x2933
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.LastSeenObjectIdEventDataType.t_of_js
                                          x2934)))|])
        let (on''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:HeapProfiler.HeapStatsUpdateEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2941 : t) ->
            fun ~event:(x2937 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x2938 :
                            message:HeapProfiler.HeapStatsUpdateEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2941) "on"
                     [|((match x2937 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x2939 : Ojs.t) ->
                            x2938
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.HeapStatsUpdateEventDataType.t_of_js
                                          x2939)))|])
        let (on'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:NodeTracing.DataCollectedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2946 : t) ->
            fun ~event:(x2942 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x2943 :
                            message:NodeTracing.DataCollectedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2946) "on"
                     [|((match x2942 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x2944 : Ojs.t) ->
                            x2943
                              ~message:(InspectorNotification.t_of_js
                                          NodeTracing.DataCollectedEventDataType.t_of_js
                                          x2944)))|])
        let (on''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2949 : t) ->
            fun ~event:(x2947 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x2948 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2949) "on"
                     [|((match x2947 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x2948 ()))|])
        let (on'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:NodeWorker.AttachedToWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2954 : t) ->
            fun ~event:(x2950 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x2951 :
                            message:NodeWorker.AttachedToWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2954) "on"
                     [|((match x2950 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2952 : Ojs.t) ->
                            x2951
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.AttachedToWorkerEventDataType.t_of_js
                                          x2952)))|])
        let (on''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:NodeWorker.DetachedFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2959 : t) ->
            fun ~event:(x2955 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x2956 :
                            message:NodeWorker.DetachedFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2959) "on"
                     [|((match x2955 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2957 : Ojs.t) ->
                            x2956
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.DetachedFromWorkerEventDataType.t_of_js
                                          x2957)))|])
        let (on'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2964 : t) ->
            fun ~event:(x2960 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x2961 :
                            message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2964) "on"
                     [|((match x2960 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2962 : Ojs.t) ->
                            x2961
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.ReceivedMessageFromWorkerEventDataType.t_of_js
                                          x2962)))|])
        let (on''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2967 : t) ->
            fun ~event:(x2965 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x2966 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2967) "on"
                     [|((match x2965 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2966 ()))|])
        let (once :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x2972 : t) ->
            fun ~event:(x2968 : string) ->
              fun ~listener:(x2969 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2972) "once"
                     [|(Ojs.string_to_js x2968);(Ojs.fun_to_js_args
                                                   (fun (x2970 : _) ->
                                                      x2969
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2970 0)))|])
        let (once' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t InspectorNotification.t
                          -> unit)
                -> t)
          =
          fun (x2977 : t) ->
            fun ~event:(x2973 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2974 :
                            message:AnonymousInterface0.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2977) "once"
                     [|((match x2973 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2975 : Ojs.t) ->
                            x2974
                              ~message:(InspectorNotification.t_of_js
                                          AnonymousInterface0.t_of_js x2975)))|])
        let (once'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:Runtime.ExecutionContextCreatedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2982 : t) ->
            fun ~event:(x2978 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2979 :
                            message:Runtime.ExecutionContextCreatedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2982) "once"
                     [|((match x2978 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2980 :
                                                                    Ojs.t) ->
                                                                    x2979
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Runtime.ExecutionContextCreatedEventDataType.t_of_js
                                                                    x2980)))|])
        let (once''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:Runtime.ExecutionContextDestroyedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2987 : t) ->
            fun ~event:(x2983 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2984 :
                            message:Runtime.ExecutionContextDestroyedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2987) "once"
                     [|((match x2983 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2985 : Ojs.t) ->
                            x2984
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExecutionContextDestroyedEventDataType.t_of_js
                                          x2985)))|])
        let (once'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2990 : t) ->
            fun ~event:(x2988 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2989 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2990) "once"
                     [|((match x2988 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2989 ()))|])
        let (once''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:Runtime.ExceptionThrownEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x2995 : t) ->
            fun ~event:(x2991 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x2992 :
                            message:Runtime.ExceptionThrownEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2995) "once"
                     [|((match x2991 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x2993 : Ojs.t) ->
                            x2992
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionThrownEventDataType.t_of_js
                                          x2993)))|])
        let (once'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:Runtime.ExceptionRevokedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3000 : t) ->
            fun ~event:(x2996 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x2997 :
                            message:Runtime.ExceptionRevokedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3000) "once"
                     [|((match x2996 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x2998 : Ojs.t) ->
                            x2997
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionRevokedEventDataType.t_of_js
                                          x2998)))|])
        let (once''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:Runtime.ConsoleAPICalledEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3005 : t) ->
            fun ~event:(x3001 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3002 :
                            message:Runtime.ConsoleAPICalledEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3005) "once"
                     [|((match x3001 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3003 : Ojs.t) ->
                            x3002
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ConsoleAPICalledEventDataType.t_of_js
                                          x3003)))|])
        let (once'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:Runtime.InspectRequestedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3010 : t) ->
            fun ~event:(x3006 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3007 :
                            message:Runtime.InspectRequestedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3010) "once"
                     [|((match x3006 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3008 : Ojs.t) ->
                            x3007
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.InspectRequestedEventDataType.t_of_js
                                          x3008)))|])
        let (once''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:Debugger.ScriptParsedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3015 : t) ->
            fun ~event:(x3011 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3012 :
                            message:Debugger.ScriptParsedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3015) "once"
                     [|((match x3011 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3013 : Ojs.t) ->
                            x3012
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptParsedEventDataType.t_of_js
                                          x3013)))|])
        let (once'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:Debugger.ScriptFailedToParseEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3020 : t) ->
            fun ~event:(x3016 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3017 :
                            message:Debugger.ScriptFailedToParseEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3020) "once"
                     [|((match x3016 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3018 : Ojs.t) ->
                            x3017
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptFailedToParseEventDataType.t_of_js
                                          x3018)))|])
        let (once''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:Debugger.BreakpointResolvedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3025 : t) ->
            fun ~event:(x3021 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3022 :
                            message:Debugger.BreakpointResolvedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3025) "once"
                     [|((match x3021 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3023 : Ojs.t) ->
                            x3022
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.BreakpointResolvedEventDataType.t_of_js
                                          x3023)))|])
        let (once'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:Debugger.PausedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3030 : t) ->
            fun ~event:(x3026 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3027 :
                            message:Debugger.PausedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3030) "once"
                     [|((match x3026 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3028 :
                                                                    Ojs.t) ->
                                                                    x3027
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Debugger.PausedEventDataType.t_of_js
                                                                    x3028)))|])
        let (once''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3033 : t) ->
            fun ~event:(x3031 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3032 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3033) "once"
                     [|((match x3031 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3032 ()))|])
        let (once'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:Console.MessageAddedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3038 : t) ->
            fun ~event:(x3034 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3035 :
                            message:Console.MessageAddedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3038) "once"
                     [|((match x3034 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3036 : Ojs.t) ->
                            x3035
                              ~message:(InspectorNotification.t_of_js
                                          Console.MessageAddedEventDataType.t_of_js
                                          x3036)))|])
        let (once''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:Profiler.ConsoleProfileStartedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3043 : t) ->
            fun ~event:(x3039 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3040 :
                            message:Profiler.ConsoleProfileStartedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3043) "once"
                     [|((match x3039 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3041 : Ojs.t) ->
                            x3040
                              ~message:(InspectorNotification.t_of_js
                                          Profiler.ConsoleProfileStartedEventDataType.t_of_js
                                          x3041)))|])
        let (once'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:Profiler.ConsoleProfileFinishedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3048 : t) ->
            fun ~event:(x3044 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3045 :
                            message:Profiler.ConsoleProfileFinishedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3048) "once"
                     [|((match x3044 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3046 :
                                                                    Ojs.t) ->
                                                                    x3045
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Profiler.ConsoleProfileFinishedEventDataType.t_of_js
                                                                    x3046)))|])
        let (once''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3053 : t) ->
            fun ~event:(x3049 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3050 :
                            message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3053) "once"
                     [|((match x3049 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3051 : Ojs.t) ->
                            x3050
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.AddHeapSnapshotChunkEventDataType.t_of_js
                                          x3051)))|])
        let (once'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3056 : t) ->
            fun ~event:(x3054 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3055 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3056) "once"
                     [|((match x3054 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3055 ()))|])
        let (once''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3061 : t) ->
            fun ~event:(x3057 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3058 :
                            message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3061) "once"
                     [|((match x3057 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3059 : Ojs.t) ->
                            x3058
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.ReportHeapSnapshotProgressEventDataType.t_of_js
                                          x3059)))|])
        let (once'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:HeapProfiler.LastSeenObjectIdEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3066 : t) ->
            fun ~event:(x3062 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3063 :
                            message:HeapProfiler.LastSeenObjectIdEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3066) "once"
                     [|((match x3062 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3064 : Ojs.t) ->
                            x3063
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.LastSeenObjectIdEventDataType.t_of_js
                                          x3064)))|])
        let (once''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:HeapProfiler.HeapStatsUpdateEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3071 : t) ->
            fun ~event:(x3067 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3068 :
                            message:HeapProfiler.HeapStatsUpdateEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3071) "once"
                     [|((match x3067 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3069 : Ojs.t) ->
                            x3068
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.HeapStatsUpdateEventDataType.t_of_js
                                          x3069)))|])
        let (once'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:NodeTracing.DataCollectedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3076 : t) ->
            fun ~event:(x3072 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3073 :
                            message:NodeTracing.DataCollectedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3076) "once"
                     [|((match x3072 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3074 : Ojs.t) ->
                            x3073
                              ~message:(InspectorNotification.t_of_js
                                          NodeTracing.DataCollectedEventDataType.t_of_js
                                          x3074)))|])
        let (once''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3079 : t) ->
            fun ~event:(x3077 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3078 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3079) "once"
                     [|((match x3077 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3078 ()))|])
        let (once'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:NodeWorker.AttachedToWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3084 : t) ->
            fun ~event:(x3080 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3081 :
                            message:NodeWorker.AttachedToWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3084) "once"
                     [|((match x3080 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3082 : Ojs.t) ->
                            x3081
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.AttachedToWorkerEventDataType.t_of_js
                                          x3082)))|])
        let (once''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:NodeWorker.DetachedFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3089 : t) ->
            fun ~event:(x3085 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3086 :
                            message:NodeWorker.DetachedFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3089) "once"
                     [|((match x3085 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3087 : Ojs.t) ->
                            x3086
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.DetachedFromWorkerEventDataType.t_of_js
                                          x3087)))|])
        let (once'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3094 : t) ->
            fun ~event:(x3090 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3091 :
                            message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3094) "once"
                     [|((match x3090 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3092 : Ojs.t) ->
                            x3091
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.ReceivedMessageFromWorkerEventDataType.t_of_js
                                          x3092)))|])
        let (once''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3097 : t) ->
            fun ~event:(x3095 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3096 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3097) "once"
                     [|((match x3095 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3096 ()))|])
        let (prepend_listener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x3102 : t) ->
            fun ~event:(x3098 : string) ->
              fun ~listener:(x3099 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3102) "prependListener"
                     [|(Ojs.string_to_js x3098);(Ojs.fun_to_js_args
                                                   (fun (x3100 : _) ->
                                                      x3099
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x3100 0)))|])
        let (prepend_listener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t InspectorNotification.t
                          -> unit)
                -> t)
          =
          fun (x3107 : t) ->
            fun ~event:(x3103 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x3104 :
                            message:AnonymousInterface0.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3107) "prependListener"
                     [|((match x3103 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x3105 : Ojs.t) ->
                            x3104
                              ~message:(InspectorNotification.t_of_js
                                          AnonymousInterface0.t_of_js x3105)))|])
        let (prepend_listener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:Runtime.ExecutionContextCreatedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3112 : t) ->
            fun ~event:(x3108 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x3109 :
                            message:Runtime.ExecutionContextCreatedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3112) "prependListener"
                     [|((match x3108 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3110 :
                                                                    Ojs.t) ->
                                                                    x3109
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Runtime.ExecutionContextCreatedEventDataType.t_of_js
                                                                    x3110)))|])
        let (prepend_listener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:Runtime.ExecutionContextDestroyedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3117 : t) ->
            fun ~event:(x3113 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x3114 :
                            message:Runtime.ExecutionContextDestroyedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3117) "prependListener"
                     [|((match x3113 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x3115 : Ojs.t) ->
                            x3114
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExecutionContextDestroyedEventDataType.t_of_js
                                          x3115)))|])
        let (prepend_listener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3120 : t) ->
            fun ~event:(x3118 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x3119 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3120) "prependListener"
                     [|((match x3118 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3119 ()))|])
        let (prepend_listener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:Runtime.ExceptionThrownEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3125 : t) ->
            fun ~event:(x3121 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3122 :
                            message:Runtime.ExceptionThrownEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3125) "prependListener"
                     [|((match x3121 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3123 : Ojs.t) ->
                            x3122
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionThrownEventDataType.t_of_js
                                          x3123)))|])
        let (prepend_listener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:Runtime.ExceptionRevokedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3130 : t) ->
            fun ~event:(x3126 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3127 :
                            message:Runtime.ExceptionRevokedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3130) "prependListener"
                     [|((match x3126 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3128 : Ojs.t) ->
                            x3127
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionRevokedEventDataType.t_of_js
                                          x3128)))|])
        let (prepend_listener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:Runtime.ConsoleAPICalledEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3135 : t) ->
            fun ~event:(x3131 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3132 :
                            message:Runtime.ConsoleAPICalledEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3135) "prependListener"
                     [|((match x3131 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3133 : Ojs.t) ->
                            x3132
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ConsoleAPICalledEventDataType.t_of_js
                                          x3133)))|])
        let (prepend_listener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:Runtime.InspectRequestedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3140 : t) ->
            fun ~event:(x3136 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3137 :
                            message:Runtime.InspectRequestedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3140) "prependListener"
                     [|((match x3136 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3138 : Ojs.t) ->
                            x3137
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.InspectRequestedEventDataType.t_of_js
                                          x3138)))|])
        let (prepend_listener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:Debugger.ScriptParsedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3145 : t) ->
            fun ~event:(x3141 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3142 :
                            message:Debugger.ScriptParsedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3145) "prependListener"
                     [|((match x3141 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3143 : Ojs.t) ->
                            x3142
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptParsedEventDataType.t_of_js
                                          x3143)))|])
        let (prepend_listener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:Debugger.ScriptFailedToParseEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3150 : t) ->
            fun ~event:(x3146 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3147 :
                            message:Debugger.ScriptFailedToParseEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3150) "prependListener"
                     [|((match x3146 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3148 : Ojs.t) ->
                            x3147
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptFailedToParseEventDataType.t_of_js
                                          x3148)))|])
        let (prepend_listener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:Debugger.BreakpointResolvedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3155 : t) ->
            fun ~event:(x3151 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3152 :
                            message:Debugger.BreakpointResolvedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3155) "prependListener"
                     [|((match x3151 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3153 : Ojs.t) ->
                            x3152
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.BreakpointResolvedEventDataType.t_of_js
                                          x3153)))|])
        let (prepend_listener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:Debugger.PausedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3160 : t) ->
            fun ~event:(x3156 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3157 :
                            message:Debugger.PausedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3160) "prependListener"
                     [|((match x3156 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3158 :
                                                                    Ojs.t) ->
                                                                    x3157
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Debugger.PausedEventDataType.t_of_js
                                                                    x3158)))|])
        let (prepend_listener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3163 : t) ->
            fun ~event:(x3161 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3162 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3163) "prependListener"
                     [|((match x3161 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3162 ()))|])
        let (prepend_listener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:Console.MessageAddedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3168 : t) ->
            fun ~event:(x3164 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3165 :
                            message:Console.MessageAddedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3168) "prependListener"
                     [|((match x3164 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3166 : Ojs.t) ->
                            x3165
                              ~message:(InspectorNotification.t_of_js
                                          Console.MessageAddedEventDataType.t_of_js
                                          x3166)))|])
        let (prepend_listener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:Profiler.ConsoleProfileStartedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3173 : t) ->
            fun ~event:(x3169 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3170 :
                            message:Profiler.ConsoleProfileStartedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3173) "prependListener"
                     [|((match x3169 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3171 : Ojs.t) ->
                            x3170
                              ~message:(InspectorNotification.t_of_js
                                          Profiler.ConsoleProfileStartedEventDataType.t_of_js
                                          x3171)))|])
        let (prepend_listener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:Profiler.ConsoleProfileFinishedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3178 : t) ->
            fun ~event:(x3174 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3175 :
                            message:Profiler.ConsoleProfileFinishedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3178) "prependListener"
                     [|((match x3174 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3176 :
                                                                    Ojs.t) ->
                                                                    x3175
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Profiler.ConsoleProfileFinishedEventDataType.t_of_js
                                                                    x3176)))|])
        let (prepend_listener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3183 : t) ->
            fun ~event:(x3179 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3180 :
                            message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3183) "prependListener"
                     [|((match x3179 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3181 : Ojs.t) ->
                            x3180
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.AddHeapSnapshotChunkEventDataType.t_of_js
                                          x3181)))|])
        let (prepend_listener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3186 : t) ->
            fun ~event:(x3184 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3185 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3186) "prependListener"
                     [|((match x3184 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3185 ()))|])
        let (prepend_listener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3191 : t) ->
            fun ~event:(x3187 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3188 :
                            message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3191) "prependListener"
                     [|((match x3187 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3189 : Ojs.t) ->
                            x3188
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.ReportHeapSnapshotProgressEventDataType.t_of_js
                                          x3189)))|])
        let (prepend_listener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:HeapProfiler.LastSeenObjectIdEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3196 : t) ->
            fun ~event:(x3192 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3193 :
                            message:HeapProfiler.LastSeenObjectIdEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3196) "prependListener"
                     [|((match x3192 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3194 : Ojs.t) ->
                            x3193
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.LastSeenObjectIdEventDataType.t_of_js
                                          x3194)))|])
        let (prepend_listener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:HeapProfiler.HeapStatsUpdateEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3201 : t) ->
            fun ~event:(x3197 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3198 :
                            message:HeapProfiler.HeapStatsUpdateEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3201) "prependListener"
                     [|((match x3197 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3199 : Ojs.t) ->
                            x3198
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.HeapStatsUpdateEventDataType.t_of_js
                                          x3199)))|])
        let (prepend_listener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:NodeTracing.DataCollectedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3206 : t) ->
            fun ~event:(x3202 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3203 :
                            message:NodeTracing.DataCollectedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3206) "prependListener"
                     [|((match x3202 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3204 : Ojs.t) ->
                            x3203
                              ~message:(InspectorNotification.t_of_js
                                          NodeTracing.DataCollectedEventDataType.t_of_js
                                          x3204)))|])
        let (prepend_listener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3209 : t) ->
            fun ~event:(x3207 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3208 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3209) "prependListener"
                     [|((match x3207 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3208 ()))|])
        let (prepend_listener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:NodeWorker.AttachedToWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3214 : t) ->
            fun ~event:(x3210 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3211 :
                            message:NodeWorker.AttachedToWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3214) "prependListener"
                     [|((match x3210 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3212 : Ojs.t) ->
                            x3211
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.AttachedToWorkerEventDataType.t_of_js
                                          x3212)))|])
        let (prepend_listener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:NodeWorker.DetachedFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3219 : t) ->
            fun ~event:(x3215 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3216 :
                            message:NodeWorker.DetachedFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3219) "prependListener"
                     [|((match x3215 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3217 : Ojs.t) ->
                            x3216
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.DetachedFromWorkerEventDataType.t_of_js
                                          x3217)))|])
        let (prepend_listener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3224 : t) ->
            fun ~event:(x3220 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3221 :
                            message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3224) "prependListener"
                     [|((match x3220 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3222 : Ojs.t) ->
                            x3221
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.ReceivedMessageFromWorkerEventDataType.t_of_js
                                          x3222)))|])
        let (prepend_listener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3227 : t) ->
            fun ~event:(x3225 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3226 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3227) "prependListener"
                     [|((match x3225 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3226 ()))|])
        let (prepend_once_listener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x3232 : t) ->
            fun ~event:(x3228 : string) ->
              fun ~listener:(x3229 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3232) "prependOnceListener"
                     [|(Ojs.string_to_js x3228);(Ojs.fun_to_js_args
                                                   (fun (x3230 : _) ->
                                                      x3229
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x3230 0)))|])
        let (prepend_once_listener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t InspectorNotification.t
                          -> unit)
                -> t)
          =
          fun (x3237 : t) ->
            fun ~event:(x3233 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x3234 :
                            message:AnonymousInterface0.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3237) "prependOnceListener"
                     [|((match x3233 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x3235 : Ojs.t) ->
                            x3234
                              ~message:(InspectorNotification.t_of_js
                                          AnonymousInterface0.t_of_js x3235)))|])
        let (prepend_once_listener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:Runtime.ExecutionContextCreatedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3242 : t) ->
            fun ~event:(x3238 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x3239 :
                            message:Runtime.ExecutionContextCreatedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3242) "prependOnceListener"
                     [|((match x3238 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3240 :
                                                                    Ojs.t) ->
                                                                    x3239
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Runtime.ExecutionContextCreatedEventDataType.t_of_js
                                                                    x3240)))|])
        let (prepend_once_listener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:Runtime.ExecutionContextDestroyedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3247 : t) ->
            fun ~event:(x3243 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x3244 :
                            message:Runtime.ExecutionContextDestroyedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3247) "prependOnceListener"
                     [|((match x3243 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x3245 : Ojs.t) ->
                            x3244
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExecutionContextDestroyedEventDataType.t_of_js
                                          x3245)))|])
        let (prepend_once_listener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3250 : t) ->
            fun ~event:(x3248 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x3249 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3250) "prependOnceListener"
                     [|((match x3248 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3249 ()))|])
        let (prepend_once_listener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:Runtime.ExceptionThrownEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3255 : t) ->
            fun ~event:(x3251 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3252 :
                            message:Runtime.ExceptionThrownEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3255) "prependOnceListener"
                     [|((match x3251 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3253 : Ojs.t) ->
                            x3252
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionThrownEventDataType.t_of_js
                                          x3253)))|])
        let (prepend_once_listener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:Runtime.ExceptionRevokedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3260 : t) ->
            fun ~event:(x3256 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3257 :
                            message:Runtime.ExceptionRevokedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3260) "prependOnceListener"
                     [|((match x3256 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3258 : Ojs.t) ->
                            x3257
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ExceptionRevokedEventDataType.t_of_js
                                          x3258)))|])
        let (prepend_once_listener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:Runtime.ConsoleAPICalledEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3265 : t) ->
            fun ~event:(x3261 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3262 :
                            message:Runtime.ConsoleAPICalledEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3265) "prependOnceListener"
                     [|((match x3261 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3263 : Ojs.t) ->
                            x3262
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.ConsoleAPICalledEventDataType.t_of_js
                                          x3263)))|])
        let (prepend_once_listener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:Runtime.InspectRequestedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3270 : t) ->
            fun ~event:(x3266 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3267 :
                            message:Runtime.InspectRequestedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3270) "prependOnceListener"
                     [|((match x3266 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3268 : Ojs.t) ->
                            x3267
                              ~message:(InspectorNotification.t_of_js
                                          Runtime.InspectRequestedEventDataType.t_of_js
                                          x3268)))|])
        let (prepend_once_listener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:Debugger.ScriptParsedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3275 : t) ->
            fun ~event:(x3271 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3272 :
                            message:Debugger.ScriptParsedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3275) "prependOnceListener"
                     [|((match x3271 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3273 : Ojs.t) ->
                            x3272
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptParsedEventDataType.t_of_js
                                          x3273)))|])
        let (prepend_once_listener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:Debugger.ScriptFailedToParseEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3280 : t) ->
            fun ~event:(x3276 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3277 :
                            message:Debugger.ScriptFailedToParseEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3280) "prependOnceListener"
                     [|((match x3276 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3278 : Ojs.t) ->
                            x3277
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.ScriptFailedToParseEventDataType.t_of_js
                                          x3278)))|])
        let (prepend_once_listener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:Debugger.BreakpointResolvedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3285 : t) ->
            fun ~event:(x3281 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3282 :
                            message:Debugger.BreakpointResolvedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3285) "prependOnceListener"
                     [|((match x3281 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3283 : Ojs.t) ->
                            x3282
                              ~message:(InspectorNotification.t_of_js
                                          Debugger.BreakpointResolvedEventDataType.t_of_js
                                          x3283)))|])
        let (prepend_once_listener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:Debugger.PausedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3290 : t) ->
            fun ~event:(x3286 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3287 :
                            message:Debugger.PausedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3290) "prependOnceListener"
                     [|((match x3286 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3288 :
                                                                    Ojs.t) ->
                                                                    x3287
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Debugger.PausedEventDataType.t_of_js
                                                                    x3288)))|])
        let (prepend_once_listener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3293 : t) ->
            fun ~event:(x3291 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3292 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3293) "prependOnceListener"
                     [|((match x3291 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3292 ()))|])
        let (prepend_once_listener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:Console.MessageAddedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3298 : t) ->
            fun ~event:(x3294 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3295 :
                            message:Console.MessageAddedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3298) "prependOnceListener"
                     [|((match x3294 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3296 : Ojs.t) ->
                            x3295
                              ~message:(InspectorNotification.t_of_js
                                          Console.MessageAddedEventDataType.t_of_js
                                          x3296)))|])
        let (prepend_once_listener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:Profiler.ConsoleProfileStartedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3303 : t) ->
            fun ~event:(x3299 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3300 :
                            message:Profiler.ConsoleProfileStartedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3303) "prependOnceListener"
                     [|((match x3299 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3301 : Ojs.t) ->
                            x3300
                              ~message:(InspectorNotification.t_of_js
                                          Profiler.ConsoleProfileStartedEventDataType.t_of_js
                                          x3301)))|])
        let (prepend_once_listener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:Profiler.ConsoleProfileFinishedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3308 : t) ->
            fun ~event:(x3304 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3305 :
                            message:Profiler.ConsoleProfileFinishedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3308) "prependOnceListener"
                     [|((match x3304 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3306 :
                                                                    Ojs.t) ->
                                                                    x3305
                                                                    ~message:(
                                                                    InspectorNotification.t_of_js
                                                                    Profiler.ConsoleProfileFinishedEventDataType.t_of_js
                                                                    x3306)))|])
        let (prepend_once_listener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3313 : t) ->
            fun ~event:(x3309 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3310 :
                            message:HeapProfiler.AddHeapSnapshotChunkEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3313) "prependOnceListener"
                     [|((match x3309 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3311 : Ojs.t) ->
                            x3310
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.AddHeapSnapshotChunkEventDataType.t_of_js
                                          x3311)))|])
        let (prepend_once_listener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3316 : t) ->
            fun ~event:(x3314 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3315 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3316) "prependOnceListener"
                     [|((match x3314 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3315 ()))|])
        let (prepend_once_listener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3321 : t) ->
            fun ~event:(x3317 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3318 :
                            message:HeapProfiler.ReportHeapSnapshotProgressEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3321) "prependOnceListener"
                     [|((match x3317 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3319 : Ojs.t) ->
                            x3318
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.ReportHeapSnapshotProgressEventDataType.t_of_js
                                          x3319)))|])
        let (prepend_once_listener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:HeapProfiler.LastSeenObjectIdEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3326 : t) ->
            fun ~event:(x3322 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3323 :
                            message:HeapProfiler.LastSeenObjectIdEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3326) "prependOnceListener"
                     [|((match x3322 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3324 : Ojs.t) ->
                            x3323
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.LastSeenObjectIdEventDataType.t_of_js
                                          x3324)))|])
        let (prepend_once_listener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:HeapProfiler.HeapStatsUpdateEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3331 : t) ->
            fun ~event:(x3327 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3328 :
                            message:HeapProfiler.HeapStatsUpdateEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3331) "prependOnceListener"
                     [|((match x3327 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3329 : Ojs.t) ->
                            x3328
                              ~message:(InspectorNotification.t_of_js
                                          HeapProfiler.HeapStatsUpdateEventDataType.t_of_js
                                          x3329)))|])
        let (prepend_once_listener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:NodeTracing.DataCollectedEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3336 : t) ->
            fun ~event:(x3332 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3333 :
                            message:NodeTracing.DataCollectedEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3336) "prependOnceListener"
                     [|((match x3332 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3334 : Ojs.t) ->
                            x3333
                              ~message:(InspectorNotification.t_of_js
                                          NodeTracing.DataCollectedEventDataType.t_of_js
                                          x3334)))|])
        let (prepend_once_listener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3339 : t) ->
            fun ~event:(x3337 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3338 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3339) "prependOnceListener"
                     [|((match x3337 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3338 ()))|])
        let (prepend_once_listener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:NodeWorker.AttachedToWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3344 : t) ->
            fun ~event:(x3340 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3341 :
                            message:NodeWorker.AttachedToWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3344) "prependOnceListener"
                     [|((match x3340 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3342 : Ojs.t) ->
                            x3341
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.AttachedToWorkerEventDataType.t_of_js
                                          x3342)))|])
        let (prepend_once_listener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:NodeWorker.DetachedFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3349 : t) ->
            fun ~event:(x3345 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3346 :
                            message:NodeWorker.DetachedFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3349) "prependOnceListener"
                     [|((match x3345 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3347 : Ojs.t) ->
                            x3346
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.DetachedFromWorkerEventDataType.t_of_js
                                          x3347)))|])
        let (prepend_once_listener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                          InspectorNotification.t -> unit)
                -> t)
          =
          fun (x3354 : t) ->
            fun ~event:(x3350 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3351 :
                            message:NodeWorker.ReceivedMessageFromWorkerEventDataType.t
                              InspectorNotification.t -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3354) "prependOnceListener"
                     [|((match x3350 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3352 : Ojs.t) ->
                            x3351
                              ~message:(InspectorNotification.t_of_js
                                          NodeWorker.ReceivedMessageFromWorkerEventDataType.t_of_js
                                          x3352)))|])
        let (prepend_once_listener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3357 : t) ->
            fun ~event:(x3355 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3356 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3357) "prependOnceListener"
                     [|((match x3355 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3356 ()))|])
        let (cast : t -> Node_events.Events.EventEmitter.t) =
          fun (x3358 : t) ->
            Node_events.Events.EventEmitter.t_of_js (t_to_js x3358)
      end
    let (open_ : ?port:int -> ?host:string -> ?wait:bool -> unit -> unit) =
      fun ?port:(x3359 : int option) ->
        fun ?host:(x3360 : string option) ->
          fun ?wait:(x3361 : bool option) ->
            fun () ->
              ignore
                (let x3366 = Import.inspector in
                 Ojs.call (Ojs.get_prop_ascii x3366 "open") "apply"
                   [|x3366;((let x3362 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3359 with
                              | Some x3365 ->
                                  ignore
                                    (Ojs.call x3362 "push"
                                       [|(Ojs.int_to_js x3365)|])
                              | None -> ());
                             (match x3360 with
                              | Some x3364 ->
                                  ignore
                                    (Ojs.call x3362 "push"
                                       [|(Ojs.string_to_js x3364)|])
                              | None -> ());
                             (match x3361 with
                              | Some x3363 ->
                                  ignore
                                    (Ojs.call x3362 "push"
                                       [|(Ojs.bool_to_js x3363)|])
                              | None -> ());
                             x3362))|])
    let (close : unit -> unit) =
      fun () -> ignore (Ojs.call Import.inspector "close" [||])
    let (url : unit -> string or_undefined) =
      fun () ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.call Import.inspector "url" [||])
    let (wait_for_debugger : unit -> unit) =
      fun () -> ignore (Ojs.call Import.inspector "waitForDebugger" [||])
  end
