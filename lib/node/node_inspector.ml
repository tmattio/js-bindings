[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type inspector_Console_ConsoleMessage =
          [ `Inspector_Console_ConsoleMessage ] intf
        and inspector_Console_MessageAddedEventDataType =
          [ `Inspector_Console_MessageAddedEventDataType ] intf
        and inspector_Debugger_BreakLocation =
          [ `Inspector_Debugger_BreakLocation ] intf
        and inspector_Debugger_BreakpointId = string
        and inspector_Debugger_BreakpointResolvedEventDataType =
          [ `Inspector_Debugger_BreakpointResolvedEventDataType ] intf
        and inspector_Debugger_CallFrame =
          [ `Inspector_Debugger_CallFrame ] intf
        and inspector_Debugger_CallFrameId = string
        and inspector_Debugger_ContinueToLocationParameterType =
          [ `Inspector_Debugger_ContinueToLocationParameterType ] intf
        and inspector_Debugger_EnableReturnType =
          [ `Inspector_Debugger_EnableReturnType ] intf
        and inspector_Debugger_EvaluateOnCallFrameParameterType =
          [ `Inspector_Debugger_EvaluateOnCallFrameParameterType ] intf
        and inspector_Debugger_EvaluateOnCallFrameReturnType =
          [ `Inspector_Debugger_EvaluateOnCallFrameReturnType ] intf
        and inspector_Debugger_GetPossibleBreakpointsParameterType =
          [ `Inspector_Debugger_GetPossibleBreakpointsParameterType ] intf
        and inspector_Debugger_GetPossibleBreakpointsReturnType =
          [ `Inspector_Debugger_GetPossibleBreakpointsReturnType ] intf
        and inspector_Debugger_GetScriptSourceParameterType =
          [ `Inspector_Debugger_GetScriptSourceParameterType ] intf
        and inspector_Debugger_GetScriptSourceReturnType =
          [ `Inspector_Debugger_GetScriptSourceReturnType ] intf
        and inspector_Debugger_GetStackTraceParameterType =
          [ `Inspector_Debugger_GetStackTraceParameterType ] intf
        and inspector_Debugger_GetStackTraceReturnType =
          [ `Inspector_Debugger_GetStackTraceReturnType ] intf
        and inspector_Debugger_Location =
          [ `Inspector_Debugger_Location ] intf
        and inspector_Debugger_PauseOnAsyncCallParameterType =
          [ `Inspector_Debugger_PauseOnAsyncCallParameterType ] intf
        and inspector_Debugger_PausedEventDataType =
          [ `Inspector_Debugger_PausedEventDataType ] intf
        and inspector_Debugger_RemoveBreakpointParameterType =
          [ `Inspector_Debugger_RemoveBreakpointParameterType ] intf
        and inspector_Debugger_RestartFrameParameterType =
          [ `Inspector_Debugger_RestartFrameParameterType ] intf
        and inspector_Debugger_RestartFrameReturnType =
          [ `Inspector_Debugger_RestartFrameReturnType ] intf
        and inspector_Debugger_Scope = [ `Inspector_Debugger_Scope ] intf
        and inspector_Debugger_ScriptFailedToParseEventDataType =
          [ `Inspector_Debugger_ScriptFailedToParseEventDataType ] intf
        and inspector_Debugger_ScriptParsedEventDataType =
          [ `Inspector_Debugger_ScriptParsedEventDataType ] intf
        and inspector_Debugger_ScriptPosition =
          [ `Inspector_Debugger_ScriptPosition ] intf
        and inspector_Debugger_SearchInContentParameterType =
          [ `Inspector_Debugger_SearchInContentParameterType ] intf
        and inspector_Debugger_SearchInContentReturnType =
          [ `Inspector_Debugger_SearchInContentReturnType ] intf
        and inspector_Debugger_SearchMatch =
          [ `Inspector_Debugger_SearchMatch ] intf
        and inspector_Debugger_SetAsyncCallStackDepthParameterType =
          [ `Inspector_Debugger_SetAsyncCallStackDepthParameterType ] intf
        and inspector_Debugger_SetBlackboxPatternsParameterType =
          [ `Inspector_Debugger_SetBlackboxPatternsParameterType ] intf
        and inspector_Debugger_SetBlackboxedRangesParameterType =
          [ `Inspector_Debugger_SetBlackboxedRangesParameterType ] intf
        and inspector_Debugger_SetBreakpointByUrlParameterType =
          [ `Inspector_Debugger_SetBreakpointByUrlParameterType ] intf
        and inspector_Debugger_SetBreakpointByUrlReturnType =
          [ `Inspector_Debugger_SetBreakpointByUrlReturnType ] intf
        and inspector_Debugger_SetBreakpointParameterType =
          [ `Inspector_Debugger_SetBreakpointParameterType ] intf
        and inspector_Debugger_SetBreakpointReturnType =
          [ `Inspector_Debugger_SetBreakpointReturnType ] intf
        and inspector_Debugger_SetBreakpointsActiveParameterType =
          [ `Inspector_Debugger_SetBreakpointsActiveParameterType ] intf
        and inspector_Debugger_SetPauseOnExceptionsParameterType =
          [ `Inspector_Debugger_SetPauseOnExceptionsParameterType ] intf
        and inspector_Debugger_SetReturnValueParameterType =
          [ `Inspector_Debugger_SetReturnValueParameterType ] intf
        and inspector_Debugger_SetScriptSourceParameterType =
          [ `Inspector_Debugger_SetScriptSourceParameterType ] intf
        and inspector_Debugger_SetScriptSourceReturnType =
          [ `Inspector_Debugger_SetScriptSourceReturnType ] intf
        and inspector_Debugger_SetSkipAllPausesParameterType =
          [ `Inspector_Debugger_SetSkipAllPausesParameterType ] intf
        and inspector_Debugger_SetVariableValueParameterType =
          [ `Inspector_Debugger_SetVariableValueParameterType ] intf
        and inspector_Debugger_StepIntoParameterType =
          [ `Inspector_Debugger_StepIntoParameterType ] intf
        and inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType =
          [ `Inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType ] intf
        and inspector_HeapProfiler_AddInspectedHeapObjectParameterType =
          [ `Inspector_HeapProfiler_AddInspectedHeapObjectParameterType ]
            intf
        and inspector_HeapProfiler_GetHeapObjectIdParameterType =
          [ `Inspector_HeapProfiler_GetHeapObjectIdParameterType ] intf
        and inspector_HeapProfiler_GetHeapObjectIdReturnType =
          [ `Inspector_HeapProfiler_GetHeapObjectIdReturnType ] intf
        and inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType =
          [ `Inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType ]
            intf
        and inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType =
          [ `Inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType ] intf
        and inspector_HeapProfiler_GetSamplingProfileReturnType =
          [ `Inspector_HeapProfiler_GetSamplingProfileReturnType ] intf
        and inspector_HeapProfiler_HeapSnapshotObjectId = string
        and inspector_HeapProfiler_HeapStatsUpdateEventDataType =
          [ `Inspector_HeapProfiler_HeapStatsUpdateEventDataType ] intf
        and inspector_HeapProfiler_LastSeenObjectIdEventDataType =
          [ `Inspector_HeapProfiler_LastSeenObjectIdEventDataType ] intf
        and inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType =
          [ `Inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType ]
            intf
        and inspector_HeapProfiler_SamplingHeapProfile =
          [ `Inspector_HeapProfiler_SamplingHeapProfile ] intf
        and inspector_HeapProfiler_SamplingHeapProfileNode =
          [ `Inspector_HeapProfiler_SamplingHeapProfileNode ] intf
        and inspector_HeapProfiler_StartSamplingParameterType =
          [ `Inspector_HeapProfiler_StartSamplingParameterType ] intf
        and inspector_HeapProfiler_StartTrackingHeapObjectsParameterType =
          [ `Inspector_HeapProfiler_StartTrackingHeapObjectsParameterType ]
            intf
        and inspector_HeapProfiler_StopSamplingReturnType =
          [ `Inspector_HeapProfiler_StopSamplingReturnType ] intf
        and inspector_HeapProfiler_StopTrackingHeapObjectsParameterType =
          [ `Inspector_HeapProfiler_StopTrackingHeapObjectsParameterType ]
            intf
        and inspector_HeapProfiler_TakeHeapSnapshotParameterType =
          [ `Inspector_HeapProfiler_TakeHeapSnapshotParameterType ] intf
        and 'T inspector_InspectorNotification =
          [ `Inspector_InspectorNotification of 'T ] intf
        and inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType =
          [
            `Inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
              ]
            intf
        and inspector_NodeTracing_DataCollectedEventDataType =
          [ `Inspector_NodeTracing_DataCollectedEventDataType ] intf
        and inspector_NodeTracing_GetCategoriesReturnType =
          [ `Inspector_NodeTracing_GetCategoriesReturnType ] intf
        and inspector_NodeTracing_StartParameterType =
          [ `Inspector_NodeTracing_StartParameterType ] intf
        and inspector_NodeTracing_TraceConfig =
          [ `Inspector_NodeTracing_TraceConfig ] intf
        and inspector_NodeWorker_AttachedToWorkerEventDataType =
          [ `Inspector_NodeWorker_AttachedToWorkerEventDataType ] intf
        and inspector_NodeWorker_DetachParameterType =
          [ `Inspector_NodeWorker_DetachParameterType ] intf
        and inspector_NodeWorker_DetachedFromWorkerEventDataType =
          [ `Inspector_NodeWorker_DetachedFromWorkerEventDataType ] intf
        and inspector_NodeWorker_EnableParameterType =
          [ `Inspector_NodeWorker_EnableParameterType ] intf
        and inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType =
          [ `Inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType ]
            intf
        and inspector_NodeWorker_SendMessageToWorkerParameterType =
          [ `Inspector_NodeWorker_SendMessageToWorkerParameterType ] intf
        and inspector_NodeWorker_SessionID = string
        and inspector_NodeWorker_WorkerID = string
        and inspector_NodeWorker_WorkerInfo =
          [ `Inspector_NodeWorker_WorkerInfo ] intf
        and inspector_Profiler_ConsoleProfileFinishedEventDataType =
          [ `Inspector_Profiler_ConsoleProfileFinishedEventDataType ] intf
        and inspector_Profiler_ConsoleProfileStartedEventDataType =
          [ `Inspector_Profiler_ConsoleProfileStartedEventDataType ] intf
        and inspector_Profiler_CoverageRange =
          [ `Inspector_Profiler_CoverageRange ] intf
        and inspector_Profiler_FunctionCoverage =
          [ `Inspector_Profiler_FunctionCoverage ] intf
        and inspector_Profiler_GetBestEffortCoverageReturnType =
          [ `Inspector_Profiler_GetBestEffortCoverageReturnType ] intf
        and inspector_Profiler_PositionTickInfo =
          [ `Inspector_Profiler_PositionTickInfo ] intf
        and inspector_Profiler_Profile = [ `Inspector_Profiler_Profile ] intf
        and inspector_Profiler_ProfileNode =
          [ `Inspector_Profiler_ProfileNode ] intf
        and inspector_Profiler_ScriptCoverage =
          [ `Inspector_Profiler_ScriptCoverage ] intf
        and inspector_Profiler_ScriptTypeProfile =
          [ `Inspector_Profiler_ScriptTypeProfile ] intf
        and inspector_Profiler_SetSamplingIntervalParameterType =
          [ `Inspector_Profiler_SetSamplingIntervalParameterType ] intf
        and inspector_Profiler_StartPreciseCoverageParameterType =
          [ `Inspector_Profiler_StartPreciseCoverageParameterType ] intf
        and inspector_Profiler_StopReturnType =
          [ `Inspector_Profiler_StopReturnType ] intf
        and inspector_Profiler_TakePreciseCoverageReturnType =
          [ `Inspector_Profiler_TakePreciseCoverageReturnType ] intf
        and inspector_Profiler_TakeTypeProfileReturnType =
          [ `Inspector_Profiler_TakeTypeProfileReturnType ] intf
        and inspector_Profiler_TypeObject =
          [ `Inspector_Profiler_TypeObject ] intf
        and inspector_Profiler_TypeProfileEntry =
          [ `Inspector_Profiler_TypeProfileEntry ] intf
        and inspector_Runtime_AwaitPromiseParameterType =
          [ `Inspector_Runtime_AwaitPromiseParameterType ] intf
        and inspector_Runtime_AwaitPromiseReturnType =
          [ `Inspector_Runtime_AwaitPromiseReturnType ] intf
        and inspector_Runtime_CallArgument =
          [ `Inspector_Runtime_CallArgument ] intf
        and inspector_Runtime_CallFrame =
          [ `Inspector_Runtime_CallFrame ] intf
        and inspector_Runtime_CallFunctionOnParameterType =
          [ `Inspector_Runtime_CallFunctionOnParameterType ] intf
        and inspector_Runtime_CallFunctionOnReturnType =
          [ `Inspector_Runtime_CallFunctionOnReturnType ] intf
        and inspector_Runtime_CompileScriptParameterType =
          [ `Inspector_Runtime_CompileScriptParameterType ] intf
        and inspector_Runtime_CompileScriptReturnType =
          [ `Inspector_Runtime_CompileScriptReturnType ] intf
        and inspector_Runtime_ConsoleAPICalledEventDataType =
          [ `Inspector_Runtime_ConsoleAPICalledEventDataType ] intf
        and inspector_Runtime_CustomPreview =
          [ `Inspector_Runtime_CustomPreview ] intf
        and inspector_Runtime_EntryPreview =
          [ `Inspector_Runtime_EntryPreview ] intf
        and inspector_Runtime_EvaluateParameterType =
          [ `Inspector_Runtime_EvaluateParameterType ] intf
        and inspector_Runtime_EvaluateReturnType =
          [ `Inspector_Runtime_EvaluateReturnType ] intf
        and inspector_Runtime_ExceptionDetails =
          [ `Inspector_Runtime_ExceptionDetails ] intf
        and inspector_Runtime_ExceptionRevokedEventDataType =
          [ `Inspector_Runtime_ExceptionRevokedEventDataType ] intf
        and inspector_Runtime_ExceptionThrownEventDataType =
          [ `Inspector_Runtime_ExceptionThrownEventDataType ] intf
        and inspector_Runtime_ExecutionContextCreatedEventDataType =
          [ `Inspector_Runtime_ExecutionContextCreatedEventDataType ] intf
        and inspector_Runtime_ExecutionContextDescription =
          [ `Inspector_Runtime_ExecutionContextDescription ] intf
        and inspector_Runtime_ExecutionContextDestroyedEventDataType =
          [ `Inspector_Runtime_ExecutionContextDestroyedEventDataType ] intf
        and inspector_Runtime_ExecutionContextId = float
        and inspector_Runtime_GetPropertiesParameterType =
          [ `Inspector_Runtime_GetPropertiesParameterType ] intf
        and inspector_Runtime_GetPropertiesReturnType =
          [ `Inspector_Runtime_GetPropertiesReturnType ] intf
        and inspector_Runtime_GlobalLexicalScopeNamesParameterType =
          [ `Inspector_Runtime_GlobalLexicalScopeNamesParameterType ] intf
        and inspector_Runtime_GlobalLexicalScopeNamesReturnType =
          [ `Inspector_Runtime_GlobalLexicalScopeNamesReturnType ] intf
        and inspector_Runtime_InspectRequestedEventDataType =
          [ `Inspector_Runtime_InspectRequestedEventDataType ] intf
        and inspector_Runtime_InternalPropertyDescriptor =
          [ `Inspector_Runtime_InternalPropertyDescriptor ] intf
        and inspector_Runtime_ObjectPreview =
          [ `Inspector_Runtime_ObjectPreview ] intf
        and inspector_Runtime_PropertyDescriptor =
          [ `Inspector_Runtime_PropertyDescriptor ] intf
        and inspector_Runtime_PropertyPreview =
          [ `Inspector_Runtime_PropertyPreview ] intf
        and inspector_Runtime_QueryObjectsParameterType =
          [ `Inspector_Runtime_QueryObjectsParameterType ] intf
        and inspector_Runtime_QueryObjectsReturnType =
          [ `Inspector_Runtime_QueryObjectsReturnType ] intf
        and inspector_Runtime_ReleaseObjectGroupParameterType =
          [ `Inspector_Runtime_ReleaseObjectGroupParameterType ] intf
        and inspector_Runtime_ReleaseObjectParameterType =
          [ `Inspector_Runtime_ReleaseObjectParameterType ] intf
        and inspector_Runtime_RemoteObject =
          [ `Inspector_Runtime_RemoteObject ] intf
        and inspector_Runtime_RemoteObjectId = string
        and inspector_Runtime_RunScriptParameterType =
          [ `Inspector_Runtime_RunScriptParameterType ] intf
        and inspector_Runtime_RunScriptReturnType =
          [ `Inspector_Runtime_RunScriptReturnType ] intf
        and inspector_Runtime_ScriptId = string
        and inspector_Runtime_SetCustomObjectFormatterEnabledParameterType =
          [ `Inspector_Runtime_SetCustomObjectFormatterEnabledParameterType ]
            intf
        and inspector_Runtime_StackTrace =
          [ `Inspector_Runtime_StackTrace ] intf
        and inspector_Runtime_StackTraceId =
          [ `Inspector_Runtime_StackTraceId ] intf
        and inspector_Runtime_Timestamp = float
        and inspector_Runtime_UniqueDebuggerId = string
        and inspector_Runtime_UnserializableValue = string
        and inspector_Schema_Domain = [ `Inspector_Schema_Domain ] intf
        and inspector_Schema_GetDomainsReturnType =
          [ `Inspector_Schema_GetDomainsReturnType ] intf
        and inspector_Session = [ `Inspector_Session ] intf
        let rec inspector_Console_ConsoleMessage_of_js :
          Ojs.t -> inspector_Console_ConsoleMessage = Obj.magic
        and inspector_Console_ConsoleMessage_to_js :
          inspector_Console_ConsoleMessage -> Ojs.t = Obj.magic
        and inspector_Console_MessageAddedEventDataType_of_js :
          Ojs.t -> inspector_Console_MessageAddedEventDataType = Obj.magic
        and inspector_Console_MessageAddedEventDataType_to_js :
          inspector_Console_MessageAddedEventDataType -> Ojs.t = Obj.magic
        and inspector_Debugger_BreakLocation_of_js :
          Ojs.t -> inspector_Debugger_BreakLocation = Obj.magic
        and inspector_Debugger_BreakLocation_to_js :
          inspector_Debugger_BreakLocation -> Ojs.t = Obj.magic
        and inspector_Debugger_BreakpointId_of_js :
          Ojs.t -> inspector_Debugger_BreakpointId =
          fun (x2 : Ojs.t) -> Ojs.string_of_js x2
        and inspector_Debugger_BreakpointId_to_js :
          inspector_Debugger_BreakpointId -> Ojs.t =
          fun (x1 : string) -> Ojs.string_to_js x1
        and inspector_Debugger_BreakpointResolvedEventDataType_of_js :
          Ojs.t -> inspector_Debugger_BreakpointResolvedEventDataType =
          Obj.magic
        and inspector_Debugger_BreakpointResolvedEventDataType_to_js :
          inspector_Debugger_BreakpointResolvedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_CallFrame_of_js :
          Ojs.t -> inspector_Debugger_CallFrame = Obj.magic
        and inspector_Debugger_CallFrame_to_js :
          inspector_Debugger_CallFrame -> Ojs.t = Obj.magic
        and inspector_Debugger_CallFrameId_of_js :
          Ojs.t -> inspector_Debugger_CallFrameId =
          fun (x4 : Ojs.t) -> Ojs.string_of_js x4
        and inspector_Debugger_CallFrameId_to_js :
          inspector_Debugger_CallFrameId -> Ojs.t =
          fun (x3 : string) -> Ojs.string_to_js x3
        and inspector_Debugger_ContinueToLocationParameterType_of_js :
          Ojs.t -> inspector_Debugger_ContinueToLocationParameterType =
          Obj.magic
        and inspector_Debugger_ContinueToLocationParameterType_to_js :
          inspector_Debugger_ContinueToLocationParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_EnableReturnType_of_js :
          Ojs.t -> inspector_Debugger_EnableReturnType = Obj.magic
        and inspector_Debugger_EnableReturnType_to_js :
          inspector_Debugger_EnableReturnType -> Ojs.t = Obj.magic
        and inspector_Debugger_EvaluateOnCallFrameParameterType_of_js :
          Ojs.t -> inspector_Debugger_EvaluateOnCallFrameParameterType =
          Obj.magic
        and inspector_Debugger_EvaluateOnCallFrameParameterType_to_js :
          inspector_Debugger_EvaluateOnCallFrameParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_EvaluateOnCallFrameReturnType_of_js :
          Ojs.t -> inspector_Debugger_EvaluateOnCallFrameReturnType =
          Obj.magic
        and inspector_Debugger_EvaluateOnCallFrameReturnType_to_js :
          inspector_Debugger_EvaluateOnCallFrameReturnType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_GetPossibleBreakpointsParameterType_of_js :
          Ojs.t -> inspector_Debugger_GetPossibleBreakpointsParameterType =
          Obj.magic
        and inspector_Debugger_GetPossibleBreakpointsParameterType_to_js :
          inspector_Debugger_GetPossibleBreakpointsParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_GetPossibleBreakpointsReturnType_of_js :
          Ojs.t -> inspector_Debugger_GetPossibleBreakpointsReturnType =
          Obj.magic
        and inspector_Debugger_GetPossibleBreakpointsReturnType_to_js :
          inspector_Debugger_GetPossibleBreakpointsReturnType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_GetScriptSourceParameterType_of_js :
          Ojs.t -> inspector_Debugger_GetScriptSourceParameterType =
          Obj.magic
        and inspector_Debugger_GetScriptSourceParameterType_to_js :
          inspector_Debugger_GetScriptSourceParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_GetScriptSourceReturnType_of_js :
          Ojs.t -> inspector_Debugger_GetScriptSourceReturnType = Obj.magic
        and inspector_Debugger_GetScriptSourceReturnType_to_js :
          inspector_Debugger_GetScriptSourceReturnType -> Ojs.t = Obj.magic
        and inspector_Debugger_GetStackTraceParameterType_of_js :
          Ojs.t -> inspector_Debugger_GetStackTraceParameterType = Obj.magic
        and inspector_Debugger_GetStackTraceParameterType_to_js :
          inspector_Debugger_GetStackTraceParameterType -> Ojs.t = Obj.magic
        and inspector_Debugger_GetStackTraceReturnType_of_js :
          Ojs.t -> inspector_Debugger_GetStackTraceReturnType = Obj.magic
        and inspector_Debugger_GetStackTraceReturnType_to_js :
          inspector_Debugger_GetStackTraceReturnType -> Ojs.t = Obj.magic
        and inspector_Debugger_Location_of_js :
          Ojs.t -> inspector_Debugger_Location = Obj.magic
        and inspector_Debugger_Location_to_js :
          inspector_Debugger_Location -> Ojs.t = Obj.magic
        and inspector_Debugger_PauseOnAsyncCallParameterType_of_js :
          Ojs.t -> inspector_Debugger_PauseOnAsyncCallParameterType =
          Obj.magic
        and inspector_Debugger_PauseOnAsyncCallParameterType_to_js :
          inspector_Debugger_PauseOnAsyncCallParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_PausedEventDataType_of_js :
          Ojs.t -> inspector_Debugger_PausedEventDataType = Obj.magic
        and inspector_Debugger_PausedEventDataType_to_js :
          inspector_Debugger_PausedEventDataType -> Ojs.t = Obj.magic
        and inspector_Debugger_RemoveBreakpointParameterType_of_js :
          Ojs.t -> inspector_Debugger_RemoveBreakpointParameterType =
          Obj.magic
        and inspector_Debugger_RemoveBreakpointParameterType_to_js :
          inspector_Debugger_RemoveBreakpointParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_RestartFrameParameterType_of_js :
          Ojs.t -> inspector_Debugger_RestartFrameParameterType = Obj.magic
        and inspector_Debugger_RestartFrameParameterType_to_js :
          inspector_Debugger_RestartFrameParameterType -> Ojs.t = Obj.magic
        and inspector_Debugger_RestartFrameReturnType_of_js :
          Ojs.t -> inspector_Debugger_RestartFrameReturnType = Obj.magic
        and inspector_Debugger_RestartFrameReturnType_to_js :
          inspector_Debugger_RestartFrameReturnType -> Ojs.t = Obj.magic
        and inspector_Debugger_Scope_of_js :
          Ojs.t -> inspector_Debugger_Scope = Obj.magic
        and inspector_Debugger_Scope_to_js :
          inspector_Debugger_Scope -> Ojs.t = Obj.magic
        and inspector_Debugger_ScriptFailedToParseEventDataType_of_js :
          Ojs.t -> inspector_Debugger_ScriptFailedToParseEventDataType =
          Obj.magic
        and inspector_Debugger_ScriptFailedToParseEventDataType_to_js :
          inspector_Debugger_ScriptFailedToParseEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_ScriptParsedEventDataType_of_js :
          Ojs.t -> inspector_Debugger_ScriptParsedEventDataType = Obj.magic
        and inspector_Debugger_ScriptParsedEventDataType_to_js :
          inspector_Debugger_ScriptParsedEventDataType -> Ojs.t = Obj.magic
        and inspector_Debugger_ScriptPosition_of_js :
          Ojs.t -> inspector_Debugger_ScriptPosition = Obj.magic
        and inspector_Debugger_ScriptPosition_to_js :
          inspector_Debugger_ScriptPosition -> Ojs.t = Obj.magic
        and inspector_Debugger_SearchInContentParameterType_of_js :
          Ojs.t -> inspector_Debugger_SearchInContentParameterType =
          Obj.magic
        and inspector_Debugger_SearchInContentParameterType_to_js :
          inspector_Debugger_SearchInContentParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SearchInContentReturnType_of_js :
          Ojs.t -> inspector_Debugger_SearchInContentReturnType = Obj.magic
        and inspector_Debugger_SearchInContentReturnType_to_js :
          inspector_Debugger_SearchInContentReturnType -> Ojs.t = Obj.magic
        and inspector_Debugger_SearchMatch_of_js :
          Ojs.t -> inspector_Debugger_SearchMatch = Obj.magic
        and inspector_Debugger_SearchMatch_to_js :
          inspector_Debugger_SearchMatch -> Ojs.t = Obj.magic
        and inspector_Debugger_SetAsyncCallStackDepthParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetAsyncCallStackDepthParameterType =
          Obj.magic
        and inspector_Debugger_SetAsyncCallStackDepthParameterType_to_js :
          inspector_Debugger_SetAsyncCallStackDepthParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetBlackboxPatternsParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetBlackboxPatternsParameterType =
          Obj.magic
        and inspector_Debugger_SetBlackboxPatternsParameterType_to_js :
          inspector_Debugger_SetBlackboxPatternsParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetBlackboxedRangesParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetBlackboxedRangesParameterType =
          Obj.magic
        and inspector_Debugger_SetBlackboxedRangesParameterType_to_js :
          inspector_Debugger_SetBlackboxedRangesParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetBreakpointByUrlParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetBreakpointByUrlParameterType =
          Obj.magic
        and inspector_Debugger_SetBreakpointByUrlParameterType_to_js :
          inspector_Debugger_SetBreakpointByUrlParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetBreakpointByUrlReturnType_of_js :
          Ojs.t -> inspector_Debugger_SetBreakpointByUrlReturnType =
          Obj.magic
        and inspector_Debugger_SetBreakpointByUrlReturnType_to_js :
          inspector_Debugger_SetBreakpointByUrlReturnType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetBreakpointParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetBreakpointParameterType = Obj.magic
        and inspector_Debugger_SetBreakpointParameterType_to_js :
          inspector_Debugger_SetBreakpointParameterType -> Ojs.t = Obj.magic
        and inspector_Debugger_SetBreakpointReturnType_of_js :
          Ojs.t -> inspector_Debugger_SetBreakpointReturnType = Obj.magic
        and inspector_Debugger_SetBreakpointReturnType_to_js :
          inspector_Debugger_SetBreakpointReturnType -> Ojs.t = Obj.magic
        and inspector_Debugger_SetBreakpointsActiveParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetBreakpointsActiveParameterType =
          Obj.magic
        and inspector_Debugger_SetBreakpointsActiveParameterType_to_js :
          inspector_Debugger_SetBreakpointsActiveParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetPauseOnExceptionsParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetPauseOnExceptionsParameterType =
          Obj.magic
        and inspector_Debugger_SetPauseOnExceptionsParameterType_to_js :
          inspector_Debugger_SetPauseOnExceptionsParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetReturnValueParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetReturnValueParameterType = Obj.magic
        and inspector_Debugger_SetReturnValueParameterType_to_js :
          inspector_Debugger_SetReturnValueParameterType -> Ojs.t = Obj.magic
        and inspector_Debugger_SetScriptSourceParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetScriptSourceParameterType =
          Obj.magic
        and inspector_Debugger_SetScriptSourceParameterType_to_js :
          inspector_Debugger_SetScriptSourceParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetScriptSourceReturnType_of_js :
          Ojs.t -> inspector_Debugger_SetScriptSourceReturnType = Obj.magic
        and inspector_Debugger_SetScriptSourceReturnType_to_js :
          inspector_Debugger_SetScriptSourceReturnType -> Ojs.t = Obj.magic
        and inspector_Debugger_SetSkipAllPausesParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetSkipAllPausesParameterType =
          Obj.magic
        and inspector_Debugger_SetSkipAllPausesParameterType_to_js :
          inspector_Debugger_SetSkipAllPausesParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_SetVariableValueParameterType_of_js :
          Ojs.t -> inspector_Debugger_SetVariableValueParameterType =
          Obj.magic
        and inspector_Debugger_SetVariableValueParameterType_to_js :
          inspector_Debugger_SetVariableValueParameterType -> Ojs.t =
          Obj.magic
        and inspector_Debugger_StepIntoParameterType_of_js :
          Ojs.t -> inspector_Debugger_StepIntoParameterType = Obj.magic
        and inspector_Debugger_StepIntoParameterType_to_js :
          inspector_Debugger_StepIntoParameterType -> Ojs.t = Obj.magic
        and inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js :
          Ojs.t -> inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType =
          Obj.magic
        and inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_to_js :
          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_AddInspectedHeapObjectParameterType_of_js
          :
          Ojs.t -> inspector_HeapProfiler_AddInspectedHeapObjectParameterType
          = Obj.magic
        and inspector_HeapProfiler_AddInspectedHeapObjectParameterType_to_js
          :
          inspector_HeapProfiler_AddInspectedHeapObjectParameterType -> Ojs.t
          = Obj.magic
        and inspector_HeapProfiler_GetHeapObjectIdParameterType_of_js :
          Ojs.t -> inspector_HeapProfiler_GetHeapObjectIdParameterType =
          Obj.magic
        and inspector_HeapProfiler_GetHeapObjectIdParameterType_to_js :
          inspector_HeapProfiler_GetHeapObjectIdParameterType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_GetHeapObjectIdReturnType_of_js :
          Ojs.t -> inspector_HeapProfiler_GetHeapObjectIdReturnType =
          Obj.magic
        and inspector_HeapProfiler_GetHeapObjectIdReturnType_to_js :
          inspector_HeapProfiler_GetHeapObjectIdReturnType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType_of_js
          :
          Ojs.t ->
            inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType
          = Obj.magic
        and inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType_to_js
          :
          inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType ->
            Ojs.t
          = Obj.magic
        and inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType_of_js :
          Ojs.t -> inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType =
          Obj.magic
        and inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType_to_js :
          inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_GetSamplingProfileReturnType_of_js :
          Ojs.t -> inspector_HeapProfiler_GetSamplingProfileReturnType =
          Obj.magic
        and inspector_HeapProfiler_GetSamplingProfileReturnType_to_js :
          inspector_HeapProfiler_GetSamplingProfileReturnType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_HeapSnapshotObjectId_of_js :
          Ojs.t -> inspector_HeapProfiler_HeapSnapshotObjectId =
          fun (x6 : Ojs.t) -> Ojs.string_of_js x6
        and inspector_HeapProfiler_HeapSnapshotObjectId_to_js :
          inspector_HeapProfiler_HeapSnapshotObjectId -> Ojs.t =
          fun (x5 : string) -> Ojs.string_to_js x5
        and inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js :
          Ojs.t -> inspector_HeapProfiler_HeapStatsUpdateEventDataType =
          Obj.magic
        and inspector_HeapProfiler_HeapStatsUpdateEventDataType_to_js :
          inspector_HeapProfiler_HeapStatsUpdateEventDataType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js :
          Ojs.t -> inspector_HeapProfiler_LastSeenObjectIdEventDataType =
          Obj.magic
        and inspector_HeapProfiler_LastSeenObjectIdEventDataType_to_js :
          inspector_HeapProfiler_LastSeenObjectIdEventDataType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
          :
          Ojs.t ->
            inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
          = Obj.magic
        and inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_to_js
          :
          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType ->
            Ojs.t
          = Obj.magic
        and inspector_HeapProfiler_SamplingHeapProfile_of_js :
          Ojs.t -> inspector_HeapProfiler_SamplingHeapProfile = Obj.magic
        and inspector_HeapProfiler_SamplingHeapProfile_to_js :
          inspector_HeapProfiler_SamplingHeapProfile -> Ojs.t = Obj.magic
        and inspector_HeapProfiler_SamplingHeapProfileNode_of_js :
          Ojs.t -> inspector_HeapProfiler_SamplingHeapProfileNode = Obj.magic
        and inspector_HeapProfiler_SamplingHeapProfileNode_to_js :
          inspector_HeapProfiler_SamplingHeapProfileNode -> Ojs.t = Obj.magic
        and inspector_HeapProfiler_StartSamplingParameterType_of_js :
          Ojs.t -> inspector_HeapProfiler_StartSamplingParameterType =
          Obj.magic
        and inspector_HeapProfiler_StartSamplingParameterType_to_js :
          inspector_HeapProfiler_StartSamplingParameterType -> Ojs.t =
          Obj.magic
        and inspector_HeapProfiler_StartTrackingHeapObjectsParameterType_of_js
          :
          Ojs.t ->
            inspector_HeapProfiler_StartTrackingHeapObjectsParameterType
          = Obj.magic
        and inspector_HeapProfiler_StartTrackingHeapObjectsParameterType_to_js
          :
          inspector_HeapProfiler_StartTrackingHeapObjectsParameterType ->
            Ojs.t
          = Obj.magic
        and inspector_HeapProfiler_StopSamplingReturnType_of_js :
          Ojs.t -> inspector_HeapProfiler_StopSamplingReturnType = Obj.magic
        and inspector_HeapProfiler_StopSamplingReturnType_to_js :
          inspector_HeapProfiler_StopSamplingReturnType -> Ojs.t = Obj.magic
        and inspector_HeapProfiler_StopTrackingHeapObjectsParameterType_of_js
          :
          Ojs.t ->
            inspector_HeapProfiler_StopTrackingHeapObjectsParameterType
          = Obj.magic
        and inspector_HeapProfiler_StopTrackingHeapObjectsParameterType_to_js
          :
          inspector_HeapProfiler_StopTrackingHeapObjectsParameterType ->
            Ojs.t
          = Obj.magic
        and inspector_HeapProfiler_TakeHeapSnapshotParameterType_of_js :
          Ojs.t -> inspector_HeapProfiler_TakeHeapSnapshotParameterType =
          Obj.magic
        and inspector_HeapProfiler_TakeHeapSnapshotParameterType_to_js :
          inspector_HeapProfiler_TakeHeapSnapshotParameterType -> Ojs.t =
          Obj.magic
        and inspector_InspectorNotification_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T inspector_InspectorNotification =
          fun _T -> Obj.magic
        and inspector_InspectorNotification_to_js :
          'T . ('T -> Ojs.t) -> 'T inspector_InspectorNotification -> Ojs.t =
          fun _T -> Obj.magic
        and inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType_of_js
          :
          Ojs.t ->
            inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
          = Obj.magic
        and inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType_to_js
          :
          inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
            -> Ojs.t
          = Obj.magic
        and inspector_NodeTracing_DataCollectedEventDataType_of_js :
          Ojs.t -> inspector_NodeTracing_DataCollectedEventDataType =
          Obj.magic
        and inspector_NodeTracing_DataCollectedEventDataType_to_js :
          inspector_NodeTracing_DataCollectedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_NodeTracing_GetCategoriesReturnType_of_js :
          Ojs.t -> inspector_NodeTracing_GetCategoriesReturnType = Obj.magic
        and inspector_NodeTracing_GetCategoriesReturnType_to_js :
          inspector_NodeTracing_GetCategoriesReturnType -> Ojs.t = Obj.magic
        and inspector_NodeTracing_StartParameterType_of_js :
          Ojs.t -> inspector_NodeTracing_StartParameterType = Obj.magic
        and inspector_NodeTracing_StartParameterType_to_js :
          inspector_NodeTracing_StartParameterType -> Ojs.t = Obj.magic
        and inspector_NodeTracing_TraceConfig_of_js :
          Ojs.t -> inspector_NodeTracing_TraceConfig = Obj.magic
        and inspector_NodeTracing_TraceConfig_to_js :
          inspector_NodeTracing_TraceConfig -> Ojs.t = Obj.magic
        and inspector_NodeWorker_AttachedToWorkerEventDataType_of_js :
          Ojs.t -> inspector_NodeWorker_AttachedToWorkerEventDataType =
          Obj.magic
        and inspector_NodeWorker_AttachedToWorkerEventDataType_to_js :
          inspector_NodeWorker_AttachedToWorkerEventDataType -> Ojs.t =
          Obj.magic
        and inspector_NodeWorker_DetachParameterType_of_js :
          Ojs.t -> inspector_NodeWorker_DetachParameterType = Obj.magic
        and inspector_NodeWorker_DetachParameterType_to_js :
          inspector_NodeWorker_DetachParameterType -> Ojs.t = Obj.magic
        and inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js :
          Ojs.t -> inspector_NodeWorker_DetachedFromWorkerEventDataType =
          Obj.magic
        and inspector_NodeWorker_DetachedFromWorkerEventDataType_to_js :
          inspector_NodeWorker_DetachedFromWorkerEventDataType -> Ojs.t =
          Obj.magic
        and inspector_NodeWorker_EnableParameterType_of_js :
          Ojs.t -> inspector_NodeWorker_EnableParameterType = Obj.magic
        and inspector_NodeWorker_EnableParameterType_to_js :
          inspector_NodeWorker_EnableParameterType -> Ojs.t = Obj.magic
        and inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
          :
          Ojs.t ->
            inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
          = Obj.magic
        and inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_to_js
          :
          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType ->
            Ojs.t
          = Obj.magic
        and inspector_NodeWorker_SendMessageToWorkerParameterType_of_js :
          Ojs.t -> inspector_NodeWorker_SendMessageToWorkerParameterType =
          Obj.magic
        and inspector_NodeWorker_SendMessageToWorkerParameterType_to_js :
          inspector_NodeWorker_SendMessageToWorkerParameterType -> Ojs.t =
          Obj.magic
        and inspector_NodeWorker_SessionID_of_js :
          Ojs.t -> inspector_NodeWorker_SessionID =
          fun (x8 : Ojs.t) -> Ojs.string_of_js x8
        and inspector_NodeWorker_SessionID_to_js :
          inspector_NodeWorker_SessionID -> Ojs.t =
          fun (x7 : string) -> Ojs.string_to_js x7
        and inspector_NodeWorker_WorkerID_of_js :
          Ojs.t -> inspector_NodeWorker_WorkerID =
          fun (x10 : Ojs.t) -> Ojs.string_of_js x10
        and inspector_NodeWorker_WorkerID_to_js :
          inspector_NodeWorker_WorkerID -> Ojs.t =
          fun (x9 : string) -> Ojs.string_to_js x9
        and inspector_NodeWorker_WorkerInfo_of_js :
          Ojs.t -> inspector_NodeWorker_WorkerInfo = Obj.magic
        and inspector_NodeWorker_WorkerInfo_to_js :
          inspector_NodeWorker_WorkerInfo -> Ojs.t = Obj.magic
        and inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js :
          Ojs.t -> inspector_Profiler_ConsoleProfileFinishedEventDataType =
          Obj.magic
        and inspector_Profiler_ConsoleProfileFinishedEventDataType_to_js :
          inspector_Profiler_ConsoleProfileFinishedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Profiler_ConsoleProfileStartedEventDataType_of_js :
          Ojs.t -> inspector_Profiler_ConsoleProfileStartedEventDataType =
          Obj.magic
        and inspector_Profiler_ConsoleProfileStartedEventDataType_to_js :
          inspector_Profiler_ConsoleProfileStartedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Profiler_CoverageRange_of_js :
          Ojs.t -> inspector_Profiler_CoverageRange = Obj.magic
        and inspector_Profiler_CoverageRange_to_js :
          inspector_Profiler_CoverageRange -> Ojs.t = Obj.magic
        and inspector_Profiler_FunctionCoverage_of_js :
          Ojs.t -> inspector_Profiler_FunctionCoverage = Obj.magic
        and inspector_Profiler_FunctionCoverage_to_js :
          inspector_Profiler_FunctionCoverage -> Ojs.t = Obj.magic
        and inspector_Profiler_GetBestEffortCoverageReturnType_of_js :
          Ojs.t -> inspector_Profiler_GetBestEffortCoverageReturnType =
          Obj.magic
        and inspector_Profiler_GetBestEffortCoverageReturnType_to_js :
          inspector_Profiler_GetBestEffortCoverageReturnType -> Ojs.t =
          Obj.magic
        and inspector_Profiler_PositionTickInfo_of_js :
          Ojs.t -> inspector_Profiler_PositionTickInfo = Obj.magic
        and inspector_Profiler_PositionTickInfo_to_js :
          inspector_Profiler_PositionTickInfo -> Ojs.t = Obj.magic
        and inspector_Profiler_Profile_of_js :
          Ojs.t -> inspector_Profiler_Profile = Obj.magic
        and inspector_Profiler_Profile_to_js :
          inspector_Profiler_Profile -> Ojs.t = Obj.magic
        and inspector_Profiler_ProfileNode_of_js :
          Ojs.t -> inspector_Profiler_ProfileNode = Obj.magic
        and inspector_Profiler_ProfileNode_to_js :
          inspector_Profiler_ProfileNode -> Ojs.t = Obj.magic
        and inspector_Profiler_ScriptCoverage_of_js :
          Ojs.t -> inspector_Profiler_ScriptCoverage = Obj.magic
        and inspector_Profiler_ScriptCoverage_to_js :
          inspector_Profiler_ScriptCoverage -> Ojs.t = Obj.magic
        and inspector_Profiler_ScriptTypeProfile_of_js :
          Ojs.t -> inspector_Profiler_ScriptTypeProfile = Obj.magic
        and inspector_Profiler_ScriptTypeProfile_to_js :
          inspector_Profiler_ScriptTypeProfile -> Ojs.t = Obj.magic
        and inspector_Profiler_SetSamplingIntervalParameterType_of_js :
          Ojs.t -> inspector_Profiler_SetSamplingIntervalParameterType =
          Obj.magic
        and inspector_Profiler_SetSamplingIntervalParameterType_to_js :
          inspector_Profiler_SetSamplingIntervalParameterType -> Ojs.t =
          Obj.magic
        and inspector_Profiler_StartPreciseCoverageParameterType_of_js :
          Ojs.t -> inspector_Profiler_StartPreciseCoverageParameterType =
          Obj.magic
        and inspector_Profiler_StartPreciseCoverageParameterType_to_js :
          inspector_Profiler_StartPreciseCoverageParameterType -> Ojs.t =
          Obj.magic
        and inspector_Profiler_StopReturnType_of_js :
          Ojs.t -> inspector_Profiler_StopReturnType = Obj.magic
        and inspector_Profiler_StopReturnType_to_js :
          inspector_Profiler_StopReturnType -> Ojs.t = Obj.magic
        and inspector_Profiler_TakePreciseCoverageReturnType_of_js :
          Ojs.t -> inspector_Profiler_TakePreciseCoverageReturnType =
          Obj.magic
        and inspector_Profiler_TakePreciseCoverageReturnType_to_js :
          inspector_Profiler_TakePreciseCoverageReturnType -> Ojs.t =
          Obj.magic
        and inspector_Profiler_TakeTypeProfileReturnType_of_js :
          Ojs.t -> inspector_Profiler_TakeTypeProfileReturnType = Obj.magic
        and inspector_Profiler_TakeTypeProfileReturnType_to_js :
          inspector_Profiler_TakeTypeProfileReturnType -> Ojs.t = Obj.magic
        and inspector_Profiler_TypeObject_of_js :
          Ojs.t -> inspector_Profiler_TypeObject = Obj.magic
        and inspector_Profiler_TypeObject_to_js :
          inspector_Profiler_TypeObject -> Ojs.t = Obj.magic
        and inspector_Profiler_TypeProfileEntry_of_js :
          Ojs.t -> inspector_Profiler_TypeProfileEntry = Obj.magic
        and inspector_Profiler_TypeProfileEntry_to_js :
          inspector_Profiler_TypeProfileEntry -> Ojs.t = Obj.magic
        and inspector_Runtime_AwaitPromiseParameterType_of_js :
          Ojs.t -> inspector_Runtime_AwaitPromiseParameterType = Obj.magic
        and inspector_Runtime_AwaitPromiseParameterType_to_js :
          inspector_Runtime_AwaitPromiseParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_AwaitPromiseReturnType_of_js :
          Ojs.t -> inspector_Runtime_AwaitPromiseReturnType = Obj.magic
        and inspector_Runtime_AwaitPromiseReturnType_to_js :
          inspector_Runtime_AwaitPromiseReturnType -> Ojs.t = Obj.magic
        and inspector_Runtime_CallArgument_of_js :
          Ojs.t -> inspector_Runtime_CallArgument = Obj.magic
        and inspector_Runtime_CallArgument_to_js :
          inspector_Runtime_CallArgument -> Ojs.t = Obj.magic
        and inspector_Runtime_CallFrame_of_js :
          Ojs.t -> inspector_Runtime_CallFrame = Obj.magic
        and inspector_Runtime_CallFrame_to_js :
          inspector_Runtime_CallFrame -> Ojs.t = Obj.magic
        and inspector_Runtime_CallFunctionOnParameterType_of_js :
          Ojs.t -> inspector_Runtime_CallFunctionOnParameterType = Obj.magic
        and inspector_Runtime_CallFunctionOnParameterType_to_js :
          inspector_Runtime_CallFunctionOnParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_CallFunctionOnReturnType_of_js :
          Ojs.t -> inspector_Runtime_CallFunctionOnReturnType = Obj.magic
        and inspector_Runtime_CallFunctionOnReturnType_to_js :
          inspector_Runtime_CallFunctionOnReturnType -> Ojs.t = Obj.magic
        and inspector_Runtime_CompileScriptParameterType_of_js :
          Ojs.t -> inspector_Runtime_CompileScriptParameterType = Obj.magic
        and inspector_Runtime_CompileScriptParameterType_to_js :
          inspector_Runtime_CompileScriptParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_CompileScriptReturnType_of_js :
          Ojs.t -> inspector_Runtime_CompileScriptReturnType = Obj.magic
        and inspector_Runtime_CompileScriptReturnType_to_js :
          inspector_Runtime_CompileScriptReturnType -> Ojs.t = Obj.magic
        and inspector_Runtime_ConsoleAPICalledEventDataType_of_js :
          Ojs.t -> inspector_Runtime_ConsoleAPICalledEventDataType =
          Obj.magic
        and inspector_Runtime_ConsoleAPICalledEventDataType_to_js :
          inspector_Runtime_ConsoleAPICalledEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_CustomPreview_of_js :
          Ojs.t -> inspector_Runtime_CustomPreview = Obj.magic
        and inspector_Runtime_CustomPreview_to_js :
          inspector_Runtime_CustomPreview -> Ojs.t = Obj.magic
        and inspector_Runtime_EntryPreview_of_js :
          Ojs.t -> inspector_Runtime_EntryPreview = Obj.magic
        and inspector_Runtime_EntryPreview_to_js :
          inspector_Runtime_EntryPreview -> Ojs.t = Obj.magic
        and inspector_Runtime_EvaluateParameterType_of_js :
          Ojs.t -> inspector_Runtime_EvaluateParameterType = Obj.magic
        and inspector_Runtime_EvaluateParameterType_to_js :
          inspector_Runtime_EvaluateParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_EvaluateReturnType_of_js :
          Ojs.t -> inspector_Runtime_EvaluateReturnType = Obj.magic
        and inspector_Runtime_EvaluateReturnType_to_js :
          inspector_Runtime_EvaluateReturnType -> Ojs.t = Obj.magic
        and inspector_Runtime_ExceptionDetails_of_js :
          Ojs.t -> inspector_Runtime_ExceptionDetails = Obj.magic
        and inspector_Runtime_ExceptionDetails_to_js :
          inspector_Runtime_ExceptionDetails -> Ojs.t = Obj.magic
        and inspector_Runtime_ExceptionRevokedEventDataType_of_js :
          Ojs.t -> inspector_Runtime_ExceptionRevokedEventDataType =
          Obj.magic
        and inspector_Runtime_ExceptionRevokedEventDataType_to_js :
          inspector_Runtime_ExceptionRevokedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_ExceptionThrownEventDataType_of_js :
          Ojs.t -> inspector_Runtime_ExceptionThrownEventDataType = Obj.magic
        and inspector_Runtime_ExceptionThrownEventDataType_to_js :
          inspector_Runtime_ExceptionThrownEventDataType -> Ojs.t = Obj.magic
        and inspector_Runtime_ExecutionContextCreatedEventDataType_of_js :
          Ojs.t -> inspector_Runtime_ExecutionContextCreatedEventDataType =
          Obj.magic
        and inspector_Runtime_ExecutionContextCreatedEventDataType_to_js :
          inspector_Runtime_ExecutionContextCreatedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_ExecutionContextDescription_of_js :
          Ojs.t -> inspector_Runtime_ExecutionContextDescription = Obj.magic
        and inspector_Runtime_ExecutionContextDescription_to_js :
          inspector_Runtime_ExecutionContextDescription -> Ojs.t = Obj.magic
        and inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js :
          Ojs.t -> inspector_Runtime_ExecutionContextDestroyedEventDataType =
          Obj.magic
        and inspector_Runtime_ExecutionContextDestroyedEventDataType_to_js :
          inspector_Runtime_ExecutionContextDestroyedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_ExecutionContextId_of_js :
          Ojs.t -> inspector_Runtime_ExecutionContextId =
          fun (x12 : Ojs.t) -> Ojs.float_of_js x12
        and inspector_Runtime_ExecutionContextId_to_js :
          inspector_Runtime_ExecutionContextId -> Ojs.t =
          fun (x11 : float) -> Ojs.float_to_js x11
        and inspector_Runtime_GetPropertiesParameterType_of_js :
          Ojs.t -> inspector_Runtime_GetPropertiesParameterType = Obj.magic
        and inspector_Runtime_GetPropertiesParameterType_to_js :
          inspector_Runtime_GetPropertiesParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_GetPropertiesReturnType_of_js :
          Ojs.t -> inspector_Runtime_GetPropertiesReturnType = Obj.magic
        and inspector_Runtime_GetPropertiesReturnType_to_js :
          inspector_Runtime_GetPropertiesReturnType -> Ojs.t = Obj.magic
        and inspector_Runtime_GlobalLexicalScopeNamesParameterType_of_js :
          Ojs.t -> inspector_Runtime_GlobalLexicalScopeNamesParameterType =
          Obj.magic
        and inspector_Runtime_GlobalLexicalScopeNamesParameterType_to_js :
          inspector_Runtime_GlobalLexicalScopeNamesParameterType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_GlobalLexicalScopeNamesReturnType_of_js :
          Ojs.t -> inspector_Runtime_GlobalLexicalScopeNamesReturnType =
          Obj.magic
        and inspector_Runtime_GlobalLexicalScopeNamesReturnType_to_js :
          inspector_Runtime_GlobalLexicalScopeNamesReturnType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_InspectRequestedEventDataType_of_js :
          Ojs.t -> inspector_Runtime_InspectRequestedEventDataType =
          Obj.magic
        and inspector_Runtime_InspectRequestedEventDataType_to_js :
          inspector_Runtime_InspectRequestedEventDataType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_InternalPropertyDescriptor_of_js :
          Ojs.t -> inspector_Runtime_InternalPropertyDescriptor = Obj.magic
        and inspector_Runtime_InternalPropertyDescriptor_to_js :
          inspector_Runtime_InternalPropertyDescriptor -> Ojs.t = Obj.magic
        and inspector_Runtime_ObjectPreview_of_js :
          Ojs.t -> inspector_Runtime_ObjectPreview = Obj.magic
        and inspector_Runtime_ObjectPreview_to_js :
          inspector_Runtime_ObjectPreview -> Ojs.t = Obj.magic
        and inspector_Runtime_PropertyDescriptor_of_js :
          Ojs.t -> inspector_Runtime_PropertyDescriptor = Obj.magic
        and inspector_Runtime_PropertyDescriptor_to_js :
          inspector_Runtime_PropertyDescriptor -> Ojs.t = Obj.magic
        and inspector_Runtime_PropertyPreview_of_js :
          Ojs.t -> inspector_Runtime_PropertyPreview = Obj.magic
        and inspector_Runtime_PropertyPreview_to_js :
          inspector_Runtime_PropertyPreview -> Ojs.t = Obj.magic
        and inspector_Runtime_QueryObjectsParameterType_of_js :
          Ojs.t -> inspector_Runtime_QueryObjectsParameterType = Obj.magic
        and inspector_Runtime_QueryObjectsParameterType_to_js :
          inspector_Runtime_QueryObjectsParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_QueryObjectsReturnType_of_js :
          Ojs.t -> inspector_Runtime_QueryObjectsReturnType = Obj.magic
        and inspector_Runtime_QueryObjectsReturnType_to_js :
          inspector_Runtime_QueryObjectsReturnType -> Ojs.t = Obj.magic
        and inspector_Runtime_ReleaseObjectGroupParameterType_of_js :
          Ojs.t -> inspector_Runtime_ReleaseObjectGroupParameterType =
          Obj.magic
        and inspector_Runtime_ReleaseObjectGroupParameterType_to_js :
          inspector_Runtime_ReleaseObjectGroupParameterType -> Ojs.t =
          Obj.magic
        and inspector_Runtime_ReleaseObjectParameterType_of_js :
          Ojs.t -> inspector_Runtime_ReleaseObjectParameterType = Obj.magic
        and inspector_Runtime_ReleaseObjectParameterType_to_js :
          inspector_Runtime_ReleaseObjectParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_RemoteObject_of_js :
          Ojs.t -> inspector_Runtime_RemoteObject = Obj.magic
        and inspector_Runtime_RemoteObject_to_js :
          inspector_Runtime_RemoteObject -> Ojs.t = Obj.magic
        and inspector_Runtime_RemoteObjectId_of_js :
          Ojs.t -> inspector_Runtime_RemoteObjectId =
          fun (x14 : Ojs.t) -> Ojs.string_of_js x14
        and inspector_Runtime_RemoteObjectId_to_js :
          inspector_Runtime_RemoteObjectId -> Ojs.t =
          fun (x13 : string) -> Ojs.string_to_js x13
        and inspector_Runtime_RunScriptParameterType_of_js :
          Ojs.t -> inspector_Runtime_RunScriptParameterType = Obj.magic
        and inspector_Runtime_RunScriptParameterType_to_js :
          inspector_Runtime_RunScriptParameterType -> Ojs.t = Obj.magic
        and inspector_Runtime_RunScriptReturnType_of_js :
          Ojs.t -> inspector_Runtime_RunScriptReturnType = Obj.magic
        and inspector_Runtime_RunScriptReturnType_to_js :
          inspector_Runtime_RunScriptReturnType -> Ojs.t = Obj.magic
        and inspector_Runtime_ScriptId_of_js :
          Ojs.t -> inspector_Runtime_ScriptId =
          fun (x16 : Ojs.t) -> Ojs.string_of_js x16
        and inspector_Runtime_ScriptId_to_js :
          inspector_Runtime_ScriptId -> Ojs.t =
          fun (x15 : string) -> Ojs.string_to_js x15
        and inspector_Runtime_SetCustomObjectFormatterEnabledParameterType_of_js
          :
          Ojs.t ->
            inspector_Runtime_SetCustomObjectFormatterEnabledParameterType
          = Obj.magic
        and inspector_Runtime_SetCustomObjectFormatterEnabledParameterType_to_js
          :
          inspector_Runtime_SetCustomObjectFormatterEnabledParameterType ->
            Ojs.t
          = Obj.magic
        and inspector_Runtime_StackTrace_of_js :
          Ojs.t -> inspector_Runtime_StackTrace = Obj.magic
        and inspector_Runtime_StackTrace_to_js :
          inspector_Runtime_StackTrace -> Ojs.t = Obj.magic
        and inspector_Runtime_StackTraceId_of_js :
          Ojs.t -> inspector_Runtime_StackTraceId = Obj.magic
        and inspector_Runtime_StackTraceId_to_js :
          inspector_Runtime_StackTraceId -> Ojs.t = Obj.magic
        and inspector_Runtime_Timestamp_of_js :
          Ojs.t -> inspector_Runtime_Timestamp =
          fun (x18 : Ojs.t) -> Ojs.float_of_js x18
        and inspector_Runtime_Timestamp_to_js :
          inspector_Runtime_Timestamp -> Ojs.t =
          fun (x17 : float) -> Ojs.float_to_js x17
        and inspector_Runtime_UniqueDebuggerId_of_js :
          Ojs.t -> inspector_Runtime_UniqueDebuggerId =
          fun (x20 : Ojs.t) -> Ojs.string_of_js x20
        and inspector_Runtime_UniqueDebuggerId_to_js :
          inspector_Runtime_UniqueDebuggerId -> Ojs.t =
          fun (x19 : string) -> Ojs.string_to_js x19
        and inspector_Runtime_UnserializableValue_of_js :
          Ojs.t -> inspector_Runtime_UnserializableValue =
          fun (x22 : Ojs.t) -> Ojs.string_of_js x22
        and inspector_Runtime_UnserializableValue_to_js :
          inspector_Runtime_UnserializableValue -> Ojs.t =
          fun (x21 : string) -> Ojs.string_to_js x21
        and inspector_Schema_Domain_of_js : Ojs.t -> inspector_Schema_Domain
          = Obj.magic
        and inspector_Schema_Domain_to_js : inspector_Schema_Domain -> Ojs.t
          = Obj.magic
        and inspector_Schema_GetDomainsReturnType_of_js :
          Ojs.t -> inspector_Schema_GetDomainsReturnType = Obj.magic
        and inspector_Schema_GetDomainsReturnType_to_js :
          inspector_Schema_GetDomainsReturnType -> Ojs.t = Obj.magic
        and inspector_Session_of_js : Ojs.t -> inspector_Session = Obj.magic
        and inspector_Session_to_js : inspector_Session -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module AnonymousInterface0 =
  struct
    type t = anonymous_interface_0
    let rec t_of_js : Ojs.t -> t =
      fun (x24 : Ojs.t) -> anonymous_interface_0_of_js x24
    and t_to_js : t -> Ojs.t =
      fun (x23 : anonymous_interface_0) -> anonymous_interface_0_to_js x23
  end
module Inspector =
  struct
    module InspectorNotification =
      struct
        type 'T t = 'T inspector_InspectorNotification
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x27 : Ojs.t) ->
              inspector_InspectorNotification_of_js __T_of_js x27
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x25 : __T inspector_InspectorNotification) ->
              inspector_InspectorNotification_to_js __T_to_js x25
        let (get_method : 'T t -> string) =
          fun (x29 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x29) "method")
        let (set_method : 'T t -> string -> unit) =
          fun (x31 : 'T t) ->
            fun (x32 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x31) "method"
                (Ojs.string_to_js x32)
        let (get_params : 'T t -> 'T) =
          fun (x34 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x34) "params")
        let (set_params : 'T t -> 'T -> unit) =
          fun (x36 : 'T t) ->
            fun (x37 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x36) "params"
                (Obj.magic x37)
      end
    module Schema =
      struct
        module Domain =
          struct
            type t = inspector_Schema_Domain
            let rec t_of_js : Ojs.t -> t =
              fun (x40 : Ojs.t) -> inspector_Schema_Domain_of_js x40
            and t_to_js : t -> Ojs.t =
              fun (x39 : inspector_Schema_Domain) ->
                inspector_Schema_Domain_to_js x39
            let (get_name : t -> string) =
              fun (x41 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x41) "name")
            let (set_name : t -> string -> unit) =
              fun (x42 : t) ->
                fun (x43 : string) ->
                  Ojs.set_prop_ascii (t_to_js x42) "name"
                    (Ojs.string_to_js x43)
            let (get_version : t -> string) =
              fun (x44 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x44) "version")
            let (set_version : t -> string -> unit) =
              fun (x45 : t) ->
                fun (x46 : string) ->
                  Ojs.set_prop_ascii (t_to_js x45) "version"
                    (Ojs.string_to_js x46)
          end
        module GetDomainsReturnType =
          struct
            type t = inspector_Schema_GetDomainsReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x48 : Ojs.t) ->
                inspector_Schema_GetDomainsReturnType_of_js x48
            and t_to_js : t -> Ojs.t =
              fun (x47 : inspector_Schema_GetDomainsReturnType) ->
                inspector_Schema_GetDomainsReturnType_to_js x47
            let (get_domains : t -> inspector_Schema_Domain list) =
              fun (x49 : t) ->
                Ojs.list_of_js inspector_Schema_Domain_of_js
                  (Ojs.get_prop_ascii (t_to_js x49) "domains")
            let (set_domains : t -> inspector_Schema_Domain list -> unit) =
              fun (x51 : t) ->
                fun (x52 : inspector_Schema_Domain list) ->
                  Ojs.set_prop_ascii (t_to_js x51) "domains"
                    (Ojs.list_to_js inspector_Schema_Domain_to_js x52)
          end
      end
    module Runtime =
      struct
        module ScriptId =
          struct
            type t = inspector_Runtime_ScriptId
            let rec t_of_js : Ojs.t -> t =
              fun (x55 : Ojs.t) -> inspector_Runtime_ScriptId_of_js x55
            and t_to_js : t -> Ojs.t =
              fun (x54 : inspector_Runtime_ScriptId) ->
                inspector_Runtime_ScriptId_to_js x54
          end
        module RemoteObjectId =
          struct
            type t = inspector_Runtime_RemoteObjectId
            let rec t_of_js : Ojs.t -> t =
              fun (x57 : Ojs.t) -> inspector_Runtime_RemoteObjectId_of_js x57
            and t_to_js : t -> Ojs.t =
              fun (x56 : inspector_Runtime_RemoteObjectId) ->
                inspector_Runtime_RemoteObjectId_to_js x56
          end
        module UnserializableValue =
          struct
            type t = inspector_Runtime_UnserializableValue
            let rec t_of_js : Ojs.t -> t =
              fun (x59 : Ojs.t) ->
                inspector_Runtime_UnserializableValue_of_js x59
            and t_to_js : t -> Ojs.t =
              fun (x58 : inspector_Runtime_UnserializableValue) ->
                inspector_Runtime_UnserializableValue_to_js x58
          end
        module RemoteObject =
          struct
            type t = inspector_Runtime_RemoteObject
            let rec t_of_js : Ojs.t -> t =
              fun (x61 : Ojs.t) -> inspector_Runtime_RemoteObject_of_js x61
            and t_to_js : t -> Ojs.t =
              fun (x60 : inspector_Runtime_RemoteObject) ->
                inspector_Runtime_RemoteObject_to_js x60
            let (get_type : t -> string) =
              fun (x62 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x62) "type")
            let (set_type : t -> string -> unit) =
              fun (x63 : t) ->
                fun (x64 : string) ->
                  Ojs.set_prop_ascii (t_to_js x63) "type"
                    (Ojs.string_to_js x64)
            let (get_subtype : t -> string) =
              fun (x65 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x65) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x66 : t) ->
                fun (x67 : string) ->
                  Ojs.set_prop_ascii (t_to_js x66) "subtype"
                    (Ojs.string_to_js x67)
            let (get_className : t -> string) =
              fun (x68 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x68) "className")
            let (set_className : t -> string -> unit) =
              fun (x69 : t) ->
                fun (x70 : string) ->
                  Ojs.set_prop_ascii (t_to_js x69) "className"
                    (Ojs.string_to_js x70)
            let (get_value : t -> any) =
              fun (x71 : t) ->
                any_of_js (Ojs.get_prop_ascii (t_to_js x71) "value")
            let (set_value : t -> any -> unit) =
              fun (x72 : t) ->
                fun (x73 : any) ->
                  Ojs.set_prop_ascii (t_to_js x72) "value" (any_to_js x73)
            let (get_unserializableValue :
              t -> inspector_Runtime_UnserializableValue) =
              fun (x74 : t) ->
                inspector_Runtime_UnserializableValue_of_js
                  (Ojs.get_prop_ascii (t_to_js x74) "unserializableValue")
            let (set_unserializableValue :
              t -> inspector_Runtime_UnserializableValue -> unit) =
              fun (x75 : t) ->
                fun (x76 : inspector_Runtime_UnserializableValue) ->
                  Ojs.set_prop_ascii (t_to_js x75) "unserializableValue"
                    (inspector_Runtime_UnserializableValue_to_js x76)
            let (get_description : t -> string) =
              fun (x77 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x77) "description")
            let (set_description : t -> string -> unit) =
              fun (x78 : t) ->
                fun (x79 : string) ->
                  Ojs.set_prop_ascii (t_to_js x78) "description"
                    (Ojs.string_to_js x79)
            let (get_objectId : t -> inspector_Runtime_RemoteObjectId) =
              fun (x80 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x80) "objectId")
            let (set_objectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x81 : t) ->
                fun (x82 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x81) "objectId"
                    (inspector_Runtime_RemoteObjectId_to_js x82)
            let (get_preview : t -> inspector_Runtime_ObjectPreview) =
              fun (x83 : t) ->
                inspector_Runtime_ObjectPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x83) "preview")
            let (set_preview : t -> inspector_Runtime_ObjectPreview -> unit)
              =
              fun (x84 : t) ->
                fun (x85 : inspector_Runtime_ObjectPreview) ->
                  Ojs.set_prop_ascii (t_to_js x84) "preview"
                    (inspector_Runtime_ObjectPreview_to_js x85)
            let (get_customPreview : t -> inspector_Runtime_CustomPreview) =
              fun (x86 : t) ->
                inspector_Runtime_CustomPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x86) "customPreview")
            let (set_customPreview :
              t -> inspector_Runtime_CustomPreview -> unit) =
              fun (x87 : t) ->
                fun (x88 : inspector_Runtime_CustomPreview) ->
                  Ojs.set_prop_ascii (t_to_js x87) "customPreview"
                    (inspector_Runtime_CustomPreview_to_js x88)
          end
        module CustomPreview =
          struct
            type t = inspector_Runtime_CustomPreview
            let rec t_of_js : Ojs.t -> t =
              fun (x90 : Ojs.t) -> inspector_Runtime_CustomPreview_of_js x90
            and t_to_js : t -> Ojs.t =
              fun (x89 : inspector_Runtime_CustomPreview) ->
                inspector_Runtime_CustomPreview_to_js x89
            let (get_header : t -> string) =
              fun (x91 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x91) "header")
            let (set_header : t -> string -> unit) =
              fun (x92 : t) ->
                fun (x93 : string) ->
                  Ojs.set_prop_ascii (t_to_js x92) "header"
                    (Ojs.string_to_js x93)
            let (get_hasBody : t -> bool) =
              fun (x94 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x94) "hasBody")
            let (set_hasBody : t -> bool -> unit) =
              fun (x95 : t) ->
                fun (x96 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x95) "hasBody"
                    (Ojs.bool_to_js x96)
            let (get_formatterObjectId :
              t -> inspector_Runtime_RemoteObjectId) =
              fun (x97 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x97) "formatterObjectId")
            let (set_formatterObjectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x98 : t) ->
                fun (x99 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x98) "formatterObjectId"
                    (inspector_Runtime_RemoteObjectId_to_js x99)
            let (get_bindRemoteObjectFunctionId :
              t -> inspector_Runtime_RemoteObjectId) =
              fun (x100 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x100)
                     "bindRemoteObjectFunctionId")
            let (set_bindRemoteObjectFunctionId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x101 : t) ->
                fun (x102 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x101)
                    "bindRemoteObjectFunctionId"
                    (inspector_Runtime_RemoteObjectId_to_js x102)
            let (get_configObjectId : t -> inspector_Runtime_RemoteObjectId)
              =
              fun (x103 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x103) "configObjectId")
            let (set_configObjectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x104 : t) ->
                fun (x105 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x104) "configObjectId"
                    (inspector_Runtime_RemoteObjectId_to_js x105)
          end
        module ObjectPreview =
          struct
            type t = inspector_Runtime_ObjectPreview
            let rec t_of_js : Ojs.t -> t =
              fun (x107 : Ojs.t) ->
                inspector_Runtime_ObjectPreview_of_js x107
            and t_to_js : t -> Ojs.t =
              fun (x106 : inspector_Runtime_ObjectPreview) ->
                inspector_Runtime_ObjectPreview_to_js x106
            let (get_type : t -> string) =
              fun (x108 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x108) "type")
            let (set_type : t -> string -> unit) =
              fun (x109 : t) ->
                fun (x110 : string) ->
                  Ojs.set_prop_ascii (t_to_js x109) "type"
                    (Ojs.string_to_js x110)
            let (get_subtype : t -> string) =
              fun (x111 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x111) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x112 : t) ->
                fun (x113 : string) ->
                  Ojs.set_prop_ascii (t_to_js x112) "subtype"
                    (Ojs.string_to_js x113)
            let (get_description : t -> string) =
              fun (x114 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x114) "description")
            let (set_description : t -> string -> unit) =
              fun (x115 : t) ->
                fun (x116 : string) ->
                  Ojs.set_prop_ascii (t_to_js x115) "description"
                    (Ojs.string_to_js x116)
            let (get_overflow : t -> bool) =
              fun (x117 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x117) "overflow")
            let (set_overflow : t -> bool -> unit) =
              fun (x118 : t) ->
                fun (x119 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x118) "overflow"
                    (Ojs.bool_to_js x119)
            let (get_properties :
              t -> inspector_Runtime_PropertyPreview list) =
              fun (x120 : t) ->
                Ojs.list_of_js inspector_Runtime_PropertyPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x120) "properties")
            let (set_properties :
              t -> inspector_Runtime_PropertyPreview list -> unit) =
              fun (x122 : t) ->
                fun (x123 : inspector_Runtime_PropertyPreview list) ->
                  Ojs.set_prop_ascii (t_to_js x122) "properties"
                    (Ojs.list_to_js inspector_Runtime_PropertyPreview_to_js
                       x123)
            let (get_entries : t -> inspector_Runtime_EntryPreview list) =
              fun (x125 : t) ->
                Ojs.list_of_js inspector_Runtime_EntryPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x125) "entries")
            let (set_entries :
              t -> inspector_Runtime_EntryPreview list -> unit) =
              fun (x127 : t) ->
                fun (x128 : inspector_Runtime_EntryPreview list) ->
                  Ojs.set_prop_ascii (t_to_js x127) "entries"
                    (Ojs.list_to_js inspector_Runtime_EntryPreview_to_js x128)
          end
        module PropertyPreview =
          struct
            type t = inspector_Runtime_PropertyPreview
            let rec t_of_js : Ojs.t -> t =
              fun (x131 : Ojs.t) ->
                inspector_Runtime_PropertyPreview_of_js x131
            and t_to_js : t -> Ojs.t =
              fun (x130 : inspector_Runtime_PropertyPreview) ->
                inspector_Runtime_PropertyPreview_to_js x130
            let (get_name : t -> string) =
              fun (x132 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x132) "name")
            let (set_name : t -> string -> unit) =
              fun (x133 : t) ->
                fun (x134 : string) ->
                  Ojs.set_prop_ascii (t_to_js x133) "name"
                    (Ojs.string_to_js x134)
            let (get_type : t -> string) =
              fun (x135 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x135) "type")
            let (set_type : t -> string -> unit) =
              fun (x136 : t) ->
                fun (x137 : string) ->
                  Ojs.set_prop_ascii (t_to_js x136) "type"
                    (Ojs.string_to_js x137)
            let (get_value : t -> string) =
              fun (x138 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x138) "value")
            let (set_value : t -> string -> unit) =
              fun (x139 : t) ->
                fun (x140 : string) ->
                  Ojs.set_prop_ascii (t_to_js x139) "value"
                    (Ojs.string_to_js x140)
            let (get_valuePreview : t -> inspector_Runtime_ObjectPreview) =
              fun (x141 : t) ->
                inspector_Runtime_ObjectPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x141) "valuePreview")
            let (set_valuePreview :
              t -> inspector_Runtime_ObjectPreview -> unit) =
              fun (x142 : t) ->
                fun (x143 : inspector_Runtime_ObjectPreview) ->
                  Ojs.set_prop_ascii (t_to_js x142) "valuePreview"
                    (inspector_Runtime_ObjectPreview_to_js x143)
            let (get_subtype : t -> string) =
              fun (x144 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x144) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x145 : t) ->
                fun (x146 : string) ->
                  Ojs.set_prop_ascii (t_to_js x145) "subtype"
                    (Ojs.string_to_js x146)
          end
        module EntryPreview =
          struct
            type t = inspector_Runtime_EntryPreview
            let rec t_of_js : Ojs.t -> t =
              fun (x148 : Ojs.t) -> inspector_Runtime_EntryPreview_of_js x148
            and t_to_js : t -> Ojs.t =
              fun (x147 : inspector_Runtime_EntryPreview) ->
                inspector_Runtime_EntryPreview_to_js x147
            let (get_key : t -> inspector_Runtime_ObjectPreview) =
              fun (x149 : t) ->
                inspector_Runtime_ObjectPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x149) "key")
            let (set_key : t -> inspector_Runtime_ObjectPreview -> unit) =
              fun (x150 : t) ->
                fun (x151 : inspector_Runtime_ObjectPreview) ->
                  Ojs.set_prop_ascii (t_to_js x150) "key"
                    (inspector_Runtime_ObjectPreview_to_js x151)
            let (get_value : t -> inspector_Runtime_ObjectPreview) =
              fun (x152 : t) ->
                inspector_Runtime_ObjectPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x152) "value")
            let (set_value : t -> inspector_Runtime_ObjectPreview -> unit) =
              fun (x153 : t) ->
                fun (x154 : inspector_Runtime_ObjectPreview) ->
                  Ojs.set_prop_ascii (t_to_js x153) "value"
                    (inspector_Runtime_ObjectPreview_to_js x154)
          end
        module PropertyDescriptor =
          struct
            type t = inspector_Runtime_PropertyDescriptor
            let rec t_of_js : Ojs.t -> t =
              fun (x156 : Ojs.t) ->
                inspector_Runtime_PropertyDescriptor_of_js x156
            and t_to_js : t -> Ojs.t =
              fun (x155 : inspector_Runtime_PropertyDescriptor) ->
                inspector_Runtime_PropertyDescriptor_to_js x155
            let (get_name : t -> string) =
              fun (x157 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x157) "name")
            let (set_name : t -> string -> unit) =
              fun (x158 : t) ->
                fun (x159 : string) ->
                  Ojs.set_prop_ascii (t_to_js x158) "name"
                    (Ojs.string_to_js x159)
            let (get_value : t -> inspector_Runtime_RemoteObject) =
              fun (x160 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x160) "value")
            let (set_value : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x161 : t) ->
                fun (x162 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x161) "value"
                    (inspector_Runtime_RemoteObject_to_js x162)
            let (get_writable : t -> bool) =
              fun (x163 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x163) "writable")
            let (set_writable : t -> bool -> unit) =
              fun (x164 : t) ->
                fun (x165 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x164) "writable"
                    (Ojs.bool_to_js x165)
            let (get_get : t -> inspector_Runtime_RemoteObject) =
              fun (x166 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x166) "get")
            let (set_get : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x167 : t) ->
                fun (x168 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x167) "get"
                    (inspector_Runtime_RemoteObject_to_js x168)
            let (get_set : t -> inspector_Runtime_RemoteObject) =
              fun (x169 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x169) "set")
            let (set_set : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x170 : t) ->
                fun (x171 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x170) "set"
                    (inspector_Runtime_RemoteObject_to_js x171)
            let (get_configurable : t -> bool) =
              fun (x172 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x172) "configurable")
            let (set_configurable : t -> bool -> unit) =
              fun (x173 : t) ->
                fun (x174 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x173) "configurable"
                    (Ojs.bool_to_js x174)
            let (get_enumerable : t -> bool) =
              fun (x175 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x175) "enumerable")
            let (set_enumerable : t -> bool -> unit) =
              fun (x176 : t) ->
                fun (x177 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x176) "enumerable"
                    (Ojs.bool_to_js x177)
            let (get_wasThrown : t -> bool) =
              fun (x178 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x178) "wasThrown")
            let (set_wasThrown : t -> bool -> unit) =
              fun (x179 : t) ->
                fun (x180 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x179) "wasThrown"
                    (Ojs.bool_to_js x180)
            let (get_isOwn : t -> bool) =
              fun (x181 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x181) "isOwn")
            let (set_isOwn : t -> bool -> unit) =
              fun (x182 : t) ->
                fun (x183 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x182) "isOwn"
                    (Ojs.bool_to_js x183)
            let (get_symbol : t -> inspector_Runtime_RemoteObject) =
              fun (x184 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x184) "symbol")
            let (set_symbol : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x185 : t) ->
                fun (x186 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x185) "symbol"
                    (inspector_Runtime_RemoteObject_to_js x186)
          end
        module InternalPropertyDescriptor =
          struct
            type t = inspector_Runtime_InternalPropertyDescriptor
            let rec t_of_js : Ojs.t -> t =
              fun (x188 : Ojs.t) ->
                inspector_Runtime_InternalPropertyDescriptor_of_js x188
            and t_to_js : t -> Ojs.t =
              fun (x187 : inspector_Runtime_InternalPropertyDescriptor) ->
                inspector_Runtime_InternalPropertyDescriptor_to_js x187
            let (get_name : t -> string) =
              fun (x189 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x189) "name")
            let (set_name : t -> string -> unit) =
              fun (x190 : t) ->
                fun (x191 : string) ->
                  Ojs.set_prop_ascii (t_to_js x190) "name"
                    (Ojs.string_to_js x191)
            let (get_value : t -> inspector_Runtime_RemoteObject) =
              fun (x192 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x192) "value")
            let (set_value : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x193 : t) ->
                fun (x194 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x193) "value"
                    (inspector_Runtime_RemoteObject_to_js x194)
          end
        module CallArgument =
          struct
            type t = inspector_Runtime_CallArgument
            let rec t_of_js : Ojs.t -> t =
              fun (x196 : Ojs.t) -> inspector_Runtime_CallArgument_of_js x196
            and t_to_js : t -> Ojs.t =
              fun (x195 : inspector_Runtime_CallArgument) ->
                inspector_Runtime_CallArgument_to_js x195
            let (get_value : t -> any) =
              fun (x197 : t) ->
                any_of_js (Ojs.get_prop_ascii (t_to_js x197) "value")
            let (set_value : t -> any -> unit) =
              fun (x198 : t) ->
                fun (x199 : any) ->
                  Ojs.set_prop_ascii (t_to_js x198) "value" (any_to_js x199)
            let (get_unserializableValue :
              t -> inspector_Runtime_UnserializableValue) =
              fun (x200 : t) ->
                inspector_Runtime_UnserializableValue_of_js
                  (Ojs.get_prop_ascii (t_to_js x200) "unserializableValue")
            let (set_unserializableValue :
              t -> inspector_Runtime_UnserializableValue -> unit) =
              fun (x201 : t) ->
                fun (x202 : inspector_Runtime_UnserializableValue) ->
                  Ojs.set_prop_ascii (t_to_js x201) "unserializableValue"
                    (inspector_Runtime_UnserializableValue_to_js x202)
            let (get_objectId : t -> inspector_Runtime_RemoteObjectId) =
              fun (x203 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x203) "objectId")
            let (set_objectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x204 : t) ->
                fun (x205 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x204) "objectId"
                    (inspector_Runtime_RemoteObjectId_to_js x205)
          end
        module ExecutionContextId =
          struct
            type t = inspector_Runtime_ExecutionContextId
            let rec t_of_js : Ojs.t -> t =
              fun (x207 : Ojs.t) ->
                inspector_Runtime_ExecutionContextId_of_js x207
            and t_to_js : t -> Ojs.t =
              fun (x206 : inspector_Runtime_ExecutionContextId) ->
                inspector_Runtime_ExecutionContextId_to_js x206
          end
        module ExecutionContextDescription =
          struct
            type t = inspector_Runtime_ExecutionContextDescription
            let rec t_of_js : Ojs.t -> t =
              fun (x209 : Ojs.t) ->
                inspector_Runtime_ExecutionContextDescription_of_js x209
            and t_to_js : t -> Ojs.t =
              fun (x208 : inspector_Runtime_ExecutionContextDescription) ->
                inspector_Runtime_ExecutionContextDescription_to_js x208
            let (get_id : t -> inspector_Runtime_ExecutionContextId) =
              fun (x210 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x210) "id")
            let (set_id : t -> inspector_Runtime_ExecutionContextId -> unit)
              =
              fun (x211 : t) ->
                fun (x212 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x211) "id"
                    (inspector_Runtime_ExecutionContextId_to_js x212)
            let (get_origin : t -> string) =
              fun (x213 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x213) "origin")
            let (set_origin : t -> string -> unit) =
              fun (x214 : t) ->
                fun (x215 : string) ->
                  Ojs.set_prop_ascii (t_to_js x214) "origin"
                    (Ojs.string_to_js x215)
            let (get_name : t -> string) =
              fun (x216 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x216) "name")
            let (set_name : t -> string -> unit) =
              fun (x217 : t) ->
                fun (x218 : string) ->
                  Ojs.set_prop_ascii (t_to_js x217) "name"
                    (Ojs.string_to_js x218)
            let (get_auxData : t -> anonymous_interface_0) =
              fun (x219 : t) ->
                anonymous_interface_0_of_js
                  (Ojs.get_prop_ascii (t_to_js x219) "auxData")
            let (set_auxData : t -> anonymous_interface_0 -> unit) =
              fun (x220 : t) ->
                fun (x221 : anonymous_interface_0) ->
                  Ojs.set_prop_ascii (t_to_js x220) "auxData"
                    (anonymous_interface_0_to_js x221)
          end
        module ExceptionDetails =
          struct
            type t = inspector_Runtime_ExceptionDetails
            let rec t_of_js : Ojs.t -> t =
              fun (x223 : Ojs.t) ->
                inspector_Runtime_ExceptionDetails_of_js x223
            and t_to_js : t -> Ojs.t =
              fun (x222 : inspector_Runtime_ExceptionDetails) ->
                inspector_Runtime_ExceptionDetails_to_js x222
            let (get_exceptionId : t -> float) =
              fun (x224 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x224) "exceptionId")
            let (set_exceptionId : t -> float -> unit) =
              fun (x225 : t) ->
                fun (x226 : float) ->
                  Ojs.set_prop_ascii (t_to_js x225) "exceptionId"
                    (Ojs.float_to_js x226)
            let (get_text : t -> string) =
              fun (x227 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x227) "text")
            let (set_text : t -> string -> unit) =
              fun (x228 : t) ->
                fun (x229 : string) ->
                  Ojs.set_prop_ascii (t_to_js x228) "text"
                    (Ojs.string_to_js x229)
            let (get_lineNumber : t -> float) =
              fun (x230 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x230) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x231 : t) ->
                fun (x232 : float) ->
                  Ojs.set_prop_ascii (t_to_js x231) "lineNumber"
                    (Ojs.float_to_js x232)
            let (get_columnNumber : t -> float) =
              fun (x233 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x233) "columnNumber")
            let (set_columnNumber : t -> float -> unit) =
              fun (x234 : t) ->
                fun (x235 : float) ->
                  Ojs.set_prop_ascii (t_to_js x234) "columnNumber"
                    (Ojs.float_to_js x235)
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x236 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x236) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x237 : t) ->
                fun (x238 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x237) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x238)
            let (get_url : t -> string) =
              fun (x239 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x239) "url")
            let (set_url : t -> string -> unit) =
              fun (x240 : t) ->
                fun (x241 : string) ->
                  Ojs.set_prop_ascii (t_to_js x240) "url"
                    (Ojs.string_to_js x241)
            let (get_stackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x242 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x242) "stackTrace")
            let (set_stackTrace : t -> inspector_Runtime_StackTrace -> unit)
              =
              fun (x243 : t) ->
                fun (x244 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x243) "stackTrace"
                    (inspector_Runtime_StackTrace_to_js x244)
            let (get_exception : t -> inspector_Runtime_RemoteObject) =
              fun (x245 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x245) "exception")
            let (set_exception : t -> inspector_Runtime_RemoteObject -> unit)
              =
              fun (x246 : t) ->
                fun (x247 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x246) "exception"
                    (inspector_Runtime_RemoteObject_to_js x247)
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x248 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x248) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x249 : t) ->
                fun (x250 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x249) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x250)
          end
        module Timestamp =
          struct
            type t = inspector_Runtime_Timestamp
            let rec t_of_js : Ojs.t -> t =
              fun (x252 : Ojs.t) -> inspector_Runtime_Timestamp_of_js x252
            and t_to_js : t -> Ojs.t =
              fun (x251 : inspector_Runtime_Timestamp) ->
                inspector_Runtime_Timestamp_to_js x251
          end
        module CallFrame =
          struct
            type t = inspector_Runtime_CallFrame
            let rec t_of_js : Ojs.t -> t =
              fun (x254 : Ojs.t) -> inspector_Runtime_CallFrame_of_js x254
            and t_to_js : t -> Ojs.t =
              fun (x253 : inspector_Runtime_CallFrame) ->
                inspector_Runtime_CallFrame_to_js x253
            let (get_functionName : t -> string) =
              fun (x255 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x255) "functionName")
            let (set_functionName : t -> string -> unit) =
              fun (x256 : t) ->
                fun (x257 : string) ->
                  Ojs.set_prop_ascii (t_to_js x256) "functionName"
                    (Ojs.string_to_js x257)
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x258 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x258) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x259 : t) ->
                fun (x260 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x259) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x260)
            let (get_url : t -> string) =
              fun (x261 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x261) "url")
            let (set_url : t -> string -> unit) =
              fun (x262 : t) ->
                fun (x263 : string) ->
                  Ojs.set_prop_ascii (t_to_js x262) "url"
                    (Ojs.string_to_js x263)
            let (get_lineNumber : t -> float) =
              fun (x264 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x264) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x265 : t) ->
                fun (x266 : float) ->
                  Ojs.set_prop_ascii (t_to_js x265) "lineNumber"
                    (Ojs.float_to_js x266)
            let (get_columnNumber : t -> float) =
              fun (x267 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x267) "columnNumber")
            let (set_columnNumber : t -> float -> unit) =
              fun (x268 : t) ->
                fun (x269 : float) ->
                  Ojs.set_prop_ascii (t_to_js x268) "columnNumber"
                    (Ojs.float_to_js x269)
          end
        module StackTrace =
          struct
            type t = inspector_Runtime_StackTrace
            let rec t_of_js : Ojs.t -> t =
              fun (x271 : Ojs.t) -> inspector_Runtime_StackTrace_of_js x271
            and t_to_js : t -> Ojs.t =
              fun (x270 : inspector_Runtime_StackTrace) ->
                inspector_Runtime_StackTrace_to_js x270
            let (get_description : t -> string) =
              fun (x272 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x272) "description")
            let (set_description : t -> string -> unit) =
              fun (x273 : t) ->
                fun (x274 : string) ->
                  Ojs.set_prop_ascii (t_to_js x273) "description"
                    (Ojs.string_to_js x274)
            let (get_callFrames : t -> inspector_Runtime_CallFrame list) =
              fun (x275 : t) ->
                Ojs.list_of_js inspector_Runtime_CallFrame_of_js
                  (Ojs.get_prop_ascii (t_to_js x275) "callFrames")
            let (set_callFrames :
              t -> inspector_Runtime_CallFrame list -> unit) =
              fun (x277 : t) ->
                fun (x278 : inspector_Runtime_CallFrame list) ->
                  Ojs.set_prop_ascii (t_to_js x277) "callFrames"
                    (Ojs.list_to_js inspector_Runtime_CallFrame_to_js x278)
            let (get_parent : t -> t) =
              fun (x280 : t) ->
                t_of_js (Ojs.get_prop_ascii (t_to_js x280) "parent")
            let (set_parent : t -> t -> unit) =
              fun (x281 : t) ->
                fun (x282 : t) ->
                  Ojs.set_prop_ascii (t_to_js x281) "parent" (t_to_js x282)
            let (get_parentId : t -> inspector_Runtime_StackTraceId) =
              fun (x283 : t) ->
                inspector_Runtime_StackTraceId_of_js
                  (Ojs.get_prop_ascii (t_to_js x283) "parentId")
            let (set_parentId : t -> inspector_Runtime_StackTraceId -> unit)
              =
              fun (x284 : t) ->
                fun (x285 : inspector_Runtime_StackTraceId) ->
                  Ojs.set_prop_ascii (t_to_js x284) "parentId"
                    (inspector_Runtime_StackTraceId_to_js x285)
          end
        module UniqueDebuggerId =
          struct
            type t = inspector_Runtime_UniqueDebuggerId
            let rec t_of_js : Ojs.t -> t =
              fun (x287 : Ojs.t) ->
                inspector_Runtime_UniqueDebuggerId_of_js x287
            and t_to_js : t -> Ojs.t =
              fun (x286 : inspector_Runtime_UniqueDebuggerId) ->
                inspector_Runtime_UniqueDebuggerId_to_js x286
          end
        module StackTraceId =
          struct
            type t = inspector_Runtime_StackTraceId
            let rec t_of_js : Ojs.t -> t =
              fun (x289 : Ojs.t) -> inspector_Runtime_StackTraceId_of_js x289
            and t_to_js : t -> Ojs.t =
              fun (x288 : inspector_Runtime_StackTraceId) ->
                inspector_Runtime_StackTraceId_to_js x288
            let (get_id : t -> string) =
              fun (x290 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x290) "id")
            let (set_id : t -> string -> unit) =
              fun (x291 : t) ->
                fun (x292 : string) ->
                  Ojs.set_prop_ascii (t_to_js x291) "id"
                    (Ojs.string_to_js x292)
            let (get_debuggerId : t -> inspector_Runtime_UniqueDebuggerId) =
              fun (x293 : t) ->
                inspector_Runtime_UniqueDebuggerId_of_js
                  (Ojs.get_prop_ascii (t_to_js x293) "debuggerId")
            let (set_debuggerId :
              t -> inspector_Runtime_UniqueDebuggerId -> unit) =
              fun (x294 : t) ->
                fun (x295 : inspector_Runtime_UniqueDebuggerId) ->
                  Ojs.set_prop_ascii (t_to_js x294) "debuggerId"
                    (inspector_Runtime_UniqueDebuggerId_to_js x295)
          end
        module EvaluateParameterType =
          struct
            type t = inspector_Runtime_EvaluateParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x297 : Ojs.t) ->
                inspector_Runtime_EvaluateParameterType_of_js x297
            and t_to_js : t -> Ojs.t =
              fun (x296 : inspector_Runtime_EvaluateParameterType) ->
                inspector_Runtime_EvaluateParameterType_to_js x296
            let (get_expression : t -> string) =
              fun (x298 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x298) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x299 : t) ->
                fun (x300 : string) ->
                  Ojs.set_prop_ascii (t_to_js x299) "expression"
                    (Ojs.string_to_js x300)
            let (get_objectGroup : t -> string) =
              fun (x301 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x301) "objectGroup")
            let (set_objectGroup : t -> string -> unit) =
              fun (x302 : t) ->
                fun (x303 : string) ->
                  Ojs.set_prop_ascii (t_to_js x302) "objectGroup"
                    (Ojs.string_to_js x303)
            let (get_includeCommandLineAPI : t -> bool) =
              fun (x304 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x304) "includeCommandLineAPI")
            let (set_includeCommandLineAPI : t -> bool -> unit) =
              fun (x305 : t) ->
                fun (x306 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x305) "includeCommandLineAPI"
                    (Ojs.bool_to_js x306)
            let (get_silent : t -> bool) =
              fun (x307 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x307) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x308 : t) ->
                fun (x309 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x308) "silent"
                    (Ojs.bool_to_js x309)
            let (get_contextId : t -> inspector_Runtime_ExecutionContextId) =
              fun (x310 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x310) "contextId")
            let (set_contextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x311 : t) ->
                fun (x312 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x311) "contextId"
                    (inspector_Runtime_ExecutionContextId_to_js x312)
            let (get_returnByValue : t -> bool) =
              fun (x313 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x313) "returnByValue")
            let (set_returnByValue : t -> bool -> unit) =
              fun (x314 : t) ->
                fun (x315 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x314) "returnByValue"
                    (Ojs.bool_to_js x315)
            let (get_generatePreview : t -> bool) =
              fun (x316 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x316) "generatePreview")
            let (set_generatePreview : t -> bool -> unit) =
              fun (x317 : t) ->
                fun (x318 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x317) "generatePreview"
                    (Ojs.bool_to_js x318)
            let (get_userGesture : t -> bool) =
              fun (x319 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x319) "userGesture")
            let (set_userGesture : t -> bool -> unit) =
              fun (x320 : t) ->
                fun (x321 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x320) "userGesture"
                    (Ojs.bool_to_js x321)
            let (get_awaitPromise : t -> bool) =
              fun (x322 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x322) "awaitPromise")
            let (set_awaitPromise : t -> bool -> unit) =
              fun (x323 : t) ->
                fun (x324 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x323) "awaitPromise"
                    (Ojs.bool_to_js x324)
          end
        module AwaitPromiseParameterType =
          struct
            type t = inspector_Runtime_AwaitPromiseParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x326 : Ojs.t) ->
                inspector_Runtime_AwaitPromiseParameterType_of_js x326
            and t_to_js : t -> Ojs.t =
              fun (x325 : inspector_Runtime_AwaitPromiseParameterType) ->
                inspector_Runtime_AwaitPromiseParameterType_to_js x325
            let (get_promiseObjectId : t -> inspector_Runtime_RemoteObjectId)
              =
              fun (x327 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x327) "promiseObjectId")
            let (set_promiseObjectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x328 : t) ->
                fun (x329 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x328) "promiseObjectId"
                    (inspector_Runtime_RemoteObjectId_to_js x329)
            let (get_returnByValue : t -> bool) =
              fun (x330 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x330) "returnByValue")
            let (set_returnByValue : t -> bool -> unit) =
              fun (x331 : t) ->
                fun (x332 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x331) "returnByValue"
                    (Ojs.bool_to_js x332)
            let (get_generatePreview : t -> bool) =
              fun (x333 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x333) "generatePreview")
            let (set_generatePreview : t -> bool -> unit) =
              fun (x334 : t) ->
                fun (x335 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x334) "generatePreview"
                    (Ojs.bool_to_js x335)
          end
        module CallFunctionOnParameterType =
          struct
            type t = inspector_Runtime_CallFunctionOnParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x337 : Ojs.t) ->
                inspector_Runtime_CallFunctionOnParameterType_of_js x337
            and t_to_js : t -> Ojs.t =
              fun (x336 : inspector_Runtime_CallFunctionOnParameterType) ->
                inspector_Runtime_CallFunctionOnParameterType_to_js x336
            let (get_functionDeclaration : t -> string) =
              fun (x338 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x338) "functionDeclaration")
            let (set_functionDeclaration : t -> string -> unit) =
              fun (x339 : t) ->
                fun (x340 : string) ->
                  Ojs.set_prop_ascii (t_to_js x339) "functionDeclaration"
                    (Ojs.string_to_js x340)
            let (get_objectId : t -> inspector_Runtime_RemoteObjectId) =
              fun (x341 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x341) "objectId")
            let (set_objectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x342 : t) ->
                fun (x343 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x342) "objectId"
                    (inspector_Runtime_RemoteObjectId_to_js x343)
            let (get_arguments : t -> inspector_Runtime_CallArgument list) =
              fun (x344 : t) ->
                Ojs.list_of_js inspector_Runtime_CallArgument_of_js
                  (Ojs.get_prop_ascii (t_to_js x344) "arguments")
            let (set_arguments :
              t -> inspector_Runtime_CallArgument list -> unit) =
              fun (x346 : t) ->
                fun (x347 : inspector_Runtime_CallArgument list) ->
                  Ojs.set_prop_ascii (t_to_js x346) "arguments"
                    (Ojs.list_to_js inspector_Runtime_CallArgument_to_js x347)
            let (get_silent : t -> bool) =
              fun (x349 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x349) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x350 : t) ->
                fun (x351 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x350) "silent"
                    (Ojs.bool_to_js x351)
            let (get_returnByValue : t -> bool) =
              fun (x352 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x352) "returnByValue")
            let (set_returnByValue : t -> bool -> unit) =
              fun (x353 : t) ->
                fun (x354 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x353) "returnByValue"
                    (Ojs.bool_to_js x354)
            let (get_generatePreview : t -> bool) =
              fun (x355 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x355) "generatePreview")
            let (set_generatePreview : t -> bool -> unit) =
              fun (x356 : t) ->
                fun (x357 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x356) "generatePreview"
                    (Ojs.bool_to_js x357)
            let (get_userGesture : t -> bool) =
              fun (x358 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x358) "userGesture")
            let (set_userGesture : t -> bool -> unit) =
              fun (x359 : t) ->
                fun (x360 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x359) "userGesture"
                    (Ojs.bool_to_js x360)
            let (get_awaitPromise : t -> bool) =
              fun (x361 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x361) "awaitPromise")
            let (set_awaitPromise : t -> bool -> unit) =
              fun (x362 : t) ->
                fun (x363 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x362) "awaitPromise"
                    (Ojs.bool_to_js x363)
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x364 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x364) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x365 : t) ->
                fun (x366 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x365) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x366)
            let (get_objectGroup : t -> string) =
              fun (x367 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x367) "objectGroup")
            let (set_objectGroup : t -> string -> unit) =
              fun (x368 : t) ->
                fun (x369 : string) ->
                  Ojs.set_prop_ascii (t_to_js x368) "objectGroup"
                    (Ojs.string_to_js x369)
          end
        module GetPropertiesParameterType =
          struct
            type t = inspector_Runtime_GetPropertiesParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x371 : Ojs.t) ->
                inspector_Runtime_GetPropertiesParameterType_of_js x371
            and t_to_js : t -> Ojs.t =
              fun (x370 : inspector_Runtime_GetPropertiesParameterType) ->
                inspector_Runtime_GetPropertiesParameterType_to_js x370
            let (get_objectId : t -> inspector_Runtime_RemoteObjectId) =
              fun (x372 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x372) "objectId")
            let (set_objectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x373 : t) ->
                fun (x374 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x373) "objectId"
                    (inspector_Runtime_RemoteObjectId_to_js x374)
            let (get_ownProperties : t -> bool) =
              fun (x375 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x375) "ownProperties")
            let (set_ownProperties : t -> bool -> unit) =
              fun (x376 : t) ->
                fun (x377 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x376) "ownProperties"
                    (Ojs.bool_to_js x377)
            let (get_accessorPropertiesOnly : t -> bool) =
              fun (x378 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x378) "accessorPropertiesOnly")
            let (set_accessorPropertiesOnly : t -> bool -> unit) =
              fun (x379 : t) ->
                fun (x380 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x379) "accessorPropertiesOnly"
                    (Ojs.bool_to_js x380)
            let (get_generatePreview : t -> bool) =
              fun (x381 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x381) "generatePreview")
            let (set_generatePreview : t -> bool -> unit) =
              fun (x382 : t) ->
                fun (x383 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x382) "generatePreview"
                    (Ojs.bool_to_js x383)
          end
        module ReleaseObjectParameterType =
          struct
            type t = inspector_Runtime_ReleaseObjectParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x385 : Ojs.t) ->
                inspector_Runtime_ReleaseObjectParameterType_of_js x385
            and t_to_js : t -> Ojs.t =
              fun (x384 : inspector_Runtime_ReleaseObjectParameterType) ->
                inspector_Runtime_ReleaseObjectParameterType_to_js x384
            let (get_objectId : t -> inspector_Runtime_RemoteObjectId) =
              fun (x386 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x386) "objectId")
            let (set_objectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x387 : t) ->
                fun (x388 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x387) "objectId"
                    (inspector_Runtime_RemoteObjectId_to_js x388)
          end
        module ReleaseObjectGroupParameterType =
          struct
            type t = inspector_Runtime_ReleaseObjectGroupParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x390 : Ojs.t) ->
                inspector_Runtime_ReleaseObjectGroupParameterType_of_js x390
            and t_to_js : t -> Ojs.t =
              fun (x389 : inspector_Runtime_ReleaseObjectGroupParameterType)
                ->
                inspector_Runtime_ReleaseObjectGroupParameterType_to_js x389
            let (get_objectGroup : t -> string) =
              fun (x391 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x391) "objectGroup")
            let (set_objectGroup : t -> string -> unit) =
              fun (x392 : t) ->
                fun (x393 : string) ->
                  Ojs.set_prop_ascii (t_to_js x392) "objectGroup"
                    (Ojs.string_to_js x393)
          end
        module SetCustomObjectFormatterEnabledParameterType =
          struct
            type t =
              inspector_Runtime_SetCustomObjectFormatterEnabledParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x395 : Ojs.t) ->
                inspector_Runtime_SetCustomObjectFormatterEnabledParameterType_of_js
                  x395
            and t_to_js : t -> Ojs.t =
              fun
                (x394 :
                  inspector_Runtime_SetCustomObjectFormatterEnabledParameterType)
                ->
                inspector_Runtime_SetCustomObjectFormatterEnabledParameterType_to_js
                  x394
            let (get_enabled : t -> bool) =
              fun (x396 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x396) "enabled")
            let (set_enabled : t -> bool -> unit) =
              fun (x397 : t) ->
                fun (x398 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x397) "enabled"
                    (Ojs.bool_to_js x398)
          end
        module CompileScriptParameterType =
          struct
            type t = inspector_Runtime_CompileScriptParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x400 : Ojs.t) ->
                inspector_Runtime_CompileScriptParameterType_of_js x400
            and t_to_js : t -> Ojs.t =
              fun (x399 : inspector_Runtime_CompileScriptParameterType) ->
                inspector_Runtime_CompileScriptParameterType_to_js x399
            let (get_expression : t -> string) =
              fun (x401 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x401) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x402 : t) ->
                fun (x403 : string) ->
                  Ojs.set_prop_ascii (t_to_js x402) "expression"
                    (Ojs.string_to_js x403)
            let (get_sourceURL : t -> string) =
              fun (x404 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x404) "sourceURL")
            let (set_sourceURL : t -> string -> unit) =
              fun (x405 : t) ->
                fun (x406 : string) ->
                  Ojs.set_prop_ascii (t_to_js x405) "sourceURL"
                    (Ojs.string_to_js x406)
            let (get_persistScript : t -> bool) =
              fun (x407 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x407) "persistScript")
            let (set_persistScript : t -> bool -> unit) =
              fun (x408 : t) ->
                fun (x409 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x408) "persistScript"
                    (Ojs.bool_to_js x409)
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x410 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x410) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x411 : t) ->
                fun (x412 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x411) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x412)
          end
        module RunScriptParameterType =
          struct
            type t = inspector_Runtime_RunScriptParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x414 : Ojs.t) ->
                inspector_Runtime_RunScriptParameterType_of_js x414
            and t_to_js : t -> Ojs.t =
              fun (x413 : inspector_Runtime_RunScriptParameterType) ->
                inspector_Runtime_RunScriptParameterType_to_js x413
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x415 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x415) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x416 : t) ->
                fun (x417 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x416) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x417)
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x418 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x418) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x419 : t) ->
                fun (x420 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x419) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x420)
            let (get_objectGroup : t -> string) =
              fun (x421 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x421) "objectGroup")
            let (set_objectGroup : t -> string -> unit) =
              fun (x422 : t) ->
                fun (x423 : string) ->
                  Ojs.set_prop_ascii (t_to_js x422) "objectGroup"
                    (Ojs.string_to_js x423)
            let (get_silent : t -> bool) =
              fun (x424 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x424) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x425 : t) ->
                fun (x426 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x425) "silent"
                    (Ojs.bool_to_js x426)
            let (get_includeCommandLineAPI : t -> bool) =
              fun (x427 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x427) "includeCommandLineAPI")
            let (set_includeCommandLineAPI : t -> bool -> unit) =
              fun (x428 : t) ->
                fun (x429 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x428) "includeCommandLineAPI"
                    (Ojs.bool_to_js x429)
            let (get_returnByValue : t -> bool) =
              fun (x430 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x430) "returnByValue")
            let (set_returnByValue : t -> bool -> unit) =
              fun (x431 : t) ->
                fun (x432 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x431) "returnByValue"
                    (Ojs.bool_to_js x432)
            let (get_generatePreview : t -> bool) =
              fun (x433 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x433) "generatePreview")
            let (set_generatePreview : t -> bool -> unit) =
              fun (x434 : t) ->
                fun (x435 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x434) "generatePreview"
                    (Ojs.bool_to_js x435)
            let (get_awaitPromise : t -> bool) =
              fun (x436 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x436) "awaitPromise")
            let (set_awaitPromise : t -> bool -> unit) =
              fun (x437 : t) ->
                fun (x438 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x437) "awaitPromise"
                    (Ojs.bool_to_js x438)
          end
        module QueryObjectsParameterType =
          struct
            type t = inspector_Runtime_QueryObjectsParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x440 : Ojs.t) ->
                inspector_Runtime_QueryObjectsParameterType_of_js x440
            and t_to_js : t -> Ojs.t =
              fun (x439 : inspector_Runtime_QueryObjectsParameterType) ->
                inspector_Runtime_QueryObjectsParameterType_to_js x439
            let (get_prototypeObjectId :
              t -> inspector_Runtime_RemoteObjectId) =
              fun (x441 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x441) "prototypeObjectId")
            let (set_prototypeObjectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x442 : t) ->
                fun (x443 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x442) "prototypeObjectId"
                    (inspector_Runtime_RemoteObjectId_to_js x443)
          end
        module GlobalLexicalScopeNamesParameterType =
          struct
            type t = inspector_Runtime_GlobalLexicalScopeNamesParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x445 : Ojs.t) ->
                inspector_Runtime_GlobalLexicalScopeNamesParameterType_of_js
                  x445
            and t_to_js : t -> Ojs.t =
              fun
                (x444 :
                  inspector_Runtime_GlobalLexicalScopeNamesParameterType)
                ->
                inspector_Runtime_GlobalLexicalScopeNamesParameterType_to_js
                  x444
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x446 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x446) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x447 : t) ->
                fun (x448 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x447) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x448)
          end
        module EvaluateReturnType =
          struct
            type t = inspector_Runtime_EvaluateReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x450 : Ojs.t) ->
                inspector_Runtime_EvaluateReturnType_of_js x450
            and t_to_js : t -> Ojs.t =
              fun (x449 : inspector_Runtime_EvaluateReturnType) ->
                inspector_Runtime_EvaluateReturnType_to_js x449
            let (get_result : t -> inspector_Runtime_RemoteObject) =
              fun (x451 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x451) "result")
            let (set_result : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x452 : t) ->
                fun (x453 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x452) "result"
                    (inspector_Runtime_RemoteObject_to_js x453)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x454 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x454) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x455 : t) ->
                fun (x456 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x455) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x456)
          end
        module AwaitPromiseReturnType =
          struct
            type t = inspector_Runtime_AwaitPromiseReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x458 : Ojs.t) ->
                inspector_Runtime_AwaitPromiseReturnType_of_js x458
            and t_to_js : t -> Ojs.t =
              fun (x457 : inspector_Runtime_AwaitPromiseReturnType) ->
                inspector_Runtime_AwaitPromiseReturnType_to_js x457
            let (get_result : t -> inspector_Runtime_RemoteObject) =
              fun (x459 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x459) "result")
            let (set_result : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x460 : t) ->
                fun (x461 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x460) "result"
                    (inspector_Runtime_RemoteObject_to_js x461)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x462 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x462) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x463 : t) ->
                fun (x464 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x463) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x464)
          end
        module CallFunctionOnReturnType =
          struct
            type t = inspector_Runtime_CallFunctionOnReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x466 : Ojs.t) ->
                inspector_Runtime_CallFunctionOnReturnType_of_js x466
            and t_to_js : t -> Ojs.t =
              fun (x465 : inspector_Runtime_CallFunctionOnReturnType) ->
                inspector_Runtime_CallFunctionOnReturnType_to_js x465
            let (get_result : t -> inspector_Runtime_RemoteObject) =
              fun (x467 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x467) "result")
            let (set_result : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x468 : t) ->
                fun (x469 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x468) "result"
                    (inspector_Runtime_RemoteObject_to_js x469)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x470 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x470) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x471 : t) ->
                fun (x472 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x471) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x472)
          end
        module GetPropertiesReturnType =
          struct
            type t = inspector_Runtime_GetPropertiesReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x474 : Ojs.t) ->
                inspector_Runtime_GetPropertiesReturnType_of_js x474
            and t_to_js : t -> Ojs.t =
              fun (x473 : inspector_Runtime_GetPropertiesReturnType) ->
                inspector_Runtime_GetPropertiesReturnType_to_js x473
            let (get_result : t -> inspector_Runtime_PropertyDescriptor list)
              =
              fun (x475 : t) ->
                Ojs.list_of_js inspector_Runtime_PropertyDescriptor_of_js
                  (Ojs.get_prop_ascii (t_to_js x475) "result")
            let (set_result :
              t -> inspector_Runtime_PropertyDescriptor list -> unit) =
              fun (x477 : t) ->
                fun (x478 : inspector_Runtime_PropertyDescriptor list) ->
                  Ojs.set_prop_ascii (t_to_js x477) "result"
                    (Ojs.list_to_js
                       inspector_Runtime_PropertyDescriptor_to_js x478)
            let (get_internalProperties :
              t -> inspector_Runtime_InternalPropertyDescriptor list) =
              fun (x480 : t) ->
                Ojs.list_of_js
                  inspector_Runtime_InternalPropertyDescriptor_of_js
                  (Ojs.get_prop_ascii (t_to_js x480) "internalProperties")
            let (set_internalProperties :
              t -> inspector_Runtime_InternalPropertyDescriptor list -> unit)
              =
              fun (x482 : t) ->
                fun
                  (x483 : inspector_Runtime_InternalPropertyDescriptor list)
                  ->
                  Ojs.set_prop_ascii (t_to_js x482) "internalProperties"
                    (Ojs.list_to_js
                       inspector_Runtime_InternalPropertyDescriptor_to_js
                       x483)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x485 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x485) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x486 : t) ->
                fun (x487 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x486) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x487)
          end
        module CompileScriptReturnType =
          struct
            type t = inspector_Runtime_CompileScriptReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x489 : Ojs.t) ->
                inspector_Runtime_CompileScriptReturnType_of_js x489
            and t_to_js : t -> Ojs.t =
              fun (x488 : inspector_Runtime_CompileScriptReturnType) ->
                inspector_Runtime_CompileScriptReturnType_to_js x488
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x490 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x490) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x491 : t) ->
                fun (x492 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x491) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x492)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x493 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x493) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x494 : t) ->
                fun (x495 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x494) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x495)
          end
        module RunScriptReturnType =
          struct
            type t = inspector_Runtime_RunScriptReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x497 : Ojs.t) ->
                inspector_Runtime_RunScriptReturnType_of_js x497
            and t_to_js : t -> Ojs.t =
              fun (x496 : inspector_Runtime_RunScriptReturnType) ->
                inspector_Runtime_RunScriptReturnType_to_js x496
            let (get_result : t -> inspector_Runtime_RemoteObject) =
              fun (x498 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x498) "result")
            let (set_result : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x499 : t) ->
                fun (x500 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x499) "result"
                    (inspector_Runtime_RemoteObject_to_js x500)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x501 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x501) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x502 : t) ->
                fun (x503 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x502) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x503)
          end
        module QueryObjectsReturnType =
          struct
            type t = inspector_Runtime_QueryObjectsReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x505 : Ojs.t) ->
                inspector_Runtime_QueryObjectsReturnType_of_js x505
            and t_to_js : t -> Ojs.t =
              fun (x504 : inspector_Runtime_QueryObjectsReturnType) ->
                inspector_Runtime_QueryObjectsReturnType_to_js x504
            let (get_objects : t -> inspector_Runtime_RemoteObject) =
              fun (x506 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x506) "objects")
            let (set_objects : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x507 : t) ->
                fun (x508 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x507) "objects"
                    (inspector_Runtime_RemoteObject_to_js x508)
          end
        module GlobalLexicalScopeNamesReturnType =
          struct
            type t = inspector_Runtime_GlobalLexicalScopeNamesReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x510 : Ojs.t) ->
                inspector_Runtime_GlobalLexicalScopeNamesReturnType_of_js
                  x510
            and t_to_js : t -> Ojs.t =
              fun
                (x509 : inspector_Runtime_GlobalLexicalScopeNamesReturnType)
                ->
                inspector_Runtime_GlobalLexicalScopeNamesReturnType_to_js
                  x509
            let (get_names : t -> string list) =
              fun (x511 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x511) "names")
            let (set_names : t -> string list -> unit) =
              fun (x513 : t) ->
                fun (x514 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x513) "names"
                    (Ojs.list_to_js Ojs.string_to_js x514)
          end
        module ExecutionContextCreatedEventDataType =
          struct
            type t = inspector_Runtime_ExecutionContextCreatedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x517 : Ojs.t) ->
                inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                  x517
            and t_to_js : t -> Ojs.t =
              fun
                (x516 :
                  inspector_Runtime_ExecutionContextCreatedEventDataType)
                ->
                inspector_Runtime_ExecutionContextCreatedEventDataType_to_js
                  x516
            let (get_context :
              t -> inspector_Runtime_ExecutionContextDescription) =
              fun (x518 : t) ->
                inspector_Runtime_ExecutionContextDescription_of_js
                  (Ojs.get_prop_ascii (t_to_js x518) "context")
            let (set_context :
              t -> inspector_Runtime_ExecutionContextDescription -> unit) =
              fun (x519 : t) ->
                fun (x520 : inspector_Runtime_ExecutionContextDescription) ->
                  Ojs.set_prop_ascii (t_to_js x519) "context"
                    (inspector_Runtime_ExecutionContextDescription_to_js x520)
          end
        module ExecutionContextDestroyedEventDataType =
          struct
            type t = inspector_Runtime_ExecutionContextDestroyedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x522 : Ojs.t) ->
                inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                  x522
            and t_to_js : t -> Ojs.t =
              fun
                (x521 :
                  inspector_Runtime_ExecutionContextDestroyedEventDataType)
                ->
                inspector_Runtime_ExecutionContextDestroyedEventDataType_to_js
                  x521
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x523 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x523) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x524 : t) ->
                fun (x525 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x524) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x525)
          end
        module ExceptionThrownEventDataType =
          struct
            type t = inspector_Runtime_ExceptionThrownEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x527 : Ojs.t) ->
                inspector_Runtime_ExceptionThrownEventDataType_of_js x527
            and t_to_js : t -> Ojs.t =
              fun (x526 : inspector_Runtime_ExceptionThrownEventDataType) ->
                inspector_Runtime_ExceptionThrownEventDataType_to_js x526
            let (get_timestamp : t -> inspector_Runtime_Timestamp) =
              fun (x528 : t) ->
                inspector_Runtime_Timestamp_of_js
                  (Ojs.get_prop_ascii (t_to_js x528) "timestamp")
            let (set_timestamp : t -> inspector_Runtime_Timestamp -> unit) =
              fun (x529 : t) ->
                fun (x530 : inspector_Runtime_Timestamp) ->
                  Ojs.set_prop_ascii (t_to_js x529) "timestamp"
                    (inspector_Runtime_Timestamp_to_js x530)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x531 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x531) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x532 : t) ->
                fun (x533 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x532) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x533)
          end
        module ExceptionRevokedEventDataType =
          struct
            type t = inspector_Runtime_ExceptionRevokedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x535 : Ojs.t) ->
                inspector_Runtime_ExceptionRevokedEventDataType_of_js x535
            and t_to_js : t -> Ojs.t =
              fun (x534 : inspector_Runtime_ExceptionRevokedEventDataType) ->
                inspector_Runtime_ExceptionRevokedEventDataType_to_js x534
            let (get_reason : t -> string) =
              fun (x536 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x536) "reason")
            let (set_reason : t -> string -> unit) =
              fun (x537 : t) ->
                fun (x538 : string) ->
                  Ojs.set_prop_ascii (t_to_js x537) "reason"
                    (Ojs.string_to_js x538)
            let (get_exceptionId : t -> float) =
              fun (x539 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x539) "exceptionId")
            let (set_exceptionId : t -> float -> unit) =
              fun (x540 : t) ->
                fun (x541 : float) ->
                  Ojs.set_prop_ascii (t_to_js x540) "exceptionId"
                    (Ojs.float_to_js x541)
          end
        module ConsoleAPICalledEventDataType =
          struct
            type t = inspector_Runtime_ConsoleAPICalledEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x543 : Ojs.t) ->
                inspector_Runtime_ConsoleAPICalledEventDataType_of_js x543
            and t_to_js : t -> Ojs.t =
              fun (x542 : inspector_Runtime_ConsoleAPICalledEventDataType) ->
                inspector_Runtime_ConsoleAPICalledEventDataType_to_js x542
            let (get_type : t -> string) =
              fun (x544 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x544) "type")
            let (set_type : t -> string -> unit) =
              fun (x545 : t) ->
                fun (x546 : string) ->
                  Ojs.set_prop_ascii (t_to_js x545) "type"
                    (Ojs.string_to_js x546)
            let (get_args : t -> inspector_Runtime_RemoteObject list) =
              fun (x547 : t) ->
                Ojs.list_of_js inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x547) "args")
            let (set_args : t -> inspector_Runtime_RemoteObject list -> unit)
              =
              fun (x549 : t) ->
                fun (x550 : inspector_Runtime_RemoteObject list) ->
                  Ojs.set_prop_ascii (t_to_js x549) "args"
                    (Ojs.list_to_js inspector_Runtime_RemoteObject_to_js x550)
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x552 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x552) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x553 : t) ->
                fun (x554 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x553) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x554)
            let (get_timestamp : t -> inspector_Runtime_Timestamp) =
              fun (x555 : t) ->
                inspector_Runtime_Timestamp_of_js
                  (Ojs.get_prop_ascii (t_to_js x555) "timestamp")
            let (set_timestamp : t -> inspector_Runtime_Timestamp -> unit) =
              fun (x556 : t) ->
                fun (x557 : inspector_Runtime_Timestamp) ->
                  Ojs.set_prop_ascii (t_to_js x556) "timestamp"
                    (inspector_Runtime_Timestamp_to_js x557)
            let (get_stackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x558 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x558) "stackTrace")
            let (set_stackTrace : t -> inspector_Runtime_StackTrace -> unit)
              =
              fun (x559 : t) ->
                fun (x560 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x559) "stackTrace"
                    (inspector_Runtime_StackTrace_to_js x560)
            let (get_context : t -> string) =
              fun (x561 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x561) "context")
            let (set_context : t -> string -> unit) =
              fun (x562 : t) ->
                fun (x563 : string) ->
                  Ojs.set_prop_ascii (t_to_js x562) "context"
                    (Ojs.string_to_js x563)
          end
        module InspectRequestedEventDataType =
          struct
            type t = inspector_Runtime_InspectRequestedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x565 : Ojs.t) ->
                inspector_Runtime_InspectRequestedEventDataType_of_js x565
            and t_to_js : t -> Ojs.t =
              fun (x564 : inspector_Runtime_InspectRequestedEventDataType) ->
                inspector_Runtime_InspectRequestedEventDataType_to_js x564
            let (get_object : t -> inspector_Runtime_RemoteObject) =
              fun (x566 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x566) "object")
            let (set_object : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x567 : t) ->
                fun (x568 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x567) "object"
                    (inspector_Runtime_RemoteObject_to_js x568)
            let (get_hints : t -> anonymous_interface_0) =
              fun (x569 : t) ->
                anonymous_interface_0_of_js
                  (Ojs.get_prop_ascii (t_to_js x569) "hints")
            let (set_hints : t -> anonymous_interface_0 -> unit) =
              fun (x570 : t) ->
                fun (x571 : anonymous_interface_0) ->
                  Ojs.set_prop_ascii (t_to_js x570) "hints"
                    (anonymous_interface_0_to_js x571)
          end
      end
    module Debugger =
      struct
        module BreakpointId =
          struct
            type t = inspector_Debugger_BreakpointId
            let rec t_of_js : Ojs.t -> t =
              fun (x573 : Ojs.t) ->
                inspector_Debugger_BreakpointId_of_js x573
            and t_to_js : t -> Ojs.t =
              fun (x572 : inspector_Debugger_BreakpointId) ->
                inspector_Debugger_BreakpointId_to_js x572
          end
        module CallFrameId =
          struct
            type t = inspector_Debugger_CallFrameId
            let rec t_of_js : Ojs.t -> t =
              fun (x575 : Ojs.t) -> inspector_Debugger_CallFrameId_of_js x575
            and t_to_js : t -> Ojs.t =
              fun (x574 : inspector_Debugger_CallFrameId) ->
                inspector_Debugger_CallFrameId_to_js x574
          end
        module Location =
          struct
            type t = inspector_Debugger_Location
            let rec t_of_js : Ojs.t -> t =
              fun (x577 : Ojs.t) -> inspector_Debugger_Location_of_js x577
            and t_to_js : t -> Ojs.t =
              fun (x576 : inspector_Debugger_Location) ->
                inspector_Debugger_Location_to_js x576
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x578 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x578) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x579 : t) ->
                fun (x580 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x579) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x580)
            let (get_lineNumber : t -> float) =
              fun (x581 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x581) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x582 : t) ->
                fun (x583 : float) ->
                  Ojs.set_prop_ascii (t_to_js x582) "lineNumber"
                    (Ojs.float_to_js x583)
            let (get_columnNumber : t -> float) =
              fun (x584 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x584) "columnNumber")
            let (set_columnNumber : t -> float -> unit) =
              fun (x585 : t) ->
                fun (x586 : float) ->
                  Ojs.set_prop_ascii (t_to_js x585) "columnNumber"
                    (Ojs.float_to_js x586)
          end
        module ScriptPosition =
          struct
            type t = inspector_Debugger_ScriptPosition
            let rec t_of_js : Ojs.t -> t =
              fun (x588 : Ojs.t) ->
                inspector_Debugger_ScriptPosition_of_js x588
            and t_to_js : t -> Ojs.t =
              fun (x587 : inspector_Debugger_ScriptPosition) ->
                inspector_Debugger_ScriptPosition_to_js x587
            let (get_lineNumber : t -> float) =
              fun (x589 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x589) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x590 : t) ->
                fun (x591 : float) ->
                  Ojs.set_prop_ascii (t_to_js x590) "lineNumber"
                    (Ojs.float_to_js x591)
            let (get_columnNumber : t -> float) =
              fun (x592 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x592) "columnNumber")
            let (set_columnNumber : t -> float -> unit) =
              fun (x593 : t) ->
                fun (x594 : float) ->
                  Ojs.set_prop_ascii (t_to_js x593) "columnNumber"
                    (Ojs.float_to_js x594)
          end
        module CallFrame =
          struct
            type t = inspector_Debugger_CallFrame
            let rec t_of_js : Ojs.t -> t =
              fun (x596 : Ojs.t) -> inspector_Debugger_CallFrame_of_js x596
            and t_to_js : t -> Ojs.t =
              fun (x595 : inspector_Debugger_CallFrame) ->
                inspector_Debugger_CallFrame_to_js x595
            let (get_callFrameId : t -> inspector_Debugger_CallFrameId) =
              fun (x597 : t) ->
                inspector_Debugger_CallFrameId_of_js
                  (Ojs.get_prop_ascii (t_to_js x597) "callFrameId")
            let (set_callFrameId :
              t -> inspector_Debugger_CallFrameId -> unit) =
              fun (x598 : t) ->
                fun (x599 : inspector_Debugger_CallFrameId) ->
                  Ojs.set_prop_ascii (t_to_js x598) "callFrameId"
                    (inspector_Debugger_CallFrameId_to_js x599)
            let (get_functionName : t -> string) =
              fun (x600 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x600) "functionName")
            let (set_functionName : t -> string -> unit) =
              fun (x601 : t) ->
                fun (x602 : string) ->
                  Ojs.set_prop_ascii (t_to_js x601) "functionName"
                    (Ojs.string_to_js x602)
            let (get_functionLocation : t -> inspector_Debugger_Location) =
              fun (x603 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x603) "functionLocation")
            let (set_functionLocation :
              t -> inspector_Debugger_Location -> unit) =
              fun (x604 : t) ->
                fun (x605 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x604) "functionLocation"
                    (inspector_Debugger_Location_to_js x605)
            let (get_location : t -> inspector_Debugger_Location) =
              fun (x606 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x606) "location")
            let (set_location : t -> inspector_Debugger_Location -> unit) =
              fun (x607 : t) ->
                fun (x608 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x607) "location"
                    (inspector_Debugger_Location_to_js x608)
            let (get_url : t -> string) =
              fun (x609 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x609) "url")
            let (set_url : t -> string -> unit) =
              fun (x610 : t) ->
                fun (x611 : string) ->
                  Ojs.set_prop_ascii (t_to_js x610) "url"
                    (Ojs.string_to_js x611)
            let (get_scopeChain : t -> inspector_Debugger_Scope list) =
              fun (x612 : t) ->
                Ojs.list_of_js inspector_Debugger_Scope_of_js
                  (Ojs.get_prop_ascii (t_to_js x612) "scopeChain")
            let (set_scopeChain : t -> inspector_Debugger_Scope list -> unit)
              =
              fun (x614 : t) ->
                fun (x615 : inspector_Debugger_Scope list) ->
                  Ojs.set_prop_ascii (t_to_js x614) "scopeChain"
                    (Ojs.list_to_js inspector_Debugger_Scope_to_js x615)
            let (get_this : t -> inspector_Runtime_RemoteObject) =
              fun (x617 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x617) "this")
            let (set_this : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x618 : t) ->
                fun (x619 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x618) "this"
                    (inspector_Runtime_RemoteObject_to_js x619)
            let (get_returnValue : t -> inspector_Runtime_RemoteObject) =
              fun (x620 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x620) "returnValue")
            let (set_returnValue :
              t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x621 : t) ->
                fun (x622 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x621) "returnValue"
                    (inspector_Runtime_RemoteObject_to_js x622)
          end
        module Scope =
          struct
            type t = inspector_Debugger_Scope
            let rec t_of_js : Ojs.t -> t =
              fun (x624 : Ojs.t) -> inspector_Debugger_Scope_of_js x624
            and t_to_js : t -> Ojs.t =
              fun (x623 : inspector_Debugger_Scope) ->
                inspector_Debugger_Scope_to_js x623
            let (get_type : t -> string) =
              fun (x625 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x625) "type")
            let (set_type : t -> string -> unit) =
              fun (x626 : t) ->
                fun (x627 : string) ->
                  Ojs.set_prop_ascii (t_to_js x626) "type"
                    (Ojs.string_to_js x627)
            let (get_object : t -> inspector_Runtime_RemoteObject) =
              fun (x628 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x628) "object")
            let (set_object : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x629 : t) ->
                fun (x630 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x629) "object"
                    (inspector_Runtime_RemoteObject_to_js x630)
            let (get_name : t -> string) =
              fun (x631 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x631) "name")
            let (set_name : t -> string -> unit) =
              fun (x632 : t) ->
                fun (x633 : string) ->
                  Ojs.set_prop_ascii (t_to_js x632) "name"
                    (Ojs.string_to_js x633)
            let (get_startLocation : t -> inspector_Debugger_Location) =
              fun (x634 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x634) "startLocation")
            let (set_startLocation :
              t -> inspector_Debugger_Location -> unit) =
              fun (x635 : t) ->
                fun (x636 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x635) "startLocation"
                    (inspector_Debugger_Location_to_js x636)
            let (get_endLocation : t -> inspector_Debugger_Location) =
              fun (x637 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x637) "endLocation")
            let (set_endLocation : t -> inspector_Debugger_Location -> unit)
              =
              fun (x638 : t) ->
                fun (x639 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x638) "endLocation"
                    (inspector_Debugger_Location_to_js x639)
          end
        module SearchMatch =
          struct
            type t = inspector_Debugger_SearchMatch
            let rec t_of_js : Ojs.t -> t =
              fun (x641 : Ojs.t) -> inspector_Debugger_SearchMatch_of_js x641
            and t_to_js : t -> Ojs.t =
              fun (x640 : inspector_Debugger_SearchMatch) ->
                inspector_Debugger_SearchMatch_to_js x640
            let (get_lineNumber : t -> float) =
              fun (x642 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x642) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x643 : t) ->
                fun (x644 : float) ->
                  Ojs.set_prop_ascii (t_to_js x643) "lineNumber"
                    (Ojs.float_to_js x644)
            let (get_lineContent : t -> string) =
              fun (x645 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x645) "lineContent")
            let (set_lineContent : t -> string -> unit) =
              fun (x646 : t) ->
                fun (x647 : string) ->
                  Ojs.set_prop_ascii (t_to_js x646) "lineContent"
                    (Ojs.string_to_js x647)
          end
        module BreakLocation =
          struct
            type t = inspector_Debugger_BreakLocation
            let rec t_of_js : Ojs.t -> t =
              fun (x649 : Ojs.t) ->
                inspector_Debugger_BreakLocation_of_js x649
            and t_to_js : t -> Ojs.t =
              fun (x648 : inspector_Debugger_BreakLocation) ->
                inspector_Debugger_BreakLocation_to_js x648
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x650 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x650) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x651 : t) ->
                fun (x652 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x651) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x652)
            let (get_lineNumber : t -> float) =
              fun (x653 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x653) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x654 : t) ->
                fun (x655 : float) ->
                  Ojs.set_prop_ascii (t_to_js x654) "lineNumber"
                    (Ojs.float_to_js x655)
            let (get_columnNumber : t -> float) =
              fun (x656 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x656) "columnNumber")
            let (set_columnNumber : t -> float -> unit) =
              fun (x657 : t) ->
                fun (x658 : float) ->
                  Ojs.set_prop_ascii (t_to_js x657) "columnNumber"
                    (Ojs.float_to_js x658)
            let (get_type : t -> string) =
              fun (x659 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x659) "type")
            let (set_type : t -> string -> unit) =
              fun (x660 : t) ->
                fun (x661 : string) ->
                  Ojs.set_prop_ascii (t_to_js x660) "type"
                    (Ojs.string_to_js x661)
          end
        module SetBreakpointsActiveParameterType =
          struct
            type t = inspector_Debugger_SetBreakpointsActiveParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x663 : Ojs.t) ->
                inspector_Debugger_SetBreakpointsActiveParameterType_of_js
                  x663
            and t_to_js : t -> Ojs.t =
              fun
                (x662 : inspector_Debugger_SetBreakpointsActiveParameterType)
                ->
                inspector_Debugger_SetBreakpointsActiveParameterType_to_js
                  x662
            let (get_active : t -> bool) =
              fun (x664 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x664) "active")
            let (set_active : t -> bool -> unit) =
              fun (x665 : t) ->
                fun (x666 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x665) "active"
                    (Ojs.bool_to_js x666)
          end
        module SetSkipAllPausesParameterType =
          struct
            type t = inspector_Debugger_SetSkipAllPausesParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x668 : Ojs.t) ->
                inspector_Debugger_SetSkipAllPausesParameterType_of_js x668
            and t_to_js : t -> Ojs.t =
              fun (x667 : inspector_Debugger_SetSkipAllPausesParameterType)
                ->
                inspector_Debugger_SetSkipAllPausesParameterType_to_js x667
            let (get_skip : t -> bool) =
              fun (x669 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x669) "skip")
            let (set_skip : t -> bool -> unit) =
              fun (x670 : t) ->
                fun (x671 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x670) "skip"
                    (Ojs.bool_to_js x671)
          end
        module SetBreakpointByUrlParameterType =
          struct
            type t = inspector_Debugger_SetBreakpointByUrlParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x673 : Ojs.t) ->
                inspector_Debugger_SetBreakpointByUrlParameterType_of_js x673
            and t_to_js : t -> Ojs.t =
              fun (x672 : inspector_Debugger_SetBreakpointByUrlParameterType)
                ->
                inspector_Debugger_SetBreakpointByUrlParameterType_to_js x672
            let (get_lineNumber : t -> float) =
              fun (x674 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x674) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x675 : t) ->
                fun (x676 : float) ->
                  Ojs.set_prop_ascii (t_to_js x675) "lineNumber"
                    (Ojs.float_to_js x676)
            let (get_url : t -> string) =
              fun (x677 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x677) "url")
            let (set_url : t -> string -> unit) =
              fun (x678 : t) ->
                fun (x679 : string) ->
                  Ojs.set_prop_ascii (t_to_js x678) "url"
                    (Ojs.string_to_js x679)
            let (get_urlRegex : t -> string) =
              fun (x680 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x680) "urlRegex")
            let (set_urlRegex : t -> string -> unit) =
              fun (x681 : t) ->
                fun (x682 : string) ->
                  Ojs.set_prop_ascii (t_to_js x681) "urlRegex"
                    (Ojs.string_to_js x682)
            let (get_scriptHash : t -> string) =
              fun (x683 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x683) "scriptHash")
            let (set_scriptHash : t -> string -> unit) =
              fun (x684 : t) ->
                fun (x685 : string) ->
                  Ojs.set_prop_ascii (t_to_js x684) "scriptHash"
                    (Ojs.string_to_js x685)
            let (get_columnNumber : t -> float) =
              fun (x686 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x686) "columnNumber")
            let (set_columnNumber : t -> float -> unit) =
              fun (x687 : t) ->
                fun (x688 : float) ->
                  Ojs.set_prop_ascii (t_to_js x687) "columnNumber"
                    (Ojs.float_to_js x688)
            let (get_condition : t -> string) =
              fun (x689 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x689) "condition")
            let (set_condition : t -> string -> unit) =
              fun (x690 : t) ->
                fun (x691 : string) ->
                  Ojs.set_prop_ascii (t_to_js x690) "condition"
                    (Ojs.string_to_js x691)
          end
        module SetBreakpointParameterType =
          struct
            type t = inspector_Debugger_SetBreakpointParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x693 : Ojs.t) ->
                inspector_Debugger_SetBreakpointParameterType_of_js x693
            and t_to_js : t -> Ojs.t =
              fun (x692 : inspector_Debugger_SetBreakpointParameterType) ->
                inspector_Debugger_SetBreakpointParameterType_to_js x692
            let (get_location : t -> inspector_Debugger_Location) =
              fun (x694 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x694) "location")
            let (set_location : t -> inspector_Debugger_Location -> unit) =
              fun (x695 : t) ->
                fun (x696 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x695) "location"
                    (inspector_Debugger_Location_to_js x696)
            let (get_condition : t -> string) =
              fun (x697 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x697) "condition")
            let (set_condition : t -> string -> unit) =
              fun (x698 : t) ->
                fun (x699 : string) ->
                  Ojs.set_prop_ascii (t_to_js x698) "condition"
                    (Ojs.string_to_js x699)
          end
        module RemoveBreakpointParameterType =
          struct
            type t = inspector_Debugger_RemoveBreakpointParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x701 : Ojs.t) ->
                inspector_Debugger_RemoveBreakpointParameterType_of_js x701
            and t_to_js : t -> Ojs.t =
              fun (x700 : inspector_Debugger_RemoveBreakpointParameterType)
                ->
                inspector_Debugger_RemoveBreakpointParameterType_to_js x700
            let (get_breakpointId : t -> inspector_Debugger_BreakpointId) =
              fun (x702 : t) ->
                inspector_Debugger_BreakpointId_of_js
                  (Ojs.get_prop_ascii (t_to_js x702) "breakpointId")
            let (set_breakpointId :
              t -> inspector_Debugger_BreakpointId -> unit) =
              fun (x703 : t) ->
                fun (x704 : inspector_Debugger_BreakpointId) ->
                  Ojs.set_prop_ascii (t_to_js x703) "breakpointId"
                    (inspector_Debugger_BreakpointId_to_js x704)
          end
        module GetPossibleBreakpointsParameterType =
          struct
            type t = inspector_Debugger_GetPossibleBreakpointsParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x706 : Ojs.t) ->
                inspector_Debugger_GetPossibleBreakpointsParameterType_of_js
                  x706
            and t_to_js : t -> Ojs.t =
              fun
                (x705 :
                  inspector_Debugger_GetPossibleBreakpointsParameterType)
                ->
                inspector_Debugger_GetPossibleBreakpointsParameterType_to_js
                  x705
            let (get_start : t -> inspector_Debugger_Location) =
              fun (x707 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x707) "start")
            let (set_start : t -> inspector_Debugger_Location -> unit) =
              fun (x708 : t) ->
                fun (x709 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x708) "start"
                    (inspector_Debugger_Location_to_js x709)
            let (get_end : t -> inspector_Debugger_Location) =
              fun (x710 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x710) "end")
            let (set_end : t -> inspector_Debugger_Location -> unit) =
              fun (x711 : t) ->
                fun (x712 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x711) "end"
                    (inspector_Debugger_Location_to_js x712)
            let (get_restrictToFunction : t -> bool) =
              fun (x713 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x713) "restrictToFunction")
            let (set_restrictToFunction : t -> bool -> unit) =
              fun (x714 : t) ->
                fun (x715 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x714) "restrictToFunction"
                    (Ojs.bool_to_js x715)
          end
        module ContinueToLocationParameterType =
          struct
            type t = inspector_Debugger_ContinueToLocationParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x717 : Ojs.t) ->
                inspector_Debugger_ContinueToLocationParameterType_of_js x717
            and t_to_js : t -> Ojs.t =
              fun (x716 : inspector_Debugger_ContinueToLocationParameterType)
                ->
                inspector_Debugger_ContinueToLocationParameterType_to_js x716
            let (get_location : t -> inspector_Debugger_Location) =
              fun (x718 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x718) "location")
            let (set_location : t -> inspector_Debugger_Location -> unit) =
              fun (x719 : t) ->
                fun (x720 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x719) "location"
                    (inspector_Debugger_Location_to_js x720)
            let (get_targetCallFrames : t -> string) =
              fun (x721 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x721) "targetCallFrames")
            let (set_targetCallFrames : t -> string -> unit) =
              fun (x722 : t) ->
                fun (x723 : string) ->
                  Ojs.set_prop_ascii (t_to_js x722) "targetCallFrames"
                    (Ojs.string_to_js x723)
          end
        module PauseOnAsyncCallParameterType =
          struct
            type t = inspector_Debugger_PauseOnAsyncCallParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x725 : Ojs.t) ->
                inspector_Debugger_PauseOnAsyncCallParameterType_of_js x725
            and t_to_js : t -> Ojs.t =
              fun (x724 : inspector_Debugger_PauseOnAsyncCallParameterType)
                ->
                inspector_Debugger_PauseOnAsyncCallParameterType_to_js x724
            let (get_parentStackTraceId :
              t -> inspector_Runtime_StackTraceId) =
              fun (x726 : t) ->
                inspector_Runtime_StackTraceId_of_js
                  (Ojs.get_prop_ascii (t_to_js x726) "parentStackTraceId")
            let (set_parentStackTraceId :
              t -> inspector_Runtime_StackTraceId -> unit) =
              fun (x727 : t) ->
                fun (x728 : inspector_Runtime_StackTraceId) ->
                  Ojs.set_prop_ascii (t_to_js x727) "parentStackTraceId"
                    (inspector_Runtime_StackTraceId_to_js x728)
          end
        module StepIntoParameterType =
          struct
            type t = inspector_Debugger_StepIntoParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x730 : Ojs.t) ->
                inspector_Debugger_StepIntoParameterType_of_js x730
            and t_to_js : t -> Ojs.t =
              fun (x729 : inspector_Debugger_StepIntoParameterType) ->
                inspector_Debugger_StepIntoParameterType_to_js x729
            let (get_breakOnAsyncCall : t -> bool) =
              fun (x731 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x731) "breakOnAsyncCall")
            let (set_breakOnAsyncCall : t -> bool -> unit) =
              fun (x732 : t) ->
                fun (x733 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x732) "breakOnAsyncCall"
                    (Ojs.bool_to_js x733)
          end
        module GetStackTraceParameterType =
          struct
            type t = inspector_Debugger_GetStackTraceParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x735 : Ojs.t) ->
                inspector_Debugger_GetStackTraceParameterType_of_js x735
            and t_to_js : t -> Ojs.t =
              fun (x734 : inspector_Debugger_GetStackTraceParameterType) ->
                inspector_Debugger_GetStackTraceParameterType_to_js x734
            let (get_stackTraceId : t -> inspector_Runtime_StackTraceId) =
              fun (x736 : t) ->
                inspector_Runtime_StackTraceId_of_js
                  (Ojs.get_prop_ascii (t_to_js x736) "stackTraceId")
            let (set_stackTraceId :
              t -> inspector_Runtime_StackTraceId -> unit) =
              fun (x737 : t) ->
                fun (x738 : inspector_Runtime_StackTraceId) ->
                  Ojs.set_prop_ascii (t_to_js x737) "stackTraceId"
                    (inspector_Runtime_StackTraceId_to_js x738)
          end
        module SearchInContentParameterType =
          struct
            type t = inspector_Debugger_SearchInContentParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x740 : Ojs.t) ->
                inspector_Debugger_SearchInContentParameterType_of_js x740
            and t_to_js : t -> Ojs.t =
              fun (x739 : inspector_Debugger_SearchInContentParameterType) ->
                inspector_Debugger_SearchInContentParameterType_to_js x739
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x741 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x741) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x742 : t) ->
                fun (x743 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x742) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x743)
            let (get_query : t -> string) =
              fun (x744 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x744) "query")
            let (set_query : t -> string -> unit) =
              fun (x745 : t) ->
                fun (x746 : string) ->
                  Ojs.set_prop_ascii (t_to_js x745) "query"
                    (Ojs.string_to_js x746)
            let (get_caseSensitive : t -> bool) =
              fun (x747 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x747) "caseSensitive")
            let (set_caseSensitive : t -> bool -> unit) =
              fun (x748 : t) ->
                fun (x749 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x748) "caseSensitive"
                    (Ojs.bool_to_js x749)
            let (get_isRegex : t -> bool) =
              fun (x750 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x750) "isRegex")
            let (set_isRegex : t -> bool -> unit) =
              fun (x751 : t) ->
                fun (x752 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x751) "isRegex"
                    (Ojs.bool_to_js x752)
          end
        module SetScriptSourceParameterType =
          struct
            type t = inspector_Debugger_SetScriptSourceParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x754 : Ojs.t) ->
                inspector_Debugger_SetScriptSourceParameterType_of_js x754
            and t_to_js : t -> Ojs.t =
              fun (x753 : inspector_Debugger_SetScriptSourceParameterType) ->
                inspector_Debugger_SetScriptSourceParameterType_to_js x753
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x755 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x755) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x756 : t) ->
                fun (x757 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x756) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x757)
            let (get_scriptSource : t -> string) =
              fun (x758 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x758) "scriptSource")
            let (set_scriptSource : t -> string -> unit) =
              fun (x759 : t) ->
                fun (x760 : string) ->
                  Ojs.set_prop_ascii (t_to_js x759) "scriptSource"
                    (Ojs.string_to_js x760)
            let (get_dryRun : t -> bool) =
              fun (x761 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x761) "dryRun")
            let (set_dryRun : t -> bool -> unit) =
              fun (x762 : t) ->
                fun (x763 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x762) "dryRun"
                    (Ojs.bool_to_js x763)
          end
        module RestartFrameParameterType =
          struct
            type t = inspector_Debugger_RestartFrameParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x765 : Ojs.t) ->
                inspector_Debugger_RestartFrameParameterType_of_js x765
            and t_to_js : t -> Ojs.t =
              fun (x764 : inspector_Debugger_RestartFrameParameterType) ->
                inspector_Debugger_RestartFrameParameterType_to_js x764
            let (get_callFrameId : t -> inspector_Debugger_CallFrameId) =
              fun (x766 : t) ->
                inspector_Debugger_CallFrameId_of_js
                  (Ojs.get_prop_ascii (t_to_js x766) "callFrameId")
            let (set_callFrameId :
              t -> inspector_Debugger_CallFrameId -> unit) =
              fun (x767 : t) ->
                fun (x768 : inspector_Debugger_CallFrameId) ->
                  Ojs.set_prop_ascii (t_to_js x767) "callFrameId"
                    (inspector_Debugger_CallFrameId_to_js x768)
          end
        module GetScriptSourceParameterType =
          struct
            type t = inspector_Debugger_GetScriptSourceParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x770 : Ojs.t) ->
                inspector_Debugger_GetScriptSourceParameterType_of_js x770
            and t_to_js : t -> Ojs.t =
              fun (x769 : inspector_Debugger_GetScriptSourceParameterType) ->
                inspector_Debugger_GetScriptSourceParameterType_to_js x769
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x771 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x771) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x772 : t) ->
                fun (x773 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x772) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x773)
          end
        module SetPauseOnExceptionsParameterType =
          struct
            type t = inspector_Debugger_SetPauseOnExceptionsParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x775 : Ojs.t) ->
                inspector_Debugger_SetPauseOnExceptionsParameterType_of_js
                  x775
            and t_to_js : t -> Ojs.t =
              fun
                (x774 : inspector_Debugger_SetPauseOnExceptionsParameterType)
                ->
                inspector_Debugger_SetPauseOnExceptionsParameterType_to_js
                  x774
            let (get_state : t -> string) =
              fun (x776 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x776) "state")
            let (set_state : t -> string -> unit) =
              fun (x777 : t) ->
                fun (x778 : string) ->
                  Ojs.set_prop_ascii (t_to_js x777) "state"
                    (Ojs.string_to_js x778)
          end
        module EvaluateOnCallFrameParameterType =
          struct
            type t = inspector_Debugger_EvaluateOnCallFrameParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x780 : Ojs.t) ->
                inspector_Debugger_EvaluateOnCallFrameParameterType_of_js
                  x780
            and t_to_js : t -> Ojs.t =
              fun
                (x779 : inspector_Debugger_EvaluateOnCallFrameParameterType)
                ->
                inspector_Debugger_EvaluateOnCallFrameParameterType_to_js
                  x779
            let (get_callFrameId : t -> inspector_Debugger_CallFrameId) =
              fun (x781 : t) ->
                inspector_Debugger_CallFrameId_of_js
                  (Ojs.get_prop_ascii (t_to_js x781) "callFrameId")
            let (set_callFrameId :
              t -> inspector_Debugger_CallFrameId -> unit) =
              fun (x782 : t) ->
                fun (x783 : inspector_Debugger_CallFrameId) ->
                  Ojs.set_prop_ascii (t_to_js x782) "callFrameId"
                    (inspector_Debugger_CallFrameId_to_js x783)
            let (get_expression : t -> string) =
              fun (x784 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x784) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x785 : t) ->
                fun (x786 : string) ->
                  Ojs.set_prop_ascii (t_to_js x785) "expression"
                    (Ojs.string_to_js x786)
            let (get_objectGroup : t -> string) =
              fun (x787 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x787) "objectGroup")
            let (set_objectGroup : t -> string -> unit) =
              fun (x788 : t) ->
                fun (x789 : string) ->
                  Ojs.set_prop_ascii (t_to_js x788) "objectGroup"
                    (Ojs.string_to_js x789)
            let (get_includeCommandLineAPI : t -> bool) =
              fun (x790 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x790) "includeCommandLineAPI")
            let (set_includeCommandLineAPI : t -> bool -> unit) =
              fun (x791 : t) ->
                fun (x792 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x791) "includeCommandLineAPI"
                    (Ojs.bool_to_js x792)
            let (get_silent : t -> bool) =
              fun (x793 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x793) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x794 : t) ->
                fun (x795 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x794) "silent"
                    (Ojs.bool_to_js x795)
            let (get_returnByValue : t -> bool) =
              fun (x796 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x796) "returnByValue")
            let (set_returnByValue : t -> bool -> unit) =
              fun (x797 : t) ->
                fun (x798 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x797) "returnByValue"
                    (Ojs.bool_to_js x798)
            let (get_generatePreview : t -> bool) =
              fun (x799 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x799) "generatePreview")
            let (set_generatePreview : t -> bool -> unit) =
              fun (x800 : t) ->
                fun (x801 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x800) "generatePreview"
                    (Ojs.bool_to_js x801)
            let (get_throwOnSideEffect : t -> bool) =
              fun (x802 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x802) "throwOnSideEffect")
            let (set_throwOnSideEffect : t -> bool -> unit) =
              fun (x803 : t) ->
                fun (x804 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x803) "throwOnSideEffect"
                    (Ojs.bool_to_js x804)
          end
        module SetVariableValueParameterType =
          struct
            type t = inspector_Debugger_SetVariableValueParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x806 : Ojs.t) ->
                inspector_Debugger_SetVariableValueParameterType_of_js x806
            and t_to_js : t -> Ojs.t =
              fun (x805 : inspector_Debugger_SetVariableValueParameterType)
                ->
                inspector_Debugger_SetVariableValueParameterType_to_js x805
            let (get_scopeNumber : t -> float) =
              fun (x807 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x807) "scopeNumber")
            let (set_scopeNumber : t -> float -> unit) =
              fun (x808 : t) ->
                fun (x809 : float) ->
                  Ojs.set_prop_ascii (t_to_js x808) "scopeNumber"
                    (Ojs.float_to_js x809)
            let (get_variableName : t -> string) =
              fun (x810 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x810) "variableName")
            let (set_variableName : t -> string -> unit) =
              fun (x811 : t) ->
                fun (x812 : string) ->
                  Ojs.set_prop_ascii (t_to_js x811) "variableName"
                    (Ojs.string_to_js x812)
            let (get_newValue : t -> inspector_Runtime_CallArgument) =
              fun (x813 : t) ->
                inspector_Runtime_CallArgument_of_js
                  (Ojs.get_prop_ascii (t_to_js x813) "newValue")
            let (set_newValue : t -> inspector_Runtime_CallArgument -> unit)
              =
              fun (x814 : t) ->
                fun (x815 : inspector_Runtime_CallArgument) ->
                  Ojs.set_prop_ascii (t_to_js x814) "newValue"
                    (inspector_Runtime_CallArgument_to_js x815)
            let (get_callFrameId : t -> inspector_Debugger_CallFrameId) =
              fun (x816 : t) ->
                inspector_Debugger_CallFrameId_of_js
                  (Ojs.get_prop_ascii (t_to_js x816) "callFrameId")
            let (set_callFrameId :
              t -> inspector_Debugger_CallFrameId -> unit) =
              fun (x817 : t) ->
                fun (x818 : inspector_Debugger_CallFrameId) ->
                  Ojs.set_prop_ascii (t_to_js x817) "callFrameId"
                    (inspector_Debugger_CallFrameId_to_js x818)
          end
        module SetReturnValueParameterType =
          struct
            type t = inspector_Debugger_SetReturnValueParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x820 : Ojs.t) ->
                inspector_Debugger_SetReturnValueParameterType_of_js x820
            and t_to_js : t -> Ojs.t =
              fun (x819 : inspector_Debugger_SetReturnValueParameterType) ->
                inspector_Debugger_SetReturnValueParameterType_to_js x819
            let (get_newValue : t -> inspector_Runtime_CallArgument) =
              fun (x821 : t) ->
                inspector_Runtime_CallArgument_of_js
                  (Ojs.get_prop_ascii (t_to_js x821) "newValue")
            let (set_newValue : t -> inspector_Runtime_CallArgument -> unit)
              =
              fun (x822 : t) ->
                fun (x823 : inspector_Runtime_CallArgument) ->
                  Ojs.set_prop_ascii (t_to_js x822) "newValue"
                    (inspector_Runtime_CallArgument_to_js x823)
          end
        module SetAsyncCallStackDepthParameterType =
          struct
            type t = inspector_Debugger_SetAsyncCallStackDepthParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x825 : Ojs.t) ->
                inspector_Debugger_SetAsyncCallStackDepthParameterType_of_js
                  x825
            and t_to_js : t -> Ojs.t =
              fun
                (x824 :
                  inspector_Debugger_SetAsyncCallStackDepthParameterType)
                ->
                inspector_Debugger_SetAsyncCallStackDepthParameterType_to_js
                  x824
            let (get_maxDepth : t -> float) =
              fun (x826 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x826) "maxDepth")
            let (set_maxDepth : t -> float -> unit) =
              fun (x827 : t) ->
                fun (x828 : float) ->
                  Ojs.set_prop_ascii (t_to_js x827) "maxDepth"
                    (Ojs.float_to_js x828)
          end
        module SetBlackboxPatternsParameterType =
          struct
            type t = inspector_Debugger_SetBlackboxPatternsParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x830 : Ojs.t) ->
                inspector_Debugger_SetBlackboxPatternsParameterType_of_js
                  x830
            and t_to_js : t -> Ojs.t =
              fun
                (x829 : inspector_Debugger_SetBlackboxPatternsParameterType)
                ->
                inspector_Debugger_SetBlackboxPatternsParameterType_to_js
                  x829
            let (get_patterns : t -> string list) =
              fun (x831 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x831) "patterns")
            let (set_patterns : t -> string list -> unit) =
              fun (x833 : t) ->
                fun (x834 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x833) "patterns"
                    (Ojs.list_to_js Ojs.string_to_js x834)
          end
        module SetBlackboxedRangesParameterType =
          struct
            type t = inspector_Debugger_SetBlackboxedRangesParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x837 : Ojs.t) ->
                inspector_Debugger_SetBlackboxedRangesParameterType_of_js
                  x837
            and t_to_js : t -> Ojs.t =
              fun
                (x836 : inspector_Debugger_SetBlackboxedRangesParameterType)
                ->
                inspector_Debugger_SetBlackboxedRangesParameterType_to_js
                  x836
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x838 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x838) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x839 : t) ->
                fun (x840 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x839) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x840)
            let (get_positions : t -> inspector_Debugger_ScriptPosition list)
              =
              fun (x841 : t) ->
                Ojs.list_of_js inspector_Debugger_ScriptPosition_of_js
                  (Ojs.get_prop_ascii (t_to_js x841) "positions")
            let (set_positions :
              t -> inspector_Debugger_ScriptPosition list -> unit) =
              fun (x843 : t) ->
                fun (x844 : inspector_Debugger_ScriptPosition list) ->
                  Ojs.set_prop_ascii (t_to_js x843) "positions"
                    (Ojs.list_to_js inspector_Debugger_ScriptPosition_to_js
                       x844)
          end
        module EnableReturnType =
          struct
            type t = inspector_Debugger_EnableReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x847 : Ojs.t) ->
                inspector_Debugger_EnableReturnType_of_js x847
            and t_to_js : t -> Ojs.t =
              fun (x846 : inspector_Debugger_EnableReturnType) ->
                inspector_Debugger_EnableReturnType_to_js x846
            let (get_debuggerId : t -> inspector_Runtime_UniqueDebuggerId) =
              fun (x848 : t) ->
                inspector_Runtime_UniqueDebuggerId_of_js
                  (Ojs.get_prop_ascii (t_to_js x848) "debuggerId")
            let (set_debuggerId :
              t -> inspector_Runtime_UniqueDebuggerId -> unit) =
              fun (x849 : t) ->
                fun (x850 : inspector_Runtime_UniqueDebuggerId) ->
                  Ojs.set_prop_ascii (t_to_js x849) "debuggerId"
                    (inspector_Runtime_UniqueDebuggerId_to_js x850)
          end
        module SetBreakpointByUrlReturnType =
          struct
            type t = inspector_Debugger_SetBreakpointByUrlReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x852 : Ojs.t) ->
                inspector_Debugger_SetBreakpointByUrlReturnType_of_js x852
            and t_to_js : t -> Ojs.t =
              fun (x851 : inspector_Debugger_SetBreakpointByUrlReturnType) ->
                inspector_Debugger_SetBreakpointByUrlReturnType_to_js x851
            let (get_breakpointId : t -> inspector_Debugger_BreakpointId) =
              fun (x853 : t) ->
                inspector_Debugger_BreakpointId_of_js
                  (Ojs.get_prop_ascii (t_to_js x853) "breakpointId")
            let (set_breakpointId :
              t -> inspector_Debugger_BreakpointId -> unit) =
              fun (x854 : t) ->
                fun (x855 : inspector_Debugger_BreakpointId) ->
                  Ojs.set_prop_ascii (t_to_js x854) "breakpointId"
                    (inspector_Debugger_BreakpointId_to_js x855)
            let (get_locations : t -> inspector_Debugger_Location list) =
              fun (x856 : t) ->
                Ojs.list_of_js inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x856) "locations")
            let (set_locations :
              t -> inspector_Debugger_Location list -> unit) =
              fun (x858 : t) ->
                fun (x859 : inspector_Debugger_Location list) ->
                  Ojs.set_prop_ascii (t_to_js x858) "locations"
                    (Ojs.list_to_js inspector_Debugger_Location_to_js x859)
          end
        module SetBreakpointReturnType =
          struct
            type t = inspector_Debugger_SetBreakpointReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x862 : Ojs.t) ->
                inspector_Debugger_SetBreakpointReturnType_of_js x862
            and t_to_js : t -> Ojs.t =
              fun (x861 : inspector_Debugger_SetBreakpointReturnType) ->
                inspector_Debugger_SetBreakpointReturnType_to_js x861
            let (get_breakpointId : t -> inspector_Debugger_BreakpointId) =
              fun (x863 : t) ->
                inspector_Debugger_BreakpointId_of_js
                  (Ojs.get_prop_ascii (t_to_js x863) "breakpointId")
            let (set_breakpointId :
              t -> inspector_Debugger_BreakpointId -> unit) =
              fun (x864 : t) ->
                fun (x865 : inspector_Debugger_BreakpointId) ->
                  Ojs.set_prop_ascii (t_to_js x864) "breakpointId"
                    (inspector_Debugger_BreakpointId_to_js x865)
            let (get_actualLocation : t -> inspector_Debugger_Location) =
              fun (x866 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x866) "actualLocation")
            let (set_actualLocation :
              t -> inspector_Debugger_Location -> unit) =
              fun (x867 : t) ->
                fun (x868 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x867) "actualLocation"
                    (inspector_Debugger_Location_to_js x868)
          end
        module GetPossibleBreakpointsReturnType =
          struct
            type t = inspector_Debugger_GetPossibleBreakpointsReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x870 : Ojs.t) ->
                inspector_Debugger_GetPossibleBreakpointsReturnType_of_js
                  x870
            and t_to_js : t -> Ojs.t =
              fun
                (x869 : inspector_Debugger_GetPossibleBreakpointsReturnType)
                ->
                inspector_Debugger_GetPossibleBreakpointsReturnType_to_js
                  x869
            let (get_locations : t -> inspector_Debugger_BreakLocation list)
              =
              fun (x871 : t) ->
                Ojs.list_of_js inspector_Debugger_BreakLocation_of_js
                  (Ojs.get_prop_ascii (t_to_js x871) "locations")
            let (set_locations :
              t -> inspector_Debugger_BreakLocation list -> unit) =
              fun (x873 : t) ->
                fun (x874 : inspector_Debugger_BreakLocation list) ->
                  Ojs.set_prop_ascii (t_to_js x873) "locations"
                    (Ojs.list_to_js inspector_Debugger_BreakLocation_to_js
                       x874)
          end
        module GetStackTraceReturnType =
          struct
            type t = inspector_Debugger_GetStackTraceReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x877 : Ojs.t) ->
                inspector_Debugger_GetStackTraceReturnType_of_js x877
            and t_to_js : t -> Ojs.t =
              fun (x876 : inspector_Debugger_GetStackTraceReturnType) ->
                inspector_Debugger_GetStackTraceReturnType_to_js x876
            let (get_stackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x878 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x878) "stackTrace")
            let (set_stackTrace : t -> inspector_Runtime_StackTrace -> unit)
              =
              fun (x879 : t) ->
                fun (x880 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x879) "stackTrace"
                    (inspector_Runtime_StackTrace_to_js x880)
          end
        module SearchInContentReturnType =
          struct
            type t = inspector_Debugger_SearchInContentReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x882 : Ojs.t) ->
                inspector_Debugger_SearchInContentReturnType_of_js x882
            and t_to_js : t -> Ojs.t =
              fun (x881 : inspector_Debugger_SearchInContentReturnType) ->
                inspector_Debugger_SearchInContentReturnType_to_js x881
            let (get_result : t -> inspector_Debugger_SearchMatch list) =
              fun (x883 : t) ->
                Ojs.list_of_js inspector_Debugger_SearchMatch_of_js
                  (Ojs.get_prop_ascii (t_to_js x883) "result")
            let (set_result :
              t -> inspector_Debugger_SearchMatch list -> unit) =
              fun (x885 : t) ->
                fun (x886 : inspector_Debugger_SearchMatch list) ->
                  Ojs.set_prop_ascii (t_to_js x885) "result"
                    (Ojs.list_to_js inspector_Debugger_SearchMatch_to_js x886)
          end
        module SetScriptSourceReturnType =
          struct
            type t = inspector_Debugger_SetScriptSourceReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x889 : Ojs.t) ->
                inspector_Debugger_SetScriptSourceReturnType_of_js x889
            and t_to_js : t -> Ojs.t =
              fun (x888 : inspector_Debugger_SetScriptSourceReturnType) ->
                inspector_Debugger_SetScriptSourceReturnType_to_js x888
            let (get_callFrames : t -> inspector_Debugger_CallFrame list) =
              fun (x890 : t) ->
                Ojs.list_of_js inspector_Debugger_CallFrame_of_js
                  (Ojs.get_prop_ascii (t_to_js x890) "callFrames")
            let (set_callFrames :
              t -> inspector_Debugger_CallFrame list -> unit) =
              fun (x892 : t) ->
                fun (x893 : inspector_Debugger_CallFrame list) ->
                  Ojs.set_prop_ascii (t_to_js x892) "callFrames"
                    (Ojs.list_to_js inspector_Debugger_CallFrame_to_js x893)
            let (get_stackChanged : t -> bool) =
              fun (x895 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x895) "stackChanged")
            let (set_stackChanged : t -> bool -> unit) =
              fun (x896 : t) ->
                fun (x897 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x896) "stackChanged"
                    (Ojs.bool_to_js x897)
            let (get_asyncStackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x898 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x898) "asyncStackTrace")
            let (set_asyncStackTrace :
              t -> inspector_Runtime_StackTrace -> unit) =
              fun (x899 : t) ->
                fun (x900 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x899) "asyncStackTrace"
                    (inspector_Runtime_StackTrace_to_js x900)
            let (get_asyncStackTraceId : t -> inspector_Runtime_StackTraceId)
              =
              fun (x901 : t) ->
                inspector_Runtime_StackTraceId_of_js
                  (Ojs.get_prop_ascii (t_to_js x901) "asyncStackTraceId")
            let (set_asyncStackTraceId :
              t -> inspector_Runtime_StackTraceId -> unit) =
              fun (x902 : t) ->
                fun (x903 : inspector_Runtime_StackTraceId) ->
                  Ojs.set_prop_ascii (t_to_js x902) "asyncStackTraceId"
                    (inspector_Runtime_StackTraceId_to_js x903)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x904 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x904) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x905 : t) ->
                fun (x906 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x905) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x906)
          end
        module RestartFrameReturnType =
          struct
            type t = inspector_Debugger_RestartFrameReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x908 : Ojs.t) ->
                inspector_Debugger_RestartFrameReturnType_of_js x908
            and t_to_js : t -> Ojs.t =
              fun (x907 : inspector_Debugger_RestartFrameReturnType) ->
                inspector_Debugger_RestartFrameReturnType_to_js x907
            let (get_callFrames : t -> inspector_Debugger_CallFrame list) =
              fun (x909 : t) ->
                Ojs.list_of_js inspector_Debugger_CallFrame_of_js
                  (Ojs.get_prop_ascii (t_to_js x909) "callFrames")
            let (set_callFrames :
              t -> inspector_Debugger_CallFrame list -> unit) =
              fun (x911 : t) ->
                fun (x912 : inspector_Debugger_CallFrame list) ->
                  Ojs.set_prop_ascii (t_to_js x911) "callFrames"
                    (Ojs.list_to_js inspector_Debugger_CallFrame_to_js x912)
            let (get_asyncStackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x914 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x914) "asyncStackTrace")
            let (set_asyncStackTrace :
              t -> inspector_Runtime_StackTrace -> unit) =
              fun (x915 : t) ->
                fun (x916 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x915) "asyncStackTrace"
                    (inspector_Runtime_StackTrace_to_js x916)
            let (get_asyncStackTraceId : t -> inspector_Runtime_StackTraceId)
              =
              fun (x917 : t) ->
                inspector_Runtime_StackTraceId_of_js
                  (Ojs.get_prop_ascii (t_to_js x917) "asyncStackTraceId")
            let (set_asyncStackTraceId :
              t -> inspector_Runtime_StackTraceId -> unit) =
              fun (x918 : t) ->
                fun (x919 : inspector_Runtime_StackTraceId) ->
                  Ojs.set_prop_ascii (t_to_js x918) "asyncStackTraceId"
                    (inspector_Runtime_StackTraceId_to_js x919)
          end
        module GetScriptSourceReturnType =
          struct
            type t = inspector_Debugger_GetScriptSourceReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x921 : Ojs.t) ->
                inspector_Debugger_GetScriptSourceReturnType_of_js x921
            and t_to_js : t -> Ojs.t =
              fun (x920 : inspector_Debugger_GetScriptSourceReturnType) ->
                inspector_Debugger_GetScriptSourceReturnType_to_js x920
            let (get_scriptSource : t -> string) =
              fun (x922 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x922) "scriptSource")
            let (set_scriptSource : t -> string -> unit) =
              fun (x923 : t) ->
                fun (x924 : string) ->
                  Ojs.set_prop_ascii (t_to_js x923) "scriptSource"
                    (Ojs.string_to_js x924)
          end
        module EvaluateOnCallFrameReturnType =
          struct
            type t = inspector_Debugger_EvaluateOnCallFrameReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x926 : Ojs.t) ->
                inspector_Debugger_EvaluateOnCallFrameReturnType_of_js x926
            and t_to_js : t -> Ojs.t =
              fun (x925 : inspector_Debugger_EvaluateOnCallFrameReturnType)
                ->
                inspector_Debugger_EvaluateOnCallFrameReturnType_to_js x925
            let (get_result : t -> inspector_Runtime_RemoteObject) =
              fun (x927 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x927) "result")
            let (set_result : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x928 : t) ->
                fun (x929 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x928) "result"
                    (inspector_Runtime_RemoteObject_to_js x929)
            let (get_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails) =
              fun (x930 : t) ->
                inspector_Runtime_ExceptionDetails_of_js
                  (Ojs.get_prop_ascii (t_to_js x930) "exceptionDetails")
            let (set_exceptionDetails :
              t -> inspector_Runtime_ExceptionDetails -> unit) =
              fun (x931 : t) ->
                fun (x932 : inspector_Runtime_ExceptionDetails) ->
                  Ojs.set_prop_ascii (t_to_js x931) "exceptionDetails"
                    (inspector_Runtime_ExceptionDetails_to_js x932)
          end
        module ScriptParsedEventDataType =
          struct
            type t = inspector_Debugger_ScriptParsedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x934 : Ojs.t) ->
                inspector_Debugger_ScriptParsedEventDataType_of_js x934
            and t_to_js : t -> Ojs.t =
              fun (x933 : inspector_Debugger_ScriptParsedEventDataType) ->
                inspector_Debugger_ScriptParsedEventDataType_to_js x933
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x935 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x935) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x936 : t) ->
                fun (x937 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x936) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x937)
            let (get_url : t -> string) =
              fun (x938 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x938) "url")
            let (set_url : t -> string -> unit) =
              fun (x939 : t) ->
                fun (x940 : string) ->
                  Ojs.set_prop_ascii (t_to_js x939) "url"
                    (Ojs.string_to_js x940)
            let (get_startLine : t -> float) =
              fun (x941 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x941) "startLine")
            let (set_startLine : t -> float -> unit) =
              fun (x942 : t) ->
                fun (x943 : float) ->
                  Ojs.set_prop_ascii (t_to_js x942) "startLine"
                    (Ojs.float_to_js x943)
            let (get_startColumn : t -> float) =
              fun (x944 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x944) "startColumn")
            let (set_startColumn : t -> float -> unit) =
              fun (x945 : t) ->
                fun (x946 : float) ->
                  Ojs.set_prop_ascii (t_to_js x945) "startColumn"
                    (Ojs.float_to_js x946)
            let (get_endLine : t -> float) =
              fun (x947 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x947) "endLine")
            let (set_endLine : t -> float -> unit) =
              fun (x948 : t) ->
                fun (x949 : float) ->
                  Ojs.set_prop_ascii (t_to_js x948) "endLine"
                    (Ojs.float_to_js x949)
            let (get_endColumn : t -> float) =
              fun (x950 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x950) "endColumn")
            let (set_endColumn : t -> float -> unit) =
              fun (x951 : t) ->
                fun (x952 : float) ->
                  Ojs.set_prop_ascii (t_to_js x951) "endColumn"
                    (Ojs.float_to_js x952)
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x953 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x953) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x954 : t) ->
                fun (x955 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x954) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x955)
            let (get_hash : t -> string) =
              fun (x956 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x956) "hash")
            let (set_hash : t -> string -> unit) =
              fun (x957 : t) ->
                fun (x958 : string) ->
                  Ojs.set_prop_ascii (t_to_js x957) "hash"
                    (Ojs.string_to_js x958)
            let (get_executionContextAuxData : t -> anonymous_interface_0) =
              fun (x959 : t) ->
                anonymous_interface_0_of_js
                  (Ojs.get_prop_ascii (t_to_js x959)
                     "executionContextAuxData")
            let (set_executionContextAuxData :
              t -> anonymous_interface_0 -> unit) =
              fun (x960 : t) ->
                fun (x961 : anonymous_interface_0) ->
                  Ojs.set_prop_ascii (t_to_js x960) "executionContextAuxData"
                    (anonymous_interface_0_to_js x961)
            let (get_isLiveEdit : t -> bool) =
              fun (x962 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x962) "isLiveEdit")
            let (set_isLiveEdit : t -> bool -> unit) =
              fun (x963 : t) ->
                fun (x964 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x963) "isLiveEdit"
                    (Ojs.bool_to_js x964)
            let (get_sourceMapURL : t -> string) =
              fun (x965 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x965) "sourceMapURL")
            let (set_sourceMapURL : t -> string -> unit) =
              fun (x966 : t) ->
                fun (x967 : string) ->
                  Ojs.set_prop_ascii (t_to_js x966) "sourceMapURL"
                    (Ojs.string_to_js x967)
            let (get_hasSourceURL : t -> bool) =
              fun (x968 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x968) "hasSourceURL")
            let (set_hasSourceURL : t -> bool -> unit) =
              fun (x969 : t) ->
                fun (x970 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x969) "hasSourceURL"
                    (Ojs.bool_to_js x970)
            let (get_isModule : t -> bool) =
              fun (x971 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x971) "isModule")
            let (set_isModule : t -> bool -> unit) =
              fun (x972 : t) ->
                fun (x973 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x972) "isModule"
                    (Ojs.bool_to_js x973)
            let (get_length : t -> float) =
              fun (x974 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x974) "length")
            let (set_length : t -> float -> unit) =
              fun (x975 : t) ->
                fun (x976 : float) ->
                  Ojs.set_prop_ascii (t_to_js x975) "length"
                    (Ojs.float_to_js x976)
            let (get_stackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x977 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x977) "stackTrace")
            let (set_stackTrace : t -> inspector_Runtime_StackTrace -> unit)
              =
              fun (x978 : t) ->
                fun (x979 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x978) "stackTrace"
                    (inspector_Runtime_StackTrace_to_js x979)
          end
        module ScriptFailedToParseEventDataType =
          struct
            type t = inspector_Debugger_ScriptFailedToParseEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x981 : Ojs.t) ->
                inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                  x981
            and t_to_js : t -> Ojs.t =
              fun
                (x980 : inspector_Debugger_ScriptFailedToParseEventDataType)
                ->
                inspector_Debugger_ScriptFailedToParseEventDataType_to_js
                  x980
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x982 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x982) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x983 : t) ->
                fun (x984 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x983) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x984)
            let (get_url : t -> string) =
              fun (x985 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x985) "url")
            let (set_url : t -> string -> unit) =
              fun (x986 : t) ->
                fun (x987 : string) ->
                  Ojs.set_prop_ascii (t_to_js x986) "url"
                    (Ojs.string_to_js x987)
            let (get_startLine : t -> float) =
              fun (x988 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x988) "startLine")
            let (set_startLine : t -> float -> unit) =
              fun (x989 : t) ->
                fun (x990 : float) ->
                  Ojs.set_prop_ascii (t_to_js x989) "startLine"
                    (Ojs.float_to_js x990)
            let (get_startColumn : t -> float) =
              fun (x991 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x991) "startColumn")
            let (set_startColumn : t -> float -> unit) =
              fun (x992 : t) ->
                fun (x993 : float) ->
                  Ojs.set_prop_ascii (t_to_js x992) "startColumn"
                    (Ojs.float_to_js x993)
            let (get_endLine : t -> float) =
              fun (x994 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x994) "endLine")
            let (set_endLine : t -> float -> unit) =
              fun (x995 : t) ->
                fun (x996 : float) ->
                  Ojs.set_prop_ascii (t_to_js x995) "endLine"
                    (Ojs.float_to_js x996)
            let (get_endColumn : t -> float) =
              fun (x997 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x997) "endColumn")
            let (set_endColumn : t -> float -> unit) =
              fun (x998 : t) ->
                fun (x999 : float) ->
                  Ojs.set_prop_ascii (t_to_js x998) "endColumn"
                    (Ojs.float_to_js x999)
            let (get_executionContextId :
              t -> inspector_Runtime_ExecutionContextId) =
              fun (x1000 : t) ->
                inspector_Runtime_ExecutionContextId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1000) "executionContextId")
            let (set_executionContextId :
              t -> inspector_Runtime_ExecutionContextId -> unit) =
              fun (x1001 : t) ->
                fun (x1002 : inspector_Runtime_ExecutionContextId) ->
                  Ojs.set_prop_ascii (t_to_js x1001) "executionContextId"
                    (inspector_Runtime_ExecutionContextId_to_js x1002)
            let (get_hash : t -> string) =
              fun (x1003 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1003) "hash")
            let (set_hash : t -> string -> unit) =
              fun (x1004 : t) ->
                fun (x1005 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1004) "hash"
                    (Ojs.string_to_js x1005)
            let (get_executionContextAuxData : t -> anonymous_interface_0) =
              fun (x1006 : t) ->
                anonymous_interface_0_of_js
                  (Ojs.get_prop_ascii (t_to_js x1006)
                     "executionContextAuxData")
            let (set_executionContextAuxData :
              t -> anonymous_interface_0 -> unit) =
              fun (x1007 : t) ->
                fun (x1008 : anonymous_interface_0) ->
                  Ojs.set_prop_ascii (t_to_js x1007)
                    "executionContextAuxData"
                    (anonymous_interface_0_to_js x1008)
            let (get_sourceMapURL : t -> string) =
              fun (x1009 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1009) "sourceMapURL")
            let (set_sourceMapURL : t -> string -> unit) =
              fun (x1010 : t) ->
                fun (x1011 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1010) "sourceMapURL"
                    (Ojs.string_to_js x1011)
            let (get_hasSourceURL : t -> bool) =
              fun (x1012 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1012) "hasSourceURL")
            let (set_hasSourceURL : t -> bool -> unit) =
              fun (x1013 : t) ->
                fun (x1014 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1013) "hasSourceURL"
                    (Ojs.bool_to_js x1014)
            let (get_isModule : t -> bool) =
              fun (x1015 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1015) "isModule")
            let (set_isModule : t -> bool -> unit) =
              fun (x1016 : t) ->
                fun (x1017 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1016) "isModule"
                    (Ojs.bool_to_js x1017)
            let (get_length : t -> float) =
              fun (x1018 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1018) "length")
            let (set_length : t -> float -> unit) =
              fun (x1019 : t) ->
                fun (x1020 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1019) "length"
                    (Ojs.float_to_js x1020)
            let (get_stackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x1021 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x1021) "stackTrace")
            let (set_stackTrace : t -> inspector_Runtime_StackTrace -> unit)
              =
              fun (x1022 : t) ->
                fun (x1023 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x1022) "stackTrace"
                    (inspector_Runtime_StackTrace_to_js x1023)
          end
        module BreakpointResolvedEventDataType =
          struct
            type t = inspector_Debugger_BreakpointResolvedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1025 : Ojs.t) ->
                inspector_Debugger_BreakpointResolvedEventDataType_of_js
                  x1025
            and t_to_js : t -> Ojs.t =
              fun
                (x1024 : inspector_Debugger_BreakpointResolvedEventDataType)
                ->
                inspector_Debugger_BreakpointResolvedEventDataType_to_js
                  x1024
            let (get_breakpointId : t -> inspector_Debugger_BreakpointId) =
              fun (x1026 : t) ->
                inspector_Debugger_BreakpointId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1026) "breakpointId")
            let (set_breakpointId :
              t -> inspector_Debugger_BreakpointId -> unit) =
              fun (x1027 : t) ->
                fun (x1028 : inspector_Debugger_BreakpointId) ->
                  Ojs.set_prop_ascii (t_to_js x1027) "breakpointId"
                    (inspector_Debugger_BreakpointId_to_js x1028)
            let (get_location : t -> inspector_Debugger_Location) =
              fun (x1029 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x1029) "location")
            let (set_location : t -> inspector_Debugger_Location -> unit) =
              fun (x1030 : t) ->
                fun (x1031 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x1030) "location"
                    (inspector_Debugger_Location_to_js x1031)
          end
        module PausedEventDataType =
          struct
            type t = inspector_Debugger_PausedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1033 : Ojs.t) ->
                inspector_Debugger_PausedEventDataType_of_js x1033
            and t_to_js : t -> Ojs.t =
              fun (x1032 : inspector_Debugger_PausedEventDataType) ->
                inspector_Debugger_PausedEventDataType_to_js x1032
            let (get_callFrames : t -> inspector_Debugger_CallFrame list) =
              fun (x1034 : t) ->
                Ojs.list_of_js inspector_Debugger_CallFrame_of_js
                  (Ojs.get_prop_ascii (t_to_js x1034) "callFrames")
            let (set_callFrames :
              t -> inspector_Debugger_CallFrame list -> unit) =
              fun (x1036 : t) ->
                fun (x1037 : inspector_Debugger_CallFrame list) ->
                  Ojs.set_prop_ascii (t_to_js x1036) "callFrames"
                    (Ojs.list_to_js inspector_Debugger_CallFrame_to_js x1037)
            let (get_reason : t -> string) =
              fun (x1039 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1039) "reason")
            let (set_reason : t -> string -> unit) =
              fun (x1040 : t) ->
                fun (x1041 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1040) "reason"
                    (Ojs.string_to_js x1041)
            let (get_data : t -> anonymous_interface_0) =
              fun (x1042 : t) ->
                anonymous_interface_0_of_js
                  (Ojs.get_prop_ascii (t_to_js x1042) "data")
            let (set_data : t -> anonymous_interface_0 -> unit) =
              fun (x1043 : t) ->
                fun (x1044 : anonymous_interface_0) ->
                  Ojs.set_prop_ascii (t_to_js x1043) "data"
                    (anonymous_interface_0_to_js x1044)
            let (get_hitBreakpoints : t -> string list) =
              fun (x1045 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1045) "hitBreakpoints")
            let (set_hitBreakpoints : t -> string list -> unit) =
              fun (x1047 : t) ->
                fun (x1048 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1047) "hitBreakpoints"
                    (Ojs.list_to_js Ojs.string_to_js x1048)
            let (get_asyncStackTrace : t -> inspector_Runtime_StackTrace) =
              fun (x1050 : t) ->
                inspector_Runtime_StackTrace_of_js
                  (Ojs.get_prop_ascii (t_to_js x1050) "asyncStackTrace")
            let (set_asyncStackTrace :
              t -> inspector_Runtime_StackTrace -> unit) =
              fun (x1051 : t) ->
                fun (x1052 : inspector_Runtime_StackTrace) ->
                  Ojs.set_prop_ascii (t_to_js x1051) "asyncStackTrace"
                    (inspector_Runtime_StackTrace_to_js x1052)
            let (get_asyncStackTraceId : t -> inspector_Runtime_StackTraceId)
              =
              fun (x1053 : t) ->
                inspector_Runtime_StackTraceId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1053) "asyncStackTraceId")
            let (set_asyncStackTraceId :
              t -> inspector_Runtime_StackTraceId -> unit) =
              fun (x1054 : t) ->
                fun (x1055 : inspector_Runtime_StackTraceId) ->
                  Ojs.set_prop_ascii (t_to_js x1054) "asyncStackTraceId"
                    (inspector_Runtime_StackTraceId_to_js x1055)
            let (get_asyncCallStackTraceId :
              t -> inspector_Runtime_StackTraceId) =
              fun (x1056 : t) ->
                inspector_Runtime_StackTraceId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1056) "asyncCallStackTraceId")
            let (set_asyncCallStackTraceId :
              t -> inspector_Runtime_StackTraceId -> unit) =
              fun (x1057 : t) ->
                fun (x1058 : inspector_Runtime_StackTraceId) ->
                  Ojs.set_prop_ascii (t_to_js x1057) "asyncCallStackTraceId"
                    (inspector_Runtime_StackTraceId_to_js x1058)
          end
      end
    module Console =
      struct
        module ConsoleMessage =
          struct
            type t = inspector_Console_ConsoleMessage
            let rec t_of_js : Ojs.t -> t =
              fun (x1060 : Ojs.t) ->
                inspector_Console_ConsoleMessage_of_js x1060
            and t_to_js : t -> Ojs.t =
              fun (x1059 : inspector_Console_ConsoleMessage) ->
                inspector_Console_ConsoleMessage_to_js x1059
            let (get_source : t -> string) =
              fun (x1061 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1061) "source")
            let (set_source : t -> string -> unit) =
              fun (x1062 : t) ->
                fun (x1063 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1062) "source"
                    (Ojs.string_to_js x1063)
            let (get_level : t -> string) =
              fun (x1064 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1064) "level")
            let (set_level : t -> string -> unit) =
              fun (x1065 : t) ->
                fun (x1066 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1065) "level"
                    (Ojs.string_to_js x1066)
            let (get_text : t -> string) =
              fun (x1067 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1067) "text")
            let (set_text : t -> string -> unit) =
              fun (x1068 : t) ->
                fun (x1069 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1068) "text"
                    (Ojs.string_to_js x1069)
            let (get_url : t -> string) =
              fun (x1070 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1070) "url")
            let (set_url : t -> string -> unit) =
              fun (x1071 : t) ->
                fun (x1072 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1071) "url"
                    (Ojs.string_to_js x1072)
            let (get_line : t -> float) =
              fun (x1073 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1073) "line")
            let (set_line : t -> float -> unit) =
              fun (x1074 : t) ->
                fun (x1075 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1074) "line"
                    (Ojs.float_to_js x1075)
            let (get_column : t -> float) =
              fun (x1076 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1076) "column")
            let (set_column : t -> float -> unit) =
              fun (x1077 : t) ->
                fun (x1078 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1077) "column"
                    (Ojs.float_to_js x1078)
          end
        module MessageAddedEventDataType =
          struct
            type t = inspector_Console_MessageAddedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1080 : Ojs.t) ->
                inspector_Console_MessageAddedEventDataType_of_js x1080
            and t_to_js : t -> Ojs.t =
              fun (x1079 : inspector_Console_MessageAddedEventDataType) ->
                inspector_Console_MessageAddedEventDataType_to_js x1079
            let (get_message : t -> inspector_Console_ConsoleMessage) =
              fun (x1081 : t) ->
                inspector_Console_ConsoleMessage_of_js
                  (Ojs.get_prop_ascii (t_to_js x1081) "message")
            let (set_message : t -> inspector_Console_ConsoleMessage -> unit)
              =
              fun (x1082 : t) ->
                fun (x1083 : inspector_Console_ConsoleMessage) ->
                  Ojs.set_prop_ascii (t_to_js x1082) "message"
                    (inspector_Console_ConsoleMessage_to_js x1083)
          end
      end
    module Profiler =
      struct
        module ProfileNode =
          struct
            type t = inspector_Profiler_ProfileNode
            let rec t_of_js : Ojs.t -> t =
              fun (x1085 : Ojs.t) ->
                inspector_Profiler_ProfileNode_of_js x1085
            and t_to_js : t -> Ojs.t =
              fun (x1084 : inspector_Profiler_ProfileNode) ->
                inspector_Profiler_ProfileNode_to_js x1084
            let (get_id : t -> float) =
              fun (x1086 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1086) "id")
            let (set_id : t -> float -> unit) =
              fun (x1087 : t) ->
                fun (x1088 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1087) "id"
                    (Ojs.float_to_js x1088)
            let (get_callFrame : t -> inspector_Runtime_CallFrame) =
              fun (x1089 : t) ->
                inspector_Runtime_CallFrame_of_js
                  (Ojs.get_prop_ascii (t_to_js x1089) "callFrame")
            let (set_callFrame : t -> inspector_Runtime_CallFrame -> unit) =
              fun (x1090 : t) ->
                fun (x1091 : inspector_Runtime_CallFrame) ->
                  Ojs.set_prop_ascii (t_to_js x1090) "callFrame"
                    (inspector_Runtime_CallFrame_to_js x1091)
            let (get_hitCount : t -> float) =
              fun (x1092 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1092) "hitCount")
            let (set_hitCount : t -> float -> unit) =
              fun (x1093 : t) ->
                fun (x1094 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1093) "hitCount"
                    (Ojs.float_to_js x1094)
            let (get_children : t -> float list) =
              fun (x1095 : t) ->
                Ojs.list_of_js Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1095) "children")
            let (set_children : t -> float list -> unit) =
              fun (x1097 : t) ->
                fun (x1098 : float list) ->
                  Ojs.set_prop_ascii (t_to_js x1097) "children"
                    (Ojs.list_to_js Ojs.float_to_js x1098)
            let (get_deoptReason : t -> string) =
              fun (x1100 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1100) "deoptReason")
            let (set_deoptReason : t -> string -> unit) =
              fun (x1101 : t) ->
                fun (x1102 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1101) "deoptReason"
                    (Ojs.string_to_js x1102)
            let (get_positionTicks :
              t -> inspector_Profiler_PositionTickInfo list) =
              fun (x1103 : t) ->
                Ojs.list_of_js inspector_Profiler_PositionTickInfo_of_js
                  (Ojs.get_prop_ascii (t_to_js x1103) "positionTicks")
            let (set_positionTicks :
              t -> inspector_Profiler_PositionTickInfo list -> unit) =
              fun (x1105 : t) ->
                fun (x1106 : inspector_Profiler_PositionTickInfo list) ->
                  Ojs.set_prop_ascii (t_to_js x1105) "positionTicks"
                    (Ojs.list_to_js inspector_Profiler_PositionTickInfo_to_js
                       x1106)
          end
        module Profile =
          struct
            type t = inspector_Profiler_Profile
            let rec t_of_js : Ojs.t -> t =
              fun (x1109 : Ojs.t) -> inspector_Profiler_Profile_of_js x1109
            and t_to_js : t -> Ojs.t =
              fun (x1108 : inspector_Profiler_Profile) ->
                inspector_Profiler_Profile_to_js x1108
            let (get_nodes : t -> inspector_Profiler_ProfileNode list) =
              fun (x1110 : t) ->
                Ojs.list_of_js inspector_Profiler_ProfileNode_of_js
                  (Ojs.get_prop_ascii (t_to_js x1110) "nodes")
            let (set_nodes :
              t -> inspector_Profiler_ProfileNode list -> unit) =
              fun (x1112 : t) ->
                fun (x1113 : inspector_Profiler_ProfileNode list) ->
                  Ojs.set_prop_ascii (t_to_js x1112) "nodes"
                    (Ojs.list_to_js inspector_Profiler_ProfileNode_to_js
                       x1113)
            let (get_startTime : t -> float) =
              fun (x1115 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1115) "startTime")
            let (set_startTime : t -> float -> unit) =
              fun (x1116 : t) ->
                fun (x1117 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1116) "startTime"
                    (Ojs.float_to_js x1117)
            let (get_endTime : t -> float) =
              fun (x1118 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1118) "endTime")
            let (set_endTime : t -> float -> unit) =
              fun (x1119 : t) ->
                fun (x1120 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1119) "endTime"
                    (Ojs.float_to_js x1120)
            let (get_samples : t -> float list) =
              fun (x1121 : t) ->
                Ojs.list_of_js Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1121) "samples")
            let (set_samples : t -> float list -> unit) =
              fun (x1123 : t) ->
                fun (x1124 : float list) ->
                  Ojs.set_prop_ascii (t_to_js x1123) "samples"
                    (Ojs.list_to_js Ojs.float_to_js x1124)
            let (get_timeDeltas : t -> float list) =
              fun (x1126 : t) ->
                Ojs.list_of_js Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1126) "timeDeltas")
            let (set_timeDeltas : t -> float list -> unit) =
              fun (x1128 : t) ->
                fun (x1129 : float list) ->
                  Ojs.set_prop_ascii (t_to_js x1128) "timeDeltas"
                    (Ojs.list_to_js Ojs.float_to_js x1129)
          end
        module PositionTickInfo =
          struct
            type t = inspector_Profiler_PositionTickInfo
            let rec t_of_js : Ojs.t -> t =
              fun (x1132 : Ojs.t) ->
                inspector_Profiler_PositionTickInfo_of_js x1132
            and t_to_js : t -> Ojs.t =
              fun (x1131 : inspector_Profiler_PositionTickInfo) ->
                inspector_Profiler_PositionTickInfo_to_js x1131
            let (get_line : t -> float) =
              fun (x1133 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1133) "line")
            let (set_line : t -> float -> unit) =
              fun (x1134 : t) ->
                fun (x1135 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1134) "line"
                    (Ojs.float_to_js x1135)
            let (get_ticks : t -> float) =
              fun (x1136 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1136) "ticks")
            let (set_ticks : t -> float -> unit) =
              fun (x1137 : t) ->
                fun (x1138 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1137) "ticks"
                    (Ojs.float_to_js x1138)
          end
        module CoverageRange =
          struct
            type t = inspector_Profiler_CoverageRange
            let rec t_of_js : Ojs.t -> t =
              fun (x1140 : Ojs.t) ->
                inspector_Profiler_CoverageRange_of_js x1140
            and t_to_js : t -> Ojs.t =
              fun (x1139 : inspector_Profiler_CoverageRange) ->
                inspector_Profiler_CoverageRange_to_js x1139
            let (get_startOffset : t -> float) =
              fun (x1141 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1141) "startOffset")
            let (set_startOffset : t -> float -> unit) =
              fun (x1142 : t) ->
                fun (x1143 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1142) "startOffset"
                    (Ojs.float_to_js x1143)
            let (get_endOffset : t -> float) =
              fun (x1144 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1144) "endOffset")
            let (set_endOffset : t -> float -> unit) =
              fun (x1145 : t) ->
                fun (x1146 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1145) "endOffset"
                    (Ojs.float_to_js x1146)
            let (get_count : t -> float) =
              fun (x1147 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1147) "count")
            let (set_count : t -> float -> unit) =
              fun (x1148 : t) ->
                fun (x1149 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1148) "count"
                    (Ojs.float_to_js x1149)
          end
        module FunctionCoverage =
          struct
            type t = inspector_Profiler_FunctionCoverage
            let rec t_of_js : Ojs.t -> t =
              fun (x1151 : Ojs.t) ->
                inspector_Profiler_FunctionCoverage_of_js x1151
            and t_to_js : t -> Ojs.t =
              fun (x1150 : inspector_Profiler_FunctionCoverage) ->
                inspector_Profiler_FunctionCoverage_to_js x1150
            let (get_functionName : t -> string) =
              fun (x1152 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1152) "functionName")
            let (set_functionName : t -> string -> unit) =
              fun (x1153 : t) ->
                fun (x1154 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1153) "functionName"
                    (Ojs.string_to_js x1154)
            let (get_ranges : t -> inspector_Profiler_CoverageRange list) =
              fun (x1155 : t) ->
                Ojs.list_of_js inspector_Profiler_CoverageRange_of_js
                  (Ojs.get_prop_ascii (t_to_js x1155) "ranges")
            let (set_ranges :
              t -> inspector_Profiler_CoverageRange list -> unit) =
              fun (x1157 : t) ->
                fun (x1158 : inspector_Profiler_CoverageRange list) ->
                  Ojs.set_prop_ascii (t_to_js x1157) "ranges"
                    (Ojs.list_to_js inspector_Profiler_CoverageRange_to_js
                       x1158)
            let (get_isBlockCoverage : t -> bool) =
              fun (x1160 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1160) "isBlockCoverage")
            let (set_isBlockCoverage : t -> bool -> unit) =
              fun (x1161 : t) ->
                fun (x1162 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1161) "isBlockCoverage"
                    (Ojs.bool_to_js x1162)
          end
        module ScriptCoverage =
          struct
            type t = inspector_Profiler_ScriptCoverage
            let rec t_of_js : Ojs.t -> t =
              fun (x1164 : Ojs.t) ->
                inspector_Profiler_ScriptCoverage_of_js x1164
            and t_to_js : t -> Ojs.t =
              fun (x1163 : inspector_Profiler_ScriptCoverage) ->
                inspector_Profiler_ScriptCoverage_to_js x1163
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x1165 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1165) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x1166 : t) ->
                fun (x1167 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x1166) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x1167)
            let (get_url : t -> string) =
              fun (x1168 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1168) "url")
            let (set_url : t -> string -> unit) =
              fun (x1169 : t) ->
                fun (x1170 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1169) "url"
                    (Ojs.string_to_js x1170)
            let (get_functions :
              t -> inspector_Profiler_FunctionCoverage list) =
              fun (x1171 : t) ->
                Ojs.list_of_js inspector_Profiler_FunctionCoverage_of_js
                  (Ojs.get_prop_ascii (t_to_js x1171) "functions")
            let (set_functions :
              t -> inspector_Profiler_FunctionCoverage list -> unit) =
              fun (x1173 : t) ->
                fun (x1174 : inspector_Profiler_FunctionCoverage list) ->
                  Ojs.set_prop_ascii (t_to_js x1173) "functions"
                    (Ojs.list_to_js inspector_Profiler_FunctionCoverage_to_js
                       x1174)
          end
        module TypeObject =
          struct
            type t = inspector_Profiler_TypeObject
            let rec t_of_js : Ojs.t -> t =
              fun (x1177 : Ojs.t) ->
                inspector_Profiler_TypeObject_of_js x1177
            and t_to_js : t -> Ojs.t =
              fun (x1176 : inspector_Profiler_TypeObject) ->
                inspector_Profiler_TypeObject_to_js x1176
            let (get_name : t -> string) =
              fun (x1178 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1178) "name")
            let (set_name : t -> string -> unit) =
              fun (x1179 : t) ->
                fun (x1180 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1179) "name"
                    (Ojs.string_to_js x1180)
          end
        module TypeProfileEntry =
          struct
            type t = inspector_Profiler_TypeProfileEntry
            let rec t_of_js : Ojs.t -> t =
              fun (x1182 : Ojs.t) ->
                inspector_Profiler_TypeProfileEntry_of_js x1182
            and t_to_js : t -> Ojs.t =
              fun (x1181 : inspector_Profiler_TypeProfileEntry) ->
                inspector_Profiler_TypeProfileEntry_to_js x1181
            let (get_offset : t -> float) =
              fun (x1183 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1183) "offset")
            let (set_offset : t -> float -> unit) =
              fun (x1184 : t) ->
                fun (x1185 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1184) "offset"
                    (Ojs.float_to_js x1185)
            let (get_types : t -> inspector_Profiler_TypeObject list) =
              fun (x1186 : t) ->
                Ojs.list_of_js inspector_Profiler_TypeObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x1186) "types")
            let (set_types : t -> inspector_Profiler_TypeObject list -> unit)
              =
              fun (x1188 : t) ->
                fun (x1189 : inspector_Profiler_TypeObject list) ->
                  Ojs.set_prop_ascii (t_to_js x1188) "types"
                    (Ojs.list_to_js inspector_Profiler_TypeObject_to_js x1189)
          end
        module ScriptTypeProfile =
          struct
            type t = inspector_Profiler_ScriptTypeProfile
            let rec t_of_js : Ojs.t -> t =
              fun (x1192 : Ojs.t) ->
                inspector_Profiler_ScriptTypeProfile_of_js x1192
            and t_to_js : t -> Ojs.t =
              fun (x1191 : inspector_Profiler_ScriptTypeProfile) ->
                inspector_Profiler_ScriptTypeProfile_to_js x1191
            let (get_scriptId : t -> inspector_Runtime_ScriptId) =
              fun (x1193 : t) ->
                inspector_Runtime_ScriptId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1193) "scriptId")
            let (set_scriptId : t -> inspector_Runtime_ScriptId -> unit) =
              fun (x1194 : t) ->
                fun (x1195 : inspector_Runtime_ScriptId) ->
                  Ojs.set_prop_ascii (t_to_js x1194) "scriptId"
                    (inspector_Runtime_ScriptId_to_js x1195)
            let (get_url : t -> string) =
              fun (x1196 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1196) "url")
            let (set_url : t -> string -> unit) =
              fun (x1197 : t) ->
                fun (x1198 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1197) "url"
                    (Ojs.string_to_js x1198)
            let (get_entries : t -> inspector_Profiler_TypeProfileEntry list)
              =
              fun (x1199 : t) ->
                Ojs.list_of_js inspector_Profiler_TypeProfileEntry_of_js
                  (Ojs.get_prop_ascii (t_to_js x1199) "entries")
            let (set_entries :
              t -> inspector_Profiler_TypeProfileEntry list -> unit) =
              fun (x1201 : t) ->
                fun (x1202 : inspector_Profiler_TypeProfileEntry list) ->
                  Ojs.set_prop_ascii (t_to_js x1201) "entries"
                    (Ojs.list_to_js inspector_Profiler_TypeProfileEntry_to_js
                       x1202)
          end
        module SetSamplingIntervalParameterType =
          struct
            type t = inspector_Profiler_SetSamplingIntervalParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1205 : Ojs.t) ->
                inspector_Profiler_SetSamplingIntervalParameterType_of_js
                  x1205
            and t_to_js : t -> Ojs.t =
              fun
                (x1204 : inspector_Profiler_SetSamplingIntervalParameterType)
                ->
                inspector_Profiler_SetSamplingIntervalParameterType_to_js
                  x1204
            let (get_interval : t -> float) =
              fun (x1206 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1206) "interval")
            let (set_interval : t -> float -> unit) =
              fun (x1207 : t) ->
                fun (x1208 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1207) "interval"
                    (Ojs.float_to_js x1208)
          end
        module StartPreciseCoverageParameterType =
          struct
            type t = inspector_Profiler_StartPreciseCoverageParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1210 : Ojs.t) ->
                inspector_Profiler_StartPreciseCoverageParameterType_of_js
                  x1210
            and t_to_js : t -> Ojs.t =
              fun
                (x1209 :
                  inspector_Profiler_StartPreciseCoverageParameterType)
                ->
                inspector_Profiler_StartPreciseCoverageParameterType_to_js
                  x1209
            let (get_callCount : t -> bool) =
              fun (x1211 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1211) "callCount")
            let (set_callCount : t -> bool -> unit) =
              fun (x1212 : t) ->
                fun (x1213 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1212) "callCount"
                    (Ojs.bool_to_js x1213)
            let (get_detailed : t -> bool) =
              fun (x1214 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1214) "detailed")
            let (set_detailed : t -> bool -> unit) =
              fun (x1215 : t) ->
                fun (x1216 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1215) "detailed"
                    (Ojs.bool_to_js x1216)
          end
        module StopReturnType =
          struct
            type t = inspector_Profiler_StopReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1218 : Ojs.t) ->
                inspector_Profiler_StopReturnType_of_js x1218
            and t_to_js : t -> Ojs.t =
              fun (x1217 : inspector_Profiler_StopReturnType) ->
                inspector_Profiler_StopReturnType_to_js x1217
            let (get_profile : t -> inspector_Profiler_Profile) =
              fun (x1219 : t) ->
                inspector_Profiler_Profile_of_js
                  (Ojs.get_prop_ascii (t_to_js x1219) "profile")
            let (set_profile : t -> inspector_Profiler_Profile -> unit) =
              fun (x1220 : t) ->
                fun (x1221 : inspector_Profiler_Profile) ->
                  Ojs.set_prop_ascii (t_to_js x1220) "profile"
                    (inspector_Profiler_Profile_to_js x1221)
          end
        module TakePreciseCoverageReturnType =
          struct
            type t = inspector_Profiler_TakePreciseCoverageReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1223 : Ojs.t) ->
                inspector_Profiler_TakePreciseCoverageReturnType_of_js x1223
            and t_to_js : t -> Ojs.t =
              fun (x1222 : inspector_Profiler_TakePreciseCoverageReturnType)
                ->
                inspector_Profiler_TakePreciseCoverageReturnType_to_js x1222
            let (get_result : t -> inspector_Profiler_ScriptCoverage list) =
              fun (x1224 : t) ->
                Ojs.list_of_js inspector_Profiler_ScriptCoverage_of_js
                  (Ojs.get_prop_ascii (t_to_js x1224) "result")
            let (set_result :
              t -> inspector_Profiler_ScriptCoverage list -> unit) =
              fun (x1226 : t) ->
                fun (x1227 : inspector_Profiler_ScriptCoverage list) ->
                  Ojs.set_prop_ascii (t_to_js x1226) "result"
                    (Ojs.list_to_js inspector_Profiler_ScriptCoverage_to_js
                       x1227)
          end
        module GetBestEffortCoverageReturnType =
          struct
            type t = inspector_Profiler_GetBestEffortCoverageReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1230 : Ojs.t) ->
                inspector_Profiler_GetBestEffortCoverageReturnType_of_js
                  x1230
            and t_to_js : t -> Ojs.t =
              fun
                (x1229 : inspector_Profiler_GetBestEffortCoverageReturnType)
                ->
                inspector_Profiler_GetBestEffortCoverageReturnType_to_js
                  x1229
            let (get_result : t -> inspector_Profiler_ScriptCoverage list) =
              fun (x1231 : t) ->
                Ojs.list_of_js inspector_Profiler_ScriptCoverage_of_js
                  (Ojs.get_prop_ascii (t_to_js x1231) "result")
            let (set_result :
              t -> inspector_Profiler_ScriptCoverage list -> unit) =
              fun (x1233 : t) ->
                fun (x1234 : inspector_Profiler_ScriptCoverage list) ->
                  Ojs.set_prop_ascii (t_to_js x1233) "result"
                    (Ojs.list_to_js inspector_Profiler_ScriptCoverage_to_js
                       x1234)
          end
        module TakeTypeProfileReturnType =
          struct
            type t = inspector_Profiler_TakeTypeProfileReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1237 : Ojs.t) ->
                inspector_Profiler_TakeTypeProfileReturnType_of_js x1237
            and t_to_js : t -> Ojs.t =
              fun (x1236 : inspector_Profiler_TakeTypeProfileReturnType) ->
                inspector_Profiler_TakeTypeProfileReturnType_to_js x1236
            let (get_result : t -> inspector_Profiler_ScriptTypeProfile list)
              =
              fun (x1238 : t) ->
                Ojs.list_of_js inspector_Profiler_ScriptTypeProfile_of_js
                  (Ojs.get_prop_ascii (t_to_js x1238) "result")
            let (set_result :
              t -> inspector_Profiler_ScriptTypeProfile list -> unit) =
              fun (x1240 : t) ->
                fun (x1241 : inspector_Profiler_ScriptTypeProfile list) ->
                  Ojs.set_prop_ascii (t_to_js x1240) "result"
                    (Ojs.list_to_js
                       inspector_Profiler_ScriptTypeProfile_to_js x1241)
          end
        module ConsoleProfileStartedEventDataType =
          struct
            type t = inspector_Profiler_ConsoleProfileStartedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1244 : Ojs.t) ->
                inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                  x1244
            and t_to_js : t -> Ojs.t =
              fun
                (x1243 :
                  inspector_Profiler_ConsoleProfileStartedEventDataType)
                ->
                inspector_Profiler_ConsoleProfileStartedEventDataType_to_js
                  x1243
            let (get_id : t -> string) =
              fun (x1245 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1245) "id")
            let (set_id : t -> string -> unit) =
              fun (x1246 : t) ->
                fun (x1247 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1246) "id"
                    (Ojs.string_to_js x1247)
            let (get_location : t -> inspector_Debugger_Location) =
              fun (x1248 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x1248) "location")
            let (set_location : t -> inspector_Debugger_Location -> unit) =
              fun (x1249 : t) ->
                fun (x1250 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x1249) "location"
                    (inspector_Debugger_Location_to_js x1250)
            let (get_title : t -> string) =
              fun (x1251 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1251) "title")
            let (set_title : t -> string -> unit) =
              fun (x1252 : t) ->
                fun (x1253 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1252) "title"
                    (Ojs.string_to_js x1253)
          end
        module ConsoleProfileFinishedEventDataType =
          struct
            type t = inspector_Profiler_ConsoleProfileFinishedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1255 : Ojs.t) ->
                inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                  x1255
            and t_to_js : t -> Ojs.t =
              fun
                (x1254 :
                  inspector_Profiler_ConsoleProfileFinishedEventDataType)
                ->
                inspector_Profiler_ConsoleProfileFinishedEventDataType_to_js
                  x1254
            let (get_id : t -> string) =
              fun (x1256 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1256) "id")
            let (set_id : t -> string -> unit) =
              fun (x1257 : t) ->
                fun (x1258 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1257) "id"
                    (Ojs.string_to_js x1258)
            let (get_location : t -> inspector_Debugger_Location) =
              fun (x1259 : t) ->
                inspector_Debugger_Location_of_js
                  (Ojs.get_prop_ascii (t_to_js x1259) "location")
            let (set_location : t -> inspector_Debugger_Location -> unit) =
              fun (x1260 : t) ->
                fun (x1261 : inspector_Debugger_Location) ->
                  Ojs.set_prop_ascii (t_to_js x1260) "location"
                    (inspector_Debugger_Location_to_js x1261)
            let (get_profile : t -> inspector_Profiler_Profile) =
              fun (x1262 : t) ->
                inspector_Profiler_Profile_of_js
                  (Ojs.get_prop_ascii (t_to_js x1262) "profile")
            let (set_profile : t -> inspector_Profiler_Profile -> unit) =
              fun (x1263 : t) ->
                fun (x1264 : inspector_Profiler_Profile) ->
                  Ojs.set_prop_ascii (t_to_js x1263) "profile"
                    (inspector_Profiler_Profile_to_js x1264)
            let (get_title : t -> string) =
              fun (x1265 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1265) "title")
            let (set_title : t -> string -> unit) =
              fun (x1266 : t) ->
                fun (x1267 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1266) "title"
                    (Ojs.string_to_js x1267)
          end
      end
    module HeapProfiler =
      struct
        module HeapSnapshotObjectId =
          struct
            type t = inspector_HeapProfiler_HeapSnapshotObjectId
            let rec t_of_js : Ojs.t -> t =
              fun (x1269 : Ojs.t) ->
                inspector_HeapProfiler_HeapSnapshotObjectId_of_js x1269
            and t_to_js : t -> Ojs.t =
              fun (x1268 : inspector_HeapProfiler_HeapSnapshotObjectId) ->
                inspector_HeapProfiler_HeapSnapshotObjectId_to_js x1268
          end
        module SamplingHeapProfileNode =
          struct
            type t = inspector_HeapProfiler_SamplingHeapProfileNode
            let rec t_of_js : Ojs.t -> t =
              fun (x1271 : Ojs.t) ->
                inspector_HeapProfiler_SamplingHeapProfileNode_of_js x1271
            and t_to_js : t -> Ojs.t =
              fun (x1270 : inspector_HeapProfiler_SamplingHeapProfileNode) ->
                inspector_HeapProfiler_SamplingHeapProfileNode_to_js x1270
            let (get_callFrame : t -> inspector_Runtime_CallFrame) =
              fun (x1272 : t) ->
                inspector_Runtime_CallFrame_of_js
                  (Ojs.get_prop_ascii (t_to_js x1272) "callFrame")
            let (set_callFrame : t -> inspector_Runtime_CallFrame -> unit) =
              fun (x1273 : t) ->
                fun (x1274 : inspector_Runtime_CallFrame) ->
                  Ojs.set_prop_ascii (t_to_js x1273) "callFrame"
                    (inspector_Runtime_CallFrame_to_js x1274)
            let (get_selfSize : t -> float) =
              fun (x1275 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1275) "selfSize")
            let (set_selfSize : t -> float -> unit) =
              fun (x1276 : t) ->
                fun (x1277 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1276) "selfSize"
                    (Ojs.float_to_js x1277)
            let (get_children : t -> t list) =
              fun (x1278 : t) ->
                Ojs.list_of_js t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1278) "children")
            let (set_children : t -> t list -> unit) =
              fun (x1280 : t) ->
                fun (x1281 : t list) ->
                  Ojs.set_prop_ascii (t_to_js x1280) "children"
                    (Ojs.list_to_js t_to_js x1281)
          end
        module SamplingHeapProfile =
          struct
            type t = inspector_HeapProfiler_SamplingHeapProfile
            let rec t_of_js : Ojs.t -> t =
              fun (x1284 : Ojs.t) ->
                inspector_HeapProfiler_SamplingHeapProfile_of_js x1284
            and t_to_js : t -> Ojs.t =
              fun (x1283 : inspector_HeapProfiler_SamplingHeapProfile) ->
                inspector_HeapProfiler_SamplingHeapProfile_to_js x1283
            let (get_head :
              t -> inspector_HeapProfiler_SamplingHeapProfileNode) =
              fun (x1285 : t) ->
                inspector_HeapProfiler_SamplingHeapProfileNode_of_js
                  (Ojs.get_prop_ascii (t_to_js x1285) "head")
            let (set_head :
              t -> inspector_HeapProfiler_SamplingHeapProfileNode -> unit) =
              fun (x1286 : t) ->
                fun (x1287 : inspector_HeapProfiler_SamplingHeapProfileNode)
                  ->
                  Ojs.set_prop_ascii (t_to_js x1286) "head"
                    (inspector_HeapProfiler_SamplingHeapProfileNode_to_js
                       x1287)
          end
        module StartTrackingHeapObjectsParameterType =
          struct
            type t =
              inspector_HeapProfiler_StartTrackingHeapObjectsParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1289 : Ojs.t) ->
                inspector_HeapProfiler_StartTrackingHeapObjectsParameterType_of_js
                  x1289
            and t_to_js : t -> Ojs.t =
              fun
                (x1288 :
                  inspector_HeapProfiler_StartTrackingHeapObjectsParameterType)
                ->
                inspector_HeapProfiler_StartTrackingHeapObjectsParameterType_to_js
                  x1288
            let (get_trackAllocations : t -> bool) =
              fun (x1290 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1290) "trackAllocations")
            let (set_trackAllocations : t -> bool -> unit) =
              fun (x1291 : t) ->
                fun (x1292 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1291) "trackAllocations"
                    (Ojs.bool_to_js x1292)
          end
        module StopTrackingHeapObjectsParameterType =
          struct
            type t =
              inspector_HeapProfiler_StopTrackingHeapObjectsParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1294 : Ojs.t) ->
                inspector_HeapProfiler_StopTrackingHeapObjectsParameterType_of_js
                  x1294
            and t_to_js : t -> Ojs.t =
              fun
                (x1293 :
                  inspector_HeapProfiler_StopTrackingHeapObjectsParameterType)
                ->
                inspector_HeapProfiler_StopTrackingHeapObjectsParameterType_to_js
                  x1293
            let (get_reportProgress : t -> bool) =
              fun (x1295 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1295) "reportProgress")
            let (set_reportProgress : t -> bool -> unit) =
              fun (x1296 : t) ->
                fun (x1297 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1296) "reportProgress"
                    (Ojs.bool_to_js x1297)
          end
        module TakeHeapSnapshotParameterType =
          struct
            type t = inspector_HeapProfiler_TakeHeapSnapshotParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1299 : Ojs.t) ->
                inspector_HeapProfiler_TakeHeapSnapshotParameterType_of_js
                  x1299
            and t_to_js : t -> Ojs.t =
              fun
                (x1298 :
                  inspector_HeapProfiler_TakeHeapSnapshotParameterType)
                ->
                inspector_HeapProfiler_TakeHeapSnapshotParameterType_to_js
                  x1298
            let (get_reportProgress : t -> bool) =
              fun (x1300 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1300) "reportProgress")
            let (set_reportProgress : t -> bool -> unit) =
              fun (x1301 : t) ->
                fun (x1302 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1301) "reportProgress"
                    (Ojs.bool_to_js x1302)
          end
        module GetObjectByHeapObjectIdParameterType =
          struct
            type t =
              inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1304 : Ojs.t) ->
                inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType_of_js
                  x1304
            and t_to_js : t -> Ojs.t =
              fun
                (x1303 :
                  inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType)
                ->
                inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType_to_js
                  x1303
            let (get_objectId :
              t -> inspector_HeapProfiler_HeapSnapshotObjectId) =
              fun (x1305 : t) ->
                inspector_HeapProfiler_HeapSnapshotObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1305) "objectId")
            let (set_objectId :
              t -> inspector_HeapProfiler_HeapSnapshotObjectId -> unit) =
              fun (x1306 : t) ->
                fun (x1307 : inspector_HeapProfiler_HeapSnapshotObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x1306) "objectId"
                    (inspector_HeapProfiler_HeapSnapshotObjectId_to_js x1307)
            let (get_objectGroup : t -> string) =
              fun (x1308 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1308) "objectGroup")
            let (set_objectGroup : t -> string -> unit) =
              fun (x1309 : t) ->
                fun (x1310 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1309) "objectGroup"
                    (Ojs.string_to_js x1310)
          end
        module AddInspectedHeapObjectParameterType =
          struct
            type t =
              inspector_HeapProfiler_AddInspectedHeapObjectParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1312 : Ojs.t) ->
                inspector_HeapProfiler_AddInspectedHeapObjectParameterType_of_js
                  x1312
            and t_to_js : t -> Ojs.t =
              fun
                (x1311 :
                  inspector_HeapProfiler_AddInspectedHeapObjectParameterType)
                ->
                inspector_HeapProfiler_AddInspectedHeapObjectParameterType_to_js
                  x1311
            let (get_heapObjectId :
              t -> inspector_HeapProfiler_HeapSnapshotObjectId) =
              fun (x1313 : t) ->
                inspector_HeapProfiler_HeapSnapshotObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1313) "heapObjectId")
            let (set_heapObjectId :
              t -> inspector_HeapProfiler_HeapSnapshotObjectId -> unit) =
              fun (x1314 : t) ->
                fun (x1315 : inspector_HeapProfiler_HeapSnapshotObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x1314) "heapObjectId"
                    (inspector_HeapProfiler_HeapSnapshotObjectId_to_js x1315)
          end
        module GetHeapObjectIdParameterType =
          struct
            type t = inspector_HeapProfiler_GetHeapObjectIdParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1317 : Ojs.t) ->
                inspector_HeapProfiler_GetHeapObjectIdParameterType_of_js
                  x1317
            and t_to_js : t -> Ojs.t =
              fun
                (x1316 : inspector_HeapProfiler_GetHeapObjectIdParameterType)
                ->
                inspector_HeapProfiler_GetHeapObjectIdParameterType_to_js
                  x1316
            let (get_objectId : t -> inspector_Runtime_RemoteObjectId) =
              fun (x1318 : t) ->
                inspector_Runtime_RemoteObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1318) "objectId")
            let (set_objectId :
              t -> inspector_Runtime_RemoteObjectId -> unit) =
              fun (x1319 : t) ->
                fun (x1320 : inspector_Runtime_RemoteObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x1319) "objectId"
                    (inspector_Runtime_RemoteObjectId_to_js x1320)
          end
        module StartSamplingParameterType =
          struct
            type t = inspector_HeapProfiler_StartSamplingParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1322 : Ojs.t) ->
                inspector_HeapProfiler_StartSamplingParameterType_of_js x1322
            and t_to_js : t -> Ojs.t =
              fun (x1321 : inspector_HeapProfiler_StartSamplingParameterType)
                ->
                inspector_HeapProfiler_StartSamplingParameterType_to_js x1321
            let (get_samplingInterval : t -> float) =
              fun (x1323 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1323) "samplingInterval")
            let (set_samplingInterval : t -> float -> unit) =
              fun (x1324 : t) ->
                fun (x1325 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1324) "samplingInterval"
                    (Ojs.float_to_js x1325)
          end
        module GetObjectByHeapObjectIdReturnType =
          struct
            type t = inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1327 : Ojs.t) ->
                inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType_of_js
                  x1327
            and t_to_js : t -> Ojs.t =
              fun
                (x1326 :
                  inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType)
                ->
                inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType_to_js
                  x1326
            let (get_result : t -> inspector_Runtime_RemoteObject) =
              fun (x1328 : t) ->
                inspector_Runtime_RemoteObject_of_js
                  (Ojs.get_prop_ascii (t_to_js x1328) "result")
            let (set_result : t -> inspector_Runtime_RemoteObject -> unit) =
              fun (x1329 : t) ->
                fun (x1330 : inspector_Runtime_RemoteObject) ->
                  Ojs.set_prop_ascii (t_to_js x1329) "result"
                    (inspector_Runtime_RemoteObject_to_js x1330)
          end
        module GetHeapObjectIdReturnType =
          struct
            type t = inspector_HeapProfiler_GetHeapObjectIdReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1332 : Ojs.t) ->
                inspector_HeapProfiler_GetHeapObjectIdReturnType_of_js x1332
            and t_to_js : t -> Ojs.t =
              fun (x1331 : inspector_HeapProfiler_GetHeapObjectIdReturnType)
                ->
                inspector_HeapProfiler_GetHeapObjectIdReturnType_to_js x1331
            let (get_heapSnapshotObjectId :
              t -> inspector_HeapProfiler_HeapSnapshotObjectId) =
              fun (x1333 : t) ->
                inspector_HeapProfiler_HeapSnapshotObjectId_of_js
                  (Ojs.get_prop_ascii (t_to_js x1333) "heapSnapshotObjectId")
            let (set_heapSnapshotObjectId :
              t -> inspector_HeapProfiler_HeapSnapshotObjectId -> unit) =
              fun (x1334 : t) ->
                fun (x1335 : inspector_HeapProfiler_HeapSnapshotObjectId) ->
                  Ojs.set_prop_ascii (t_to_js x1334) "heapSnapshotObjectId"
                    (inspector_HeapProfiler_HeapSnapshotObjectId_to_js x1335)
          end
        module StopSamplingReturnType =
          struct
            type t = inspector_HeapProfiler_StopSamplingReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1337 : Ojs.t) ->
                inspector_HeapProfiler_StopSamplingReturnType_of_js x1337
            and t_to_js : t -> Ojs.t =
              fun (x1336 : inspector_HeapProfiler_StopSamplingReturnType) ->
                inspector_HeapProfiler_StopSamplingReturnType_to_js x1336
            let (get_profile :
              t -> inspector_HeapProfiler_SamplingHeapProfile) =
              fun (x1338 : t) ->
                inspector_HeapProfiler_SamplingHeapProfile_of_js
                  (Ojs.get_prop_ascii (t_to_js x1338) "profile")
            let (set_profile :
              t -> inspector_HeapProfiler_SamplingHeapProfile -> unit) =
              fun (x1339 : t) ->
                fun (x1340 : inspector_HeapProfiler_SamplingHeapProfile) ->
                  Ojs.set_prop_ascii (t_to_js x1339) "profile"
                    (inspector_HeapProfiler_SamplingHeapProfile_to_js x1340)
          end
        module GetSamplingProfileReturnType =
          struct
            type t = inspector_HeapProfiler_GetSamplingProfileReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1342 : Ojs.t) ->
                inspector_HeapProfiler_GetSamplingProfileReturnType_of_js
                  x1342
            and t_to_js : t -> Ojs.t =
              fun
                (x1341 : inspector_HeapProfiler_GetSamplingProfileReturnType)
                ->
                inspector_HeapProfiler_GetSamplingProfileReturnType_to_js
                  x1341
            let (get_profile :
              t -> inspector_HeapProfiler_SamplingHeapProfile) =
              fun (x1343 : t) ->
                inspector_HeapProfiler_SamplingHeapProfile_of_js
                  (Ojs.get_prop_ascii (t_to_js x1343) "profile")
            let (set_profile :
              t -> inspector_HeapProfiler_SamplingHeapProfile -> unit) =
              fun (x1344 : t) ->
                fun (x1345 : inspector_HeapProfiler_SamplingHeapProfile) ->
                  Ojs.set_prop_ascii (t_to_js x1344) "profile"
                    (inspector_HeapProfiler_SamplingHeapProfile_to_js x1345)
          end
        module AddHeapSnapshotChunkEventDataType =
          struct
            type t = inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1347 : Ojs.t) ->
                inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                  x1347
            and t_to_js : t -> Ojs.t =
              fun
                (x1346 :
                  inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType)
                ->
                inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_to_js
                  x1346
            let (get_chunk : t -> string) =
              fun (x1348 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1348) "chunk")
            let (set_chunk : t -> string -> unit) =
              fun (x1349 : t) ->
                fun (x1350 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1349) "chunk"
                    (Ojs.string_to_js x1350)
          end
        module ReportHeapSnapshotProgressEventDataType =
          struct
            type t =
              inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1352 : Ojs.t) ->
                inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                  x1352
            and t_to_js : t -> Ojs.t =
              fun
                (x1351 :
                  inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType)
                ->
                inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_to_js
                  x1351
            let (get_done : t -> float) =
              fun (x1353 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1353) "done")
            let (set_done : t -> float -> unit) =
              fun (x1354 : t) ->
                fun (x1355 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1354) "done"
                    (Ojs.float_to_js x1355)
            let (get_total : t -> float) =
              fun (x1356 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1356) "total")
            let (set_total : t -> float -> unit) =
              fun (x1357 : t) ->
                fun (x1358 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1357) "total"
                    (Ojs.float_to_js x1358)
            let (get_finished : t -> bool) =
              fun (x1359 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1359) "finished")
            let (set_finished : t -> bool -> unit) =
              fun (x1360 : t) ->
                fun (x1361 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1360) "finished"
                    (Ojs.bool_to_js x1361)
          end
        module LastSeenObjectIdEventDataType =
          struct
            type t = inspector_HeapProfiler_LastSeenObjectIdEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1363 : Ojs.t) ->
                inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                  x1363
            and t_to_js : t -> Ojs.t =
              fun
                (x1362 :
                  inspector_HeapProfiler_LastSeenObjectIdEventDataType)
                ->
                inspector_HeapProfiler_LastSeenObjectIdEventDataType_to_js
                  x1362
            let (get_lastSeenObjectId : t -> float) =
              fun (x1364 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1364) "lastSeenObjectId")
            let (set_lastSeenObjectId : t -> float -> unit) =
              fun (x1365 : t) ->
                fun (x1366 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1365) "lastSeenObjectId"
                    (Ojs.float_to_js x1366)
            let (get_timestamp : t -> float) =
              fun (x1367 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1367) "timestamp")
            let (set_timestamp : t -> float -> unit) =
              fun (x1368 : t) ->
                fun (x1369 : float) ->
                  Ojs.set_prop_ascii (t_to_js x1368) "timestamp"
                    (Ojs.float_to_js x1369)
          end
        module HeapStatsUpdateEventDataType =
          struct
            type t = inspector_HeapProfiler_HeapStatsUpdateEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1371 : Ojs.t) ->
                inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                  x1371
            and t_to_js : t -> Ojs.t =
              fun
                (x1370 : inspector_HeapProfiler_HeapStatsUpdateEventDataType)
                ->
                inspector_HeapProfiler_HeapStatsUpdateEventDataType_to_js
                  x1370
            let (get_statsUpdate : t -> float list) =
              fun (x1372 : t) ->
                Ojs.list_of_js Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x1372) "statsUpdate")
            let (set_statsUpdate : t -> float list -> unit) =
              fun (x1374 : t) ->
                fun (x1375 : float list) ->
                  Ojs.set_prop_ascii (t_to_js x1374) "statsUpdate"
                    (Ojs.list_to_js Ojs.float_to_js x1375)
          end
      end
    module NodeTracing =
      struct
        module TraceConfig =
          struct
            type t = inspector_NodeTracing_TraceConfig
            let rec t_of_js : Ojs.t -> t =
              fun (x1378 : Ojs.t) ->
                inspector_NodeTracing_TraceConfig_of_js x1378
            and t_to_js : t -> Ojs.t =
              fun (x1377 : inspector_NodeTracing_TraceConfig) ->
                inspector_NodeTracing_TraceConfig_to_js x1377
            let (get_recordMode : t -> string) =
              fun (x1379 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1379) "recordMode")
            let (set_recordMode : t -> string -> unit) =
              fun (x1380 : t) ->
                fun (x1381 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1380) "recordMode"
                    (Ojs.string_to_js x1381)
            let (get_includedCategories : t -> string list) =
              fun (x1382 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1382) "includedCategories")
            let (set_includedCategories : t -> string list -> unit) =
              fun (x1384 : t) ->
                fun (x1385 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1384) "includedCategories"
                    (Ojs.list_to_js Ojs.string_to_js x1385)
          end
        module StartParameterType =
          struct
            type t = inspector_NodeTracing_StartParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1388 : Ojs.t) ->
                inspector_NodeTracing_StartParameterType_of_js x1388
            and t_to_js : t -> Ojs.t =
              fun (x1387 : inspector_NodeTracing_StartParameterType) ->
                inspector_NodeTracing_StartParameterType_to_js x1387
            let (get_traceConfig : t -> inspector_NodeTracing_TraceConfig) =
              fun (x1389 : t) ->
                inspector_NodeTracing_TraceConfig_of_js
                  (Ojs.get_prop_ascii (t_to_js x1389) "traceConfig")
            let (set_traceConfig :
              t -> inspector_NodeTracing_TraceConfig -> unit) =
              fun (x1390 : t) ->
                fun (x1391 : inspector_NodeTracing_TraceConfig) ->
                  Ojs.set_prop_ascii (t_to_js x1390) "traceConfig"
                    (inspector_NodeTracing_TraceConfig_to_js x1391)
          end
        module GetCategoriesReturnType =
          struct
            type t = inspector_NodeTracing_GetCategoriesReturnType
            let rec t_of_js : Ojs.t -> t =
              fun (x1393 : Ojs.t) ->
                inspector_NodeTracing_GetCategoriesReturnType_of_js x1393
            and t_to_js : t -> Ojs.t =
              fun (x1392 : inspector_NodeTracing_GetCategoriesReturnType) ->
                inspector_NodeTracing_GetCategoriesReturnType_to_js x1392
            let (get_categories : t -> string list) =
              fun (x1394 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1394) "categories")
            let (set_categories : t -> string list -> unit) =
              fun (x1396 : t) ->
                fun (x1397 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1396) "categories"
                    (Ojs.list_to_js Ojs.string_to_js x1397)
          end
        module DataCollectedEventDataType =
          struct
            type t = inspector_NodeTracing_DataCollectedEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1400 : Ojs.t) ->
                inspector_NodeTracing_DataCollectedEventDataType_of_js x1400
            and t_to_js : t -> Ojs.t =
              fun (x1399 : inspector_NodeTracing_DataCollectedEventDataType)
                ->
                inspector_NodeTracing_DataCollectedEventDataType_to_js x1399
            let (get_value : t -> anonymous_interface_0 list) =
              fun (x1401 : t) ->
                Ojs.list_of_js anonymous_interface_0_of_js
                  (Ojs.get_prop_ascii (t_to_js x1401) "value")
            let (set_value : t -> anonymous_interface_0 list -> unit) =
              fun (x1403 : t) ->
                fun (x1404 : anonymous_interface_0 list) ->
                  Ojs.set_prop_ascii (t_to_js x1403) "value"
                    (Ojs.list_to_js anonymous_interface_0_to_js x1404)
          end
      end
    module NodeWorker =
      struct
        module WorkerID =
          struct
            type t = inspector_NodeWorker_WorkerID
            let rec t_of_js : Ojs.t -> t =
              fun (x1407 : Ojs.t) ->
                inspector_NodeWorker_WorkerID_of_js x1407
            and t_to_js : t -> Ojs.t =
              fun (x1406 : inspector_NodeWorker_WorkerID) ->
                inspector_NodeWorker_WorkerID_to_js x1406
          end
        module SessionID =
          struct
            type t = inspector_NodeWorker_SessionID
            let rec t_of_js : Ojs.t -> t =
              fun (x1409 : Ojs.t) ->
                inspector_NodeWorker_SessionID_of_js x1409
            and t_to_js : t -> Ojs.t =
              fun (x1408 : inspector_NodeWorker_SessionID) ->
                inspector_NodeWorker_SessionID_to_js x1408
          end
        module WorkerInfo =
          struct
            type t = inspector_NodeWorker_WorkerInfo
            let rec t_of_js : Ojs.t -> t =
              fun (x1411 : Ojs.t) ->
                inspector_NodeWorker_WorkerInfo_of_js x1411
            and t_to_js : t -> Ojs.t =
              fun (x1410 : inspector_NodeWorker_WorkerInfo) ->
                inspector_NodeWorker_WorkerInfo_to_js x1410
            let (get_workerId : t -> inspector_NodeWorker_WorkerID) =
              fun (x1412 : t) ->
                inspector_NodeWorker_WorkerID_of_js
                  (Ojs.get_prop_ascii (t_to_js x1412) "workerId")
            let (set_workerId : t -> inspector_NodeWorker_WorkerID -> unit) =
              fun (x1413 : t) ->
                fun (x1414 : inspector_NodeWorker_WorkerID) ->
                  Ojs.set_prop_ascii (t_to_js x1413) "workerId"
                    (inspector_NodeWorker_WorkerID_to_js x1414)
            let (get_type : t -> string) =
              fun (x1415 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1415) "type")
            let (set_type : t -> string -> unit) =
              fun (x1416 : t) ->
                fun (x1417 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1416) "type"
                    (Ojs.string_to_js x1417)
            let (get_title : t -> string) =
              fun (x1418 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1418) "title")
            let (set_title : t -> string -> unit) =
              fun (x1419 : t) ->
                fun (x1420 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1419) "title"
                    (Ojs.string_to_js x1420)
            let (get_url : t -> string) =
              fun (x1421 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1421) "url")
            let (set_url : t -> string -> unit) =
              fun (x1422 : t) ->
                fun (x1423 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1422) "url"
                    (Ojs.string_to_js x1423)
          end
        module SendMessageToWorkerParameterType =
          struct
            type t = inspector_NodeWorker_SendMessageToWorkerParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1425 : Ojs.t) ->
                inspector_NodeWorker_SendMessageToWorkerParameterType_of_js
                  x1425
            and t_to_js : t -> Ojs.t =
              fun
                (x1424 :
                  inspector_NodeWorker_SendMessageToWorkerParameterType)
                ->
                inspector_NodeWorker_SendMessageToWorkerParameterType_to_js
                  x1424
            let (get_message : t -> string) =
              fun (x1426 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1426) "message")
            let (set_message : t -> string -> unit) =
              fun (x1427 : t) ->
                fun (x1428 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1427) "message"
                    (Ojs.string_to_js x1428)
            let (get_sessionId : t -> inspector_NodeWorker_SessionID) =
              fun (x1429 : t) ->
                inspector_NodeWorker_SessionID_of_js
                  (Ojs.get_prop_ascii (t_to_js x1429) "sessionId")
            let (set_sessionId : t -> inspector_NodeWorker_SessionID -> unit)
              =
              fun (x1430 : t) ->
                fun (x1431 : inspector_NodeWorker_SessionID) ->
                  Ojs.set_prop_ascii (t_to_js x1430) "sessionId"
                    (inspector_NodeWorker_SessionID_to_js x1431)
          end
        module EnableParameterType =
          struct
            type t = inspector_NodeWorker_EnableParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1433 : Ojs.t) ->
                inspector_NodeWorker_EnableParameterType_of_js x1433
            and t_to_js : t -> Ojs.t =
              fun (x1432 : inspector_NodeWorker_EnableParameterType) ->
                inspector_NodeWorker_EnableParameterType_to_js x1432
            let (get_waitForDebuggerOnStart : t -> bool) =
              fun (x1434 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1434)
                     "waitForDebuggerOnStart")
            let (set_waitForDebuggerOnStart : t -> bool -> unit) =
              fun (x1435 : t) ->
                fun (x1436 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1435) "waitForDebuggerOnStart"
                    (Ojs.bool_to_js x1436)
          end
        module DetachParameterType =
          struct
            type t = inspector_NodeWorker_DetachParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1438 : Ojs.t) ->
                inspector_NodeWorker_DetachParameterType_of_js x1438
            and t_to_js : t -> Ojs.t =
              fun (x1437 : inspector_NodeWorker_DetachParameterType) ->
                inspector_NodeWorker_DetachParameterType_to_js x1437
            let (get_sessionId : t -> inspector_NodeWorker_SessionID) =
              fun (x1439 : t) ->
                inspector_NodeWorker_SessionID_of_js
                  (Ojs.get_prop_ascii (t_to_js x1439) "sessionId")
            let (set_sessionId : t -> inspector_NodeWorker_SessionID -> unit)
              =
              fun (x1440 : t) ->
                fun (x1441 : inspector_NodeWorker_SessionID) ->
                  Ojs.set_prop_ascii (t_to_js x1440) "sessionId"
                    (inspector_NodeWorker_SessionID_to_js x1441)
          end
        module AttachedToWorkerEventDataType =
          struct
            type t = inspector_NodeWorker_AttachedToWorkerEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1443 : Ojs.t) ->
                inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                  x1443
            and t_to_js : t -> Ojs.t =
              fun
                (x1442 : inspector_NodeWorker_AttachedToWorkerEventDataType)
                ->
                inspector_NodeWorker_AttachedToWorkerEventDataType_to_js
                  x1442
            let (get_sessionId : t -> inspector_NodeWorker_SessionID) =
              fun (x1444 : t) ->
                inspector_NodeWorker_SessionID_of_js
                  (Ojs.get_prop_ascii (t_to_js x1444) "sessionId")
            let (set_sessionId : t -> inspector_NodeWorker_SessionID -> unit)
              =
              fun (x1445 : t) ->
                fun (x1446 : inspector_NodeWorker_SessionID) ->
                  Ojs.set_prop_ascii (t_to_js x1445) "sessionId"
                    (inspector_NodeWorker_SessionID_to_js x1446)
            let (get_workerInfo : t -> inspector_NodeWorker_WorkerInfo) =
              fun (x1447 : t) ->
                inspector_NodeWorker_WorkerInfo_of_js
                  (Ojs.get_prop_ascii (t_to_js x1447) "workerInfo")
            let (set_workerInfo :
              t -> inspector_NodeWorker_WorkerInfo -> unit) =
              fun (x1448 : t) ->
                fun (x1449 : inspector_NodeWorker_WorkerInfo) ->
                  Ojs.set_prop_ascii (t_to_js x1448) "workerInfo"
                    (inspector_NodeWorker_WorkerInfo_to_js x1449)
            let (get_waitingForDebugger : t -> bool) =
              fun (x1450 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1450) "waitingForDebugger")
            let (set_waitingForDebugger : t -> bool -> unit) =
              fun (x1451 : t) ->
                fun (x1452 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1451) "waitingForDebugger"
                    (Ojs.bool_to_js x1452)
          end
        module DetachedFromWorkerEventDataType =
          struct
            type t = inspector_NodeWorker_DetachedFromWorkerEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1454 : Ojs.t) ->
                inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                  x1454
            and t_to_js : t -> Ojs.t =
              fun
                (x1453 :
                  inspector_NodeWorker_DetachedFromWorkerEventDataType)
                ->
                inspector_NodeWorker_DetachedFromWorkerEventDataType_to_js
                  x1453
            let (get_sessionId : t -> inspector_NodeWorker_SessionID) =
              fun (x1455 : t) ->
                inspector_NodeWorker_SessionID_of_js
                  (Ojs.get_prop_ascii (t_to_js x1455) "sessionId")
            let (set_sessionId : t -> inspector_NodeWorker_SessionID -> unit)
              =
              fun (x1456 : t) ->
                fun (x1457 : inspector_NodeWorker_SessionID) ->
                  Ojs.set_prop_ascii (t_to_js x1456) "sessionId"
                    (inspector_NodeWorker_SessionID_to_js x1457)
          end
        module ReceivedMessageFromWorkerEventDataType =
          struct
            type t =
              inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
            let rec t_of_js : Ojs.t -> t =
              fun (x1459 : Ojs.t) ->
                inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                  x1459
            and t_to_js : t -> Ojs.t =
              fun
                (x1458 :
                  inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType)
                ->
                inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_to_js
                  x1458
            let (get_sessionId : t -> inspector_NodeWorker_SessionID) =
              fun (x1460 : t) ->
                inspector_NodeWorker_SessionID_of_js
                  (Ojs.get_prop_ascii (t_to_js x1460) "sessionId")
            let (set_sessionId : t -> inspector_NodeWorker_SessionID -> unit)
              =
              fun (x1461 : t) ->
                fun (x1462 : inspector_NodeWorker_SessionID) ->
                  Ojs.set_prop_ascii (t_to_js x1461) "sessionId"
                    (inspector_NodeWorker_SessionID_to_js x1462)
            let (get_message : t -> string) =
              fun (x1463 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1463) "message")
            let (set_message : t -> string -> unit) =
              fun (x1464 : t) ->
                fun (x1465 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1464) "message"
                    (Ojs.string_to_js x1465)
          end
      end
    module NodeRuntime =
      struct
        module NotifyWhenWaitingForDisconnectParameterType =
          struct
            type t =
              inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
            let rec t_of_js : Ojs.t -> t =
              fun (x1467 : Ojs.t) ->
                inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType_of_js
                  x1467
            and t_to_js : t -> Ojs.t =
              fun
                (x1466 :
                  inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType)
                ->
                inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType_to_js
                  x1466
            let (get_enabled : t -> bool) =
              fun (x1468 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1468) "enabled")
            let (set_enabled : t -> bool -> unit) =
              fun (x1469 : t) ->
                fun (x1470 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1469) "enabled"
                    (Ojs.bool_to_js x1470)
          end
      end
    module Session =
      struct
        type t = inspector_Session
        let rec t_of_js : Ojs.t -> t =
          fun (x1472 : Ojs.t) -> inspector_Session_of_js x1472
        and t_to_js : t -> Ojs.t =
          fun (x1471 : inspector_Session) -> inspector_Session_to_js x1471
        let (create : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.new_obj (Ojs.get_prop_ascii Import.inspector "Session")
                 [||])
        let (connect : t -> unit) =
          fun (x1473 : t) -> ignore (Ojs.call (t_to_js x1473) "connect" [||])
        let (disconnect : t -> unit) =
          fun (x1474 : t) ->
            ignore (Ojs.call (t_to_js x1474) "disconnect" [||])
        let (post :
          t ->
            method_:string ->
              ?params:anonymous_interface_0 ->
                ?callback:(err:Error.t or_null ->
                             ?params:anonymous_interface_0 -> unit -> unit)
                  -> unit -> unit)
          =
          fun (x1485 : t) ->
            fun ~method_:(x1475 : string) ->
              fun ?params:(x1476 : anonymous_interface_0 option) ->
                fun
                  ?callback:(x1477 :
                              (err:Error.t or_null ->
                                 ?params:anonymous_interface_0 ->
                                   unit -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1486 = t_to_js x1485 in
                       Ojs.call (Ojs.get_prop_ascii x1486 "post") "apply"
                         [|x1486;((let x1478 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1478 "push"
                                        [|(Ojs.string_to_js x1475)|]);
                                   (match x1476 with
                                    | Some x1484 ->
                                        ignore
                                          (Ojs.call x1478 "push"
                                             [|(anonymous_interface_0_to_js
                                                  x1484)|])
                                    | None -> ());
                                   (match x1477 with
                                    | Some x1479 ->
                                        ignore
                                          (Ojs.call x1478 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1480 : Ojs.t) ->
                                                     fun (x1482 : Ojs.t) ->
                                                       x1479
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1480)
                                                         ?params:(Ojs.option_of_js
                                                                    anonymous_interface_0_of_js
                                                                    x1482) ()))|])
                                    | None -> ());
                                   x1478))|])
        let (post' :
          t ->
            method_:string ->
              ?callback:(err:Error.t or_null ->
                           ?params:anonymous_interface_0 -> unit -> unit)
                -> unit -> unit)
          =
          fun (x1495 : t) ->
            fun ~method_:(x1487 : string) ->
              fun
                ?callback:(x1488 :
                            (err:Error.t or_null ->
                               ?params:anonymous_interface_0 -> unit -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1496 = t_to_js x1495 in
                     Ojs.call (Ojs.get_prop_ascii x1496 "post") "apply"
                       [|x1496;((let x1489 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1489 "push"
                                      [|(Ojs.string_to_js x1487)|]);
                                 (match x1488 with
                                  | Some x1490 ->
                                      ignore
                                        (Ojs.call x1489 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1491 : Ojs.t) ->
                                                   fun (x1493 : Ojs.t) ->
                                                     x1490
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1491)
                                                       ?params:(Ojs.option_of_js
                                                                  anonymous_interface_0_of_js
                                                                  x1493) ()))|])
                                  | None -> ());
                                 x1489))|])
        let (post'' :
          t ->
            method_:[ `Schema_getDomains ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Schema_GetDomainsReturnType ->
                             unit)
                -> unit -> unit)
          =
          fun (x1504 : t) ->
            fun ~method_:(x1497 : [ `Schema_getDomains ]) ->
              fun
                ?callback:(x1498 :
                            (err:Error.t or_null ->
                               params:inspector_Schema_GetDomainsReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1505 = t_to_js x1504 in
                     Ojs.call (Ojs.get_prop_ascii x1505 "post") "apply"
                       [|x1505;((let x1499 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1499 "push"
                                      [|((match x1497 with
                                          | `Schema_getDomains ->
                                              Ojs.string_to_js
                                                "SchemaGetDomains"))|]);
                                 (match x1498 with
                                  | Some x1500 ->
                                      ignore
                                        (Ojs.call x1499 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1501 : Ojs.t) ->
                                                   fun (x1503 : Ojs.t) ->
                                                     x1500
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1501)
                                                       ~params:(inspector_Schema_GetDomainsReturnType_of_js
                                                                  x1503)))|])
                                  | None -> ());
                                 x1499))|])
        let (post''' :
          t ->
            method_:[ `Runtime_evaluate ] ->
              ?params:inspector_Runtime_EvaluateParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_EvaluateReturnType ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1515 : t) ->
            fun ~method_:(x1506 : [ `Runtime_evaluate ]) ->
              fun
                ?params:(x1507 :
                          inspector_Runtime_EvaluateParameterType option)
                ->
                fun
                  ?callback:(x1508 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_EvaluateReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1516 = t_to_js x1515 in
                       Ojs.call (Ojs.get_prop_ascii x1516 "post") "apply"
                         [|x1516;((let x1509 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1509 "push"
                                        [|((match x1506 with
                                            | `Runtime_evaluate ->
                                                Ojs.string_to_js
                                                  "RuntimeEvaluate"))|]);
                                   (match x1507 with
                                    | Some x1514 ->
                                        ignore
                                          (Ojs.call x1509 "push"
                                             [|(inspector_Runtime_EvaluateParameterType_to_js
                                                  x1514)|])
                                    | None -> ());
                                   (match x1508 with
                                    | Some x1510 ->
                                        ignore
                                          (Ojs.call x1509 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1511 : Ojs.t) ->
                                                     fun (x1513 : Ojs.t) ->
                                                       x1510
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1511)
                                                         ~params:(inspector_Runtime_EvaluateReturnType_of_js
                                                                    x1513)))|])
                                    | None -> ());
                                   x1509))|])
        let (post'''' :
          t ->
            method_:[ `Runtime_evaluate ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_EvaluateReturnType ->
                             unit)
                -> unit -> unit)
          =
          fun (x1524 : t) ->
            fun ~method_:(x1517 : [ `Runtime_evaluate ]) ->
              fun
                ?callback:(x1518 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_EvaluateReturnType ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1525 = t_to_js x1524 in
                     Ojs.call (Ojs.get_prop_ascii x1525 "post") "apply"
                       [|x1525;((let x1519 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1519 "push"
                                      [|((match x1517 with
                                          | `Runtime_evaluate ->
                                              Ojs.string_to_js
                                                "RuntimeEvaluate"))|]);
                                 (match x1518 with
                                  | Some x1520 ->
                                      ignore
                                        (Ojs.call x1519 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1521 : Ojs.t) ->
                                                   fun (x1523 : Ojs.t) ->
                                                     x1520
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1521)
                                                       ~params:(inspector_Runtime_EvaluateReturnType_of_js
                                                                  x1523)))|])
                                  | None -> ());
                                 x1519))|])
        let (post''''' :
          t ->
            method_:[ `Runtime_awaitPromise ] ->
              ?params:inspector_Runtime_AwaitPromiseParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_AwaitPromiseReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1535 : t) ->
            fun ~method_:(x1526 : [ `Runtime_awaitPromise ]) ->
              fun
                ?params:(x1527 :
                          inspector_Runtime_AwaitPromiseParameterType option)
                ->
                fun
                  ?callback:(x1528 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_AwaitPromiseReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1536 = t_to_js x1535 in
                       Ojs.call (Ojs.get_prop_ascii x1536 "post") "apply"
                         [|x1536;((let x1529 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1529 "push"
                                        [|((match x1526 with
                                            | `Runtime_awaitPromise ->
                                                Ojs.string_to_js
                                                  "RuntimeAwaitPromise"))|]);
                                   (match x1527 with
                                    | Some x1534 ->
                                        ignore
                                          (Ojs.call x1529 "push"
                                             [|(inspector_Runtime_AwaitPromiseParameterType_to_js
                                                  x1534)|])
                                    | None -> ());
                                   (match x1528 with
                                    | Some x1530 ->
                                        ignore
                                          (Ojs.call x1529 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1531 : Ojs.t) ->
                                                     fun (x1533 : Ojs.t) ->
                                                       x1530
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1531)
                                                         ~params:(inspector_Runtime_AwaitPromiseReturnType_of_js
                                                                    x1533)))|])
                                    | None -> ());
                                   x1529))|])
        let (post'''''' :
          t ->
            method_:[ `Runtime_awaitPromise ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_AwaitPromiseReturnType ->
                             unit)
                -> unit -> unit)
          =
          fun (x1544 : t) ->
            fun ~method_:(x1537 : [ `Runtime_awaitPromise ]) ->
              fun
                ?callback:(x1538 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_AwaitPromiseReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1545 = t_to_js x1544 in
                     Ojs.call (Ojs.get_prop_ascii x1545 "post") "apply"
                       [|x1545;((let x1539 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1539 "push"
                                      [|((match x1537 with
                                          | `Runtime_awaitPromise ->
                                              Ojs.string_to_js
                                                "RuntimeAwaitPromise"))|]);
                                 (match x1538 with
                                  | Some x1540 ->
                                      ignore
                                        (Ojs.call x1539 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1541 : Ojs.t) ->
                                                   fun (x1543 : Ojs.t) ->
                                                     x1540
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1541)
                                                       ~params:(inspector_Runtime_AwaitPromiseReturnType_of_js
                                                                  x1543)))|])
                                  | None -> ());
                                 x1539))|])
        let (post''''''' :
          t ->
            method_:[ `Runtime_callFunctionOn ] ->
              ?params:inspector_Runtime_CallFunctionOnParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_CallFunctionOnReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1555 : t) ->
            fun ~method_:(x1546 : [ `Runtime_callFunctionOn ]) ->
              fun
                ?params:(x1547 :
                          inspector_Runtime_CallFunctionOnParameterType
                            option)
                ->
                fun
                  ?callback:(x1548 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_CallFunctionOnReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1556 = t_to_js x1555 in
                       Ojs.call (Ojs.get_prop_ascii x1556 "post") "apply"
                         [|x1556;((let x1549 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1549 "push"
                                        [|((match x1546 with
                                            | `Runtime_callFunctionOn ->
                                                Ojs.string_to_js
                                                  "RuntimeCallFunctionOn"))|]);
                                   (match x1547 with
                                    | Some x1554 ->
                                        ignore
                                          (Ojs.call x1549 "push"
                                             [|(inspector_Runtime_CallFunctionOnParameterType_to_js
                                                  x1554)|])
                                    | None -> ());
                                   (match x1548 with
                                    | Some x1550 ->
                                        ignore
                                          (Ojs.call x1549 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1551 : Ojs.t) ->
                                                     fun (x1553 : Ojs.t) ->
                                                       x1550
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1551)
                                                         ~params:(inspector_Runtime_CallFunctionOnReturnType_of_js
                                                                    x1553)))|])
                                    | None -> ());
                                   x1549))|])
        let (post'''''''' :
          t ->
            method_:[ `Runtime_callFunctionOn ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_CallFunctionOnReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1564 : t) ->
            fun ~method_:(x1557 : [ `Runtime_callFunctionOn ]) ->
              fun
                ?callback:(x1558 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_CallFunctionOnReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1565 = t_to_js x1564 in
                     Ojs.call (Ojs.get_prop_ascii x1565 "post") "apply"
                       [|x1565;((let x1559 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1559 "push"
                                      [|((match x1557 with
                                          | `Runtime_callFunctionOn ->
                                              Ojs.string_to_js
                                                "RuntimeCallFunctionOn"))|]);
                                 (match x1558 with
                                  | Some x1560 ->
                                      ignore
                                        (Ojs.call x1559 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1561 : Ojs.t) ->
                                                   fun (x1563 : Ojs.t) ->
                                                     x1560
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1561)
                                                       ~params:(inspector_Runtime_CallFunctionOnReturnType_of_js
                                                                  x1563)))|])
                                  | None -> ());
                                 x1559))|])
        let (post''''''''' :
          t ->
            method_:[ `Runtime_getProperties ] ->
              ?params:inspector_Runtime_GetPropertiesParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_GetPropertiesReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1575 : t) ->
            fun ~method_:(x1566 : [ `Runtime_getProperties ]) ->
              fun
                ?params:(x1567 :
                          inspector_Runtime_GetPropertiesParameterType option)
                ->
                fun
                  ?callback:(x1568 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_GetPropertiesReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1576 = t_to_js x1575 in
                       Ojs.call (Ojs.get_prop_ascii x1576 "post") "apply"
                         [|x1576;((let x1569 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1569 "push"
                                        [|((match x1566 with
                                            | `Runtime_getProperties ->
                                                Ojs.string_to_js
                                                  "RuntimeGetProperties"))|]);
                                   (match x1567 with
                                    | Some x1574 ->
                                        ignore
                                          (Ojs.call x1569 "push"
                                             [|(inspector_Runtime_GetPropertiesParameterType_to_js
                                                  x1574)|])
                                    | None -> ());
                                   (match x1568 with
                                    | Some x1570 ->
                                        ignore
                                          (Ojs.call x1569 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1571 : Ojs.t) ->
                                                     fun (x1573 : Ojs.t) ->
                                                       x1570
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1571)
                                                         ~params:(inspector_Runtime_GetPropertiesReturnType_of_js
                                                                    x1573)))|])
                                    | None -> ());
                                   x1569))|])
        let (post'''''''''' :
          t ->
            method_:[ `Runtime_getProperties ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_GetPropertiesReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1584 : t) ->
            fun ~method_:(x1577 : [ `Runtime_getProperties ]) ->
              fun
                ?callback:(x1578 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_GetPropertiesReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1585 = t_to_js x1584 in
                     Ojs.call (Ojs.get_prop_ascii x1585 "post") "apply"
                       [|x1585;((let x1579 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1579 "push"
                                      [|((match x1577 with
                                          | `Runtime_getProperties ->
                                              Ojs.string_to_js
                                                "RuntimeGetProperties"))|]);
                                 (match x1578 with
                                  | Some x1580 ->
                                      ignore
                                        (Ojs.call x1579 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1581 : Ojs.t) ->
                                                   fun (x1583 : Ojs.t) ->
                                                     x1580
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1581)
                                                       ~params:(inspector_Runtime_GetPropertiesReturnType_of_js
                                                                  x1583)))|])
                                  | None -> ());
                                 x1579))|])
        let (post''''''''''' :
          t ->
            method_:[ `Runtime_releaseObject ] ->
              ?params:inspector_Runtime_ReleaseObjectParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1594 : t) ->
            fun ~method_:(x1586 : [ `Runtime_releaseObject ]) ->
              fun
                ?params:(x1587 :
                          inspector_Runtime_ReleaseObjectParameterType option)
                ->
                fun ?callback:(x1588 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1595 = t_to_js x1594 in
                       Ojs.call (Ojs.get_prop_ascii x1595 "post") "apply"
                         [|x1595;((let x1589 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1589 "push"
                                        [|((match x1586 with
                                            | `Runtime_releaseObject ->
                                                Ojs.string_to_js
                                                  "RuntimeReleaseObject"))|]);
                                   (match x1587 with
                                    | Some x1593 ->
                                        ignore
                                          (Ojs.call x1589 "push"
                                             [|(inspector_Runtime_ReleaseObjectParameterType_to_js
                                                  x1593)|])
                                    | None -> ());
                                   (match x1588 with
                                    | Some x1590 ->
                                        ignore
                                          (Ojs.call x1589 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1591 : Ojs.t) ->
                                                     x1590
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1591)))|])
                                    | None -> ());
                                   x1589))|])
        let (post'''''''''''' :
          t ->
            method_:[ `Runtime_releaseObject ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1602 : t) ->
            fun ~method_:(x1596 : [ `Runtime_releaseObject ]) ->
              fun ?callback:(x1597 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1603 = t_to_js x1602 in
                     Ojs.call (Ojs.get_prop_ascii x1603 "post") "apply"
                       [|x1603;((let x1598 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1598 "push"
                                      [|((match x1596 with
                                          | `Runtime_releaseObject ->
                                              Ojs.string_to_js
                                                "RuntimeReleaseObject"))|]);
                                 (match x1597 with
                                  | Some x1599 ->
                                      ignore
                                        (Ojs.call x1598 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1600 : Ojs.t) ->
                                                   x1599
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1600)))|])
                                  | None -> ());
                                 x1598))|])
        let (post''''''''''''' :
          t ->
            method_:[ `Runtime_releaseObjectGroup ] ->
              ?params:inspector_Runtime_ReleaseObjectGroupParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1612 : t) ->
            fun ~method_:(x1604 : [ `Runtime_releaseObjectGroup ]) ->
              fun
                ?params:(x1605 :
                          inspector_Runtime_ReleaseObjectGroupParameterType
                            option)
                ->
                fun ?callback:(x1606 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1613 = t_to_js x1612 in
                       Ojs.call (Ojs.get_prop_ascii x1613 "post") "apply"
                         [|x1613;((let x1607 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1607 "push"
                                        [|((match x1604 with
                                            | `Runtime_releaseObjectGroup ->
                                                Ojs.string_to_js
                                                  "RuntimeReleaseObjectGroup"))|]);
                                   (match x1605 with
                                    | Some x1611 ->
                                        ignore
                                          (Ojs.call x1607 "push"
                                             [|(inspector_Runtime_ReleaseObjectGroupParameterType_to_js
                                                  x1611)|])
                                    | None -> ());
                                   (match x1606 with
                                    | Some x1608 ->
                                        ignore
                                          (Ojs.call x1607 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1609 : Ojs.t) ->
                                                     x1608
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1609)))|])
                                    | None -> ());
                                   x1607))|])
        let (post'''''''''''''' :
          t ->
            method_:[ `Runtime_releaseObjectGroup ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1620 : t) ->
            fun ~method_:(x1614 : [ `Runtime_releaseObjectGroup ]) ->
              fun ?callback:(x1615 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1621 = t_to_js x1620 in
                     Ojs.call (Ojs.get_prop_ascii x1621 "post") "apply"
                       [|x1621;((let x1616 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1616 "push"
                                      [|((match x1614 with
                                          | `Runtime_releaseObjectGroup ->
                                              Ojs.string_to_js
                                                "RuntimeReleaseObjectGroup"))|]);
                                 (match x1615 with
                                  | Some x1617 ->
                                      ignore
                                        (Ojs.call x1616 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1618 : Ojs.t) ->
                                                   x1617
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1618)))|])
                                  | None -> ());
                                 x1616))|])
        let (post''''''''''''''' :
          t ->
            method_:[ `Runtime_runIfWaitingForDebugger ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1628 : t) ->
            fun ~method_:(x1622 : [ `Runtime_runIfWaitingForDebugger ]) ->
              fun ?callback:(x1623 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1629 = t_to_js x1628 in
                     Ojs.call (Ojs.get_prop_ascii x1629 "post") "apply"
                       [|x1629;((let x1624 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1624 "push"
                                      [|((match x1622 with
                                          | `Runtime_runIfWaitingForDebugger
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeRunIfWaitingForDebugger"))|]);
                                 (match x1623 with
                                  | Some x1625 ->
                                      ignore
                                        (Ojs.call x1624 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1626 : Ojs.t) ->
                                                   x1625
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1626)))|])
                                  | None -> ());
                                 x1624))|])
        let (post'''''''''''''''' :
          t ->
            method_:[ `Runtime_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1636 : t) ->
            fun ~method_:(x1630 : [ `Runtime_enable ]) ->
              fun ?callback:(x1631 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1637 = t_to_js x1636 in
                     Ojs.call (Ojs.get_prop_ascii x1637 "post") "apply"
                       [|x1637;((let x1632 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1632 "push"
                                      [|((match x1630 with
                                          | `Runtime_enable ->
                                              Ojs.string_to_js
                                                "RuntimeEnable"))|]);
                                 (match x1631 with
                                  | Some x1633 ->
                                      ignore
                                        (Ojs.call x1632 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1634 : Ojs.t) ->
                                                   x1633
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1634)))|])
                                  | None -> ());
                                 x1632))|])
        let (post''''''''''''''''' :
          t ->
            method_:[ `Runtime_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1644 : t) ->
            fun ~method_:(x1638 : [ `Runtime_disable ]) ->
              fun ?callback:(x1639 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1645 = t_to_js x1644 in
                     Ojs.call (Ojs.get_prop_ascii x1645 "post") "apply"
                       [|x1645;((let x1640 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1640 "push"
                                      [|((match x1638 with
                                          | `Runtime_disable ->
                                              Ojs.string_to_js
                                                "RuntimeDisable"))|]);
                                 (match x1639 with
                                  | Some x1641 ->
                                      ignore
                                        (Ojs.call x1640 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1642 : Ojs.t) ->
                                                   x1641
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1642)))|])
                                  | None -> ());
                                 x1640))|])
        let (post'''''''''''''''''' :
          t ->
            method_:[ `Runtime_discardConsoleEntries ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1652 : t) ->
            fun ~method_:(x1646 : [ `Runtime_discardConsoleEntries ]) ->
              fun ?callback:(x1647 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1653 = t_to_js x1652 in
                     Ojs.call (Ojs.get_prop_ascii x1653 "post") "apply"
                       [|x1653;((let x1648 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1648 "push"
                                      [|((match x1646 with
                                          | `Runtime_discardConsoleEntries ->
                                              Ojs.string_to_js
                                                "RuntimeDiscardConsoleEntries"))|]);
                                 (match x1647 with
                                  | Some x1649 ->
                                      ignore
                                        (Ojs.call x1648 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1650 : Ojs.t) ->
                                                   x1649
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1650)))|])
                                  | None -> ());
                                 x1648))|])
        let (post''''''''''''''''''' :
          t ->
            method_:[ `Runtime_setCustomObjectFormatterEnabled ] ->
              ?params:inspector_Runtime_SetCustomObjectFormatterEnabledParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1662 : t) ->
            fun
              ~method_:(x1654 : [ `Runtime_setCustomObjectFormatterEnabled ])
              ->
              fun
                ?params:(x1655 :
                          inspector_Runtime_SetCustomObjectFormatterEnabledParameterType
                            option)
                ->
                fun ?callback:(x1656 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1663 = t_to_js x1662 in
                       Ojs.call (Ojs.get_prop_ascii x1663 "post") "apply"
                         [|x1663;((let x1657 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1657 "push"
                                        [|((match x1654 with
                                            | `Runtime_setCustomObjectFormatterEnabled
                                                ->
                                                Ojs.string_to_js
                                                  "RuntimeSetCustomObjectFormatterEnabled"))|]);
                                   (match x1655 with
                                    | Some x1661 ->
                                        ignore
                                          (Ojs.call x1657 "push"
                                             [|(inspector_Runtime_SetCustomObjectFormatterEnabledParameterType_to_js
                                                  x1661)|])
                                    | None -> ());
                                   (match x1656 with
                                    | Some x1658 ->
                                        ignore
                                          (Ojs.call x1657 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1659 : Ojs.t) ->
                                                     x1658
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1659)))|])
                                    | None -> ());
                                   x1657))|])
        let (post'''''''''''''''''''' :
          t ->
            method_:[ `Runtime_setCustomObjectFormatterEnabled ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1670 : t) ->
            fun
              ~method_:(x1664 : [ `Runtime_setCustomObjectFormatterEnabled ])
              ->
              fun ?callback:(x1665 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1671 = t_to_js x1670 in
                     Ojs.call (Ojs.get_prop_ascii x1671 "post") "apply"
                       [|x1671;((let x1666 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1666 "push"
                                      [|((match x1664 with
                                          | `Runtime_setCustomObjectFormatterEnabled
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeSetCustomObjectFormatterEnabled"))|]);
                                 (match x1665 with
                                  | Some x1667 ->
                                      ignore
                                        (Ojs.call x1666 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1668 : Ojs.t) ->
                                                   x1667
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1668)))|])
                                  | None -> ());
                                 x1666))|])
        let (post''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_compileScript ] ->
              ?params:inspector_Runtime_CompileScriptParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_CompileScriptReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1681 : t) ->
            fun ~method_:(x1672 : [ `Runtime_compileScript ]) ->
              fun
                ?params:(x1673 :
                          inspector_Runtime_CompileScriptParameterType option)
                ->
                fun
                  ?callback:(x1674 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_CompileScriptReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1682 = t_to_js x1681 in
                       Ojs.call (Ojs.get_prop_ascii x1682 "post") "apply"
                         [|x1682;((let x1675 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1675 "push"
                                        [|((match x1672 with
                                            | `Runtime_compileScript ->
                                                Ojs.string_to_js
                                                  "RuntimeCompileScript"))|]);
                                   (match x1673 with
                                    | Some x1680 ->
                                        ignore
                                          (Ojs.call x1675 "push"
                                             [|(inspector_Runtime_CompileScriptParameterType_to_js
                                                  x1680)|])
                                    | None -> ());
                                   (match x1674 with
                                    | Some x1676 ->
                                        ignore
                                          (Ojs.call x1675 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1677 : Ojs.t) ->
                                                     fun (x1679 : Ojs.t) ->
                                                       x1676
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1677)
                                                         ~params:(inspector_Runtime_CompileScriptReturnType_of_js
                                                                    x1679)))|])
                                    | None -> ());
                                   x1675))|])
        let (post'''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_compileScript ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_CompileScriptReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1690 : t) ->
            fun ~method_:(x1683 : [ `Runtime_compileScript ]) ->
              fun
                ?callback:(x1684 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_CompileScriptReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1691 = t_to_js x1690 in
                     Ojs.call (Ojs.get_prop_ascii x1691 "post") "apply"
                       [|x1691;((let x1685 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1685 "push"
                                      [|((match x1683 with
                                          | `Runtime_compileScript ->
                                              Ojs.string_to_js
                                                "RuntimeCompileScript"))|]);
                                 (match x1684 with
                                  | Some x1686 ->
                                      ignore
                                        (Ojs.call x1685 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1687 : Ojs.t) ->
                                                   fun (x1689 : Ojs.t) ->
                                                     x1686
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1687)
                                                       ~params:(inspector_Runtime_CompileScriptReturnType_of_js
                                                                  x1689)))|])
                                  | None -> ());
                                 x1685))|])
        let (post''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_runScript ] ->
              ?params:inspector_Runtime_RunScriptParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_RunScriptReturnType ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1701 : t) ->
            fun ~method_:(x1692 : [ `Runtime_runScript ]) ->
              fun
                ?params:(x1693 :
                          inspector_Runtime_RunScriptParameterType option)
                ->
                fun
                  ?callback:(x1694 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_RunScriptReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1702 = t_to_js x1701 in
                       Ojs.call (Ojs.get_prop_ascii x1702 "post") "apply"
                         [|x1702;((let x1695 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1695 "push"
                                        [|((match x1692 with
                                            | `Runtime_runScript ->
                                                Ojs.string_to_js
                                                  "RuntimeRunScript"))|]);
                                   (match x1693 with
                                    | Some x1700 ->
                                        ignore
                                          (Ojs.call x1695 "push"
                                             [|(inspector_Runtime_RunScriptParameterType_to_js
                                                  x1700)|])
                                    | None -> ());
                                   (match x1694 with
                                    | Some x1696 ->
                                        ignore
                                          (Ojs.call x1695 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1697 : Ojs.t) ->
                                                     fun (x1699 : Ojs.t) ->
                                                       x1696
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1697)
                                                         ~params:(inspector_Runtime_RunScriptReturnType_of_js
                                                                    x1699)))|])
                                    | None -> ());
                                   x1695))|])
        let (post'''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_runScript ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_RunScriptReturnType ->
                             unit)
                -> unit -> unit)
          =
          fun (x1710 : t) ->
            fun ~method_:(x1703 : [ `Runtime_runScript ]) ->
              fun
                ?callback:(x1704 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_RunScriptReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1711 = t_to_js x1710 in
                     Ojs.call (Ojs.get_prop_ascii x1711 "post") "apply"
                       [|x1711;((let x1705 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1705 "push"
                                      [|((match x1703 with
                                          | `Runtime_runScript ->
                                              Ojs.string_to_js
                                                "RuntimeRunScript"))|]);
                                 (match x1704 with
                                  | Some x1706 ->
                                      ignore
                                        (Ojs.call x1705 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1707 : Ojs.t) ->
                                                   fun (x1709 : Ojs.t) ->
                                                     x1706
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1707)
                                                       ~params:(inspector_Runtime_RunScriptReturnType_of_js
                                                                  x1709)))|])
                                  | None -> ());
                                 x1705))|])
        let (post''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_queryObjects ] ->
              ?params:inspector_Runtime_QueryObjectsParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_QueryObjectsReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1721 : t) ->
            fun ~method_:(x1712 : [ `Runtime_queryObjects ]) ->
              fun
                ?params:(x1713 :
                          inspector_Runtime_QueryObjectsParameterType option)
                ->
                fun
                  ?callback:(x1714 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_QueryObjectsReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1722 = t_to_js x1721 in
                       Ojs.call (Ojs.get_prop_ascii x1722 "post") "apply"
                         [|x1722;((let x1715 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1715 "push"
                                        [|((match x1712 with
                                            | `Runtime_queryObjects ->
                                                Ojs.string_to_js
                                                  "RuntimeQueryObjects"))|]);
                                   (match x1713 with
                                    | Some x1720 ->
                                        ignore
                                          (Ojs.call x1715 "push"
                                             [|(inspector_Runtime_QueryObjectsParameterType_to_js
                                                  x1720)|])
                                    | None -> ());
                                   (match x1714 with
                                    | Some x1716 ->
                                        ignore
                                          (Ojs.call x1715 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1717 : Ojs.t) ->
                                                     fun (x1719 : Ojs.t) ->
                                                       x1716
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1717)
                                                         ~params:(inspector_Runtime_QueryObjectsReturnType_of_js
                                                                    x1719)))|])
                                    | None -> ());
                                   x1715))|])
        let (post'''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_queryObjects ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_QueryObjectsReturnType ->
                             unit)
                -> unit -> unit)
          =
          fun (x1730 : t) ->
            fun ~method_:(x1723 : [ `Runtime_queryObjects ]) ->
              fun
                ?callback:(x1724 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_QueryObjectsReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1731 = t_to_js x1730 in
                     Ojs.call (Ojs.get_prop_ascii x1731 "post") "apply"
                       [|x1731;((let x1725 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1725 "push"
                                      [|((match x1723 with
                                          | `Runtime_queryObjects ->
                                              Ojs.string_to_js
                                                "RuntimeQueryObjects"))|]);
                                 (match x1724 with
                                  | Some x1726 ->
                                      ignore
                                        (Ojs.call x1725 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1727 : Ojs.t) ->
                                                   fun (x1729 : Ojs.t) ->
                                                     x1726
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1727)
                                                       ~params:(inspector_Runtime_QueryObjectsReturnType_of_js
                                                                  x1729)))|])
                                  | None -> ());
                                 x1725))|])
        let (post''''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_globalLexicalScopeNames ] ->
              ?params:inspector_Runtime_GlobalLexicalScopeNamesParameterType
                ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Runtime_GlobalLexicalScopeNamesReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1741 : t) ->
            fun ~method_:(x1732 : [ `Runtime_globalLexicalScopeNames ]) ->
              fun
                ?params:(x1733 :
                          inspector_Runtime_GlobalLexicalScopeNamesParameterType
                            option)
                ->
                fun
                  ?callback:(x1734 :
                              (err:Error.t or_null ->
                                 params:inspector_Runtime_GlobalLexicalScopeNamesReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1742 = t_to_js x1741 in
                       Ojs.call (Ojs.get_prop_ascii x1742 "post") "apply"
                         [|x1742;((let x1735 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1735 "push"
                                        [|((match x1732 with
                                            | `Runtime_globalLexicalScopeNames
                                                ->
                                                Ojs.string_to_js
                                                  "RuntimeGlobalLexicalScopeNames"))|]);
                                   (match x1733 with
                                    | Some x1740 ->
                                        ignore
                                          (Ojs.call x1735 "push"
                                             [|(inspector_Runtime_GlobalLexicalScopeNamesParameterType_to_js
                                                  x1740)|])
                                    | None -> ());
                                   (match x1734 with
                                    | Some x1736 ->
                                        ignore
                                          (Ojs.call x1735 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1737 : Ojs.t) ->
                                                     fun (x1739 : Ojs.t) ->
                                                       x1736
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1737)
                                                         ~params:(inspector_Runtime_GlobalLexicalScopeNamesReturnType_of_js
                                                                    x1739)))|])
                                    | None -> ());
                                   x1735))|])
        let (post'''''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_globalLexicalScopeNames ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Runtime_GlobalLexicalScopeNamesReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1750 : t) ->
            fun ~method_:(x1743 : [ `Runtime_globalLexicalScopeNames ]) ->
              fun
                ?callback:(x1744 :
                            (err:Error.t or_null ->
                               params:inspector_Runtime_GlobalLexicalScopeNamesReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1751 = t_to_js x1750 in
                     Ojs.call (Ojs.get_prop_ascii x1751 "post") "apply"
                       [|x1751;((let x1745 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1745 "push"
                                      [|((match x1743 with
                                          | `Runtime_globalLexicalScopeNames
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeGlobalLexicalScopeNames"))|]);
                                 (match x1744 with
                                  | Some x1746 ->
                                      ignore
                                        (Ojs.call x1745 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1747 : Ojs.t) ->
                                                   fun (x1749 : Ojs.t) ->
                                                     x1746
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1747)
                                                       ~params:(inspector_Runtime_GlobalLexicalScopeNamesReturnType_of_js
                                                                  x1749)))|])
                                  | None -> ());
                                 x1745))|])
        let (post''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_enable ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_EnableReturnType -> unit)
                -> unit -> unit)
          =
          fun (x1759 : t) ->
            fun ~method_:(x1752 : [ `Debugger_enable ]) ->
              fun
                ?callback:(x1753 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_EnableReturnType ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1760 = t_to_js x1759 in
                     Ojs.call (Ojs.get_prop_ascii x1760 "post") "apply"
                       [|x1760;((let x1754 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1754 "push"
                                      [|((match x1752 with
                                          | `Debugger_enable ->
                                              Ojs.string_to_js
                                                "DebuggerEnable"))|]);
                                 (match x1753 with
                                  | Some x1755 ->
                                      ignore
                                        (Ojs.call x1754 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1756 : Ojs.t) ->
                                                   fun (x1758 : Ojs.t) ->
                                                     x1755
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1756)
                                                       ~params:(inspector_Debugger_EnableReturnType_of_js
                                                                  x1758)))|])
                                  | None -> ());
                                 x1754))|])
        let (post'''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1767 : t) ->
            fun ~method_:(x1761 : [ `Debugger_disable ]) ->
              fun ?callback:(x1762 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1768 = t_to_js x1767 in
                     Ojs.call (Ojs.get_prop_ascii x1768 "post") "apply"
                       [|x1768;((let x1763 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1763 "push"
                                      [|((match x1761 with
                                          | `Debugger_disable ->
                                              Ojs.string_to_js
                                                "DebuggerDisable"))|]);
                                 (match x1762 with
                                  | Some x1764 ->
                                      ignore
                                        (Ojs.call x1763 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1765 : Ojs.t) ->
                                                   x1764
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1765)))|])
                                  | None -> ());
                                 x1763))|])
        let (post''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointsActive ] ->
              ?params:inspector_Debugger_SetBreakpointsActiveParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1777 : t) ->
            fun ~method_:(x1769 : [ `Debugger_setBreakpointsActive ]) ->
              fun
                ?params:(x1770 :
                          inspector_Debugger_SetBreakpointsActiveParameterType
                            option)
                ->
                fun ?callback:(x1771 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1778 = t_to_js x1777 in
                       Ojs.call (Ojs.get_prop_ascii x1778 "post") "apply"
                         [|x1778;((let x1772 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1772 "push"
                                        [|((match x1769 with
                                            | `Debugger_setBreakpointsActive
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpointsActive"))|]);
                                   (match x1770 with
                                    | Some x1776 ->
                                        ignore
                                          (Ojs.call x1772 "push"
                                             [|(inspector_Debugger_SetBreakpointsActiveParameterType_to_js
                                                  x1776)|])
                                    | None -> ());
                                   (match x1771 with
                                    | Some x1773 ->
                                        ignore
                                          (Ojs.call x1772 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1774 : Ojs.t) ->
                                                     x1773
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1774)))|])
                                    | None -> ());
                                   x1772))|])
        let (post'''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointsActive ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1785 : t) ->
            fun ~method_:(x1779 : [ `Debugger_setBreakpointsActive ]) ->
              fun ?callback:(x1780 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1786 = t_to_js x1785 in
                     Ojs.call (Ojs.get_prop_ascii x1786 "post") "apply"
                       [|x1786;((let x1781 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1781 "push"
                                      [|((match x1779 with
                                          | `Debugger_setBreakpointsActive ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpointsActive"))|]);
                                 (match x1780 with
                                  | Some x1782 ->
                                      ignore
                                        (Ojs.call x1781 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1783 : Ojs.t) ->
                                                   x1782
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1783)))|])
                                  | None -> ());
                                 x1781))|])
        let (post''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setSkipAllPauses ] ->
              ?params:inspector_Debugger_SetSkipAllPausesParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1795 : t) ->
            fun ~method_:(x1787 : [ `Debugger_setSkipAllPauses ]) ->
              fun
                ?params:(x1788 :
                          inspector_Debugger_SetSkipAllPausesParameterType
                            option)
                ->
                fun ?callback:(x1789 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1796 = t_to_js x1795 in
                       Ojs.call (Ojs.get_prop_ascii x1796 "post") "apply"
                         [|x1796;((let x1790 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1790 "push"
                                        [|((match x1787 with
                                            | `Debugger_setSkipAllPauses ->
                                                Ojs.string_to_js
                                                  "DebuggerSetSkipAllPauses"))|]);
                                   (match x1788 with
                                    | Some x1794 ->
                                        ignore
                                          (Ojs.call x1790 "push"
                                             [|(inspector_Debugger_SetSkipAllPausesParameterType_to_js
                                                  x1794)|])
                                    | None -> ());
                                   (match x1789 with
                                    | Some x1791 ->
                                        ignore
                                          (Ojs.call x1790 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1792 : Ojs.t) ->
                                                     x1791
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1792)))|])
                                    | None -> ());
                                   x1790))|])
        let (post'''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setSkipAllPauses ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1803 : t) ->
            fun ~method_:(x1797 : [ `Debugger_setSkipAllPauses ]) ->
              fun ?callback:(x1798 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1804 = t_to_js x1803 in
                     Ojs.call (Ojs.get_prop_ascii x1804 "post") "apply"
                       [|x1804;((let x1799 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1799 "push"
                                      [|((match x1797 with
                                          | `Debugger_setSkipAllPauses ->
                                              Ojs.string_to_js
                                                "DebuggerSetSkipAllPauses"))|]);
                                 (match x1798 with
                                  | Some x1800 ->
                                      ignore
                                        (Ojs.call x1799 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1801 : Ojs.t) ->
                                                   x1800
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1801)))|])
                                  | None -> ());
                                 x1799))|])
        let (post''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointByUrl ] ->
              ?params:inspector_Debugger_SetBreakpointByUrlParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_SetBreakpointByUrlReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1814 : t) ->
            fun ~method_:(x1805 : [ `Debugger_setBreakpointByUrl ]) ->
              fun
                ?params:(x1806 :
                          inspector_Debugger_SetBreakpointByUrlParameterType
                            option)
                ->
                fun
                  ?callback:(x1807 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_SetBreakpointByUrlReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1815 = t_to_js x1814 in
                       Ojs.call (Ojs.get_prop_ascii x1815 "post") "apply"
                         [|x1815;((let x1808 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1808 "push"
                                        [|((match x1805 with
                                            | `Debugger_setBreakpointByUrl ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpointByUrl"))|]);
                                   (match x1806 with
                                    | Some x1813 ->
                                        ignore
                                          (Ojs.call x1808 "push"
                                             [|(inspector_Debugger_SetBreakpointByUrlParameterType_to_js
                                                  x1813)|])
                                    | None -> ());
                                   (match x1807 with
                                    | Some x1809 ->
                                        ignore
                                          (Ojs.call x1808 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1810 : Ojs.t) ->
                                                     fun (x1812 : Ojs.t) ->
                                                       x1809
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1810)
                                                         ~params:(inspector_Debugger_SetBreakpointByUrlReturnType_of_js
                                                                    x1812)))|])
                                    | None -> ());
                                   x1808))|])
        let (post'''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointByUrl ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_SetBreakpointByUrlReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1823 : t) ->
            fun ~method_:(x1816 : [ `Debugger_setBreakpointByUrl ]) ->
              fun
                ?callback:(x1817 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_SetBreakpointByUrlReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1824 = t_to_js x1823 in
                     Ojs.call (Ojs.get_prop_ascii x1824 "post") "apply"
                       [|x1824;((let x1818 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1818 "push"
                                      [|((match x1816 with
                                          | `Debugger_setBreakpointByUrl ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpointByUrl"))|]);
                                 (match x1817 with
                                  | Some x1819 ->
                                      ignore
                                        (Ojs.call x1818 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1820 : Ojs.t) ->
                                                   fun (x1822 : Ojs.t) ->
                                                     x1819
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1820)
                                                       ~params:(inspector_Debugger_SetBreakpointByUrlReturnType_of_js
                                                                  x1822)))|])
                                  | None -> ());
                                 x1818))|])
        let (post''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpoint ] ->
              ?params:inspector_Debugger_SetBreakpointParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_SetBreakpointReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1834 : t) ->
            fun ~method_:(x1825 : [ `Debugger_setBreakpoint ]) ->
              fun
                ?params:(x1826 :
                          inspector_Debugger_SetBreakpointParameterType
                            option)
                ->
                fun
                  ?callback:(x1827 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_SetBreakpointReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1835 = t_to_js x1834 in
                       Ojs.call (Ojs.get_prop_ascii x1835 "post") "apply"
                         [|x1835;((let x1828 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1828 "push"
                                        [|((match x1825 with
                                            | `Debugger_setBreakpoint ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpoint"))|]);
                                   (match x1826 with
                                    | Some x1833 ->
                                        ignore
                                          (Ojs.call x1828 "push"
                                             [|(inspector_Debugger_SetBreakpointParameterType_to_js
                                                  x1833)|])
                                    | None -> ());
                                   (match x1827 with
                                    | Some x1829 ->
                                        ignore
                                          (Ojs.call x1828 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1830 : Ojs.t) ->
                                                     fun (x1832 : Ojs.t) ->
                                                       x1829
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1830)
                                                         ~params:(inspector_Debugger_SetBreakpointReturnType_of_js
                                                                    x1832)))|])
                                    | None -> ());
                                   x1828))|])
        let (post'''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpoint ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_SetBreakpointReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1843 : t) ->
            fun ~method_:(x1836 : [ `Debugger_setBreakpoint ]) ->
              fun
                ?callback:(x1837 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_SetBreakpointReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1844 = t_to_js x1843 in
                     Ojs.call (Ojs.get_prop_ascii x1844 "post") "apply"
                       [|x1844;((let x1838 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1838 "push"
                                      [|((match x1836 with
                                          | `Debugger_setBreakpoint ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpoint"))|]);
                                 (match x1837 with
                                  | Some x1839 ->
                                      ignore
                                        (Ojs.call x1838 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1840 : Ojs.t) ->
                                                   fun (x1842 : Ojs.t) ->
                                                     x1839
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1840)
                                                       ~params:(inspector_Debugger_SetBreakpointReturnType_of_js
                                                                  x1842)))|])
                                  | None -> ());
                                 x1838))|])
        let (post''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_removeBreakpoint ] ->
              ?params:inspector_Debugger_RemoveBreakpointParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1853 : t) ->
            fun ~method_:(x1845 : [ `Debugger_removeBreakpoint ]) ->
              fun
                ?params:(x1846 :
                          inspector_Debugger_RemoveBreakpointParameterType
                            option)
                ->
                fun ?callback:(x1847 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1854 = t_to_js x1853 in
                       Ojs.call (Ojs.get_prop_ascii x1854 "post") "apply"
                         [|x1854;((let x1848 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1848 "push"
                                        [|((match x1845 with
                                            | `Debugger_removeBreakpoint ->
                                                Ojs.string_to_js
                                                  "DebuggerRemoveBreakpoint"))|]);
                                   (match x1846 with
                                    | Some x1852 ->
                                        ignore
                                          (Ojs.call x1848 "push"
                                             [|(inspector_Debugger_RemoveBreakpointParameterType_to_js
                                                  x1852)|])
                                    | None -> ());
                                   (match x1847 with
                                    | Some x1849 ->
                                        ignore
                                          (Ojs.call x1848 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1850 : Ojs.t) ->
                                                     x1849
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1850)))|])
                                    | None -> ());
                                   x1848))|])
        let (post'''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_removeBreakpoint ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1861 : t) ->
            fun ~method_:(x1855 : [ `Debugger_removeBreakpoint ]) ->
              fun ?callback:(x1856 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1862 = t_to_js x1861 in
                     Ojs.call (Ojs.get_prop_ascii x1862 "post") "apply"
                       [|x1862;((let x1857 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1857 "push"
                                      [|((match x1855 with
                                          | `Debugger_removeBreakpoint ->
                                              Ojs.string_to_js
                                                "DebuggerRemoveBreakpoint"))|]);
                                 (match x1856 with
                                  | Some x1858 ->
                                      ignore
                                        (Ojs.call x1857 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1859 : Ojs.t) ->
                                                   x1858
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1859)))|])
                                  | None -> ());
                                 x1857))|])
        let (post''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getPossibleBreakpoints ] ->
              ?params:inspector_Debugger_GetPossibleBreakpointsParameterType
                ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_GetPossibleBreakpointsReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1872 : t) ->
            fun ~method_:(x1863 : [ `Debugger_getPossibleBreakpoints ]) ->
              fun
                ?params:(x1864 :
                          inspector_Debugger_GetPossibleBreakpointsParameterType
                            option)
                ->
                fun
                  ?callback:(x1865 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_GetPossibleBreakpointsReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1873 = t_to_js x1872 in
                       Ojs.call (Ojs.get_prop_ascii x1873 "post") "apply"
                         [|x1873;((let x1866 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1866 "push"
                                        [|((match x1863 with
                                            | `Debugger_getPossibleBreakpoints
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerGetPossibleBreakpoints"))|]);
                                   (match x1864 with
                                    | Some x1871 ->
                                        ignore
                                          (Ojs.call x1866 "push"
                                             [|(inspector_Debugger_GetPossibleBreakpointsParameterType_to_js
                                                  x1871)|])
                                    | None -> ());
                                   (match x1865 with
                                    | Some x1867 ->
                                        ignore
                                          (Ojs.call x1866 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1868 : Ojs.t) ->
                                                     fun (x1870 : Ojs.t) ->
                                                       x1867
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1868)
                                                         ~params:(inspector_Debugger_GetPossibleBreakpointsReturnType_of_js
                                                                    x1870)))|])
                                    | None -> ());
                                   x1866))|])
        let (post'''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getPossibleBreakpoints ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_GetPossibleBreakpointsReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1881 : t) ->
            fun ~method_:(x1874 : [ `Debugger_getPossibleBreakpoints ]) ->
              fun
                ?callback:(x1875 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_GetPossibleBreakpointsReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1882 = t_to_js x1881 in
                     Ojs.call (Ojs.get_prop_ascii x1882 "post") "apply"
                       [|x1882;((let x1876 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1876 "push"
                                      [|((match x1874 with
                                          | `Debugger_getPossibleBreakpoints
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerGetPossibleBreakpoints"))|]);
                                 (match x1875 with
                                  | Some x1877 ->
                                      ignore
                                        (Ojs.call x1876 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1878 : Ojs.t) ->
                                                   fun (x1880 : Ojs.t) ->
                                                     x1877
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1878)
                                                       ~params:(inspector_Debugger_GetPossibleBreakpointsReturnType_of_js
                                                                  x1880)))|])
                                  | None -> ());
                                 x1876))|])
        let (post''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_continueToLocation ] ->
              ?params:inspector_Debugger_ContinueToLocationParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1891 : t) ->
            fun ~method_:(x1883 : [ `Debugger_continueToLocation ]) ->
              fun
                ?params:(x1884 :
                          inspector_Debugger_ContinueToLocationParameterType
                            option)
                ->
                fun ?callback:(x1885 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1892 = t_to_js x1891 in
                       Ojs.call (Ojs.get_prop_ascii x1892 "post") "apply"
                         [|x1892;((let x1886 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1886 "push"
                                        [|((match x1883 with
                                            | `Debugger_continueToLocation ->
                                                Ojs.string_to_js
                                                  "DebuggerContinueToLocation"))|]);
                                   (match x1884 with
                                    | Some x1890 ->
                                        ignore
                                          (Ojs.call x1886 "push"
                                             [|(inspector_Debugger_ContinueToLocationParameterType_to_js
                                                  x1890)|])
                                    | None -> ());
                                   (match x1885 with
                                    | Some x1887 ->
                                        ignore
                                          (Ojs.call x1886 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1888 : Ojs.t) ->
                                                     x1887
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1888)))|])
                                    | None -> ());
                                   x1886))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_continueToLocation ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1899 : t) ->
            fun ~method_:(x1893 : [ `Debugger_continueToLocation ]) ->
              fun ?callback:(x1894 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1900 = t_to_js x1899 in
                     Ojs.call (Ojs.get_prop_ascii x1900 "post") "apply"
                       [|x1900;((let x1895 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1895 "push"
                                      [|((match x1893 with
                                          | `Debugger_continueToLocation ->
                                              Ojs.string_to_js
                                                "DebuggerContinueToLocation"))|]);
                                 (match x1894 with
                                  | Some x1896 ->
                                      ignore
                                        (Ojs.call x1895 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1897 : Ojs.t) ->
                                                   x1896
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1897)))|])
                                  | None -> ());
                                 x1895))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pauseOnAsyncCall ] ->
              ?params:inspector_Debugger_PauseOnAsyncCallParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1909 : t) ->
            fun ~method_:(x1901 : [ `Debugger_pauseOnAsyncCall ]) ->
              fun
                ?params:(x1902 :
                          inspector_Debugger_PauseOnAsyncCallParameterType
                            option)
                ->
                fun ?callback:(x1903 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1910 = t_to_js x1909 in
                       Ojs.call (Ojs.get_prop_ascii x1910 "post") "apply"
                         [|x1910;((let x1904 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1904 "push"
                                        [|((match x1901 with
                                            | `Debugger_pauseOnAsyncCall ->
                                                Ojs.string_to_js
                                                  "DebuggerPauseOnAsyncCall"))|]);
                                   (match x1902 with
                                    | Some x1908 ->
                                        ignore
                                          (Ojs.call x1904 "push"
                                             [|(inspector_Debugger_PauseOnAsyncCallParameterType_to_js
                                                  x1908)|])
                                    | None -> ());
                                   (match x1903 with
                                    | Some x1905 ->
                                        ignore
                                          (Ojs.call x1904 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1906 : Ojs.t) ->
                                                     x1905
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1906)))|])
                                    | None -> ());
                                   x1904))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pauseOnAsyncCall ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1917 : t) ->
            fun ~method_:(x1911 : [ `Debugger_pauseOnAsyncCall ]) ->
              fun ?callback:(x1912 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1918 = t_to_js x1917 in
                     Ojs.call (Ojs.get_prop_ascii x1918 "post") "apply"
                       [|x1918;((let x1913 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1913 "push"
                                      [|((match x1911 with
                                          | `Debugger_pauseOnAsyncCall ->
                                              Ojs.string_to_js
                                                "DebuggerPauseOnAsyncCall"))|]);
                                 (match x1912 with
                                  | Some x1914 ->
                                      ignore
                                        (Ojs.call x1913 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1915 : Ojs.t) ->
                                                   x1914
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1915)))|])
                                  | None -> ());
                                 x1913))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepOver ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1925 : t) ->
            fun ~method_:(x1919 : [ `Debugger_stepOver ]) ->
              fun ?callback:(x1920 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1926 = t_to_js x1925 in
                     Ojs.call (Ojs.get_prop_ascii x1926 "post") "apply"
                       [|x1926;((let x1921 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1921 "push"
                                      [|((match x1919 with
                                          | `Debugger_stepOver ->
                                              Ojs.string_to_js
                                                "DebuggerStepOver"))|]);
                                 (match x1920 with
                                  | Some x1922 ->
                                      ignore
                                        (Ojs.call x1921 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1923 : Ojs.t) ->
                                                   x1922
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1923)))|])
                                  | None -> ());
                                 x1921))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepInto ] ->
              ?params:inspector_Debugger_StepIntoParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1935 : t) ->
            fun ~method_:(x1927 : [ `Debugger_stepInto ]) ->
              fun
                ?params:(x1928 :
                          inspector_Debugger_StepIntoParameterType option)
                ->
                fun ?callback:(x1929 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1936 = t_to_js x1935 in
                       Ojs.call (Ojs.get_prop_ascii x1936 "post") "apply"
                         [|x1936;((let x1930 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1930 "push"
                                        [|((match x1927 with
                                            | `Debugger_stepInto ->
                                                Ojs.string_to_js
                                                  "DebuggerStepInto"))|]);
                                   (match x1928 with
                                    | Some x1934 ->
                                        ignore
                                          (Ojs.call x1930 "push"
                                             [|(inspector_Debugger_StepIntoParameterType_to_js
                                                  x1934)|])
                                    | None -> ());
                                   (match x1929 with
                                    | Some x1931 ->
                                        ignore
                                          (Ojs.call x1930 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1932 : Ojs.t) ->
                                                     x1931
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1932)))|])
                                    | None -> ());
                                   x1930))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepInto ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1943 : t) ->
            fun ~method_:(x1937 : [ `Debugger_stepInto ]) ->
              fun ?callback:(x1938 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1944 = t_to_js x1943 in
                     Ojs.call (Ojs.get_prop_ascii x1944 "post") "apply"
                       [|x1944;((let x1939 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1939 "push"
                                      [|((match x1937 with
                                          | `Debugger_stepInto ->
                                              Ojs.string_to_js
                                                "DebuggerStepInto"))|]);
                                 (match x1938 with
                                  | Some x1940 ->
                                      ignore
                                        (Ojs.call x1939 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1941 : Ojs.t) ->
                                                   x1940
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1941)))|])
                                  | None -> ());
                                 x1939))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepOut ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1951 : t) ->
            fun ~method_:(x1945 : [ `Debugger_stepOut ]) ->
              fun ?callback:(x1946 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1952 = t_to_js x1951 in
                     Ojs.call (Ojs.get_prop_ascii x1952 "post") "apply"
                       [|x1952;((let x1947 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1947 "push"
                                      [|((match x1945 with
                                          | `Debugger_stepOut ->
                                              Ojs.string_to_js
                                                "DebuggerStepOut"))|]);
                                 (match x1946 with
                                  | Some x1948 ->
                                      ignore
                                        (Ojs.call x1947 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1949 : Ojs.t) ->
                                                   x1948
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1949)))|])
                                  | None -> ());
                                 x1947))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pause ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1959 : t) ->
            fun ~method_:(x1953 : [ `Debugger_pause ]) ->
              fun ?callback:(x1954 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1960 = t_to_js x1959 in
                     Ojs.call (Ojs.get_prop_ascii x1960 "post") "apply"
                       [|x1960;((let x1955 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1955 "push"
                                      [|((match x1953 with
                                          | `Debugger_pause ->
                                              Ojs.string_to_js
                                                "DebuggerPause"))|]);
                                 (match x1954 with
                                  | Some x1956 ->
                                      ignore
                                        (Ojs.call x1955 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1957 : Ojs.t) ->
                                                   x1956
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1957)))|])
                                  | None -> ());
                                 x1955))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_scheduleStepIntoAsync ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1967 : t) ->
            fun ~method_:(x1961 : [ `Debugger_scheduleStepIntoAsync ]) ->
              fun ?callback:(x1962 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1968 = t_to_js x1967 in
                     Ojs.call (Ojs.get_prop_ascii x1968 "post") "apply"
                       [|x1968;((let x1963 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1963 "push"
                                      [|((match x1961 with
                                          | `Debugger_scheduleStepIntoAsync
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerScheduleStepIntoAsync"))|]);
                                 (match x1962 with
                                  | Some x1964 ->
                                      ignore
                                        (Ojs.call x1963 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1965 : Ojs.t) ->
                                                   x1964
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1965)))|])
                                  | None -> ());
                                 x1963))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_resume ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1975 : t) ->
            fun ~method_:(x1969 : [ `Debugger_resume ]) ->
              fun ?callback:(x1970 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1976 = t_to_js x1975 in
                     Ojs.call (Ojs.get_prop_ascii x1976 "post") "apply"
                       [|x1976;((let x1971 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1971 "push"
                                      [|((match x1969 with
                                          | `Debugger_resume ->
                                              Ojs.string_to_js
                                                "DebuggerResume"))|]);
                                 (match x1970 with
                                  | Some x1972 ->
                                      ignore
                                        (Ojs.call x1971 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1973 : Ojs.t) ->
                                                   x1972
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1973)))|])
                                  | None -> ());
                                 x1971))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getStackTrace ] ->
              ?params:inspector_Debugger_GetStackTraceParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_GetStackTraceReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1986 : t) ->
            fun ~method_:(x1977 : [ `Debugger_getStackTrace ]) ->
              fun
                ?params:(x1978 :
                          inspector_Debugger_GetStackTraceParameterType
                            option)
                ->
                fun
                  ?callback:(x1979 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_GetStackTraceReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1987 = t_to_js x1986 in
                       Ojs.call (Ojs.get_prop_ascii x1987 "post") "apply"
                         [|x1987;((let x1980 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1980 "push"
                                        [|((match x1977 with
                                            | `Debugger_getStackTrace ->
                                                Ojs.string_to_js
                                                  "DebuggerGetStackTrace"))|]);
                                   (match x1978 with
                                    | Some x1985 ->
                                        ignore
                                          (Ojs.call x1980 "push"
                                             [|(inspector_Debugger_GetStackTraceParameterType_to_js
                                                  x1985)|])
                                    | None -> ());
                                   (match x1979 with
                                    | Some x1981 ->
                                        ignore
                                          (Ojs.call x1980 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1982 : Ojs.t) ->
                                                     fun (x1984 : Ojs.t) ->
                                                       x1981
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1982)
                                                         ~params:(inspector_Debugger_GetStackTraceReturnType_of_js
                                                                    x1984)))|])
                                    | None -> ());
                                   x1980))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getStackTrace ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_GetStackTraceReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x1995 : t) ->
            fun ~method_:(x1988 : [ `Debugger_getStackTrace ]) ->
              fun
                ?callback:(x1989 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_GetStackTraceReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1996 = t_to_js x1995 in
                     Ojs.call (Ojs.get_prop_ascii x1996 "post") "apply"
                       [|x1996;((let x1990 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1990 "push"
                                      [|((match x1988 with
                                          | `Debugger_getStackTrace ->
                                              Ojs.string_to_js
                                                "DebuggerGetStackTrace"))|]);
                                 (match x1989 with
                                  | Some x1991 ->
                                      ignore
                                        (Ojs.call x1990 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1992 : Ojs.t) ->
                                                   fun (x1994 : Ojs.t) ->
                                                     x1991
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1992)
                                                       ~params:(inspector_Debugger_GetStackTraceReturnType_of_js
                                                                  x1994)))|])
                                  | None -> ());
                                 x1990))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_searchInContent ] ->
              ?params:inspector_Debugger_SearchInContentParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_SearchInContentReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2006 : t) ->
            fun ~method_:(x1997 : [ `Debugger_searchInContent ]) ->
              fun
                ?params:(x1998 :
                          inspector_Debugger_SearchInContentParameterType
                            option)
                ->
                fun
                  ?callback:(x1999 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_SearchInContentReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2007 = t_to_js x2006 in
                       Ojs.call (Ojs.get_prop_ascii x2007 "post") "apply"
                         [|x2007;((let x2000 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2000 "push"
                                        [|((match x1997 with
                                            | `Debugger_searchInContent ->
                                                Ojs.string_to_js
                                                  "DebuggerSearchInContent"))|]);
                                   (match x1998 with
                                    | Some x2005 ->
                                        ignore
                                          (Ojs.call x2000 "push"
                                             [|(inspector_Debugger_SearchInContentParameterType_to_js
                                                  x2005)|])
                                    | None -> ());
                                   (match x1999 with
                                    | Some x2001 ->
                                        ignore
                                          (Ojs.call x2000 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2002 : Ojs.t) ->
                                                     fun (x2004 : Ojs.t) ->
                                                       x2001
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2002)
                                                         ~params:(inspector_Debugger_SearchInContentReturnType_of_js
                                                                    x2004)))|])
                                    | None -> ());
                                   x2000))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_searchInContent ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_SearchInContentReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2015 : t) ->
            fun ~method_:(x2008 : [ `Debugger_searchInContent ]) ->
              fun
                ?callback:(x2009 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_SearchInContentReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2016 = t_to_js x2015 in
                     Ojs.call (Ojs.get_prop_ascii x2016 "post") "apply"
                       [|x2016;((let x2010 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2010 "push"
                                      [|((match x2008 with
                                          | `Debugger_searchInContent ->
                                              Ojs.string_to_js
                                                "DebuggerSearchInContent"))|]);
                                 (match x2009 with
                                  | Some x2011 ->
                                      ignore
                                        (Ojs.call x2010 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2012 : Ojs.t) ->
                                                   fun (x2014 : Ojs.t) ->
                                                     x2011
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2012)
                                                       ~params:(inspector_Debugger_SearchInContentReturnType_of_js
                                                                  x2014)))|])
                                  | None -> ());
                                 x2010))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setScriptSource ] ->
              ?params:inspector_Debugger_SetScriptSourceParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_SetScriptSourceReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2026 : t) ->
            fun ~method_:(x2017 : [ `Debugger_setScriptSource ]) ->
              fun
                ?params:(x2018 :
                          inspector_Debugger_SetScriptSourceParameterType
                            option)
                ->
                fun
                  ?callback:(x2019 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_SetScriptSourceReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2027 = t_to_js x2026 in
                       Ojs.call (Ojs.get_prop_ascii x2027 "post") "apply"
                         [|x2027;((let x2020 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2020 "push"
                                        [|((match x2017 with
                                            | `Debugger_setScriptSource ->
                                                Ojs.string_to_js
                                                  "DebuggerSetScriptSource"))|]);
                                   (match x2018 with
                                    | Some x2025 ->
                                        ignore
                                          (Ojs.call x2020 "push"
                                             [|(inspector_Debugger_SetScriptSourceParameterType_to_js
                                                  x2025)|])
                                    | None -> ());
                                   (match x2019 with
                                    | Some x2021 ->
                                        ignore
                                          (Ojs.call x2020 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2022 : Ojs.t) ->
                                                     fun (x2024 : Ojs.t) ->
                                                       x2021
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2022)
                                                         ~params:(inspector_Debugger_SetScriptSourceReturnType_of_js
                                                                    x2024)))|])
                                    | None -> ());
                                   x2020))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setScriptSource ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_SetScriptSourceReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2035 : t) ->
            fun ~method_:(x2028 : [ `Debugger_setScriptSource ]) ->
              fun
                ?callback:(x2029 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_SetScriptSourceReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2036 = t_to_js x2035 in
                     Ojs.call (Ojs.get_prop_ascii x2036 "post") "apply"
                       [|x2036;((let x2030 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2030 "push"
                                      [|((match x2028 with
                                          | `Debugger_setScriptSource ->
                                              Ojs.string_to_js
                                                "DebuggerSetScriptSource"))|]);
                                 (match x2029 with
                                  | Some x2031 ->
                                      ignore
                                        (Ojs.call x2030 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2032 : Ojs.t) ->
                                                   fun (x2034 : Ojs.t) ->
                                                     x2031
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2032)
                                                       ~params:(inspector_Debugger_SetScriptSourceReturnType_of_js
                                                                  x2034)))|])
                                  | None -> ());
                                 x2030))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_restartFrame ] ->
              ?params:inspector_Debugger_RestartFrameParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_RestartFrameReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2046 : t) ->
            fun ~method_:(x2037 : [ `Debugger_restartFrame ]) ->
              fun
                ?params:(x2038 :
                          inspector_Debugger_RestartFrameParameterType option)
                ->
                fun
                  ?callback:(x2039 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_RestartFrameReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2047 = t_to_js x2046 in
                       Ojs.call (Ojs.get_prop_ascii x2047 "post") "apply"
                         [|x2047;((let x2040 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2040 "push"
                                        [|((match x2037 with
                                            | `Debugger_restartFrame ->
                                                Ojs.string_to_js
                                                  "DebuggerRestartFrame"))|]);
                                   (match x2038 with
                                    | Some x2045 ->
                                        ignore
                                          (Ojs.call x2040 "push"
                                             [|(inspector_Debugger_RestartFrameParameterType_to_js
                                                  x2045)|])
                                    | None -> ());
                                   (match x2039 with
                                    | Some x2041 ->
                                        ignore
                                          (Ojs.call x2040 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2042 : Ojs.t) ->
                                                     fun (x2044 : Ojs.t) ->
                                                       x2041
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2042)
                                                         ~params:(inspector_Debugger_RestartFrameReturnType_of_js
                                                                    x2044)))|])
                                    | None -> ());
                                   x2040))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_restartFrame ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_RestartFrameReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2055 : t) ->
            fun ~method_:(x2048 : [ `Debugger_restartFrame ]) ->
              fun
                ?callback:(x2049 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_RestartFrameReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2056 = t_to_js x2055 in
                     Ojs.call (Ojs.get_prop_ascii x2056 "post") "apply"
                       [|x2056;((let x2050 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2050 "push"
                                      [|((match x2048 with
                                          | `Debugger_restartFrame ->
                                              Ojs.string_to_js
                                                "DebuggerRestartFrame"))|]);
                                 (match x2049 with
                                  | Some x2051 ->
                                      ignore
                                        (Ojs.call x2050 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2052 : Ojs.t) ->
                                                   fun (x2054 : Ojs.t) ->
                                                     x2051
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2052)
                                                       ~params:(inspector_Debugger_RestartFrameReturnType_of_js
                                                                  x2054)))|])
                                  | None -> ());
                                 x2050))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_getScriptSource ] ->
              ?params:inspector_Debugger_GetScriptSourceParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_GetScriptSourceReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2066 : t) ->
            fun ~method_:(x2057 : [ `Debugger_getScriptSource ]) ->
              fun
                ?params:(x2058 :
                          inspector_Debugger_GetScriptSourceParameterType
                            option)
                ->
                fun
                  ?callback:(x2059 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_GetScriptSourceReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2067 = t_to_js x2066 in
                       Ojs.call (Ojs.get_prop_ascii x2067 "post") "apply"
                         [|x2067;((let x2060 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2060 "push"
                                        [|((match x2057 with
                                            | `Debugger_getScriptSource ->
                                                Ojs.string_to_js
                                                  "DebuggerGetScriptSource"))|]);
                                   (match x2058 with
                                    | Some x2065 ->
                                        ignore
                                          (Ojs.call x2060 "push"
                                             [|(inspector_Debugger_GetScriptSourceParameterType_to_js
                                                  x2065)|])
                                    | None -> ());
                                   (match x2059 with
                                    | Some x2061 ->
                                        ignore
                                          (Ojs.call x2060 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2062 : Ojs.t) ->
                                                     fun (x2064 : Ojs.t) ->
                                                       x2061
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2062)
                                                         ~params:(inspector_Debugger_GetScriptSourceReturnType_of_js
                                                                    x2064)))|])
                                    | None -> ());
                                   x2060))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_getScriptSource ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_GetScriptSourceReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2075 : t) ->
            fun ~method_:(x2068 : [ `Debugger_getScriptSource ]) ->
              fun
                ?callback:(x2069 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_GetScriptSourceReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2076 = t_to_js x2075 in
                     Ojs.call (Ojs.get_prop_ascii x2076 "post") "apply"
                       [|x2076;((let x2070 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2070 "push"
                                      [|((match x2068 with
                                          | `Debugger_getScriptSource ->
                                              Ojs.string_to_js
                                                "DebuggerGetScriptSource"))|]);
                                 (match x2069 with
                                  | Some x2071 ->
                                      ignore
                                        (Ojs.call x2070 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2072 : Ojs.t) ->
                                                   fun (x2074 : Ojs.t) ->
                                                     x2071
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2072)
                                                       ~params:(inspector_Debugger_GetScriptSourceReturnType_of_js
                                                                  x2074)))|])
                                  | None -> ());
                                 x2070))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setPauseOnExceptions ] ->
              ?params:inspector_Debugger_SetPauseOnExceptionsParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2085 : t) ->
            fun ~method_:(x2077 : [ `Debugger_setPauseOnExceptions ]) ->
              fun
                ?params:(x2078 :
                          inspector_Debugger_SetPauseOnExceptionsParameterType
                            option)
                ->
                fun ?callback:(x2079 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2086 = t_to_js x2085 in
                       Ojs.call (Ojs.get_prop_ascii x2086 "post") "apply"
                         [|x2086;((let x2080 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2080 "push"
                                        [|((match x2077 with
                                            | `Debugger_setPauseOnExceptions
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetPauseOnExceptions"))|]);
                                   (match x2078 with
                                    | Some x2084 ->
                                        ignore
                                          (Ojs.call x2080 "push"
                                             [|(inspector_Debugger_SetPauseOnExceptionsParameterType_to_js
                                                  x2084)|])
                                    | None -> ());
                                   (match x2079 with
                                    | Some x2081 ->
                                        ignore
                                          (Ojs.call x2080 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2082 : Ojs.t) ->
                                                     x2081
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2082)))|])
                                    | None -> ());
                                   x2080))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setPauseOnExceptions ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2093 : t) ->
            fun ~method_:(x2087 : [ `Debugger_setPauseOnExceptions ]) ->
              fun ?callback:(x2088 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2094 = t_to_js x2093 in
                     Ojs.call (Ojs.get_prop_ascii x2094 "post") "apply"
                       [|x2094;((let x2089 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2089 "push"
                                      [|((match x2087 with
                                          | `Debugger_setPauseOnExceptions ->
                                              Ojs.string_to_js
                                                "DebuggerSetPauseOnExceptions"))|]);
                                 (match x2088 with
                                  | Some x2090 ->
                                      ignore
                                        (Ojs.call x2089 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2091 : Ojs.t) ->
                                                   x2090
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2091)))|])
                                  | None -> ());
                                 x2089))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_evaluateOnCallFrame ] ->
              ?params:inspector_Debugger_EvaluateOnCallFrameParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_Debugger_EvaluateOnCallFrameReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2104 : t) ->
            fun ~method_:(x2095 : [ `Debugger_evaluateOnCallFrame ]) ->
              fun
                ?params:(x2096 :
                          inspector_Debugger_EvaluateOnCallFrameParameterType
                            option)
                ->
                fun
                  ?callback:(x2097 :
                              (err:Error.t or_null ->
                                 params:inspector_Debugger_EvaluateOnCallFrameReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2105 = t_to_js x2104 in
                       Ojs.call (Ojs.get_prop_ascii x2105 "post") "apply"
                         [|x2105;((let x2098 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2098 "push"
                                        [|((match x2095 with
                                            | `Debugger_evaluateOnCallFrame
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerEvaluateOnCallFrame"))|]);
                                   (match x2096 with
                                    | Some x2103 ->
                                        ignore
                                          (Ojs.call x2098 "push"
                                             [|(inspector_Debugger_EvaluateOnCallFrameParameterType_to_js
                                                  x2103)|])
                                    | None -> ());
                                   (match x2097 with
                                    | Some x2099 ->
                                        ignore
                                          (Ojs.call x2098 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2100 : Ojs.t) ->
                                                     fun (x2102 : Ojs.t) ->
                                                       x2099
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2100)
                                                         ~params:(inspector_Debugger_EvaluateOnCallFrameReturnType_of_js
                                                                    x2102)))|])
                                    | None -> ());
                                   x2098))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_evaluateOnCallFrame ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Debugger_EvaluateOnCallFrameReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2113 : t) ->
            fun ~method_:(x2106 : [ `Debugger_evaluateOnCallFrame ]) ->
              fun
                ?callback:(x2107 :
                            (err:Error.t or_null ->
                               params:inspector_Debugger_EvaluateOnCallFrameReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2114 = t_to_js x2113 in
                     Ojs.call (Ojs.get_prop_ascii x2114 "post") "apply"
                       [|x2114;((let x2108 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2108 "push"
                                      [|((match x2106 with
                                          | `Debugger_evaluateOnCallFrame ->
                                              Ojs.string_to_js
                                                "DebuggerEvaluateOnCallFrame"))|]);
                                 (match x2107 with
                                  | Some x2109 ->
                                      ignore
                                        (Ojs.call x2108 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2110 : Ojs.t) ->
                                                   fun (x2112 : Ojs.t) ->
                                                     x2109
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2110)
                                                       ~params:(inspector_Debugger_EvaluateOnCallFrameReturnType_of_js
                                                                  x2112)))|])
                                  | None -> ());
                                 x2108))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setVariableValue ] ->
              ?params:inspector_Debugger_SetVariableValueParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2123 : t) ->
            fun ~method_:(x2115 : [ `Debugger_setVariableValue ]) ->
              fun
                ?params:(x2116 :
                          inspector_Debugger_SetVariableValueParameterType
                            option)
                ->
                fun ?callback:(x2117 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2124 = t_to_js x2123 in
                       Ojs.call (Ojs.get_prop_ascii x2124 "post") "apply"
                         [|x2124;((let x2118 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2118 "push"
                                        [|((match x2115 with
                                            | `Debugger_setVariableValue ->
                                                Ojs.string_to_js
                                                  "DebuggerSetVariableValue"))|]);
                                   (match x2116 with
                                    | Some x2122 ->
                                        ignore
                                          (Ojs.call x2118 "push"
                                             [|(inspector_Debugger_SetVariableValueParameterType_to_js
                                                  x2122)|])
                                    | None -> ());
                                   (match x2117 with
                                    | Some x2119 ->
                                        ignore
                                          (Ojs.call x2118 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2120 : Ojs.t) ->
                                                     x2119
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2120)))|])
                                    | None -> ());
                                   x2118))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setVariableValue ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2131 : t) ->
            fun ~method_:(x2125 : [ `Debugger_setVariableValue ]) ->
              fun ?callback:(x2126 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2132 = t_to_js x2131 in
                     Ojs.call (Ojs.get_prop_ascii x2132 "post") "apply"
                       [|x2132;((let x2127 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2127 "push"
                                      [|((match x2125 with
                                          | `Debugger_setVariableValue ->
                                              Ojs.string_to_js
                                                "DebuggerSetVariableValue"))|]);
                                 (match x2126 with
                                  | Some x2128 ->
                                      ignore
                                        (Ojs.call x2127 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2129 : Ojs.t) ->
                                                   x2128
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2129)))|])
                                  | None -> ());
                                 x2127))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setReturnValue ] ->
              ?params:inspector_Debugger_SetReturnValueParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2141 : t) ->
            fun ~method_:(x2133 : [ `Debugger_setReturnValue ]) ->
              fun
                ?params:(x2134 :
                          inspector_Debugger_SetReturnValueParameterType
                            option)
                ->
                fun ?callback:(x2135 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2142 = t_to_js x2141 in
                       Ojs.call (Ojs.get_prop_ascii x2142 "post") "apply"
                         [|x2142;((let x2136 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2136 "push"
                                        [|((match x2133 with
                                            | `Debugger_setReturnValue ->
                                                Ojs.string_to_js
                                                  "DebuggerSetReturnValue"))|]);
                                   (match x2134 with
                                    | Some x2140 ->
                                        ignore
                                          (Ojs.call x2136 "push"
                                             [|(inspector_Debugger_SetReturnValueParameterType_to_js
                                                  x2140)|])
                                    | None -> ());
                                   (match x2135 with
                                    | Some x2137 ->
                                        ignore
                                          (Ojs.call x2136 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2138 : Ojs.t) ->
                                                     x2137
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2138)))|])
                                    | None -> ());
                                   x2136))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setReturnValue ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2149 : t) ->
            fun ~method_:(x2143 : [ `Debugger_setReturnValue ]) ->
              fun ?callback:(x2144 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2150 = t_to_js x2149 in
                     Ojs.call (Ojs.get_prop_ascii x2150 "post") "apply"
                       [|x2150;((let x2145 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2145 "push"
                                      [|((match x2143 with
                                          | `Debugger_setReturnValue ->
                                              Ojs.string_to_js
                                                "DebuggerSetReturnValue"))|]);
                                 (match x2144 with
                                  | Some x2146 ->
                                      ignore
                                        (Ojs.call x2145 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2147 : Ojs.t) ->
                                                   x2146
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2147)))|])
                                  | None -> ());
                                 x2145))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setAsyncCallStackDepth ] ->
              ?params:inspector_Debugger_SetAsyncCallStackDepthParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2159 : t) ->
            fun ~method_:(x2151 : [ `Debugger_setAsyncCallStackDepth ]) ->
              fun
                ?params:(x2152 :
                          inspector_Debugger_SetAsyncCallStackDepthParameterType
                            option)
                ->
                fun ?callback:(x2153 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2160 = t_to_js x2159 in
                       Ojs.call (Ojs.get_prop_ascii x2160 "post") "apply"
                         [|x2160;((let x2154 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2154 "push"
                                        [|((match x2151 with
                                            | `Debugger_setAsyncCallStackDepth
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetAsyncCallStackDepth"))|]);
                                   (match x2152 with
                                    | Some x2158 ->
                                        ignore
                                          (Ojs.call x2154 "push"
                                             [|(inspector_Debugger_SetAsyncCallStackDepthParameterType_to_js
                                                  x2158)|])
                                    | None -> ());
                                   (match x2153 with
                                    | Some x2155 ->
                                        ignore
                                          (Ojs.call x2154 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2156 : Ojs.t) ->
                                                     x2155
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2156)))|])
                                    | None -> ());
                                   x2154))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setAsyncCallStackDepth ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2167 : t) ->
            fun ~method_:(x2161 : [ `Debugger_setAsyncCallStackDepth ]) ->
              fun ?callback:(x2162 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2168 = t_to_js x2167 in
                     Ojs.call (Ojs.get_prop_ascii x2168 "post") "apply"
                       [|x2168;((let x2163 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2163 "push"
                                      [|((match x2161 with
                                          | `Debugger_setAsyncCallStackDepth
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerSetAsyncCallStackDepth"))|]);
                                 (match x2162 with
                                  | Some x2164 ->
                                      ignore
                                        (Ojs.call x2163 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2165 : Ojs.t) ->
                                                   x2164
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2165)))|])
                                  | None -> ());
                                 x2163))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxPatterns ] ->
              ?params:inspector_Debugger_SetBlackboxPatternsParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2177 : t) ->
            fun ~method_:(x2169 : [ `Debugger_setBlackboxPatterns ]) ->
              fun
                ?params:(x2170 :
                          inspector_Debugger_SetBlackboxPatternsParameterType
                            option)
                ->
                fun ?callback:(x2171 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2178 = t_to_js x2177 in
                       Ojs.call (Ojs.get_prop_ascii x2178 "post") "apply"
                         [|x2178;((let x2172 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2172 "push"
                                        [|((match x2169 with
                                            | `Debugger_setBlackboxPatterns
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBlackboxPatterns"))|]);
                                   (match x2170 with
                                    | Some x2176 ->
                                        ignore
                                          (Ojs.call x2172 "push"
                                             [|(inspector_Debugger_SetBlackboxPatternsParameterType_to_js
                                                  x2176)|])
                                    | None -> ());
                                   (match x2171 with
                                    | Some x2173 ->
                                        ignore
                                          (Ojs.call x2172 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2174 : Ojs.t) ->
                                                     x2173
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2174)))|])
                                    | None -> ());
                                   x2172))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxPatterns ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2185 : t) ->
            fun ~method_:(x2179 : [ `Debugger_setBlackboxPatterns ]) ->
              fun ?callback:(x2180 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2186 = t_to_js x2185 in
                     Ojs.call (Ojs.get_prop_ascii x2186 "post") "apply"
                       [|x2186;((let x2181 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2181 "push"
                                      [|((match x2179 with
                                          | `Debugger_setBlackboxPatterns ->
                                              Ojs.string_to_js
                                                "DebuggerSetBlackboxPatterns"))|]);
                                 (match x2180 with
                                  | Some x2182 ->
                                      ignore
                                        (Ojs.call x2181 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2183 : Ojs.t) ->
                                                   x2182
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2183)))|])
                                  | None -> ());
                                 x2181))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxedRanges ] ->
              ?params:inspector_Debugger_SetBlackboxedRangesParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2195 : t) ->
            fun ~method_:(x2187 : [ `Debugger_setBlackboxedRanges ]) ->
              fun
                ?params:(x2188 :
                          inspector_Debugger_SetBlackboxedRangesParameterType
                            option)
                ->
                fun ?callback:(x2189 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2196 = t_to_js x2195 in
                       Ojs.call (Ojs.get_prop_ascii x2196 "post") "apply"
                         [|x2196;((let x2190 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2190 "push"
                                        [|((match x2187 with
                                            | `Debugger_setBlackboxedRanges
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBlackboxedRanges"))|]);
                                   (match x2188 with
                                    | Some x2194 ->
                                        ignore
                                          (Ojs.call x2190 "push"
                                             [|(inspector_Debugger_SetBlackboxedRangesParameterType_to_js
                                                  x2194)|])
                                    | None -> ());
                                   (match x2189 with
                                    | Some x2191 ->
                                        ignore
                                          (Ojs.call x2190 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2192 : Ojs.t) ->
                                                     x2191
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2192)))|])
                                    | None -> ());
                                   x2190))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxedRanges ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2203 : t) ->
            fun ~method_:(x2197 : [ `Debugger_setBlackboxedRanges ]) ->
              fun ?callback:(x2198 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2204 = t_to_js x2203 in
                     Ojs.call (Ojs.get_prop_ascii x2204 "post") "apply"
                       [|x2204;((let x2199 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2199 "push"
                                      [|((match x2197 with
                                          | `Debugger_setBlackboxedRanges ->
                                              Ojs.string_to_js
                                                "DebuggerSetBlackboxedRanges"))|]);
                                 (match x2198 with
                                  | Some x2200 ->
                                      ignore
                                        (Ojs.call x2199 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2201 : Ojs.t) ->
                                                   x2200
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2201)))|])
                                  | None -> ());
                                 x2199))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2211 : t) ->
            fun ~method_:(x2205 : [ `Console_enable ]) ->
              fun ?callback:(x2206 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2212 = t_to_js x2211 in
                     Ojs.call (Ojs.get_prop_ascii x2212 "post") "apply"
                       [|x2212;((let x2207 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2207 "push"
                                      [|((match x2205 with
                                          | `Console_enable ->
                                              Ojs.string_to_js
                                                "ConsoleEnable"))|]);
                                 (match x2206 with
                                  | Some x2208 ->
                                      ignore
                                        (Ojs.call x2207 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2209 : Ojs.t) ->
                                                   x2208
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2209)))|])
                                  | None -> ());
                                 x2207))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2219 : t) ->
            fun ~method_:(x2213 : [ `Console_disable ]) ->
              fun ?callback:(x2214 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2220 = t_to_js x2219 in
                     Ojs.call (Ojs.get_prop_ascii x2220 "post") "apply"
                       [|x2220;((let x2215 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2215 "push"
                                      [|((match x2213 with
                                          | `Console_disable ->
                                              Ojs.string_to_js
                                                "ConsoleDisable"))|]);
                                 (match x2214 with
                                  | Some x2216 ->
                                      ignore
                                        (Ojs.call x2215 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2217 : Ojs.t) ->
                                                   x2216
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2217)))|])
                                  | None -> ());
                                 x2215))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_clearMessages ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2227 : t) ->
            fun ~method_:(x2221 : [ `Console_clearMessages ]) ->
              fun ?callback:(x2222 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2228 = t_to_js x2227 in
                     Ojs.call (Ojs.get_prop_ascii x2228 "post") "apply"
                       [|x2228;((let x2223 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2223 "push"
                                      [|((match x2221 with
                                          | `Console_clearMessages ->
                                              Ojs.string_to_js
                                                "ConsoleClearMessages"))|]);
                                 (match x2222 with
                                  | Some x2224 ->
                                      ignore
                                        (Ojs.call x2223 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2225 : Ojs.t) ->
                                                   x2224
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2225)))|])
                                  | None -> ());
                                 x2223))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2235 : t) ->
            fun ~method_:(x2229 : [ `Profiler_enable ]) ->
              fun ?callback:(x2230 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2236 = t_to_js x2235 in
                     Ojs.call (Ojs.get_prop_ascii x2236 "post") "apply"
                       [|x2236;((let x2231 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2231 "push"
                                      [|((match x2229 with
                                          | `Profiler_enable ->
                                              Ojs.string_to_js
                                                "ProfilerEnable"))|]);
                                 (match x2230 with
                                  | Some x2232 ->
                                      ignore
                                        (Ojs.call x2231 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2233 : Ojs.t) ->
                                                   x2232
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2233)))|])
                                  | None -> ());
                                 x2231))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2243 : t) ->
            fun ~method_:(x2237 : [ `Profiler_disable ]) ->
              fun ?callback:(x2238 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2244 = t_to_js x2243 in
                     Ojs.call (Ojs.get_prop_ascii x2244 "post") "apply"
                       [|x2244;((let x2239 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2239 "push"
                                      [|((match x2237 with
                                          | `Profiler_disable ->
                                              Ojs.string_to_js
                                                "ProfilerDisable"))|]);
                                 (match x2238 with
                                  | Some x2240 ->
                                      ignore
                                        (Ojs.call x2239 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2241 : Ojs.t) ->
                                                   x2240
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2241)))|])
                                  | None -> ());
                                 x2239))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_setSamplingInterval ] ->
              ?params:inspector_Profiler_SetSamplingIntervalParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2253 : t) ->
            fun ~method_:(x2245 : [ `Profiler_setSamplingInterval ]) ->
              fun
                ?params:(x2246 :
                          inspector_Profiler_SetSamplingIntervalParameterType
                            option)
                ->
                fun ?callback:(x2247 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2254 = t_to_js x2253 in
                       Ojs.call (Ojs.get_prop_ascii x2254 "post") "apply"
                         [|x2254;((let x2248 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2248 "push"
                                        [|((match x2245 with
                                            | `Profiler_setSamplingInterval
                                                ->
                                                Ojs.string_to_js
                                                  "ProfilerSetSamplingInterval"))|]);
                                   (match x2246 with
                                    | Some x2252 ->
                                        ignore
                                          (Ojs.call x2248 "push"
                                             [|(inspector_Profiler_SetSamplingIntervalParameterType_to_js
                                                  x2252)|])
                                    | None -> ());
                                   (match x2247 with
                                    | Some x2249 ->
                                        ignore
                                          (Ojs.call x2248 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2250 : Ojs.t) ->
                                                     x2249
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2250)))|])
                                    | None -> ());
                                   x2248))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_setSamplingInterval ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2261 : t) ->
            fun ~method_:(x2255 : [ `Profiler_setSamplingInterval ]) ->
              fun ?callback:(x2256 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2262 = t_to_js x2261 in
                     Ojs.call (Ojs.get_prop_ascii x2262 "post") "apply"
                       [|x2262;((let x2257 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2257 "push"
                                      [|((match x2255 with
                                          | `Profiler_setSamplingInterval ->
                                              Ojs.string_to_js
                                                "ProfilerSetSamplingInterval"))|]);
                                 (match x2256 with
                                  | Some x2258 ->
                                      ignore
                                        (Ojs.call x2257 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2259 : Ojs.t) ->
                                                   x2258
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2259)))|])
                                  | None -> ());
                                 x2257))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_start ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2269 : t) ->
            fun ~method_:(x2263 : [ `Profiler_start ]) ->
              fun ?callback:(x2264 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2270 = t_to_js x2269 in
                     Ojs.call (Ojs.get_prop_ascii x2270 "post") "apply"
                       [|x2270;((let x2265 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2265 "push"
                                      [|((match x2263 with
                                          | `Profiler_start ->
                                              Ojs.string_to_js
                                                "ProfilerStart"))|]);
                                 (match x2264 with
                                  | Some x2266 ->
                                      ignore
                                        (Ojs.call x2265 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2267 : Ojs.t) ->
                                                   x2266
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2267)))|])
                                  | None -> ());
                                 x2265))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stop ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Profiler_StopReturnType -> unit)
                -> unit -> unit)
          =
          fun (x2278 : t) ->
            fun ~method_:(x2271 : [ `Profiler_stop ]) ->
              fun
                ?callback:(x2272 :
                            (err:Error.t or_null ->
                               params:inspector_Profiler_StopReturnType ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2279 = t_to_js x2278 in
                     Ojs.call (Ojs.get_prop_ascii x2279 "post") "apply"
                       [|x2279;((let x2273 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2273 "push"
                                      [|((match x2271 with
                                          | `Profiler_stop ->
                                              Ojs.string_to_js "ProfilerStop"))|]);
                                 (match x2272 with
                                  | Some x2274 ->
                                      ignore
                                        (Ojs.call x2273 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2275 : Ojs.t) ->
                                                   fun (x2277 : Ojs.t) ->
                                                     x2274
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2275)
                                                       ~params:(inspector_Profiler_StopReturnType_of_js
                                                                  x2277)))|])
                                  | None -> ());
                                 x2273))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startPreciseCoverage ] ->
              ?params:inspector_Profiler_StartPreciseCoverageParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2288 : t) ->
            fun ~method_:(x2280 : [ `Profiler_startPreciseCoverage ]) ->
              fun
                ?params:(x2281 :
                          inspector_Profiler_StartPreciseCoverageParameterType
                            option)
                ->
                fun ?callback:(x2282 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2289 = t_to_js x2288 in
                       Ojs.call (Ojs.get_prop_ascii x2289 "post") "apply"
                         [|x2289;((let x2283 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2283 "push"
                                        [|((match x2280 with
                                            | `Profiler_startPreciseCoverage
                                                ->
                                                Ojs.string_to_js
                                                  "ProfilerStartPreciseCoverage"))|]);
                                   (match x2281 with
                                    | Some x2287 ->
                                        ignore
                                          (Ojs.call x2283 "push"
                                             [|(inspector_Profiler_StartPreciseCoverageParameterType_to_js
                                                  x2287)|])
                                    | None -> ());
                                   (match x2282 with
                                    | Some x2284 ->
                                        ignore
                                          (Ojs.call x2283 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2285 : Ojs.t) ->
                                                     x2284
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2285)))|])
                                    | None -> ());
                                   x2283))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startPreciseCoverage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2296 : t) ->
            fun ~method_:(x2290 : [ `Profiler_startPreciseCoverage ]) ->
              fun ?callback:(x2291 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2297 = t_to_js x2296 in
                     Ojs.call (Ojs.get_prop_ascii x2297 "post") "apply"
                       [|x2297;((let x2292 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2292 "push"
                                      [|((match x2290 with
                                          | `Profiler_startPreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerStartPreciseCoverage"))|]);
                                 (match x2291 with
                                  | Some x2293 ->
                                      ignore
                                        (Ojs.call x2292 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2294 : Ojs.t) ->
                                                   x2293
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2294)))|])
                                  | None -> ());
                                 x2292))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stopPreciseCoverage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2304 : t) ->
            fun ~method_:(x2298 : [ `Profiler_stopPreciseCoverage ]) ->
              fun ?callback:(x2299 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2305 = t_to_js x2304 in
                     Ojs.call (Ojs.get_prop_ascii x2305 "post") "apply"
                       [|x2305;((let x2300 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2300 "push"
                                      [|((match x2298 with
                                          | `Profiler_stopPreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerStopPreciseCoverage"))|]);
                                 (match x2299 with
                                  | Some x2301 ->
                                      ignore
                                        (Ojs.call x2300 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2302 : Ojs.t) ->
                                                   x2301
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2302)))|])
                                  | None -> ());
                                 x2300))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_takePreciseCoverage ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Profiler_TakePreciseCoverageReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2313 : t) ->
            fun ~method_:(x2306 : [ `Profiler_takePreciseCoverage ]) ->
              fun
                ?callback:(x2307 :
                            (err:Error.t or_null ->
                               params:inspector_Profiler_TakePreciseCoverageReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2314 = t_to_js x2313 in
                     Ojs.call (Ojs.get_prop_ascii x2314 "post") "apply"
                       [|x2314;((let x2308 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2308 "push"
                                      [|((match x2306 with
                                          | `Profiler_takePreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerTakePreciseCoverage"))|]);
                                 (match x2307 with
                                  | Some x2309 ->
                                      ignore
                                        (Ojs.call x2308 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2310 : Ojs.t) ->
                                                   fun (x2312 : Ojs.t) ->
                                                     x2309
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2310)
                                                       ~params:(inspector_Profiler_TakePreciseCoverageReturnType_of_js
                                                                  x2312)))|])
                                  | None -> ());
                                 x2308))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_getBestEffortCoverage ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Profiler_GetBestEffortCoverageReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2322 : t) ->
            fun ~method_:(x2315 : [ `Profiler_getBestEffortCoverage ]) ->
              fun
                ?callback:(x2316 :
                            (err:Error.t or_null ->
                               params:inspector_Profiler_GetBestEffortCoverageReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2323 = t_to_js x2322 in
                     Ojs.call (Ojs.get_prop_ascii x2323 "post") "apply"
                       [|x2323;((let x2317 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2317 "push"
                                      [|((match x2315 with
                                          | `Profiler_getBestEffortCoverage
                                              ->
                                              Ojs.string_to_js
                                                "ProfilerGetBestEffortCoverage"))|]);
                                 (match x2316 with
                                  | Some x2318 ->
                                      ignore
                                        (Ojs.call x2317 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2319 : Ojs.t) ->
                                                   fun (x2321 : Ojs.t) ->
                                                     x2318
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2319)
                                                       ~params:(inspector_Profiler_GetBestEffortCoverageReturnType_of_js
                                                                  x2321)))|])
                                  | None -> ());
                                 x2317))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startTypeProfile ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2330 : t) ->
            fun ~method_:(x2324 : [ `Profiler_startTypeProfile ]) ->
              fun ?callback:(x2325 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2331 = t_to_js x2330 in
                     Ojs.call (Ojs.get_prop_ascii x2331 "post") "apply"
                       [|x2331;((let x2326 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2326 "push"
                                      [|((match x2324 with
                                          | `Profiler_startTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerStartTypeProfile"))|]);
                                 (match x2325 with
                                  | Some x2327 ->
                                      ignore
                                        (Ojs.call x2326 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2328 : Ojs.t) ->
                                                   x2327
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2328)))|])
                                  | None -> ());
                                 x2326))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stopTypeProfile ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2338 : t) ->
            fun ~method_:(x2332 : [ `Profiler_stopTypeProfile ]) ->
              fun ?callback:(x2333 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2339 = t_to_js x2338 in
                     Ojs.call (Ojs.get_prop_ascii x2339 "post") "apply"
                       [|x2339;((let x2334 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2334 "push"
                                      [|((match x2332 with
                                          | `Profiler_stopTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerStopTypeProfile"))|]);
                                 (match x2333 with
                                  | Some x2335 ->
                                      ignore
                                        (Ojs.call x2334 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2336 : Ojs.t) ->
                                                   x2335
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2336)))|])
                                  | None -> ());
                                 x2334))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_takeTypeProfile ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_Profiler_TakeTypeProfileReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2347 : t) ->
            fun ~method_:(x2340 : [ `Profiler_takeTypeProfile ]) ->
              fun
                ?callback:(x2341 :
                            (err:Error.t or_null ->
                               params:inspector_Profiler_TakeTypeProfileReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2348 = t_to_js x2347 in
                     Ojs.call (Ojs.get_prop_ascii x2348 "post") "apply"
                       [|x2348;((let x2342 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2342 "push"
                                      [|((match x2340 with
                                          | `Profiler_takeTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerTakeTypeProfile"))|]);
                                 (match x2341 with
                                  | Some x2343 ->
                                      ignore
                                        (Ojs.call x2342 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2344 : Ojs.t) ->
                                                   fun (x2346 : Ojs.t) ->
                                                     x2343
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2344)
                                                       ~params:(inspector_Profiler_TakeTypeProfileReturnType_of_js
                                                                  x2346)))|])
                                  | None -> ());
                                 x2342))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2355 : t) ->
            fun ~method_:(x2349 : [ `HeapProfiler_enable ]) ->
              fun ?callback:(x2350 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2356 = t_to_js x2355 in
                     Ojs.call (Ojs.get_prop_ascii x2356 "post") "apply"
                       [|x2356;((let x2351 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2351 "push"
                                      [|((match x2349 with
                                          | `HeapProfiler_enable ->
                                              Ojs.string_to_js
                                                "HeapProfilerEnable"))|]);
                                 (match x2350 with
                                  | Some x2352 ->
                                      ignore
                                        (Ojs.call x2351 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2353 : Ojs.t) ->
                                                   x2352
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2353)))|])
                                  | None -> ());
                                 x2351))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2363 : t) ->
            fun ~method_:(x2357 : [ `HeapProfiler_disable ]) ->
              fun ?callback:(x2358 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2364 = t_to_js x2363 in
                     Ojs.call (Ojs.get_prop_ascii x2364 "post") "apply"
                       [|x2364;((let x2359 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2359 "push"
                                      [|((match x2357 with
                                          | `HeapProfiler_disable ->
                                              Ojs.string_to_js
                                                "HeapProfilerDisable"))|]);
                                 (match x2358 with
                                  | Some x2360 ->
                                      ignore
                                        (Ojs.call x2359 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2361 : Ojs.t) ->
                                                   x2360
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2361)))|])
                                  | None -> ());
                                 x2359))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startTrackingHeapObjects ] ->
              ?params:inspector_HeapProfiler_StartTrackingHeapObjectsParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2373 : t) ->
            fun ~method_:(x2365 : [ `HeapProfiler_startTrackingHeapObjects ])
              ->
              fun
                ?params:(x2366 :
                          inspector_HeapProfiler_StartTrackingHeapObjectsParameterType
                            option)
                ->
                fun ?callback:(x2367 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2374 = t_to_js x2373 in
                       Ojs.call (Ojs.get_prop_ascii x2374 "post") "apply"
                         [|x2374;((let x2368 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2368 "push"
                                        [|((match x2365 with
                                            | `HeapProfiler_startTrackingHeapObjects
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStartTrackingHeapObjects"))|]);
                                   (match x2366 with
                                    | Some x2372 ->
                                        ignore
                                          (Ojs.call x2368 "push"
                                             [|(inspector_HeapProfiler_StartTrackingHeapObjectsParameterType_to_js
                                                  x2372)|])
                                    | None -> ());
                                   (match x2367 with
                                    | Some x2369 ->
                                        ignore
                                          (Ojs.call x2368 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2370 : Ojs.t) ->
                                                     x2369
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2370)))|])
                                    | None -> ());
                                   x2368))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startTrackingHeapObjects ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2381 : t) ->
            fun ~method_:(x2375 : [ `HeapProfiler_startTrackingHeapObjects ])
              ->
              fun ?callback:(x2376 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2382 = t_to_js x2381 in
                     Ojs.call (Ojs.get_prop_ascii x2382 "post") "apply"
                       [|x2382;((let x2377 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2377 "push"
                                      [|((match x2375 with
                                          | `HeapProfiler_startTrackingHeapObjects
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerStartTrackingHeapObjects"))|]);
                                 (match x2376 with
                                  | Some x2378 ->
                                      ignore
                                        (Ojs.call x2377 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2379 : Ojs.t) ->
                                                   x2378
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2379)))|])
                                  | None -> ());
                                 x2377))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopTrackingHeapObjects ] ->
              ?params:inspector_HeapProfiler_StopTrackingHeapObjectsParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2391 : t) ->
            fun ~method_:(x2383 : [ `HeapProfiler_stopTrackingHeapObjects ])
              ->
              fun
                ?params:(x2384 :
                          inspector_HeapProfiler_StopTrackingHeapObjectsParameterType
                            option)
                ->
                fun ?callback:(x2385 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2392 = t_to_js x2391 in
                       Ojs.call (Ojs.get_prop_ascii x2392 "post") "apply"
                         [|x2392;((let x2386 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2386 "push"
                                        [|((match x2383 with
                                            | `HeapProfiler_stopTrackingHeapObjects
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStopTrackingHeapObjects"))|]);
                                   (match x2384 with
                                    | Some x2390 ->
                                        ignore
                                          (Ojs.call x2386 "push"
                                             [|(inspector_HeapProfiler_StopTrackingHeapObjectsParameterType_to_js
                                                  x2390)|])
                                    | None -> ());
                                   (match x2385 with
                                    | Some x2387 ->
                                        ignore
                                          (Ojs.call x2386 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2388 : Ojs.t) ->
                                                     x2387
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2388)))|])
                                    | None -> ());
                                   x2386))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopTrackingHeapObjects ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2399 : t) ->
            fun ~method_:(x2393 : [ `HeapProfiler_stopTrackingHeapObjects ])
              ->
              fun ?callback:(x2394 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2400 = t_to_js x2399 in
                     Ojs.call (Ojs.get_prop_ascii x2400 "post") "apply"
                       [|x2400;((let x2395 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2395 "push"
                                      [|((match x2393 with
                                          | `HeapProfiler_stopTrackingHeapObjects
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerStopTrackingHeapObjects"))|]);
                                 (match x2394 with
                                  | Some x2396 ->
                                      ignore
                                        (Ojs.call x2395 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2397 : Ojs.t) ->
                                                   x2396
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2397)))|])
                                  | None -> ());
                                 x2395))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_takeHeapSnapshot ] ->
              ?params:inspector_HeapProfiler_TakeHeapSnapshotParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2409 : t) ->
            fun ~method_:(x2401 : [ `HeapProfiler_takeHeapSnapshot ]) ->
              fun
                ?params:(x2402 :
                          inspector_HeapProfiler_TakeHeapSnapshotParameterType
                            option)
                ->
                fun ?callback:(x2403 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2410 = t_to_js x2409 in
                       Ojs.call (Ojs.get_prop_ascii x2410 "post") "apply"
                         [|x2410;((let x2404 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2404 "push"
                                        [|((match x2401 with
                                            | `HeapProfiler_takeHeapSnapshot
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerTakeHeapSnapshot"))|]);
                                   (match x2402 with
                                    | Some x2408 ->
                                        ignore
                                          (Ojs.call x2404 "push"
                                             [|(inspector_HeapProfiler_TakeHeapSnapshotParameterType_to_js
                                                  x2408)|])
                                    | None -> ());
                                   (match x2403 with
                                    | Some x2405 ->
                                        ignore
                                          (Ojs.call x2404 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2406 : Ojs.t) ->
                                                     x2405
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2406)))|])
                                    | None -> ());
                                   x2404))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_takeHeapSnapshot ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2417 : t) ->
            fun ~method_:(x2411 : [ `HeapProfiler_takeHeapSnapshot ]) ->
              fun ?callback:(x2412 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2418 = t_to_js x2417 in
                     Ojs.call (Ojs.get_prop_ascii x2418 "post") "apply"
                       [|x2418;((let x2413 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2413 "push"
                                      [|((match x2411 with
                                          | `HeapProfiler_takeHeapSnapshot ->
                                              Ojs.string_to_js
                                                "HeapProfilerTakeHeapSnapshot"))|]);
                                 (match x2412 with
                                  | Some x2414 ->
                                      ignore
                                        (Ojs.call x2413 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2415 : Ojs.t) ->
                                                   x2414
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2415)))|])
                                  | None -> ());
                                 x2413))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_collectGarbage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2425 : t) ->
            fun ~method_:(x2419 : [ `HeapProfiler_collectGarbage ]) ->
              fun ?callback:(x2420 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2426 = t_to_js x2425 in
                     Ojs.call (Ojs.get_prop_ascii x2426 "post") "apply"
                       [|x2426;((let x2421 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2421 "push"
                                      [|((match x2419 with
                                          | `HeapProfiler_collectGarbage ->
                                              Ojs.string_to_js
                                                "HeapProfilerCollectGarbage"))|]);
                                 (match x2420 with
                                  | Some x2422 ->
                                      ignore
                                        (Ojs.call x2421 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2423 : Ojs.t) ->
                                                   x2422
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2423)))|])
                                  | None -> ());
                                 x2421))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getObjectByHeapObjectId ] ->
              ?params:inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType
                ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2436 : t) ->
            fun ~method_:(x2427 : [ `HeapProfiler_getObjectByHeapObjectId ])
              ->
              fun
                ?params:(x2428 :
                          inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType
                            option)
                ->
                fun
                  ?callback:(x2429 :
                              (err:Error.t or_null ->
                                 params:inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2437 = t_to_js x2436 in
                       Ojs.call (Ojs.get_prop_ascii x2437 "post") "apply"
                         [|x2437;((let x2430 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2430 "push"
                                        [|((match x2427 with
                                            | `HeapProfiler_getObjectByHeapObjectId
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerGetObjectByHeapObjectId"))|]);
                                   (match x2428 with
                                    | Some x2435 ->
                                        ignore
                                          (Ojs.call x2430 "push"
                                             [|(inspector_HeapProfiler_GetObjectByHeapObjectIdParameterType_to_js
                                                  x2435)|])
                                    | None -> ());
                                   (match x2429 with
                                    | Some x2431 ->
                                        ignore
                                          (Ojs.call x2430 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2432 : Ojs.t) ->
                                                     fun (x2434 : Ojs.t) ->
                                                       x2431
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2432)
                                                         ~params:(inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType_of_js
                                                                    x2434)))|])
                                    | None -> ());
                                   x2430))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getObjectByHeapObjectId ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2445 : t) ->
            fun ~method_:(x2438 : [ `HeapProfiler_getObjectByHeapObjectId ])
              ->
              fun
                ?callback:(x2439 :
                            (err:Error.t or_null ->
                               params:inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2446 = t_to_js x2445 in
                     Ojs.call (Ojs.get_prop_ascii x2446 "post") "apply"
                       [|x2446;((let x2440 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2440 "push"
                                      [|((match x2438 with
                                          | `HeapProfiler_getObjectByHeapObjectId
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetObjectByHeapObjectId"))|]);
                                 (match x2439 with
                                  | Some x2441 ->
                                      ignore
                                        (Ojs.call x2440 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2442 : Ojs.t) ->
                                                   fun (x2444 : Ojs.t) ->
                                                     x2441
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2442)
                                                       ~params:(inspector_HeapProfiler_GetObjectByHeapObjectIdReturnType_of_js
                                                                  x2444)))|])
                                  | None -> ());
                                 x2440))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_addInspectedHeapObject ] ->
              ?params:inspector_HeapProfiler_AddInspectedHeapObjectParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2455 : t) ->
            fun ~method_:(x2447 : [ `HeapProfiler_addInspectedHeapObject ])
              ->
              fun
                ?params:(x2448 :
                          inspector_HeapProfiler_AddInspectedHeapObjectParameterType
                            option)
                ->
                fun ?callback:(x2449 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2456 = t_to_js x2455 in
                       Ojs.call (Ojs.get_prop_ascii x2456 "post") "apply"
                         [|x2456;((let x2450 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2450 "push"
                                        [|((match x2447 with
                                            | `HeapProfiler_addInspectedHeapObject
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerAddInspectedHeapObject"))|]);
                                   (match x2448 with
                                    | Some x2454 ->
                                        ignore
                                          (Ojs.call x2450 "push"
                                             [|(inspector_HeapProfiler_AddInspectedHeapObjectParameterType_to_js
                                                  x2454)|])
                                    | None -> ());
                                   (match x2449 with
                                    | Some x2451 ->
                                        ignore
                                          (Ojs.call x2450 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2452 : Ojs.t) ->
                                                     x2451
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2452)))|])
                                    | None -> ());
                                   x2450))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_addInspectedHeapObject ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2463 : t) ->
            fun ~method_:(x2457 : [ `HeapProfiler_addInspectedHeapObject ])
              ->
              fun ?callback:(x2458 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2464 = t_to_js x2463 in
                     Ojs.call (Ojs.get_prop_ascii x2464 "post") "apply"
                       [|x2464;((let x2459 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2459 "push"
                                      [|((match x2457 with
                                          | `HeapProfiler_addInspectedHeapObject
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerAddInspectedHeapObject"))|]);
                                 (match x2458 with
                                  | Some x2460 ->
                                      ignore
                                        (Ojs.call x2459 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2461 : Ojs.t) ->
                                                   x2460
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2461)))|])
                                  | None -> ());
                                 x2459))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getHeapObjectId ] ->
              ?params:inspector_HeapProfiler_GetHeapObjectIdParameterType ->
                ?callback:(err:Error.t or_null ->
                             params:inspector_HeapProfiler_GetHeapObjectIdReturnType
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2474 : t) ->
            fun ~method_:(x2465 : [ `HeapProfiler_getHeapObjectId ]) ->
              fun
                ?params:(x2466 :
                          inspector_HeapProfiler_GetHeapObjectIdParameterType
                            option)
                ->
                fun
                  ?callback:(x2467 :
                              (err:Error.t or_null ->
                                 params:inspector_HeapProfiler_GetHeapObjectIdReturnType
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2475 = t_to_js x2474 in
                       Ojs.call (Ojs.get_prop_ascii x2475 "post") "apply"
                         [|x2475;((let x2468 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2468 "push"
                                        [|((match x2465 with
                                            | `HeapProfiler_getHeapObjectId
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerGetHeapObjectId"))|]);
                                   (match x2466 with
                                    | Some x2473 ->
                                        ignore
                                          (Ojs.call x2468 "push"
                                             [|(inspector_HeapProfiler_GetHeapObjectIdParameterType_to_js
                                                  x2473)|])
                                    | None -> ());
                                   (match x2467 with
                                    | Some x2469 ->
                                        ignore
                                          (Ojs.call x2468 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2470 : Ojs.t) ->
                                                     fun (x2472 : Ojs.t) ->
                                                       x2469
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2470)
                                                         ~params:(inspector_HeapProfiler_GetHeapObjectIdReturnType_of_js
                                                                    x2472)))|])
                                    | None -> ());
                                   x2468))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getHeapObjectId ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_HeapProfiler_GetHeapObjectIdReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2483 : t) ->
            fun ~method_:(x2476 : [ `HeapProfiler_getHeapObjectId ]) ->
              fun
                ?callback:(x2477 :
                            (err:Error.t or_null ->
                               params:inspector_HeapProfiler_GetHeapObjectIdReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2484 = t_to_js x2483 in
                     Ojs.call (Ojs.get_prop_ascii x2484 "post") "apply"
                       [|x2484;((let x2478 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2478 "push"
                                      [|((match x2476 with
                                          | `HeapProfiler_getHeapObjectId ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetHeapObjectId"))|]);
                                 (match x2477 with
                                  | Some x2479 ->
                                      ignore
                                        (Ojs.call x2478 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2480 : Ojs.t) ->
                                                   fun (x2482 : Ojs.t) ->
                                                     x2479
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2480)
                                                       ~params:(inspector_HeapProfiler_GetHeapObjectIdReturnType_of_js
                                                                  x2482)))|])
                                  | None -> ());
                                 x2478))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startSampling ] ->
              ?params:inspector_HeapProfiler_StartSamplingParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2493 : t) ->
            fun ~method_:(x2485 : [ `HeapProfiler_startSampling ]) ->
              fun
                ?params:(x2486 :
                          inspector_HeapProfiler_StartSamplingParameterType
                            option)
                ->
                fun ?callback:(x2487 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2494 = t_to_js x2493 in
                       Ojs.call (Ojs.get_prop_ascii x2494 "post") "apply"
                         [|x2494;((let x2488 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2488 "push"
                                        [|((match x2485 with
                                            | `HeapProfiler_startSampling ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStartSampling"))|]);
                                   (match x2486 with
                                    | Some x2492 ->
                                        ignore
                                          (Ojs.call x2488 "push"
                                             [|(inspector_HeapProfiler_StartSamplingParameterType_to_js
                                                  x2492)|])
                                    | None -> ());
                                   (match x2487 with
                                    | Some x2489 ->
                                        ignore
                                          (Ojs.call x2488 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2490 : Ojs.t) ->
                                                     x2489
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2490)))|])
                                    | None -> ());
                                   x2488))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startSampling ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2501 : t) ->
            fun ~method_:(x2495 : [ `HeapProfiler_startSampling ]) ->
              fun ?callback:(x2496 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2502 = t_to_js x2501 in
                     Ojs.call (Ojs.get_prop_ascii x2502 "post") "apply"
                       [|x2502;((let x2497 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2497 "push"
                                      [|((match x2495 with
                                          | `HeapProfiler_startSampling ->
                                              Ojs.string_to_js
                                                "HeapProfilerStartSampling"))|]);
                                 (match x2496 with
                                  | Some x2498 ->
                                      ignore
                                        (Ojs.call x2497 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2499 : Ojs.t) ->
                                                   x2498
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2499)))|])
                                  | None -> ());
                                 x2497))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopSampling ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_HeapProfiler_StopSamplingReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2510 : t) ->
            fun ~method_:(x2503 : [ `HeapProfiler_stopSampling ]) ->
              fun
                ?callback:(x2504 :
                            (err:Error.t or_null ->
                               params:inspector_HeapProfiler_StopSamplingReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2511 = t_to_js x2510 in
                     Ojs.call (Ojs.get_prop_ascii x2511 "post") "apply"
                       [|x2511;((let x2505 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2505 "push"
                                      [|((match x2503 with
                                          | `HeapProfiler_stopSampling ->
                                              Ojs.string_to_js
                                                "HeapProfilerStopSampling"))|]);
                                 (match x2504 with
                                  | Some x2506 ->
                                      ignore
                                        (Ojs.call x2505 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2507 : Ojs.t) ->
                                                   fun (x2509 : Ojs.t) ->
                                                     x2506
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2507)
                                                       ~params:(inspector_HeapProfiler_StopSamplingReturnType_of_js
                                                                  x2509)))|])
                                  | None -> ());
                                 x2505))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getSamplingProfile ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_HeapProfiler_GetSamplingProfileReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2519 : t) ->
            fun ~method_:(x2512 : [ `HeapProfiler_getSamplingProfile ]) ->
              fun
                ?callback:(x2513 :
                            (err:Error.t or_null ->
                               params:inspector_HeapProfiler_GetSamplingProfileReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2520 = t_to_js x2519 in
                     Ojs.call (Ojs.get_prop_ascii x2520 "post") "apply"
                       [|x2520;((let x2514 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2514 "push"
                                      [|((match x2512 with
                                          | `HeapProfiler_getSamplingProfile
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetSamplingProfile"))|]);
                                 (match x2513 with
                                  | Some x2515 ->
                                      ignore
                                        (Ojs.call x2514 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2516 : Ojs.t) ->
                                                   fun (x2518 : Ojs.t) ->
                                                     x2515
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2516)
                                                       ~params:(inspector_HeapProfiler_GetSamplingProfileReturnType_of_js
                                                                  x2518)))|])
                                  | None -> ());
                                 x2514))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_getCategories ] ->
              ?callback:(err:Error.t or_null ->
                           params:inspector_NodeTracing_GetCategoriesReturnType
                             -> unit)
                -> unit -> unit)
          =
          fun (x2528 : t) ->
            fun ~method_:(x2521 : [ `NodeTracing_getCategories ]) ->
              fun
                ?callback:(x2522 :
                            (err:Error.t or_null ->
                               params:inspector_NodeTracing_GetCategoriesReturnType
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2529 = t_to_js x2528 in
                     Ojs.call (Ojs.get_prop_ascii x2529 "post") "apply"
                       [|x2529;((let x2523 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2523 "push"
                                      [|((match x2521 with
                                          | `NodeTracing_getCategories ->
                                              Ojs.string_to_js
                                                "NodeTracingGetCategories"))|]);
                                 (match x2522 with
                                  | Some x2524 ->
                                      ignore
                                        (Ojs.call x2523 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2525 : Ojs.t) ->
                                                   fun (x2527 : Ojs.t) ->
                                                     x2524
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2525)
                                                       ~params:(inspector_NodeTracing_GetCategoriesReturnType_of_js
                                                                  x2527)))|])
                                  | None -> ());
                                 x2523))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_start ] ->
              ?params:inspector_NodeTracing_StartParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2538 : t) ->
            fun ~method_:(x2530 : [ `NodeTracing_start ]) ->
              fun
                ?params:(x2531 :
                          inspector_NodeTracing_StartParameterType option)
                ->
                fun ?callback:(x2532 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2539 = t_to_js x2538 in
                       Ojs.call (Ojs.get_prop_ascii x2539 "post") "apply"
                         [|x2539;((let x2533 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2533 "push"
                                        [|((match x2530 with
                                            | `NodeTracing_start ->
                                                Ojs.string_to_js
                                                  "NodeTracingStart"))|]);
                                   (match x2531 with
                                    | Some x2537 ->
                                        ignore
                                          (Ojs.call x2533 "push"
                                             [|(inspector_NodeTracing_StartParameterType_to_js
                                                  x2537)|])
                                    | None -> ());
                                   (match x2532 with
                                    | Some x2534 ->
                                        ignore
                                          (Ojs.call x2533 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2535 : Ojs.t) ->
                                                     x2534
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2535)))|])
                                    | None -> ());
                                   x2533))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_start ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2546 : t) ->
            fun ~method_:(x2540 : [ `NodeTracing_start ]) ->
              fun ?callback:(x2541 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2547 = t_to_js x2546 in
                     Ojs.call (Ojs.get_prop_ascii x2547 "post") "apply"
                       [|x2547;((let x2542 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2542 "push"
                                      [|((match x2540 with
                                          | `NodeTracing_start ->
                                              Ojs.string_to_js
                                                "NodeTracingStart"))|]);
                                 (match x2541 with
                                  | Some x2543 ->
                                      ignore
                                        (Ojs.call x2542 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2544 : Ojs.t) ->
                                                   x2543
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2544)))|])
                                  | None -> ());
                                 x2542))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_stop ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2554 : t) ->
            fun ~method_:(x2548 : [ `NodeTracing_stop ]) ->
              fun ?callback:(x2549 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2555 = t_to_js x2554 in
                     Ojs.call (Ojs.get_prop_ascii x2555 "post") "apply"
                       [|x2555;((let x2550 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2550 "push"
                                      [|((match x2548 with
                                          | `NodeTracing_stop ->
                                              Ojs.string_to_js
                                                "NodeTracingStop"))|]);
                                 (match x2549 with
                                  | Some x2551 ->
                                      ignore
                                        (Ojs.call x2550 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2552 : Ojs.t) ->
                                                   x2551
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2552)))|])
                                  | None -> ());
                                 x2550))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_sendMessageToWorker ] ->
              ?params:inspector_NodeWorker_SendMessageToWorkerParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2564 : t) ->
            fun ~method_:(x2556 : [ `NodeWorker_sendMessageToWorker ]) ->
              fun
                ?params:(x2557 :
                          inspector_NodeWorker_SendMessageToWorkerParameterType
                            option)
                ->
                fun ?callback:(x2558 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2565 = t_to_js x2564 in
                       Ojs.call (Ojs.get_prop_ascii x2565 "post") "apply"
                         [|x2565;((let x2559 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2559 "push"
                                        [|((match x2556 with
                                            | `NodeWorker_sendMessageToWorker
                                                ->
                                                Ojs.string_to_js
                                                  "NodeWorkerSendMessageToWorker"))|]);
                                   (match x2557 with
                                    | Some x2563 ->
                                        ignore
                                          (Ojs.call x2559 "push"
                                             [|(inspector_NodeWorker_SendMessageToWorkerParameterType_to_js
                                                  x2563)|])
                                    | None -> ());
                                   (match x2558 with
                                    | Some x2560 ->
                                        ignore
                                          (Ojs.call x2559 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2561 : Ojs.t) ->
                                                     x2560
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2561)))|])
                                    | None -> ());
                                   x2559))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_sendMessageToWorker ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2572 : t) ->
            fun ~method_:(x2566 : [ `NodeWorker_sendMessageToWorker ]) ->
              fun ?callback:(x2567 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2573 = t_to_js x2572 in
                     Ojs.call (Ojs.get_prop_ascii x2573 "post") "apply"
                       [|x2573;((let x2568 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2568 "push"
                                      [|((match x2566 with
                                          | `NodeWorker_sendMessageToWorker
                                              ->
                                              Ojs.string_to_js
                                                "NodeWorkerSendMessageToWorker"))|]);
                                 (match x2567 with
                                  | Some x2569 ->
                                      ignore
                                        (Ojs.call x2568 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2570 : Ojs.t) ->
                                                   x2569
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2570)))|])
                                  | None -> ());
                                 x2568))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_enable ] ->
              ?params:inspector_NodeWorker_EnableParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2582 : t) ->
            fun ~method_:(x2574 : [ `NodeWorker_enable ]) ->
              fun
                ?params:(x2575 :
                          inspector_NodeWorker_EnableParameterType option)
                ->
                fun ?callback:(x2576 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2583 = t_to_js x2582 in
                       Ojs.call (Ojs.get_prop_ascii x2583 "post") "apply"
                         [|x2583;((let x2577 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2577 "push"
                                        [|((match x2574 with
                                            | `NodeWorker_enable ->
                                                Ojs.string_to_js
                                                  "NodeWorkerEnable"))|]);
                                   (match x2575 with
                                    | Some x2581 ->
                                        ignore
                                          (Ojs.call x2577 "push"
                                             [|(inspector_NodeWorker_EnableParameterType_to_js
                                                  x2581)|])
                                    | None -> ());
                                   (match x2576 with
                                    | Some x2578 ->
                                        ignore
                                          (Ojs.call x2577 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2579 : Ojs.t) ->
                                                     x2578
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2579)))|])
                                    | None -> ());
                                   x2577))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2590 : t) ->
            fun ~method_:(x2584 : [ `NodeWorker_enable ]) ->
              fun ?callback:(x2585 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2591 = t_to_js x2590 in
                     Ojs.call (Ojs.get_prop_ascii x2591 "post") "apply"
                       [|x2591;((let x2586 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2586 "push"
                                      [|((match x2584 with
                                          | `NodeWorker_enable ->
                                              Ojs.string_to_js
                                                "NodeWorkerEnable"))|]);
                                 (match x2585 with
                                  | Some x2587 ->
                                      ignore
                                        (Ojs.call x2586 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2588 : Ojs.t) ->
                                                   x2587
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2588)))|])
                                  | None -> ());
                                 x2586))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2598 : t) ->
            fun ~method_:(x2592 : [ `NodeWorker_disable ]) ->
              fun ?callback:(x2593 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2599 = t_to_js x2598 in
                     Ojs.call (Ojs.get_prop_ascii x2599 "post") "apply"
                       [|x2599;((let x2594 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2594 "push"
                                      [|((match x2592 with
                                          | `NodeWorker_disable ->
                                              Ojs.string_to_js
                                                "NodeWorkerDisable"))|]);
                                 (match x2593 with
                                  | Some x2595 ->
                                      ignore
                                        (Ojs.call x2594 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2596 : Ojs.t) ->
                                                   x2595
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2596)))|])
                                  | None -> ());
                                 x2594))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_detach ] ->
              ?params:inspector_NodeWorker_DetachParameterType ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2608 : t) ->
            fun ~method_:(x2600 : [ `NodeWorker_detach ]) ->
              fun
                ?params:(x2601 :
                          inspector_NodeWorker_DetachParameterType option)
                ->
                fun ?callback:(x2602 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2609 = t_to_js x2608 in
                       Ojs.call (Ojs.get_prop_ascii x2609 "post") "apply"
                         [|x2609;((let x2603 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2603 "push"
                                        [|((match x2600 with
                                            | `NodeWorker_detach ->
                                                Ojs.string_to_js
                                                  "NodeWorkerDetach"))|]);
                                   (match x2601 with
                                    | Some x2607 ->
                                        ignore
                                          (Ojs.call x2603 "push"
                                             [|(inspector_NodeWorker_DetachParameterType_to_js
                                                  x2607)|])
                                    | None -> ());
                                   (match x2602 with
                                    | Some x2604 ->
                                        ignore
                                          (Ojs.call x2603 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2605 : Ojs.t) ->
                                                     x2604
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2605)))|])
                                    | None -> ());
                                   x2603))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_detach ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2616 : t) ->
            fun ~method_:(x2610 : [ `NodeWorker_detach ]) ->
              fun ?callback:(x2611 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2617 = t_to_js x2616 in
                     Ojs.call (Ojs.get_prop_ascii x2617 "post") "apply"
                       [|x2617;((let x2612 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2612 "push"
                                      [|((match x2610 with
                                          | `NodeWorker_detach ->
                                              Ojs.string_to_js
                                                "NodeWorkerDetach"))|]);
                                 (match x2611 with
                                  | Some x2613 ->
                                      ignore
                                        (Ojs.call x2612 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2614 : Ojs.t) ->
                                                   x2613
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2614)))|])
                                  | None -> ());
                                 x2612))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeRuntime_notifyWhenWaitingForDisconnect ] ->
              ?params:inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2626 : t) ->
            fun
              ~method_:(x2618 :
                         [ `NodeRuntime_notifyWhenWaitingForDisconnect ])
              ->
              fun
                ?params:(x2619 :
                          inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
                            option)
                ->
                fun ?callback:(x2620 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2627 = t_to_js x2626 in
                       Ojs.call (Ojs.get_prop_ascii x2627 "post") "apply"
                         [|x2627;((let x2621 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2621 "push"
                                        [|((match x2618 with
                                            | `NodeRuntime_notifyWhenWaitingForDisconnect
                                                ->
                                                Ojs.string_to_js
                                                  "NodeRuntimeNotifyWhenWaitingForDisconnect"))|]);
                                   (match x2619 with
                                    | Some x2625 ->
                                        ignore
                                          (Ojs.call x2621 "push"
                                             [|(inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType_to_js
                                                  x2625)|])
                                    | None -> ());
                                   (match x2620 with
                                    | Some x2622 ->
                                        ignore
                                          (Ojs.call x2621 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2623 : Ojs.t) ->
                                                     x2622
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2623)))|])
                                    | None -> ());
                                   x2621))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeRuntime_notifyWhenWaitingForDisconnect ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2634 : t) ->
            fun
              ~method_:(x2628 :
                         [ `NodeRuntime_notifyWhenWaitingForDisconnect ])
              ->
              fun ?callback:(x2629 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2635 = t_to_js x2634 in
                     Ojs.call (Ojs.get_prop_ascii x2635 "post") "apply"
                       [|x2635;((let x2630 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2630 "push"
                                      [|((match x2628 with
                                          | `NodeRuntime_notifyWhenWaitingForDisconnect
                                              ->
                                              Ojs.string_to_js
                                                "NodeRuntimeNotifyWhenWaitingForDisconnect"))|]);
                                 (match x2629 with
                                  | Some x2631 ->
                                      ignore
                                        (Ojs.call x2630 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2632 : Ojs.t) ->
                                                   x2631
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2632)))|])
                                  | None -> ());
                                 x2630))|])
        let (addListener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x2640 : t) ->
            fun ~event:(x2636 : string) ->
              fun ~listener:(x2637 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2640) "addListener"
                     [|(Ojs.string_to_js x2636);(Ojs.fun_to_js_args
                                                   (fun (x2638 : _) ->
                                                      x2637
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2638 0)))|])
        let (addListener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:anonymous_interface_0
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2645 : t) ->
            fun ~event:(x2641 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2642 :
                            message:anonymous_interface_0
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2645) "addListener"
                     [|((match x2641 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2643 : Ojs.t) ->
                            x2642
                              ~message:(inspector_InspectorNotification_of_js
                                          anonymous_interface_0_of_js x2643)))|])
        let (addListener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2650 : t) ->
            fun ~event:(x2646 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2647 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2650) "addListener"
                     [|((match x2646 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2648 :
                                                                    Ojs.t) ->
                                                                    x2647
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x2648)))|])
        let (addListener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2655 : t) ->
            fun ~event:(x2651 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2652 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2655) "addListener"
                     [|((match x2651 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2653 : Ojs.t) ->
                            x2652
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x2653)))|])
        let (addListener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2658 : t) ->
            fun ~event:(x2656 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2657 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2658) "addListener"
                     [|((match x2656 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2657 ()))|])
        let (addListener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2663 : t) ->
            fun ~event:(x2659 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x2660 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2663) "addListener"
                     [|((match x2659 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x2661 : Ojs.t) ->
                            x2660
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x2661)))|])
        let (addListener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2668 : t) ->
            fun ~event:(x2664 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x2665 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2668) "addListener"
                     [|((match x2664 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x2666 : Ojs.t) ->
                            x2665
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x2666)))|])
        let (addListener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2673 : t) ->
            fun ~event:(x2669 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x2670 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2673) "addListener"
                     [|((match x2669 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x2671 : Ojs.t) ->
                            x2670
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x2671)))|])
        let (addListener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2678 : t) ->
            fun ~event:(x2674 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x2675 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2678) "addListener"
                     [|((match x2674 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x2676 : Ojs.t) ->
                            x2675
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x2676)))|])
        let (addListener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2683 : t) ->
            fun ~event:(x2679 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x2680 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2683) "addListener"
                     [|((match x2679 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x2681 : Ojs.t) ->
                            x2680
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x2681)))|])
        let (addListener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2688 : t) ->
            fun ~event:(x2684 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x2685 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2688) "addListener"
                     [|((match x2684 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x2686 : Ojs.t) ->
                            x2685
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x2686)))|])
        let (addListener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2693 : t) ->
            fun ~event:(x2689 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x2690 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2693) "addListener"
                     [|((match x2689 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x2691 : Ojs.t) ->
                            x2690
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x2691)))|])
        let (addListener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2698 : t) ->
            fun ~event:(x2694 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x2695 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2698) "addListener"
                     [|((match x2694 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x2696 :
                                                                    Ojs.t) ->
                                                                    x2695
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x2696)))|])
        let (addListener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x2701 : t) ->
            fun ~event:(x2699 : [ `Debugger_resumed ]) ->
              fun ~listener:(x2700 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2701) "addListener"
                     [|((match x2699 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2700 ()))|])
        let (addListener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2706 : t) ->
            fun ~event:(x2702 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x2703 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2706) "addListener"
                     [|((match x2702 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x2704 : Ojs.t) ->
                            x2703
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x2704)))|])
        let (addListener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2711 : t) ->
            fun ~event:(x2707 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x2708 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2711) "addListener"
                     [|((match x2707 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x2709 : Ojs.t) ->
                            x2708
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x2709)))|])
        let (addListener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2716 : t) ->
            fun ~event:(x2712 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x2713 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2716) "addListener"
                     [|((match x2712 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2714 :
                                                                    Ojs.t) ->
                                                                    x2713
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x2714)))|])
        let (addListener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2721 : t) ->
            fun ~event:(x2717 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x2718 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2721) "addListener"
                     [|((match x2717 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x2719 : Ojs.t) ->
                            x2718
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x2719)))|])
        let (addListener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2724 : t) ->
            fun ~event:(x2722 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x2723 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2724) "addListener"
                     [|((match x2722 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x2723 ()))|])
        let (addListener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2729 : t) ->
            fun ~event:(x2725 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x2726 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2729) "addListener"
                     [|((match x2725 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x2727 : Ojs.t) ->
                            x2726
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x2727)))|])
        let (addListener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2734 : t) ->
            fun ~event:(x2730 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x2731 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2734) "addListener"
                     [|((match x2730 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x2732 : Ojs.t) ->
                            x2731
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x2732)))|])
        let (addListener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2739 : t) ->
            fun ~event:(x2735 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x2736 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2739) "addListener"
                     [|((match x2735 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x2737 : Ojs.t) ->
                            x2736
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x2737)))|])
        let (addListener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2744 : t) ->
            fun ~event:(x2740 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x2741 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2744) "addListener"
                     [|((match x2740 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x2742 : Ojs.t) ->
                            x2741
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x2742)))|])
        let (addListener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2747 : t) ->
            fun ~event:(x2745 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x2746 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2747) "addListener"
                     [|((match x2745 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x2746 ()))|])
        let (addListener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2752 : t) ->
            fun ~event:(x2748 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x2749 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2752) "addListener"
                     [|((match x2748 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2750 : Ojs.t) ->
                            x2749
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x2750)))|])
        let (addListener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2757 : t) ->
            fun ~event:(x2753 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x2754 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2757) "addListener"
                     [|((match x2753 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2755 : Ojs.t) ->
                            x2754
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x2755)))|])
        let (addListener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2762 : t) ->
            fun ~event:(x2758 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x2759 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2762) "addListener"
                     [|((match x2758 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2760 : Ojs.t) ->
                            x2759
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x2760)))|])
        let (addListener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2765 : t) ->
            fun ~event:(x2763 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x2764 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2765) "addListener"
                     [|((match x2763 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2764 ()))|])
        let (emit : t -> event:symbol or_string -> args:any list -> bool) =
          fun (x2771 : t) ->
            fun ~event:(x2766 : symbol or_string) ->
              fun ~args:(x2767 : any list) ->
                Ojs.bool_of_js
                  (let x2772 = t_to_js x2771 in
                   Ojs.call (Ojs.get_prop_ascii x2772 "emit") "apply"
                     [|x2772;((let x2768 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2768 "push"
                                    [|(or_string_to_js symbol_to_js x2766)|]);
                               List.iter
                                 (fun (x2769 : any) ->
                                    ignore
                                      (Ojs.call x2768 "push"
                                         [|(any_to_js x2769)|])) x2767;
                               x2768))|])
        let (emit' :
          t ->
            event:[ `inspectorNotification ] ->
              message:anonymous_interface_0 inspector_InspectorNotification
                -> bool)
          =
          fun (x2776 : t) ->
            fun ~event:(x2773 : [ `inspectorNotification ]) ->
              fun
                ~message:(x2774 :
                           anonymous_interface_0
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2776) "emit"
                     [|((match x2773 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       inspector_InspectorNotification_to_js
                         anonymous_interface_0_to_js x2774)|])
        let (emit'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              message:inspector_Runtime_ExecutionContextCreatedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2780 : t) ->
            fun ~event:(x2777 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~message:(x2778 :
                           inspector_Runtime_ExecutionContextCreatedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2780) "emit"
                     [|((match x2777 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(inspector_InspectorNotification_to_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_to_js
                                                                    x2778)|])
        let (emit''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2784 : t) ->
            fun ~event:(x2781 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~message:(x2782 :
                           inspector_Runtime_ExecutionContextDestroyedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2784) "emit"
                     [|((match x2781 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ExecutionContextDestroyedEventDataType_to_js
                         x2782)|])
        let (emit'''' :
          t -> event:[ `Runtime_executionContextsCleared ] -> bool) =
          fun (x2786 : t) ->
            fun ~event:(x2785 : [ `Runtime_executionContextsCleared ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2786) "emit"
                   [|((match x2785 with
                       | `Runtime_executionContextsCleared ->
                           Ojs.string_to_js "RuntimeExecutionContextsCleared"))|])
        let (emit''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              message:inspector_Runtime_ExceptionThrownEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2790 : t) ->
            fun ~event:(x2787 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~message:(x2788 :
                           inspector_Runtime_ExceptionThrownEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2790) "emit"
                     [|((match x2787 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ExceptionThrownEventDataType_to_js
                         x2788)|])
        let (emit'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              message:inspector_Runtime_ExceptionRevokedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2794 : t) ->
            fun ~event:(x2791 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~message:(x2792 :
                           inspector_Runtime_ExceptionRevokedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2794) "emit"
                     [|((match x2791 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ExceptionRevokedEventDataType_to_js
                         x2792)|])
        let (emit''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              message:inspector_Runtime_ConsoleAPICalledEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2798 : t) ->
            fun ~event:(x2795 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~message:(x2796 :
                           inspector_Runtime_ConsoleAPICalledEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2798) "emit"
                     [|((match x2795 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ConsoleAPICalledEventDataType_to_js
                         x2796)|])
        let (emit'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              message:inspector_Runtime_InspectRequestedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2802 : t) ->
            fun ~event:(x2799 : [ `Runtime_inspectRequested ]) ->
              fun
                ~message:(x2800 :
                           inspector_Runtime_InspectRequestedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2802) "emit"
                     [|((match x2799 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_InspectRequestedEventDataType_to_js
                         x2800)|])
        let (emit''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              message:inspector_Debugger_ScriptParsedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2806 : t) ->
            fun ~event:(x2803 : [ `Debugger_scriptParsed ]) ->
              fun
                ~message:(x2804 :
                           inspector_Debugger_ScriptParsedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2806) "emit"
                     [|((match x2803 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       inspector_InspectorNotification_to_js
                         inspector_Debugger_ScriptParsedEventDataType_to_js
                         x2804)|])
        let (emit'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              message:inspector_Debugger_ScriptFailedToParseEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2810 : t) ->
            fun ~event:(x2807 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~message:(x2808 :
                           inspector_Debugger_ScriptFailedToParseEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2810) "emit"
                     [|((match x2807 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       inspector_InspectorNotification_to_js
                         inspector_Debugger_ScriptFailedToParseEventDataType_to_js
                         x2808)|])
        let (emit''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              message:inspector_Debugger_BreakpointResolvedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2814 : t) ->
            fun ~event:(x2811 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~message:(x2812 :
                           inspector_Debugger_BreakpointResolvedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2814) "emit"
                     [|((match x2811 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       inspector_InspectorNotification_to_js
                         inspector_Debugger_BreakpointResolvedEventDataType_to_js
                         x2812)|])
        let (emit'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              message:inspector_Debugger_PausedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2818 : t) ->
            fun ~event:(x2815 : [ `Debugger_paused ]) ->
              fun
                ~message:(x2816 :
                           inspector_Debugger_PausedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2818) "emit"
                     [|((match x2815 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(inspector_InspectorNotification_to_js
                                                                    inspector_Debugger_PausedEventDataType_to_js
                                                                    x2816)|])
        let (emit''''''''''''' : t -> event:[ `Debugger_resumed ] -> bool) =
          fun (x2820 : t) ->
            fun ~event:(x2819 : [ `Debugger_resumed ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2820) "emit"
                   [|((match x2819 with
                       | `Debugger_resumed ->
                           Ojs.string_to_js "DebuggerResumed"))|])
        let (emit'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              message:inspector_Console_MessageAddedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2824 : t) ->
            fun ~event:(x2821 : [ `Console_messageAdded ]) ->
              fun
                ~message:(x2822 :
                           inspector_Console_MessageAddedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2824) "emit"
                     [|((match x2821 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       inspector_InspectorNotification_to_js
                         inspector_Console_MessageAddedEventDataType_to_js
                         x2822)|])
        let (emit''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              message:inspector_Profiler_ConsoleProfileStartedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2828 : t) ->
            fun ~event:(x2825 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~message:(x2826 :
                           inspector_Profiler_ConsoleProfileStartedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2828) "emit"
                     [|((match x2825 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       inspector_InspectorNotification_to_js
                         inspector_Profiler_ConsoleProfileStartedEventDataType_to_js
                         x2826)|])
        let (emit'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2832 : t) ->
            fun ~event:(x2829 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~message:(x2830 :
                           inspector_Profiler_ConsoleProfileFinishedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2832) "emit"
                     [|((match x2829 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(inspector_InspectorNotification_to_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_to_js
                                                                    x2830)|])
        let (emit''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2836 : t) ->
            fun ~event:(x2833 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~message:(x2834 :
                           inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2836) "emit"
                     [|((match x2833 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_to_js
                         x2834)|])
        let (emit'''''''''''''''''' :
          t -> event:[ `HeapProfiler_resetProfiles ] -> bool) =
          fun (x2838 : t) ->
            fun ~event:(x2837 : [ `HeapProfiler_resetProfiles ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2838) "emit"
                   [|((match x2837 with
                       | `HeapProfiler_resetProfiles ->
                           Ojs.string_to_js "HeapProfilerResetProfiles"))|])
        let (emit''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2842 : t) ->
            fun ~event:(x2839 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~message:(x2840 :
                           inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2842) "emit"
                     [|((match x2839 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_to_js
                         x2840)|])
        let (emit'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2846 : t) ->
            fun ~event:(x2843 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~message:(x2844 :
                           inspector_HeapProfiler_LastSeenObjectIdEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2846) "emit"
                     [|((match x2843 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_LastSeenObjectIdEventDataType_to_js
                         x2844)|])
        let (emit''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2850 : t) ->
            fun ~event:(x2847 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~message:(x2848 :
                           inspector_HeapProfiler_HeapStatsUpdateEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2850) "emit"
                     [|((match x2847 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_HeapStatsUpdateEventDataType_to_js
                         x2848)|])
        let (emit'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              message:inspector_NodeTracing_DataCollectedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2854 : t) ->
            fun ~event:(x2851 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~message:(x2852 :
                           inspector_NodeTracing_DataCollectedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2854) "emit"
                     [|((match x2851 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeTracing_DataCollectedEventDataType_to_js
                         x2852)|])
        let (emit''''''''''''''''''''''' :
          t -> event:[ `NodeTracing_tracingComplete ] -> bool) =
          fun (x2856 : t) ->
            fun ~event:(x2855 : [ `NodeTracing_tracingComplete ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2856) "emit"
                   [|((match x2855 with
                       | `NodeTracing_tracingComplete ->
                           Ojs.string_to_js "NodeTracingTracingComplete"))|])
        let (emit'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              message:inspector_NodeWorker_AttachedToWorkerEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2860 : t) ->
            fun ~event:(x2857 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~message:(x2858 :
                           inspector_NodeWorker_AttachedToWorkerEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2860) "emit"
                     [|((match x2857 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeWorker_AttachedToWorkerEventDataType_to_js
                         x2858)|])
        let (emit''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2864 : t) ->
            fun ~event:(x2861 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~message:(x2862 :
                           inspector_NodeWorker_DetachedFromWorkerEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2864) "emit"
                     [|((match x2861 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeWorker_DetachedFromWorkerEventDataType_to_js
                         x2862)|])
        let (emit'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2868 : t) ->
            fun ~event:(x2865 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~message:(x2866 :
                           inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2868) "emit"
                     [|((match x2865 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_to_js
                         x2866)|])
        let (emit''''''''''''''''''''''''''' :
          t -> event:[ `NodeRuntime_waitingForDisconnect ] -> bool) =
          fun (x2870 : t) ->
            fun ~event:(x2869 : [ `NodeRuntime_waitingForDisconnect ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2870) "emit"
                   [|((match x2869 with
                       | `NodeRuntime_waitingForDisconnect ->
                           Ojs.string_to_js "NodeRuntimeWaitingForDisconnect"))|])
        let (on : t -> event:string -> listener:(args:any list -> unit) -> t)
          =
          fun (x2875 : t) ->
            fun ~event:(x2871 : string) ->
              fun ~listener:(x2872 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2875) "on"
                     [|(Ojs.string_to_js x2871);(Ojs.fun_to_js_args
                                                   (fun (x2873 : _) ->
                                                      x2872
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2873 0)))|])
        let (on' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:anonymous_interface_0
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2880 : t) ->
            fun ~event:(x2876 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2877 :
                            message:anonymous_interface_0
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2880) "on"
                     [|((match x2876 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2878 : Ojs.t) ->
                            x2877
                              ~message:(inspector_InspectorNotification_of_js
                                          anonymous_interface_0_of_js x2878)))|])
        let (on'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2885 : t) ->
            fun ~event:(x2881 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2882 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2885) "on"
                     [|((match x2881 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2883 :
                                                                    Ojs.t) ->
                                                                    x2882
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x2883)))|])
        let (on''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2890 : t) ->
            fun ~event:(x2886 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2887 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2890) "on"
                     [|((match x2886 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2888 : Ojs.t) ->
                            x2887
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x2888)))|])
        let (on'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2893 : t) ->
            fun ~event:(x2891 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2892 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2893) "on"
                     [|((match x2891 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2892 ()))|])
        let (on''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2898 : t) ->
            fun ~event:(x2894 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x2895 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2898) "on"
                     [|((match x2894 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x2896 : Ojs.t) ->
                            x2895
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x2896)))|])
        let (on'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2903 : t) ->
            fun ~event:(x2899 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x2900 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2903) "on"
                     [|((match x2899 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x2901 : Ojs.t) ->
                            x2900
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x2901)))|])
        let (on''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2908 : t) ->
            fun ~event:(x2904 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x2905 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2908) "on"
                     [|((match x2904 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x2906 : Ojs.t) ->
                            x2905
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x2906)))|])
        let (on'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2913 : t) ->
            fun ~event:(x2909 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x2910 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2913) "on"
                     [|((match x2909 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x2911 : Ojs.t) ->
                            x2910
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x2911)))|])
        let (on''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2918 : t) ->
            fun ~event:(x2914 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x2915 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2918) "on"
                     [|((match x2914 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x2916 : Ojs.t) ->
                            x2915
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x2916)))|])
        let (on'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2923 : t) ->
            fun ~event:(x2919 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x2920 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2923) "on"
                     [|((match x2919 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x2921 : Ojs.t) ->
                            x2920
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x2921)))|])
        let (on''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2928 : t) ->
            fun ~event:(x2924 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x2925 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2928) "on"
                     [|((match x2924 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x2926 : Ojs.t) ->
                            x2925
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x2926)))|])
        let (on'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2933 : t) ->
            fun ~event:(x2929 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x2930 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2933) "on"
                     [|((match x2929 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x2931 :
                                                                    Ojs.t) ->
                                                                    x2930
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x2931)))|])
        let (on''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x2936 : t) ->
            fun ~event:(x2934 : [ `Debugger_resumed ]) ->
              fun ~listener:(x2935 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2936) "on"
                     [|((match x2934 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2935 ()))|])
        let (on'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2941 : t) ->
            fun ~event:(x2937 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x2938 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2941) "on"
                     [|((match x2937 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x2939 : Ojs.t) ->
                            x2938
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x2939)))|])
        let (on''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2946 : t) ->
            fun ~event:(x2942 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x2943 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2946) "on"
                     [|((match x2942 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x2944 : Ojs.t) ->
                            x2943
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x2944)))|])
        let (on'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2951 : t) ->
            fun ~event:(x2947 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x2948 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2951) "on"
                     [|((match x2947 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2949 :
                                                                    Ojs.t) ->
                                                                    x2948
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x2949)))|])
        let (on''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2956 : t) ->
            fun ~event:(x2952 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x2953 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2956) "on"
                     [|((match x2952 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x2954 : Ojs.t) ->
                            x2953
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x2954)))|])
        let (on'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2959 : t) ->
            fun ~event:(x2957 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x2958 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2959) "on"
                     [|((match x2957 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x2958 ()))|])
        let (on''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2964 : t) ->
            fun ~event:(x2960 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x2961 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2964) "on"
                     [|((match x2960 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x2962 : Ojs.t) ->
                            x2961
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x2962)))|])
        let (on'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2969 : t) ->
            fun ~event:(x2965 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x2966 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2969) "on"
                     [|((match x2965 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x2967 : Ojs.t) ->
                            x2966
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x2967)))|])
        let (on''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2974 : t) ->
            fun ~event:(x2970 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x2971 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2974) "on"
                     [|((match x2970 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x2972 : Ojs.t) ->
                            x2971
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x2972)))|])
        let (on'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2979 : t) ->
            fun ~event:(x2975 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x2976 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2979) "on"
                     [|((match x2975 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x2977 : Ojs.t) ->
                            x2976
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x2977)))|])
        let (on''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2982 : t) ->
            fun ~event:(x2980 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x2981 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2982) "on"
                     [|((match x2980 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x2981 ()))|])
        let (on'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2987 : t) ->
            fun ~event:(x2983 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x2984 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2987) "on"
                     [|((match x2983 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2985 : Ojs.t) ->
                            x2984
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x2985)))|])
        let (on''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2992 : t) ->
            fun ~event:(x2988 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x2989 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2992) "on"
                     [|((match x2988 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2990 : Ojs.t) ->
                            x2989
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x2990)))|])
        let (on'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2997 : t) ->
            fun ~event:(x2993 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x2994 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2997) "on"
                     [|((match x2993 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2995 : Ojs.t) ->
                            x2994
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x2995)))|])
        let (on''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3000 : t) ->
            fun ~event:(x2998 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x2999 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3000) "on"
                     [|((match x2998 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2999 ()))|])
        let (once :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x3005 : t) ->
            fun ~event:(x3001 : string) ->
              fun ~listener:(x3002 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3005) "once"
                     [|(Ojs.string_to_js x3001);(Ojs.fun_to_js_args
                                                   (fun (x3003 : _) ->
                                                      x3002
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x3003 0)))|])
        let (once' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:anonymous_interface_0
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3010 : t) ->
            fun ~event:(x3006 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x3007 :
                            message:anonymous_interface_0
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3010) "once"
                     [|((match x3006 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x3008 : Ojs.t) ->
                            x3007
                              ~message:(inspector_InspectorNotification_of_js
                                          anonymous_interface_0_of_js x3008)))|])
        let (once'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3015 : t) ->
            fun ~event:(x3011 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x3012 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3015) "once"
                     [|((match x3011 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3013 :
                                                                    Ojs.t) ->
                                                                    x3012
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x3013)))|])
        let (once''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3020 : t) ->
            fun ~event:(x3016 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x3017 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3020) "once"
                     [|((match x3016 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x3018 : Ojs.t) ->
                            x3017
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x3018)))|])
        let (once'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3023 : t) ->
            fun ~event:(x3021 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x3022 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3023) "once"
                     [|((match x3021 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3022 ()))|])
        let (once''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3028 : t) ->
            fun ~event:(x3024 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3025 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3028) "once"
                     [|((match x3024 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3026 : Ojs.t) ->
                            x3025
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x3026)))|])
        let (once'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3033 : t) ->
            fun ~event:(x3029 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3030 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3033) "once"
                     [|((match x3029 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3031 : Ojs.t) ->
                            x3030
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x3031)))|])
        let (once''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3038 : t) ->
            fun ~event:(x3034 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3035 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3038) "once"
                     [|((match x3034 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3036 : Ojs.t) ->
                            x3035
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x3036)))|])
        let (once'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3043 : t) ->
            fun ~event:(x3039 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3040 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3043) "once"
                     [|((match x3039 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3041 : Ojs.t) ->
                            x3040
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x3041)))|])
        let (once''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3048 : t) ->
            fun ~event:(x3044 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3045 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3048) "once"
                     [|((match x3044 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3046 : Ojs.t) ->
                            x3045
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x3046)))|])
        let (once'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3053 : t) ->
            fun ~event:(x3049 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3050 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3053) "once"
                     [|((match x3049 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3051 : Ojs.t) ->
                            x3050
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x3051)))|])
        let (once''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3058 : t) ->
            fun ~event:(x3054 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3055 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3058) "once"
                     [|((match x3054 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3056 : Ojs.t) ->
                            x3055
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x3056)))|])
        let (once'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3063 : t) ->
            fun ~event:(x3059 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3060 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3063) "once"
                     [|((match x3059 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3061 :
                                                                    Ojs.t) ->
                                                                    x3060
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x3061)))|])
        let (once''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3066 : t) ->
            fun ~event:(x3064 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3065 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3066) "once"
                     [|((match x3064 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3065 ()))|])
        let (once'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3071 : t) ->
            fun ~event:(x3067 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3068 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3071) "once"
                     [|((match x3067 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3069 : Ojs.t) ->
                            x3068
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x3069)))|])
        let (once''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3076 : t) ->
            fun ~event:(x3072 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3073 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3076) "once"
                     [|((match x3072 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3074 : Ojs.t) ->
                            x3073
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x3074)))|])
        let (once'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3081 : t) ->
            fun ~event:(x3077 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3078 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3081) "once"
                     [|((match x3077 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3079 :
                                                                    Ojs.t) ->
                                                                    x3078
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x3079)))|])
        let (once''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3086 : t) ->
            fun ~event:(x3082 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3083 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3086) "once"
                     [|((match x3082 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3084 : Ojs.t) ->
                            x3083
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x3084)))|])
        let (once'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3089 : t) ->
            fun ~event:(x3087 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3088 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3089) "once"
                     [|((match x3087 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3088 ()))|])
        let (once''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3094 : t) ->
            fun ~event:(x3090 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3091 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3094) "once"
                     [|((match x3090 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3092 : Ojs.t) ->
                            x3091
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x3092)))|])
        let (once'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3099 : t) ->
            fun ~event:(x3095 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3096 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3099) "once"
                     [|((match x3095 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3097 : Ojs.t) ->
                            x3096
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x3097)))|])
        let (once''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3104 : t) ->
            fun ~event:(x3100 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3101 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3104) "once"
                     [|((match x3100 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3102 : Ojs.t) ->
                            x3101
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x3102)))|])
        let (once'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3109 : t) ->
            fun ~event:(x3105 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3106 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3109) "once"
                     [|((match x3105 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3107 : Ojs.t) ->
                            x3106
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x3107)))|])
        let (once''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3112 : t) ->
            fun ~event:(x3110 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3111 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3112) "once"
                     [|((match x3110 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3111 ()))|])
        let (once'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3117 : t) ->
            fun ~event:(x3113 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3114 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3117) "once"
                     [|((match x3113 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3115 : Ojs.t) ->
                            x3114
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x3115)))|])
        let (once''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3122 : t) ->
            fun ~event:(x3118 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3119 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3122) "once"
                     [|((match x3118 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3120 : Ojs.t) ->
                            x3119
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x3120)))|])
        let (once'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3127 : t) ->
            fun ~event:(x3123 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3124 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3127) "once"
                     [|((match x3123 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3125 : Ojs.t) ->
                            x3124
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x3125)))|])
        let (once''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3130 : t) ->
            fun ~event:(x3128 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3129 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3130) "once"
                     [|((match x3128 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3129 ()))|])
        let (prependListener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x3135 : t) ->
            fun ~event:(x3131 : string) ->
              fun ~listener:(x3132 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3135) "prependListener"
                     [|(Ojs.string_to_js x3131);(Ojs.fun_to_js_args
                                                   (fun (x3133 : _) ->
                                                      x3132
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x3133 0)))|])
        let (prependListener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:anonymous_interface_0
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3140 : t) ->
            fun ~event:(x3136 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x3137 :
                            message:anonymous_interface_0
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3140) "prependListener"
                     [|((match x3136 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x3138 : Ojs.t) ->
                            x3137
                              ~message:(inspector_InspectorNotification_of_js
                                          anonymous_interface_0_of_js x3138)))|])
        let (prependListener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3145 : t) ->
            fun ~event:(x3141 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x3142 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3145) "prependListener"
                     [|((match x3141 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3143 :
                                                                    Ojs.t) ->
                                                                    x3142
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x3143)))|])
        let (prependListener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3150 : t) ->
            fun ~event:(x3146 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x3147 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3150) "prependListener"
                     [|((match x3146 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x3148 : Ojs.t) ->
                            x3147
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x3148)))|])
        let (prependListener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3153 : t) ->
            fun ~event:(x3151 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x3152 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3153) "prependListener"
                     [|((match x3151 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3152 ()))|])
        let (prependListener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3158 : t) ->
            fun ~event:(x3154 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3155 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3158) "prependListener"
                     [|((match x3154 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3156 : Ojs.t) ->
                            x3155
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x3156)))|])
        let (prependListener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3163 : t) ->
            fun ~event:(x3159 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3160 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3163) "prependListener"
                     [|((match x3159 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3161 : Ojs.t) ->
                            x3160
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x3161)))|])
        let (prependListener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3168 : t) ->
            fun ~event:(x3164 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3165 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3168) "prependListener"
                     [|((match x3164 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3166 : Ojs.t) ->
                            x3165
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x3166)))|])
        let (prependListener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3173 : t) ->
            fun ~event:(x3169 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3170 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3173) "prependListener"
                     [|((match x3169 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3171 : Ojs.t) ->
                            x3170
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x3171)))|])
        let (prependListener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3178 : t) ->
            fun ~event:(x3174 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3175 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3178) "prependListener"
                     [|((match x3174 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3176 : Ojs.t) ->
                            x3175
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x3176)))|])
        let (prependListener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3183 : t) ->
            fun ~event:(x3179 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3180 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3183) "prependListener"
                     [|((match x3179 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3181 : Ojs.t) ->
                            x3180
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x3181)))|])
        let (prependListener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3188 : t) ->
            fun ~event:(x3184 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3185 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3188) "prependListener"
                     [|((match x3184 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3186 : Ojs.t) ->
                            x3185
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x3186)))|])
        let (prependListener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3193 : t) ->
            fun ~event:(x3189 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3190 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3193) "prependListener"
                     [|((match x3189 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3191 :
                                                                    Ojs.t) ->
                                                                    x3190
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x3191)))|])
        let (prependListener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3196 : t) ->
            fun ~event:(x3194 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3195 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3196) "prependListener"
                     [|((match x3194 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3195 ()))|])
        let (prependListener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3201 : t) ->
            fun ~event:(x3197 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3198 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3201) "prependListener"
                     [|((match x3197 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3199 : Ojs.t) ->
                            x3198
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x3199)))|])
        let (prependListener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3206 : t) ->
            fun ~event:(x3202 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3203 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3206) "prependListener"
                     [|((match x3202 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3204 : Ojs.t) ->
                            x3203
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x3204)))|])
        let (prependListener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3211 : t) ->
            fun ~event:(x3207 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3208 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3211) "prependListener"
                     [|((match x3207 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3209 :
                                                                    Ojs.t) ->
                                                                    x3208
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x3209)))|])
        let (prependListener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3216 : t) ->
            fun ~event:(x3212 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3213 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3216) "prependListener"
                     [|((match x3212 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3214 : Ojs.t) ->
                            x3213
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x3214)))|])
        let (prependListener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3219 : t) ->
            fun ~event:(x3217 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3218 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3219) "prependListener"
                     [|((match x3217 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3218 ()))|])
        let (prependListener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3224 : t) ->
            fun ~event:(x3220 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3221 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3224) "prependListener"
                     [|((match x3220 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3222 : Ojs.t) ->
                            x3221
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x3222)))|])
        let (prependListener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3229 : t) ->
            fun ~event:(x3225 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3226 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3229) "prependListener"
                     [|((match x3225 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3227 : Ojs.t) ->
                            x3226
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x3227)))|])
        let (prependListener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3234 : t) ->
            fun ~event:(x3230 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3231 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3234) "prependListener"
                     [|((match x3230 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3232 : Ojs.t) ->
                            x3231
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x3232)))|])
        let (prependListener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3239 : t) ->
            fun ~event:(x3235 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3236 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3239) "prependListener"
                     [|((match x3235 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3237 : Ojs.t) ->
                            x3236
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x3237)))|])
        let (prependListener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3242 : t) ->
            fun ~event:(x3240 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3241 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3242) "prependListener"
                     [|((match x3240 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3241 ()))|])
        let (prependListener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3247 : t) ->
            fun ~event:(x3243 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3244 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3247) "prependListener"
                     [|((match x3243 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3245 : Ojs.t) ->
                            x3244
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x3245)))|])
        let (prependListener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3252 : t) ->
            fun ~event:(x3248 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3249 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3252) "prependListener"
                     [|((match x3248 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3250 : Ojs.t) ->
                            x3249
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x3250)))|])
        let (prependListener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3257 : t) ->
            fun ~event:(x3253 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3254 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3257) "prependListener"
                     [|((match x3253 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3255 : Ojs.t) ->
                            x3254
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x3255)))|])
        let (prependListener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3260 : t) ->
            fun ~event:(x3258 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3259 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3260) "prependListener"
                     [|((match x3258 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3259 ()))|])
        let (prependOnceListener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x3265 : t) ->
            fun ~event:(x3261 : string) ->
              fun ~listener:(x3262 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3265) "prependOnceListener"
                     [|(Ojs.string_to_js x3261);(Ojs.fun_to_js_args
                                                   (fun (x3263 : _) ->
                                                      x3262
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x3263 0)))|])
        let (prependOnceListener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:anonymous_interface_0
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3270 : t) ->
            fun ~event:(x3266 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x3267 :
                            message:anonymous_interface_0
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3270) "prependOnceListener"
                     [|((match x3266 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x3268 : Ojs.t) ->
                            x3267
                              ~message:(inspector_InspectorNotification_of_js
                                          anonymous_interface_0_of_js x3268)))|])
        let (prependOnceListener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3275 : t) ->
            fun ~event:(x3271 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x3272 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3275) "prependOnceListener"
                     [|((match x3271 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3273 :
                                                                    Ojs.t) ->
                                                                    x3272
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x3273)))|])
        let (prependOnceListener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3280 : t) ->
            fun ~event:(x3276 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x3277 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3280) "prependOnceListener"
                     [|((match x3276 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x3278 : Ojs.t) ->
                            x3277
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x3278)))|])
        let (prependOnceListener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3283 : t) ->
            fun ~event:(x3281 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x3282 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3283) "prependOnceListener"
                     [|((match x3281 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3282 ()))|])
        let (prependOnceListener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3288 : t) ->
            fun ~event:(x3284 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3285 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3288) "prependOnceListener"
                     [|((match x3284 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3286 : Ojs.t) ->
                            x3285
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x3286)))|])
        let (prependOnceListener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3293 : t) ->
            fun ~event:(x3289 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3290 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3293) "prependOnceListener"
                     [|((match x3289 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3291 : Ojs.t) ->
                            x3290
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x3291)))|])
        let (prependOnceListener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3298 : t) ->
            fun ~event:(x3294 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3295 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3298) "prependOnceListener"
                     [|((match x3294 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3296 : Ojs.t) ->
                            x3295
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x3296)))|])
        let (prependOnceListener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3303 : t) ->
            fun ~event:(x3299 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3300 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3303) "prependOnceListener"
                     [|((match x3299 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3301 : Ojs.t) ->
                            x3300
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x3301)))|])
        let (prependOnceListener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3308 : t) ->
            fun ~event:(x3304 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3305 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3308) "prependOnceListener"
                     [|((match x3304 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3306 : Ojs.t) ->
                            x3305
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x3306)))|])
        let (prependOnceListener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3313 : t) ->
            fun ~event:(x3309 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3310 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3313) "prependOnceListener"
                     [|((match x3309 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3311 : Ojs.t) ->
                            x3310
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x3311)))|])
        let (prependOnceListener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3318 : t) ->
            fun ~event:(x3314 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3315 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3318) "prependOnceListener"
                     [|((match x3314 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3316 : Ojs.t) ->
                            x3315
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x3316)))|])
        let (prependOnceListener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3323 : t) ->
            fun ~event:(x3319 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3320 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3323) "prependOnceListener"
                     [|((match x3319 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3321 :
                                                                    Ojs.t) ->
                                                                    x3320
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x3321)))|])
        let (prependOnceListener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3326 : t) ->
            fun ~event:(x3324 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3325 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3326) "prependOnceListener"
                     [|((match x3324 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3325 ()))|])
        let (prependOnceListener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3331 : t) ->
            fun ~event:(x3327 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3328 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3331) "prependOnceListener"
                     [|((match x3327 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3329 : Ojs.t) ->
                            x3328
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x3329)))|])
        let (prependOnceListener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3336 : t) ->
            fun ~event:(x3332 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3333 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3336) "prependOnceListener"
                     [|((match x3332 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3334 : Ojs.t) ->
                            x3333
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x3334)))|])
        let (prependOnceListener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3341 : t) ->
            fun ~event:(x3337 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3338 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3341) "prependOnceListener"
                     [|((match x3337 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3339 :
                                                                    Ojs.t) ->
                                                                    x3338
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x3339)))|])
        let (prependOnceListener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3346 : t) ->
            fun ~event:(x3342 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3343 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3346) "prependOnceListener"
                     [|((match x3342 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3344 : Ojs.t) ->
                            x3343
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x3344)))|])
        let (prependOnceListener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3349 : t) ->
            fun ~event:(x3347 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3348 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3349) "prependOnceListener"
                     [|((match x3347 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3348 ()))|])
        let (prependOnceListener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3354 : t) ->
            fun ~event:(x3350 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3351 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3354) "prependOnceListener"
                     [|((match x3350 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3352 : Ojs.t) ->
                            x3351
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x3352)))|])
        let (prependOnceListener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3359 : t) ->
            fun ~event:(x3355 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3356 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3359) "prependOnceListener"
                     [|((match x3355 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3357 : Ojs.t) ->
                            x3356
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x3357)))|])
        let (prependOnceListener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3364 : t) ->
            fun ~event:(x3360 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3361 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3364) "prependOnceListener"
                     [|((match x3360 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3362 : Ojs.t) ->
                            x3361
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x3362)))|])
        let (prependOnceListener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3369 : t) ->
            fun ~event:(x3365 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3366 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3369) "prependOnceListener"
                     [|((match x3365 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3367 : Ojs.t) ->
                            x3366
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x3367)))|])
        let (prependOnceListener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3372 : t) ->
            fun ~event:(x3370 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3371 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3372) "prependOnceListener"
                     [|((match x3370 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3371 ()))|])
        let (prependOnceListener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3377 : t) ->
            fun ~event:(x3373 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3374 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3377) "prependOnceListener"
                     [|((match x3373 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3375 : Ojs.t) ->
                            x3374
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x3375)))|])
        let (prependOnceListener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3382 : t) ->
            fun ~event:(x3378 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3379 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3382) "prependOnceListener"
                     [|((match x3378 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3380 : Ojs.t) ->
                            x3379
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x3380)))|])
        let (prependOnceListener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3387 : t) ->
            fun ~event:(x3383 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3384 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3387) "prependOnceListener"
                     [|((match x3383 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3385 : Ojs.t) ->
                            x3384
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x3385)))|])
        let (prependOnceListener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3390 : t) ->
            fun ~event:(x3388 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3389 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3390) "prependOnceListener"
                     [|((match x3388 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3389 ()))|])
        let (cast : t -> Node_events.Events.EventEmitter.t) =
          fun (x3391 : t) ->
            Node_events.Events.EventEmitter.t_of_js (t_to_js x3391)
      end
    let (open_ : ?port:float -> ?host:string -> ?wait:bool -> unit -> unit) =
      fun ?port:(x3392 : float option) ->
        fun ?host:(x3393 : string option) ->
          fun ?wait:(x3394 : bool option) ->
            fun () ->
              ignore
                (let x3399 = Import.inspector in
                 Ojs.call (Ojs.get_prop_ascii x3399 "open") "apply"
                   [|x3399;((let x3395 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3392 with
                              | Some x3398 ->
                                  ignore
                                    (Ojs.call x3395 "push"
                                       [|(Ojs.float_to_js x3398)|])
                              | None -> ());
                             (match x3393 with
                              | Some x3397 ->
                                  ignore
                                    (Ojs.call x3395 "push"
                                       [|(Ojs.string_to_js x3397)|])
                              | None -> ());
                             (match x3394 with
                              | Some x3396 ->
                                  ignore
                                    (Ojs.call x3395 "push"
                                       [|(Ojs.bool_to_js x3396)|])
                              | None -> ());
                             x3395))|])
    let (close : unit -> unit) =
      fun () -> ignore (Ojs.call Import.inspector "close" [||])
    let (url : unit -> string or_undefined) =
      fun () ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.call Import.inspector "url" [||])
    let (waitForDebugger : unit -> unit) =
      fun () -> ignore (Ojs.call Import.inspector "waitForDebugger" [||])
  end
