[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
  end
module Inspector =
  struct
    module InspectorNotification =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) -> fun (__T_of_js : Ojs.t -> __T) -> fun (x4 : Ojs.t) -> x4
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x3 : Ojs.t) -> x3
        let (get_method : 'T t -> string) =
          fun (x5 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x5) "method")
        let (set_method : 'T t -> string -> unit) =
          fun (x7 : 'T t) ->
            fun (x8 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x7) "method"
                (Ojs.string_to_js x8)
        let (get_params : 'T t -> 'T) =
          fun (x10 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x10) "params")
        let (set_params : 'T t -> 'T -> unit) =
          fun (x12 : 'T t) ->
            fun (x13 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x12) "params"
                (Obj.magic x13)
      end
    module Schema =
      struct
        module Domain =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x16 : Ojs.t) -> x16
            and t_to_js : t -> Ojs.t = fun (x15 : Ojs.t) -> x15
            let (get_name : t -> string) =
              fun (x17 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x17) "name")
            let (set_name : t -> string -> unit) =
              fun (x18 : t) ->
                fun (x19 : string) ->
                  Ojs.set_prop_ascii (t_to_js x18) "name"
                    (Ojs.string_to_js x19)
            let (get_version : t -> string) =
              fun (x20 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x20) "version")
            let (set_version : t -> string -> unit) =
              fun (x21 : t) ->
                fun (x22 : string) ->
                  Ojs.set_prop_ascii (t_to_js x21) "version"
                    (Ojs.string_to_js x22)
          end
        module GetDomainsReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x24 : Ojs.t) -> x24
            and t_to_js : t -> Ojs.t = fun (x23 : Ojs.t) -> x23
            let (get_domains : t -> Schema_Domain.t list) =
              fun (x25 : t) ->
                Ojs.list_of_js Schema_Domain.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x25) "domains")
            let (set_domains : t -> Schema_Domain.t list -> unit) =
              fun (x27 : t) ->
                fun (x28 : Schema_Domain.t list) ->
                  Ojs.set_prop_ascii (t_to_js x27) "domains"
                    (Ojs.list_to_js Schema_Domain.t_to_js x28)
          end
      end
    module Runtime =
      struct
        module ScriptId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x31 : Ojs.t) -> Ojs.string_of_js x31
            and t_to_js : t -> Ojs.t =
              fun (x30 : string) -> Ojs.string_to_js x30
          end
        module RemoteObjectId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x33 : Ojs.t) -> Ojs.string_of_js x33
            and t_to_js : t -> Ojs.t =
              fun (x32 : string) -> Ojs.string_to_js x32
          end
        module UnserializableValue =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x35 : Ojs.t) -> Ojs.string_of_js x35
            and t_to_js : t -> Ojs.t =
              fun (x34 : string) -> Ojs.string_to_js x34
          end
        module RemoteObject =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x37 : Ojs.t) -> x37
            and t_to_js : t -> Ojs.t = fun (x36 : Ojs.t) -> x36
            let (get_type : t -> string) =
              fun (x38 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x38) "type")
            let (set_type : t -> string -> unit) =
              fun (x39 : t) ->
                fun (x40 : string) ->
                  Ojs.set_prop_ascii (t_to_js x39) "type"
                    (Ojs.string_to_js x40)
            let (get_subtype : t -> string) =
              fun (x41 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x41) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x42 : t) ->
                fun (x43 : string) ->
                  Ojs.set_prop_ascii (t_to_js x42) "subtype"
                    (Ojs.string_to_js x43)
            let (get_class_name : t -> string) =
              fun (x44 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x44) "className")
            let (set_class_name : t -> string -> unit) =
              fun (x45 : t) ->
                fun (x46 : string) ->
                  Ojs.set_prop_ascii (t_to_js x45) "className"
                    (Ojs.string_to_js x46)
            let (get_value : t -> any) =
              fun (x47 : t) ->
                any_of_js (Ojs.get_prop_ascii (t_to_js x47) "value")
            let (set_value : t -> any -> unit) =
              fun (x48 : t) ->
                fun (x49 : any) ->
                  Ojs.set_prop_ascii (t_to_js x48) "value" (any_to_js x49)
            let (get_unserializable_value :
              t -> Runtime_UnserializableValue.t) =
              fun (x50 : t) ->
                Runtime_UnserializableValue.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x50) "unserializableValue")
            let (set_unserializable_value :
              t -> Runtime_UnserializableValue.t -> unit) =
              fun (x51 : t) ->
                fun (x52 : Runtime_UnserializableValue.t) ->
                  Ojs.set_prop_ascii (t_to_js x51) "unserializableValue"
                    (Runtime_UnserializableValue.t_to_js x52)
            let (get_description : t -> string) =
              fun (x53 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x53) "description")
            let (set_description : t -> string -> unit) =
              fun (x54 : t) ->
                fun (x55 : string) ->
                  Ojs.set_prop_ascii (t_to_js x54) "description"
                    (Ojs.string_to_js x55)
            let (get_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x56 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x56) "objectId")
            let (set_object_id : t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x57 : t) ->
                fun (x58 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x57) "objectId"
                    (Runtime_RemoteObjectId.t_to_js x58)
            let (get_preview : t -> Runtime_ObjectPreview.t) =
              fun (x59 : t) ->
                Runtime_ObjectPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x59) "preview")
            let (set_preview : t -> Runtime_ObjectPreview.t -> unit) =
              fun (x60 : t) ->
                fun (x61 : Runtime_ObjectPreview.t) ->
                  Ojs.set_prop_ascii (t_to_js x60) "preview"
                    (Runtime_ObjectPreview.t_to_js x61)
            let (get_custom_preview : t -> Runtime_CustomPreview.t) =
              fun (x62 : t) ->
                Runtime_CustomPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x62) "customPreview")
            let (set_custom_preview : t -> Runtime_CustomPreview.t -> unit) =
              fun (x63 : t) ->
                fun (x64 : Runtime_CustomPreview.t) ->
                  Ojs.set_prop_ascii (t_to_js x63) "customPreview"
                    (Runtime_CustomPreview.t_to_js x64)
          end
        module CustomPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x66 : Ojs.t) -> x66
            and t_to_js : t -> Ojs.t = fun (x65 : Ojs.t) -> x65
            let (get_header : t -> string) =
              fun (x67 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x67) "header")
            let (set_header : t -> string -> unit) =
              fun (x68 : t) ->
                fun (x69 : string) ->
                  Ojs.set_prop_ascii (t_to_js x68) "header"
                    (Ojs.string_to_js x69)
            let (get_has_body : t -> bool) =
              fun (x70 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x70) "hasBody")
            let (set_has_body : t -> bool -> unit) =
              fun (x71 : t) ->
                fun (x72 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x71) "hasBody"
                    (Ojs.bool_to_js x72)
            let (get_formatter_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x73 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x73) "formatterObjectId")
            let (set_formatter_object_id :
              t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x74 : t) ->
                fun (x75 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x74) "formatterObjectId"
                    (Runtime_RemoteObjectId.t_to_js x75)
            let (get_bind_remote_object_function_id :
              t -> Runtime_RemoteObjectId.t) =
              fun (x76 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x76)
                     "bindRemoteObjectFunctionId")
            let (set_bind_remote_object_function_id :
              t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x77 : t) ->
                fun (x78 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x77)
                    "bindRemoteObjectFunctionId"
                    (Runtime_RemoteObjectId.t_to_js x78)
            let (get_config_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x79 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x79) "configObjectId")
            let (set_config_object_id :
              t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x80 : t) ->
                fun (x81 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x80) "configObjectId"
                    (Runtime_RemoteObjectId.t_to_js x81)
          end
        module ObjectPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x83 : Ojs.t) -> x83
            and t_to_js : t -> Ojs.t = fun (x82 : Ojs.t) -> x82
            let (get_type : t -> string) =
              fun (x84 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x84) "type")
            let (set_type : t -> string -> unit) =
              fun (x85 : t) ->
                fun (x86 : string) ->
                  Ojs.set_prop_ascii (t_to_js x85) "type"
                    (Ojs.string_to_js x86)
            let (get_subtype : t -> string) =
              fun (x87 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x87) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x88 : t) ->
                fun (x89 : string) ->
                  Ojs.set_prop_ascii (t_to_js x88) "subtype"
                    (Ojs.string_to_js x89)
            let (get_description : t -> string) =
              fun (x90 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x90) "description")
            let (set_description : t -> string -> unit) =
              fun (x91 : t) ->
                fun (x92 : string) ->
                  Ojs.set_prop_ascii (t_to_js x91) "description"
                    (Ojs.string_to_js x92)
            let (get_overflow : t -> bool) =
              fun (x93 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x93) "overflow")
            let (set_overflow : t -> bool -> unit) =
              fun (x94 : t) ->
                fun (x95 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x94) "overflow"
                    (Ojs.bool_to_js x95)
            let (get_properties : t -> Runtime_PropertyPreview.t list) =
              fun (x96 : t) ->
                Ojs.list_of_js Runtime_PropertyPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x96) "properties")
            let (set_properties :
              t -> Runtime_PropertyPreview.t list -> unit) =
              fun (x98 : t) ->
                fun (x99 : Runtime_PropertyPreview.t list) ->
                  Ojs.set_prop_ascii (t_to_js x98) "properties"
                    (Ojs.list_to_js Runtime_PropertyPreview.t_to_js x99)
            let (get_entries : t -> Runtime_EntryPreview.t list) =
              fun (x101 : t) ->
                Ojs.list_of_js Runtime_EntryPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x101) "entries")
            let (set_entries : t -> Runtime_EntryPreview.t list -> unit) =
              fun (x103 : t) ->
                fun (x104 : Runtime_EntryPreview.t list) ->
                  Ojs.set_prop_ascii (t_to_js x103) "entries"
                    (Ojs.list_to_js Runtime_EntryPreview.t_to_js x104)
          end
        module PropertyPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x107 : Ojs.t) -> x107
            and t_to_js : t -> Ojs.t = fun (x106 : Ojs.t) -> x106
            let (get_name : t -> string) =
              fun (x108 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x108) "name")
            let (set_name : t -> string -> unit) =
              fun (x109 : t) ->
                fun (x110 : string) ->
                  Ojs.set_prop_ascii (t_to_js x109) "name"
                    (Ojs.string_to_js x110)
            let (get_type : t -> string) =
              fun (x111 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x111) "type")
            let (set_type : t -> string -> unit) =
              fun (x112 : t) ->
                fun (x113 : string) ->
                  Ojs.set_prop_ascii (t_to_js x112) "type"
                    (Ojs.string_to_js x113)
            let (get_value : t -> string) =
              fun (x114 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x114) "value")
            let (set_value : t -> string -> unit) =
              fun (x115 : t) ->
                fun (x116 : string) ->
                  Ojs.set_prop_ascii (t_to_js x115) "value"
                    (Ojs.string_to_js x116)
            let (get_value_preview : t -> Runtime_ObjectPreview.t) =
              fun (x117 : t) ->
                Runtime_ObjectPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x117) "valuePreview")
            let (set_value_preview : t -> Runtime_ObjectPreview.t -> unit) =
              fun (x118 : t) ->
                fun (x119 : Runtime_ObjectPreview.t) ->
                  Ojs.set_prop_ascii (t_to_js x118) "valuePreview"
                    (Runtime_ObjectPreview.t_to_js x119)
            let (get_subtype : t -> string) =
              fun (x120 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x120) "subtype")
            let (set_subtype : t -> string -> unit) =
              fun (x121 : t) ->
                fun (x122 : string) ->
                  Ojs.set_prop_ascii (t_to_js x121) "subtype"
                    (Ojs.string_to_js x122)
          end
        module EntryPreview =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x124 : Ojs.t) -> x124
            and t_to_js : t -> Ojs.t = fun (x123 : Ojs.t) -> x123
            let (get_key : t -> Runtime_ObjectPreview.t) =
              fun (x125 : t) ->
                Runtime_ObjectPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x125) "key")
            let (set_key : t -> Runtime_ObjectPreview.t -> unit) =
              fun (x126 : t) ->
                fun (x127 : Runtime_ObjectPreview.t) ->
                  Ojs.set_prop_ascii (t_to_js x126) "key"
                    (Runtime_ObjectPreview.t_to_js x127)
            let (get_value : t -> Runtime_ObjectPreview.t) =
              fun (x128 : t) ->
                Runtime_ObjectPreview.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x128) "value")
            let (set_value : t -> Runtime_ObjectPreview.t -> unit) =
              fun (x129 : t) ->
                fun (x130 : Runtime_ObjectPreview.t) ->
                  Ojs.set_prop_ascii (t_to_js x129) "value"
                    (Runtime_ObjectPreview.t_to_js x130)
          end
        module PropertyDescriptor =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x132 : Ojs.t) -> x132
            and t_to_js : t -> Ojs.t = fun (x131 : Ojs.t) -> x131
            let (get_name : t -> string) =
              fun (x133 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x133) "name")
            let (set_name : t -> string -> unit) =
              fun (x134 : t) ->
                fun (x135 : string) ->
                  Ojs.set_prop_ascii (t_to_js x134) "name"
                    (Ojs.string_to_js x135)
            let (get_value : t -> Runtime_RemoteObject.t) =
              fun (x136 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x136) "value")
            let (set_value : t -> Runtime_RemoteObject.t -> unit) =
              fun (x137 : t) ->
                fun (x138 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x137) "value"
                    (Runtime_RemoteObject.t_to_js x138)
            let (get_writable : t -> bool) =
              fun (x139 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x139) "writable")
            let (set_writable : t -> bool -> unit) =
              fun (x140 : t) ->
                fun (x141 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x140) "writable"
                    (Ojs.bool_to_js x141)
            let (get_get : t -> Runtime_RemoteObject.t) =
              fun (x142 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x142) "get")
            let (set_get : t -> Runtime_RemoteObject.t -> unit) =
              fun (x143 : t) ->
                fun (x144 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x143) "get"
                    (Runtime_RemoteObject.t_to_js x144)
            let (get_set : t -> Runtime_RemoteObject.t) =
              fun (x145 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x145) "set")
            let (set_set : t -> Runtime_RemoteObject.t -> unit) =
              fun (x146 : t) ->
                fun (x147 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x146) "set"
                    (Runtime_RemoteObject.t_to_js x147)
            let (get_configurable : t -> bool) =
              fun (x148 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x148) "configurable")
            let (set_configurable : t -> bool -> unit) =
              fun (x149 : t) ->
                fun (x150 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x149) "configurable"
                    (Ojs.bool_to_js x150)
            let (get_enumerable : t -> bool) =
              fun (x151 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x151) "enumerable")
            let (set_enumerable : t -> bool -> unit) =
              fun (x152 : t) ->
                fun (x153 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x152) "enumerable"
                    (Ojs.bool_to_js x153)
            let (get_was_thrown : t -> bool) =
              fun (x154 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x154) "wasThrown")
            let (set_was_thrown : t -> bool -> unit) =
              fun (x155 : t) ->
                fun (x156 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x155) "wasThrown"
                    (Ojs.bool_to_js x156)
            let (get_is_own : t -> bool) =
              fun (x157 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x157) "isOwn")
            let (set_is_own : t -> bool -> unit) =
              fun (x158 : t) ->
                fun (x159 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x158) "isOwn"
                    (Ojs.bool_to_js x159)
            let (get_symbol : t -> Runtime_RemoteObject.t) =
              fun (x160 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x160) "symbol")
            let (set_symbol : t -> Runtime_RemoteObject.t -> unit) =
              fun (x161 : t) ->
                fun (x162 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x161) "symbol"
                    (Runtime_RemoteObject.t_to_js x162)
          end
        module InternalPropertyDescriptor =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x164 : Ojs.t) -> x164
            and t_to_js : t -> Ojs.t = fun (x163 : Ojs.t) -> x163
            let (get_name : t -> string) =
              fun (x165 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x165) "name")
            let (set_name : t -> string -> unit) =
              fun (x166 : t) ->
                fun (x167 : string) ->
                  Ojs.set_prop_ascii (t_to_js x166) "name"
                    (Ojs.string_to_js x167)
            let (get_value : t -> Runtime_RemoteObject.t) =
              fun (x168 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x168) "value")
            let (set_value : t -> Runtime_RemoteObject.t -> unit) =
              fun (x169 : t) ->
                fun (x170 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x169) "value"
                    (Runtime_RemoteObject.t_to_js x170)
          end
        module CallArgument =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x172 : Ojs.t) -> x172
            and t_to_js : t -> Ojs.t = fun (x171 : Ojs.t) -> x171
            let (get_value : t -> any) =
              fun (x173 : t) ->
                any_of_js (Ojs.get_prop_ascii (t_to_js x173) "value")
            let (set_value : t -> any -> unit) =
              fun (x174 : t) ->
                fun (x175 : any) ->
                  Ojs.set_prop_ascii (t_to_js x174) "value" (any_to_js x175)
            let (get_unserializable_value :
              t -> Runtime_UnserializableValue.t) =
              fun (x176 : t) ->
                Runtime_UnserializableValue.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x176) "unserializableValue")
            let (set_unserializable_value :
              t -> Runtime_UnserializableValue.t -> unit) =
              fun (x177 : t) ->
                fun (x178 : Runtime_UnserializableValue.t) ->
                  Ojs.set_prop_ascii (t_to_js x177) "unserializableValue"
                    (Runtime_UnserializableValue.t_to_js x178)
            let (get_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x179 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x179) "objectId")
            let (set_object_id : t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x180 : t) ->
                fun (x181 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x180) "objectId"
                    (Runtime_RemoteObjectId.t_to_js x181)
          end
        module ExecutionContextId =
          struct
            type t = int
            let rec t_of_js : Ojs.t -> t =
              fun (x183 : Ojs.t) -> Ojs.int_of_js x183
            and t_to_js : t -> Ojs.t = fun (x182 : int) -> Ojs.int_to_js x182
          end
        module ExecutionContextDescription =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x185 : Ojs.t) -> x185
            and t_to_js : t -> Ojs.t = fun (x184 : Ojs.t) -> x184
            let (get_id : t -> Runtime_ExecutionContextId.t) =
              fun (x186 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x186) "id")
            let (set_id : t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x187 : t) ->
                fun (x188 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x187) "id"
                    (Runtime_ExecutionContextId.t_to_js x188)
            let (get_origin : t -> string) =
              fun (x189 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x189) "origin")
            let (set_origin : t -> string -> unit) =
              fun (x190 : t) ->
                fun (x191 : string) ->
                  Ojs.set_prop_ascii (t_to_js x190) "origin"
                    (Ojs.string_to_js x191)
            let (get_name : t -> string) =
              fun (x192 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x192) "name")
            let (set_name : t -> string -> unit) =
              fun (x193 : t) ->
                fun (x194 : string) ->
                  Ojs.set_prop_ascii (t_to_js x193) "name"
                    (Ojs.string_to_js x194)
            let (get_aux_data : t -> AnonymousInterface0.t) =
              fun (x195 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x195) "auxData")
            let (set_aux_data : t -> AnonymousInterface0.t -> unit) =
              fun (x196 : t) ->
                fun (x197 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x196) "auxData"
                    (AnonymousInterface0.t_to_js x197)
          end
        module ExceptionDetails =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x199 : Ojs.t) -> x199
            and t_to_js : t -> Ojs.t = fun (x198 : Ojs.t) -> x198
            let (get_exception_id : t -> int) =
              fun (x200 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x200) "exceptionId")
            let (set_exception_id : t -> int -> unit) =
              fun (x201 : t) ->
                fun (x202 : int) ->
                  Ojs.set_prop_ascii (t_to_js x201) "exceptionId"
                    (Ojs.int_to_js x202)
            let (get_text : t -> string) =
              fun (x203 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x203) "text")
            let (set_text : t -> string -> unit) =
              fun (x204 : t) ->
                fun (x205 : string) ->
                  Ojs.set_prop_ascii (t_to_js x204) "text"
                    (Ojs.string_to_js x205)
            let (get_line_number : t -> int) =
              fun (x206 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x206) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x207 : t) ->
                fun (x208 : int) ->
                  Ojs.set_prop_ascii (t_to_js x207) "lineNumber"
                    (Ojs.int_to_js x208)
            let (get_column_number : t -> int) =
              fun (x209 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x209) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x210 : t) ->
                fun (x211 : int) ->
                  Ojs.set_prop_ascii (t_to_js x210) "columnNumber"
                    (Ojs.int_to_js x211)
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x212 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x212) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x213 : t) ->
                fun (x214 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x213) "scriptId"
                    (Runtime_ScriptId.t_to_js x214)
            let (get_url : t -> string) =
              fun (x215 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x215) "url")
            let (set_url : t -> string -> unit) =
              fun (x216 : t) ->
                fun (x217 : string) ->
                  Ojs.set_prop_ascii (t_to_js x216) "url"
                    (Ojs.string_to_js x217)
            let (get_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x218 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x218) "stackTrace")
            let (set_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x219 : t) ->
                fun (x220 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x219) "stackTrace"
                    (Runtime_StackTrace.t_to_js x220)
            let (get_exception : t -> Runtime_RemoteObject.t) =
              fun (x221 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x221) "exception")
            let (set_exception : t -> Runtime_RemoteObject.t -> unit) =
              fun (x222 : t) ->
                fun (x223 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x222) "exception"
                    (Runtime_RemoteObject.t_to_js x223)
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x224 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x224) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x225 : t) ->
                fun (x226 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x225) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x226)
          end
        module Timestamp =
          struct
            type t = int
            let rec t_of_js : Ojs.t -> t =
              fun (x228 : Ojs.t) -> Ojs.int_of_js x228
            and t_to_js : t -> Ojs.t = fun (x227 : int) -> Ojs.int_to_js x227
          end
        module CallFrame =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x230 : Ojs.t) -> x230
            and t_to_js : t -> Ojs.t = fun (x229 : Ojs.t) -> x229
            let (get_function_name : t -> string) =
              fun (x231 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x231) "functionName")
            let (set_function_name : t -> string -> unit) =
              fun (x232 : t) ->
                fun (x233 : string) ->
                  Ojs.set_prop_ascii (t_to_js x232) "functionName"
                    (Ojs.string_to_js x233)
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x234 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x234) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x235 : t) ->
                fun (x236 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x235) "scriptId"
                    (Runtime_ScriptId.t_to_js x236)
            let (get_url : t -> string) =
              fun (x237 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x237) "url")
            let (set_url : t -> string -> unit) =
              fun (x238 : t) ->
                fun (x239 : string) ->
                  Ojs.set_prop_ascii (t_to_js x238) "url"
                    (Ojs.string_to_js x239)
            let (get_line_number : t -> int) =
              fun (x240 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x240) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x241 : t) ->
                fun (x242 : int) ->
                  Ojs.set_prop_ascii (t_to_js x241) "lineNumber"
                    (Ojs.int_to_js x242)
            let (get_column_number : t -> int) =
              fun (x243 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x243) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x244 : t) ->
                fun (x245 : int) ->
                  Ojs.set_prop_ascii (t_to_js x244) "columnNumber"
                    (Ojs.int_to_js x245)
          end
        module StackTrace =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x247 : Ojs.t) -> x247
            and t_to_js : t -> Ojs.t = fun (x246 : Ojs.t) -> x246
            let (get_description : t -> string) =
              fun (x248 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x248) "description")
            let (set_description : t -> string -> unit) =
              fun (x249 : t) ->
                fun (x250 : string) ->
                  Ojs.set_prop_ascii (t_to_js x249) "description"
                    (Ojs.string_to_js x250)
            let (get_call_frames : t -> Runtime_CallFrame.t list) =
              fun (x251 : t) ->
                Ojs.list_of_js Runtime_CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x251) "callFrames")
            let (set_call_frames : t -> Runtime_CallFrame.t list -> unit) =
              fun (x253 : t) ->
                fun (x254 : Runtime_CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x253) "callFrames"
                    (Ojs.list_to_js Runtime_CallFrame.t_to_js x254)
            let (get_parent : t -> t) =
              fun (x256 : t) ->
                t_of_js (Ojs.get_prop_ascii (t_to_js x256) "parent")
            let (set_parent : t -> t -> unit) =
              fun (x257 : t) ->
                fun (x258 : t) ->
                  Ojs.set_prop_ascii (t_to_js x257) "parent" (t_to_js x258)
            let (get_parent_id : t -> Runtime_StackTraceId.t) =
              fun (x259 : t) ->
                Runtime_StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x259) "parentId")
            let (set_parent_id : t -> Runtime_StackTraceId.t -> unit) =
              fun (x260 : t) ->
                fun (x261 : Runtime_StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x260) "parentId"
                    (Runtime_StackTraceId.t_to_js x261)
          end
        module UniqueDebuggerId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x263 : Ojs.t) -> Ojs.string_of_js x263
            and t_to_js : t -> Ojs.t =
              fun (x262 : string) -> Ojs.string_to_js x262
          end
        module StackTraceId =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x265 : Ojs.t) -> x265
            and t_to_js : t -> Ojs.t = fun (x264 : Ojs.t) -> x264
            let (get_id : t -> string) =
              fun (x266 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x266) "id")
            let (set_id : t -> string -> unit) =
              fun (x267 : t) ->
                fun (x268 : string) ->
                  Ojs.set_prop_ascii (t_to_js x267) "id"
                    (Ojs.string_to_js x268)
            let (get_debugger_id : t -> Runtime_UniqueDebuggerId.t) =
              fun (x269 : t) ->
                Runtime_UniqueDebuggerId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x269) "debuggerId")
            let (set_debugger_id : t -> Runtime_UniqueDebuggerId.t -> unit) =
              fun (x270 : t) ->
                fun (x271 : Runtime_UniqueDebuggerId.t) ->
                  Ojs.set_prop_ascii (t_to_js x270) "debuggerId"
                    (Runtime_UniqueDebuggerId.t_to_js x271)
          end
        module EvaluateParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x273 : Ojs.t) -> x273
            and t_to_js : t -> Ojs.t = fun (x272 : Ojs.t) -> x272
            let (get_expression : t -> string) =
              fun (x274 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x274) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x275 : t) ->
                fun (x276 : string) ->
                  Ojs.set_prop_ascii (t_to_js x275) "expression"
                    (Ojs.string_to_js x276)
            let (get_object_group : t -> string) =
              fun (x277 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x277) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x278 : t) ->
                fun (x279 : string) ->
                  Ojs.set_prop_ascii (t_to_js x278) "objectGroup"
                    (Ojs.string_to_js x279)
            let (get_include_command_line_api : t -> bool) =
              fun (x280 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x280) "includeCommandLineAPI")
            let (set_include_command_line_api : t -> bool -> unit) =
              fun (x281 : t) ->
                fun (x282 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x281) "includeCommandLineAPI"
                    (Ojs.bool_to_js x282)
            let (get_silent : t -> bool) =
              fun (x283 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x283) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x284 : t) ->
                fun (x285 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x284) "silent"
                    (Ojs.bool_to_js x285)
            let (get_context_id : t -> Runtime_ExecutionContextId.t) =
              fun (x286 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x286) "contextId")
            let (set_context_id : t -> Runtime_ExecutionContextId.t -> unit)
              =
              fun (x287 : t) ->
                fun (x288 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x287) "contextId"
                    (Runtime_ExecutionContextId.t_to_js x288)
            let (get_return_by_value : t -> bool) =
              fun (x289 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x289) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x290 : t) ->
                fun (x291 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x290) "returnByValue"
                    (Ojs.bool_to_js x291)
            let (get_generate_preview : t -> bool) =
              fun (x292 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x292) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x293 : t) ->
                fun (x294 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x293) "generatePreview"
                    (Ojs.bool_to_js x294)
            let (get_user_gesture : t -> bool) =
              fun (x295 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x295) "userGesture")
            let (set_user_gesture : t -> bool -> unit) =
              fun (x296 : t) ->
                fun (x297 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x296) "userGesture"
                    (Ojs.bool_to_js x297)
            let (get_await_promise : t -> bool) =
              fun (x298 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x298) "awaitPromise")
            let (set_await_promise : t -> bool -> unit) =
              fun (x299 : t) ->
                fun (x300 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x299) "awaitPromise"
                    (Ojs.bool_to_js x300)
          end
        module AwaitPromiseParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x302 : Ojs.t) -> x302
            and t_to_js : t -> Ojs.t = fun (x301 : Ojs.t) -> x301
            let (get_promise_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x303 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x303) "promiseObjectId")
            let (set_promise_object_id :
              t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x304 : t) ->
                fun (x305 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x304) "promiseObjectId"
                    (Runtime_RemoteObjectId.t_to_js x305)
            let (get_return_by_value : t -> bool) =
              fun (x306 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x306) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x307 : t) ->
                fun (x308 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x307) "returnByValue"
                    (Ojs.bool_to_js x308)
            let (get_generate_preview : t -> bool) =
              fun (x309 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x309) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x310 : t) ->
                fun (x311 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x310) "generatePreview"
                    (Ojs.bool_to_js x311)
          end
        module CallFunctionOnParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x313 : Ojs.t) -> x313
            and t_to_js : t -> Ojs.t = fun (x312 : Ojs.t) -> x312
            let (get_function_declaration : t -> string) =
              fun (x314 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x314) "functionDeclaration")
            let (set_function_declaration : t -> string -> unit) =
              fun (x315 : t) ->
                fun (x316 : string) ->
                  Ojs.set_prop_ascii (t_to_js x315) "functionDeclaration"
                    (Ojs.string_to_js x316)
            let (get_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x317 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x317) "objectId")
            let (set_object_id : t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x318 : t) ->
                fun (x319 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x318) "objectId"
                    (Runtime_RemoteObjectId.t_to_js x319)
            let (get_arguments : t -> Runtime_CallArgument.t list) =
              fun (x320 : t) ->
                Ojs.list_of_js Runtime_CallArgument.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x320) "arguments")
            let (set_arguments : t -> Runtime_CallArgument.t list -> unit) =
              fun (x322 : t) ->
                fun (x323 : Runtime_CallArgument.t list) ->
                  Ojs.set_prop_ascii (t_to_js x322) "arguments"
                    (Ojs.list_to_js Runtime_CallArgument.t_to_js x323)
            let (get_silent : t -> bool) =
              fun (x325 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x325) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x326 : t) ->
                fun (x327 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x326) "silent"
                    (Ojs.bool_to_js x327)
            let (get_return_by_value : t -> bool) =
              fun (x328 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x328) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x329 : t) ->
                fun (x330 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x329) "returnByValue"
                    (Ojs.bool_to_js x330)
            let (get_generate_preview : t -> bool) =
              fun (x331 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x331) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x332 : t) ->
                fun (x333 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x332) "generatePreview"
                    (Ojs.bool_to_js x333)
            let (get_user_gesture : t -> bool) =
              fun (x334 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x334) "userGesture")
            let (set_user_gesture : t -> bool -> unit) =
              fun (x335 : t) ->
                fun (x336 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x335) "userGesture"
                    (Ojs.bool_to_js x336)
            let (get_await_promise : t -> bool) =
              fun (x337 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x337) "awaitPromise")
            let (set_await_promise : t -> bool -> unit) =
              fun (x338 : t) ->
                fun (x339 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x338) "awaitPromise"
                    (Ojs.bool_to_js x339)
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x340 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x340) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x341 : t) ->
                fun (x342 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x341) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x342)
            let (get_object_group : t -> string) =
              fun (x343 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x343) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x344 : t) ->
                fun (x345 : string) ->
                  Ojs.set_prop_ascii (t_to_js x344) "objectGroup"
                    (Ojs.string_to_js x345)
          end
        module GetPropertiesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x347 : Ojs.t) -> x347
            and t_to_js : t -> Ojs.t = fun (x346 : Ojs.t) -> x346
            let (get_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x348 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x348) "objectId")
            let (set_object_id : t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x349 : t) ->
                fun (x350 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x349) "objectId"
                    (Runtime_RemoteObjectId.t_to_js x350)
            let (get_own_properties : t -> bool) =
              fun (x351 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x351) "ownProperties")
            let (set_own_properties : t -> bool -> unit) =
              fun (x352 : t) ->
                fun (x353 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x352) "ownProperties"
                    (Ojs.bool_to_js x353)
            let (get_accessor_properties_only : t -> bool) =
              fun (x354 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x354) "accessorPropertiesOnly")
            let (set_accessor_properties_only : t -> bool -> unit) =
              fun (x355 : t) ->
                fun (x356 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x355) "accessorPropertiesOnly"
                    (Ojs.bool_to_js x356)
            let (get_generate_preview : t -> bool) =
              fun (x357 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x357) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x358 : t) ->
                fun (x359 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x358) "generatePreview"
                    (Ojs.bool_to_js x359)
          end
        module ReleaseObjectParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x361 : Ojs.t) -> x361
            and t_to_js : t -> Ojs.t = fun (x360 : Ojs.t) -> x360
            let (get_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x362 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x362) "objectId")
            let (set_object_id : t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x363 : t) ->
                fun (x364 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x363) "objectId"
                    (Runtime_RemoteObjectId.t_to_js x364)
          end
        module ReleaseObjectGroupParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x366 : Ojs.t) -> x366
            and t_to_js : t -> Ojs.t = fun (x365 : Ojs.t) -> x365
            let (get_object_group : t -> string) =
              fun (x367 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x367) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x368 : t) ->
                fun (x369 : string) ->
                  Ojs.set_prop_ascii (t_to_js x368) "objectGroup"
                    (Ojs.string_to_js x369)
          end
        module SetCustomObjectFormatterEnabledParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x371 : Ojs.t) -> x371
            and t_to_js : t -> Ojs.t = fun (x370 : Ojs.t) -> x370
            let (get_enabled : t -> bool) =
              fun (x372 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x372) "enabled")
            let (set_enabled : t -> bool -> unit) =
              fun (x373 : t) ->
                fun (x374 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x373) "enabled"
                    (Ojs.bool_to_js x374)
          end
        module CompileScriptParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x376 : Ojs.t) -> x376
            and t_to_js : t -> Ojs.t = fun (x375 : Ojs.t) -> x375
            let (get_expression : t -> string) =
              fun (x377 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x377) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x378 : t) ->
                fun (x379 : string) ->
                  Ojs.set_prop_ascii (t_to_js x378) "expression"
                    (Ojs.string_to_js x379)
            let (get_source_url : t -> string) =
              fun (x380 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x380) "sourceURL")
            let (set_source_url : t -> string -> unit) =
              fun (x381 : t) ->
                fun (x382 : string) ->
                  Ojs.set_prop_ascii (t_to_js x381) "sourceURL"
                    (Ojs.string_to_js x382)
            let (get_persist_script : t -> bool) =
              fun (x383 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x383) "persistScript")
            let (set_persist_script : t -> bool -> unit) =
              fun (x384 : t) ->
                fun (x385 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x384) "persistScript"
                    (Ojs.bool_to_js x385)
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x386 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x386) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x387 : t) ->
                fun (x388 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x387) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x388)
          end
        module RunScriptParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x390 : Ojs.t) -> x390
            and t_to_js : t -> Ojs.t = fun (x389 : Ojs.t) -> x389
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x391 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x391) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x392 : t) ->
                fun (x393 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x392) "scriptId"
                    (Runtime_ScriptId.t_to_js x393)
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x394 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x394) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x395 : t) ->
                fun (x396 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x395) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x396)
            let (get_object_group : t -> string) =
              fun (x397 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x397) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x398 : t) ->
                fun (x399 : string) ->
                  Ojs.set_prop_ascii (t_to_js x398) "objectGroup"
                    (Ojs.string_to_js x399)
            let (get_silent : t -> bool) =
              fun (x400 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x400) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x401 : t) ->
                fun (x402 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x401) "silent"
                    (Ojs.bool_to_js x402)
            let (get_include_command_line_api : t -> bool) =
              fun (x403 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x403) "includeCommandLineAPI")
            let (set_include_command_line_api : t -> bool -> unit) =
              fun (x404 : t) ->
                fun (x405 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x404) "includeCommandLineAPI"
                    (Ojs.bool_to_js x405)
            let (get_return_by_value : t -> bool) =
              fun (x406 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x406) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x407 : t) ->
                fun (x408 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x407) "returnByValue"
                    (Ojs.bool_to_js x408)
            let (get_generate_preview : t -> bool) =
              fun (x409 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x409) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x410 : t) ->
                fun (x411 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x410) "generatePreview"
                    (Ojs.bool_to_js x411)
            let (get_await_promise : t -> bool) =
              fun (x412 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x412) "awaitPromise")
            let (set_await_promise : t -> bool -> unit) =
              fun (x413 : t) ->
                fun (x414 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x413) "awaitPromise"
                    (Ojs.bool_to_js x414)
          end
        module QueryObjectsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x416 : Ojs.t) -> x416
            and t_to_js : t -> Ojs.t = fun (x415 : Ojs.t) -> x415
            let (get_prototype_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x417 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x417) "prototypeObjectId")
            let (set_prototype_object_id :
              t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x418 : t) ->
                fun (x419 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x418) "prototypeObjectId"
                    (Runtime_RemoteObjectId.t_to_js x419)
          end
        module GlobalLexicalScopeNamesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x421 : Ojs.t) -> x421
            and t_to_js : t -> Ojs.t = fun (x420 : Ojs.t) -> x420
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x422 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x422) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x423 : t) ->
                fun (x424 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x423) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x424)
          end
        module EvaluateReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x426 : Ojs.t) -> x426
            and t_to_js : t -> Ojs.t = fun (x425 : Ojs.t) -> x425
            let (get_result : t -> Runtime_RemoteObject.t) =
              fun (x427 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x427) "result")
            let (set_result : t -> Runtime_RemoteObject.t -> unit) =
              fun (x428 : t) ->
                fun (x429 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x428) "result"
                    (Runtime_RemoteObject.t_to_js x429)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x430 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x430) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x431 : t) ->
                fun (x432 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x431) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x432)
          end
        module AwaitPromiseReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x434 : Ojs.t) -> x434
            and t_to_js : t -> Ojs.t = fun (x433 : Ojs.t) -> x433
            let (get_result : t -> Runtime_RemoteObject.t) =
              fun (x435 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x435) "result")
            let (set_result : t -> Runtime_RemoteObject.t -> unit) =
              fun (x436 : t) ->
                fun (x437 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x436) "result"
                    (Runtime_RemoteObject.t_to_js x437)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x438 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x438) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x439 : t) ->
                fun (x440 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x439) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x440)
          end
        module CallFunctionOnReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x442 : Ojs.t) -> x442
            and t_to_js : t -> Ojs.t = fun (x441 : Ojs.t) -> x441
            let (get_result : t -> Runtime_RemoteObject.t) =
              fun (x443 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x443) "result")
            let (set_result : t -> Runtime_RemoteObject.t -> unit) =
              fun (x444 : t) ->
                fun (x445 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x444) "result"
                    (Runtime_RemoteObject.t_to_js x445)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x446 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x446) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x447 : t) ->
                fun (x448 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x447) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x448)
          end
        module GetPropertiesReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x450 : Ojs.t) -> x450
            and t_to_js : t -> Ojs.t = fun (x449 : Ojs.t) -> x449
            let (get_result : t -> Runtime_PropertyDescriptor.t list) =
              fun (x451 : t) ->
                Ojs.list_of_js Runtime_PropertyDescriptor.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x451) "result")
            let (set_result : t -> Runtime_PropertyDescriptor.t list -> unit)
              =
              fun (x453 : t) ->
                fun (x454 : Runtime_PropertyDescriptor.t list) ->
                  Ojs.set_prop_ascii (t_to_js x453) "result"
                    (Ojs.list_to_js Runtime_PropertyDescriptor.t_to_js x454)
            let (get_internal_properties :
              t -> Runtime_InternalPropertyDescriptor.t list) =
              fun (x456 : t) ->
                Ojs.list_of_js Runtime_InternalPropertyDescriptor.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x456) "internalProperties")
            let (set_internal_properties :
              t -> Runtime_InternalPropertyDescriptor.t list -> unit) =
              fun (x458 : t) ->
                fun (x459 : Runtime_InternalPropertyDescriptor.t list) ->
                  Ojs.set_prop_ascii (t_to_js x458) "internalProperties"
                    (Ojs.list_to_js
                       Runtime_InternalPropertyDescriptor.t_to_js x459)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x461 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x461) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x462 : t) ->
                fun (x463 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x462) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x463)
          end
        module CompileScriptReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x465 : Ojs.t) -> x465
            and t_to_js : t -> Ojs.t = fun (x464 : Ojs.t) -> x464
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x466 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x466) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x467 : t) ->
                fun (x468 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x467) "scriptId"
                    (Runtime_ScriptId.t_to_js x468)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x469 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x469) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x470 : t) ->
                fun (x471 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x470) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x471)
          end
        module RunScriptReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x473 : Ojs.t) -> x473
            and t_to_js : t -> Ojs.t = fun (x472 : Ojs.t) -> x472
            let (get_result : t -> Runtime_RemoteObject.t) =
              fun (x474 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x474) "result")
            let (set_result : t -> Runtime_RemoteObject.t -> unit) =
              fun (x475 : t) ->
                fun (x476 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x475) "result"
                    (Runtime_RemoteObject.t_to_js x476)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x477 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x477) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x478 : t) ->
                fun (x479 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x478) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x479)
          end
        module QueryObjectsReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x481 : Ojs.t) -> x481
            and t_to_js : t -> Ojs.t = fun (x480 : Ojs.t) -> x480
            let (get_objects : t -> Runtime_RemoteObject.t) =
              fun (x482 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x482) "objects")
            let (set_objects : t -> Runtime_RemoteObject.t -> unit) =
              fun (x483 : t) ->
                fun (x484 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x483) "objects"
                    (Runtime_RemoteObject.t_to_js x484)
          end
        module GlobalLexicalScopeNamesReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x486 : Ojs.t) -> x486
            and t_to_js : t -> Ojs.t = fun (x485 : Ojs.t) -> x485
            let (get_names : t -> string list) =
              fun (x487 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x487) "names")
            let (set_names : t -> string list -> unit) =
              fun (x489 : t) ->
                fun (x490 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x489) "names"
                    (Ojs.list_to_js Ojs.string_to_js x490)
          end
        module ExecutionContextCreatedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x493 : Ojs.t) -> x493
            and t_to_js : t -> Ojs.t = fun (x492 : Ojs.t) -> x492
            let (get_context : t -> Runtime_ExecutionContextDescription.t) =
              fun (x494 : t) ->
                Runtime_ExecutionContextDescription.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x494) "context")
            let (set_context :
              t -> Runtime_ExecutionContextDescription.t -> unit) =
              fun (x495 : t) ->
                fun (x496 : Runtime_ExecutionContextDescription.t) ->
                  Ojs.set_prop_ascii (t_to_js x495) "context"
                    (Runtime_ExecutionContextDescription.t_to_js x496)
          end
        module ExecutionContextDestroyedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x498 : Ojs.t) -> x498
            and t_to_js : t -> Ojs.t = fun (x497 : Ojs.t) -> x497
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x499 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x499) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x500 : t) ->
                fun (x501 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x500) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x501)
          end
        module ExceptionThrownEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x503 : Ojs.t) -> x503
            and t_to_js : t -> Ojs.t = fun (x502 : Ojs.t) -> x502
            let (get_timestamp : t -> Runtime_Timestamp.t) =
              fun (x504 : t) ->
                Runtime_Timestamp.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x504) "timestamp")
            let (set_timestamp : t -> Runtime_Timestamp.t -> unit) =
              fun (x505 : t) ->
                fun (x506 : Runtime_Timestamp.t) ->
                  Ojs.set_prop_ascii (t_to_js x505) "timestamp"
                    (Runtime_Timestamp.t_to_js x506)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x507 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x507) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x508 : t) ->
                fun (x509 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x508) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x509)
          end
        module ExceptionRevokedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x511 : Ojs.t) -> x511
            and t_to_js : t -> Ojs.t = fun (x510 : Ojs.t) -> x510
            let (get_reason : t -> string) =
              fun (x512 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x512) "reason")
            let (set_reason : t -> string -> unit) =
              fun (x513 : t) ->
                fun (x514 : string) ->
                  Ojs.set_prop_ascii (t_to_js x513) "reason"
                    (Ojs.string_to_js x514)
            let (get_exception_id : t -> int) =
              fun (x515 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x515) "exceptionId")
            let (set_exception_id : t -> int -> unit) =
              fun (x516 : t) ->
                fun (x517 : int) ->
                  Ojs.set_prop_ascii (t_to_js x516) "exceptionId"
                    (Ojs.int_to_js x517)
          end
        module ConsoleAPICalledEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x519 : Ojs.t) -> x519
            and t_to_js : t -> Ojs.t = fun (x518 : Ojs.t) -> x518
            let (get_type : t -> string) =
              fun (x520 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x520) "type")
            let (set_type : t -> string -> unit) =
              fun (x521 : t) ->
                fun (x522 : string) ->
                  Ojs.set_prop_ascii (t_to_js x521) "type"
                    (Ojs.string_to_js x522)
            let (get_args : t -> Runtime_RemoteObject.t list) =
              fun (x523 : t) ->
                Ojs.list_of_js Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x523) "args")
            let (set_args : t -> Runtime_RemoteObject.t list -> unit) =
              fun (x525 : t) ->
                fun (x526 : Runtime_RemoteObject.t list) ->
                  Ojs.set_prop_ascii (t_to_js x525) "args"
                    (Ojs.list_to_js Runtime_RemoteObject.t_to_js x526)
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x528 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x528) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x529 : t) ->
                fun (x530 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x529) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x530)
            let (get_timestamp : t -> Runtime_Timestamp.t) =
              fun (x531 : t) ->
                Runtime_Timestamp.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x531) "timestamp")
            let (set_timestamp : t -> Runtime_Timestamp.t -> unit) =
              fun (x532 : t) ->
                fun (x533 : Runtime_Timestamp.t) ->
                  Ojs.set_prop_ascii (t_to_js x532) "timestamp"
                    (Runtime_Timestamp.t_to_js x533)
            let (get_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x534 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x534) "stackTrace")
            let (set_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x535 : t) ->
                fun (x536 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x535) "stackTrace"
                    (Runtime_StackTrace.t_to_js x536)
            let (get_context : t -> string) =
              fun (x537 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x537) "context")
            let (set_context : t -> string -> unit) =
              fun (x538 : t) ->
                fun (x539 : string) ->
                  Ojs.set_prop_ascii (t_to_js x538) "context"
                    (Ojs.string_to_js x539)
          end
        module InspectRequestedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x541 : Ojs.t) -> x541
            and t_to_js : t -> Ojs.t = fun (x540 : Ojs.t) -> x540
            let (get_object : t -> Runtime_RemoteObject.t) =
              fun (x542 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x542) "object")
            let (set_object : t -> Runtime_RemoteObject.t -> unit) =
              fun (x543 : t) ->
                fun (x544 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x543) "object"
                    (Runtime_RemoteObject.t_to_js x544)
            let (get_hints : t -> AnonymousInterface0.t) =
              fun (x545 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x545) "hints")
            let (set_hints : t -> AnonymousInterface0.t -> unit) =
              fun (x546 : t) ->
                fun (x547 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x546) "hints"
                    (AnonymousInterface0.t_to_js x547)
          end
      end
    module Debugger =
      struct
        module BreakpointId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x549 : Ojs.t) -> Ojs.string_of_js x549
            and t_to_js : t -> Ojs.t =
              fun (x548 : string) -> Ojs.string_to_js x548
          end
        module CallFrameId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x551 : Ojs.t) -> Ojs.string_of_js x551
            and t_to_js : t -> Ojs.t =
              fun (x550 : string) -> Ojs.string_to_js x550
          end
        module Location =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x553 : Ojs.t) -> x553
            and t_to_js : t -> Ojs.t = fun (x552 : Ojs.t) -> x552
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x554 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x554) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x555 : t) ->
                fun (x556 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x555) "scriptId"
                    (Runtime_ScriptId.t_to_js x556)
            let (get_line_number : t -> int) =
              fun (x557 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x557) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x558 : t) ->
                fun (x559 : int) ->
                  Ojs.set_prop_ascii (t_to_js x558) "lineNumber"
                    (Ojs.int_to_js x559)
            let (get_column_number : t -> int) =
              fun (x560 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x560) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x561 : t) ->
                fun (x562 : int) ->
                  Ojs.set_prop_ascii (t_to_js x561) "columnNumber"
                    (Ojs.int_to_js x562)
          end
        module ScriptPosition =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x564 : Ojs.t) -> x564
            and t_to_js : t -> Ojs.t = fun (x563 : Ojs.t) -> x563
            let (get_line_number : t -> int) =
              fun (x565 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x565) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x566 : t) ->
                fun (x567 : int) ->
                  Ojs.set_prop_ascii (t_to_js x566) "lineNumber"
                    (Ojs.int_to_js x567)
            let (get_column_number : t -> int) =
              fun (x568 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x568) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x569 : t) ->
                fun (x570 : int) ->
                  Ojs.set_prop_ascii (t_to_js x569) "columnNumber"
                    (Ojs.int_to_js x570)
          end
        module CallFrame =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x572 : Ojs.t) -> x572
            and t_to_js : t -> Ojs.t = fun (x571 : Ojs.t) -> x571
            let (get_call_frame_id : t -> Debugger_CallFrameId.t) =
              fun (x573 : t) ->
                Debugger_CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x573) "callFrameId")
            let (set_call_frame_id : t -> Debugger_CallFrameId.t -> unit) =
              fun (x574 : t) ->
                fun (x575 : Debugger_CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x574) "callFrameId"
                    (Debugger_CallFrameId.t_to_js x575)
            let (get_function_name : t -> string) =
              fun (x576 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x576) "functionName")
            let (set_function_name : t -> string -> unit) =
              fun (x577 : t) ->
                fun (x578 : string) ->
                  Ojs.set_prop_ascii (t_to_js x577) "functionName"
                    (Ojs.string_to_js x578)
            let (get_function_location : t -> Debugger_Location.t) =
              fun (x579 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x579) "functionLocation")
            let (set_function_location : t -> Debugger_Location.t -> unit) =
              fun (x580 : t) ->
                fun (x581 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x580) "functionLocation"
                    (Debugger_Location.t_to_js x581)
            let (get_location : t -> Debugger_Location.t) =
              fun (x582 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x582) "location")
            let (set_location : t -> Debugger_Location.t -> unit) =
              fun (x583 : t) ->
                fun (x584 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x583) "location"
                    (Debugger_Location.t_to_js x584)
            let (get_url : t -> string) =
              fun (x585 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x585) "url")
            let (set_url : t -> string -> unit) =
              fun (x586 : t) ->
                fun (x587 : string) ->
                  Ojs.set_prop_ascii (t_to_js x586) "url"
                    (Ojs.string_to_js x587)
            let (get_scope_chain : t -> Debugger_Scope.t list) =
              fun (x588 : t) ->
                Ojs.list_of_js Debugger_Scope.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x588) "scopeChain")
            let (set_scope_chain : t -> Debugger_Scope.t list -> unit) =
              fun (x590 : t) ->
                fun (x591 : Debugger_Scope.t list) ->
                  Ojs.set_prop_ascii (t_to_js x590) "scopeChain"
                    (Ojs.list_to_js Debugger_Scope.t_to_js x591)
            let (get_this : t -> Runtime_RemoteObject.t) =
              fun (x593 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x593) "this")
            let (set_this : t -> Runtime_RemoteObject.t -> unit) =
              fun (x594 : t) ->
                fun (x595 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x594) "this"
                    (Runtime_RemoteObject.t_to_js x595)
            let (get_return_value : t -> Runtime_RemoteObject.t) =
              fun (x596 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x596) "returnValue")
            let (set_return_value : t -> Runtime_RemoteObject.t -> unit) =
              fun (x597 : t) ->
                fun (x598 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x597) "returnValue"
                    (Runtime_RemoteObject.t_to_js x598)
          end
        module Scope =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x600 : Ojs.t) -> x600
            and t_to_js : t -> Ojs.t = fun (x599 : Ojs.t) -> x599
            let (get_type : t -> string) =
              fun (x601 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x601) "type")
            let (set_type : t -> string -> unit) =
              fun (x602 : t) ->
                fun (x603 : string) ->
                  Ojs.set_prop_ascii (t_to_js x602) "type"
                    (Ojs.string_to_js x603)
            let (get_object : t -> Runtime_RemoteObject.t) =
              fun (x604 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x604) "object")
            let (set_object : t -> Runtime_RemoteObject.t -> unit) =
              fun (x605 : t) ->
                fun (x606 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x605) "object"
                    (Runtime_RemoteObject.t_to_js x606)
            let (get_name : t -> string) =
              fun (x607 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x607) "name")
            let (set_name : t -> string -> unit) =
              fun (x608 : t) ->
                fun (x609 : string) ->
                  Ojs.set_prop_ascii (t_to_js x608) "name"
                    (Ojs.string_to_js x609)
            let (get_start_location : t -> Debugger_Location.t) =
              fun (x610 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x610) "startLocation")
            let (set_start_location : t -> Debugger_Location.t -> unit) =
              fun (x611 : t) ->
                fun (x612 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x611) "startLocation"
                    (Debugger_Location.t_to_js x612)
            let (get_end_location : t -> Debugger_Location.t) =
              fun (x613 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x613) "endLocation")
            let (set_end_location : t -> Debugger_Location.t -> unit) =
              fun (x614 : t) ->
                fun (x615 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x614) "endLocation"
                    (Debugger_Location.t_to_js x615)
          end
        module SearchMatch =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x617 : Ojs.t) -> x617
            and t_to_js : t -> Ojs.t = fun (x616 : Ojs.t) -> x616
            let (get_line_number : t -> int) =
              fun (x618 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x618) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x619 : t) ->
                fun (x620 : int) ->
                  Ojs.set_prop_ascii (t_to_js x619) "lineNumber"
                    (Ojs.int_to_js x620)
            let (get_line_content : t -> string) =
              fun (x621 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x621) "lineContent")
            let (set_line_content : t -> string -> unit) =
              fun (x622 : t) ->
                fun (x623 : string) ->
                  Ojs.set_prop_ascii (t_to_js x622) "lineContent"
                    (Ojs.string_to_js x623)
          end
        module BreakLocation =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x625 : Ojs.t) -> x625
            and t_to_js : t -> Ojs.t = fun (x624 : Ojs.t) -> x624
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x626 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x626) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x627 : t) ->
                fun (x628 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x627) "scriptId"
                    (Runtime_ScriptId.t_to_js x628)
            let (get_line_number : t -> int) =
              fun (x629 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x629) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x630 : t) ->
                fun (x631 : int) ->
                  Ojs.set_prop_ascii (t_to_js x630) "lineNumber"
                    (Ojs.int_to_js x631)
            let (get_column_number : t -> int) =
              fun (x632 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x632) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x633 : t) ->
                fun (x634 : int) ->
                  Ojs.set_prop_ascii (t_to_js x633) "columnNumber"
                    (Ojs.int_to_js x634)
            let (get_type : t -> string) =
              fun (x635 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x635) "type")
            let (set_type : t -> string -> unit) =
              fun (x636 : t) ->
                fun (x637 : string) ->
                  Ojs.set_prop_ascii (t_to_js x636) "type"
                    (Ojs.string_to_js x637)
          end
        module SetBreakpointsActiveParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x639 : Ojs.t) -> x639
            and t_to_js : t -> Ojs.t = fun (x638 : Ojs.t) -> x638
            let (get_active : t -> bool) =
              fun (x640 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x640) "active")
            let (set_active : t -> bool -> unit) =
              fun (x641 : t) ->
                fun (x642 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x641) "active"
                    (Ojs.bool_to_js x642)
          end
        module SetSkipAllPausesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x644 : Ojs.t) -> x644
            and t_to_js : t -> Ojs.t = fun (x643 : Ojs.t) -> x643
            let (get_skip : t -> bool) =
              fun (x645 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x645) "skip")
            let (set_skip : t -> bool -> unit) =
              fun (x646 : t) ->
                fun (x647 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x646) "skip"
                    (Ojs.bool_to_js x647)
          end
        module SetBreakpointByUrlParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x649 : Ojs.t) -> x649
            and t_to_js : t -> Ojs.t = fun (x648 : Ojs.t) -> x648
            let (get_line_number : t -> int) =
              fun (x650 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x650) "lineNumber")
            let (set_line_number : t -> int -> unit) =
              fun (x651 : t) ->
                fun (x652 : int) ->
                  Ojs.set_prop_ascii (t_to_js x651) "lineNumber"
                    (Ojs.int_to_js x652)
            let (get_url : t -> string) =
              fun (x653 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x653) "url")
            let (set_url : t -> string -> unit) =
              fun (x654 : t) ->
                fun (x655 : string) ->
                  Ojs.set_prop_ascii (t_to_js x654) "url"
                    (Ojs.string_to_js x655)
            let (get_url_regex : t -> string) =
              fun (x656 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x656) "urlRegex")
            let (set_url_regex : t -> string -> unit) =
              fun (x657 : t) ->
                fun (x658 : string) ->
                  Ojs.set_prop_ascii (t_to_js x657) "urlRegex"
                    (Ojs.string_to_js x658)
            let (get_script_hash : t -> string) =
              fun (x659 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x659) "scriptHash")
            let (set_script_hash : t -> string -> unit) =
              fun (x660 : t) ->
                fun (x661 : string) ->
                  Ojs.set_prop_ascii (t_to_js x660) "scriptHash"
                    (Ojs.string_to_js x661)
            let (get_column_number : t -> int) =
              fun (x662 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x662) "columnNumber")
            let (set_column_number : t -> int -> unit) =
              fun (x663 : t) ->
                fun (x664 : int) ->
                  Ojs.set_prop_ascii (t_to_js x663) "columnNumber"
                    (Ojs.int_to_js x664)
            let (get_condition : t -> string) =
              fun (x665 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x665) "condition")
            let (set_condition : t -> string -> unit) =
              fun (x666 : t) ->
                fun (x667 : string) ->
                  Ojs.set_prop_ascii (t_to_js x666) "condition"
                    (Ojs.string_to_js x667)
          end
        module SetBreakpointParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x669 : Ojs.t) -> x669
            and t_to_js : t -> Ojs.t = fun (x668 : Ojs.t) -> x668
            let (get_location : t -> Debugger_Location.t) =
              fun (x670 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x670) "location")
            let (set_location : t -> Debugger_Location.t -> unit) =
              fun (x671 : t) ->
                fun (x672 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x671) "location"
                    (Debugger_Location.t_to_js x672)
            let (get_condition : t -> string) =
              fun (x673 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x673) "condition")
            let (set_condition : t -> string -> unit) =
              fun (x674 : t) ->
                fun (x675 : string) ->
                  Ojs.set_prop_ascii (t_to_js x674) "condition"
                    (Ojs.string_to_js x675)
          end
        module RemoveBreakpointParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x677 : Ojs.t) -> x677
            and t_to_js : t -> Ojs.t = fun (x676 : Ojs.t) -> x676
            let (get_breakpoint_id : t -> Debugger_BreakpointId.t) =
              fun (x678 : t) ->
                Debugger_BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x678) "breakpointId")
            let (set_breakpoint_id : t -> Debugger_BreakpointId.t -> unit) =
              fun (x679 : t) ->
                fun (x680 : Debugger_BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x679) "breakpointId"
                    (Debugger_BreakpointId.t_to_js x680)
          end
        module GetPossibleBreakpointsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x682 : Ojs.t) -> x682
            and t_to_js : t -> Ojs.t = fun (x681 : Ojs.t) -> x681
            let (get_start : t -> Debugger_Location.t) =
              fun (x683 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x683) "start")
            let (set_start : t -> Debugger_Location.t -> unit) =
              fun (x684 : t) ->
                fun (x685 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x684) "start"
                    (Debugger_Location.t_to_js x685)
            let (get_end : t -> Debugger_Location.t) =
              fun (x686 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x686) "end")
            let (set_end : t -> Debugger_Location.t -> unit) =
              fun (x687 : t) ->
                fun (x688 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x687) "end"
                    (Debugger_Location.t_to_js x688)
            let (get_restrict_to_function : t -> bool) =
              fun (x689 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x689) "restrictToFunction")
            let (set_restrict_to_function : t -> bool -> unit) =
              fun (x690 : t) ->
                fun (x691 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x690) "restrictToFunction"
                    (Ojs.bool_to_js x691)
          end
        module ContinueToLocationParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x693 : Ojs.t) -> x693
            and t_to_js : t -> Ojs.t = fun (x692 : Ojs.t) -> x692
            let (get_location : t -> Debugger_Location.t) =
              fun (x694 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x694) "location")
            let (set_location : t -> Debugger_Location.t -> unit) =
              fun (x695 : t) ->
                fun (x696 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x695) "location"
                    (Debugger_Location.t_to_js x696)
            let (get_target_call_frames : t -> string) =
              fun (x697 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x697) "targetCallFrames")
            let (set_target_call_frames : t -> string -> unit) =
              fun (x698 : t) ->
                fun (x699 : string) ->
                  Ojs.set_prop_ascii (t_to_js x698) "targetCallFrames"
                    (Ojs.string_to_js x699)
          end
        module PauseOnAsyncCallParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x701 : Ojs.t) -> x701
            and t_to_js : t -> Ojs.t = fun (x700 : Ojs.t) -> x700
            let (get_parent_stack_trace_id : t -> Runtime_StackTraceId.t) =
              fun (x702 : t) ->
                Runtime_StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x702) "parentStackTraceId")
            let (set_parent_stack_trace_id :
              t -> Runtime_StackTraceId.t -> unit) =
              fun (x703 : t) ->
                fun (x704 : Runtime_StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x703) "parentStackTraceId"
                    (Runtime_StackTraceId.t_to_js x704)
          end
        module StepIntoParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x706 : Ojs.t) -> x706
            and t_to_js : t -> Ojs.t = fun (x705 : Ojs.t) -> x705
            let (get_break_on_async_call : t -> bool) =
              fun (x707 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x707) "breakOnAsyncCall")
            let (set_break_on_async_call : t -> bool -> unit) =
              fun (x708 : t) ->
                fun (x709 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x708) "breakOnAsyncCall"
                    (Ojs.bool_to_js x709)
          end
        module GetStackTraceParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x711 : Ojs.t) -> x711
            and t_to_js : t -> Ojs.t = fun (x710 : Ojs.t) -> x710
            let (get_stack_trace_id : t -> Runtime_StackTraceId.t) =
              fun (x712 : t) ->
                Runtime_StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x712) "stackTraceId")
            let (set_stack_trace_id : t -> Runtime_StackTraceId.t -> unit) =
              fun (x713 : t) ->
                fun (x714 : Runtime_StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x713) "stackTraceId"
                    (Runtime_StackTraceId.t_to_js x714)
          end
        module SearchInContentParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x716 : Ojs.t) -> x716
            and t_to_js : t -> Ojs.t = fun (x715 : Ojs.t) -> x715
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x717 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x717) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x718 : t) ->
                fun (x719 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x718) "scriptId"
                    (Runtime_ScriptId.t_to_js x719)
            let (get_query : t -> string) =
              fun (x720 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x720) "query")
            let (set_query : t -> string -> unit) =
              fun (x721 : t) ->
                fun (x722 : string) ->
                  Ojs.set_prop_ascii (t_to_js x721) "query"
                    (Ojs.string_to_js x722)
            let (get_case_sensitive : t -> bool) =
              fun (x723 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x723) "caseSensitive")
            let (set_case_sensitive : t -> bool -> unit) =
              fun (x724 : t) ->
                fun (x725 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x724) "caseSensitive"
                    (Ojs.bool_to_js x725)
            let (get_is_regex : t -> bool) =
              fun (x726 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x726) "isRegex")
            let (set_is_regex : t -> bool -> unit) =
              fun (x727 : t) ->
                fun (x728 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x727) "isRegex"
                    (Ojs.bool_to_js x728)
          end
        module SetScriptSourceParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x730 : Ojs.t) -> x730
            and t_to_js : t -> Ojs.t = fun (x729 : Ojs.t) -> x729
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x731 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x731) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x732 : t) ->
                fun (x733 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x732) "scriptId"
                    (Runtime_ScriptId.t_to_js x733)
            let (get_script_source : t -> string) =
              fun (x734 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x734) "scriptSource")
            let (set_script_source : t -> string -> unit) =
              fun (x735 : t) ->
                fun (x736 : string) ->
                  Ojs.set_prop_ascii (t_to_js x735) "scriptSource"
                    (Ojs.string_to_js x736)
            let (get_dry_run : t -> bool) =
              fun (x737 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x737) "dryRun")
            let (set_dry_run : t -> bool -> unit) =
              fun (x738 : t) ->
                fun (x739 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x738) "dryRun"
                    (Ojs.bool_to_js x739)
          end
        module RestartFrameParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x741 : Ojs.t) -> x741
            and t_to_js : t -> Ojs.t = fun (x740 : Ojs.t) -> x740
            let (get_call_frame_id : t -> Debugger_CallFrameId.t) =
              fun (x742 : t) ->
                Debugger_CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x742) "callFrameId")
            let (set_call_frame_id : t -> Debugger_CallFrameId.t -> unit) =
              fun (x743 : t) ->
                fun (x744 : Debugger_CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x743) "callFrameId"
                    (Debugger_CallFrameId.t_to_js x744)
          end
        module GetScriptSourceParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x746 : Ojs.t) -> x746
            and t_to_js : t -> Ojs.t = fun (x745 : Ojs.t) -> x745
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x747 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x747) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x748 : t) ->
                fun (x749 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x748) "scriptId"
                    (Runtime_ScriptId.t_to_js x749)
          end
        module SetPauseOnExceptionsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x751 : Ojs.t) -> x751
            and t_to_js : t -> Ojs.t = fun (x750 : Ojs.t) -> x750
            let (get_state : t -> string) =
              fun (x752 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x752) "state")
            let (set_state : t -> string -> unit) =
              fun (x753 : t) ->
                fun (x754 : string) ->
                  Ojs.set_prop_ascii (t_to_js x753) "state"
                    (Ojs.string_to_js x754)
          end
        module EvaluateOnCallFrameParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x756 : Ojs.t) -> x756
            and t_to_js : t -> Ojs.t = fun (x755 : Ojs.t) -> x755
            let (get_call_frame_id : t -> Debugger_CallFrameId.t) =
              fun (x757 : t) ->
                Debugger_CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x757) "callFrameId")
            let (set_call_frame_id : t -> Debugger_CallFrameId.t -> unit) =
              fun (x758 : t) ->
                fun (x759 : Debugger_CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x758) "callFrameId"
                    (Debugger_CallFrameId.t_to_js x759)
            let (get_expression : t -> string) =
              fun (x760 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x760) "expression")
            let (set_expression : t -> string -> unit) =
              fun (x761 : t) ->
                fun (x762 : string) ->
                  Ojs.set_prop_ascii (t_to_js x761) "expression"
                    (Ojs.string_to_js x762)
            let (get_object_group : t -> string) =
              fun (x763 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x763) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x764 : t) ->
                fun (x765 : string) ->
                  Ojs.set_prop_ascii (t_to_js x764) "objectGroup"
                    (Ojs.string_to_js x765)
            let (get_include_command_line_api : t -> bool) =
              fun (x766 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x766) "includeCommandLineAPI")
            let (set_include_command_line_api : t -> bool -> unit) =
              fun (x767 : t) ->
                fun (x768 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x767) "includeCommandLineAPI"
                    (Ojs.bool_to_js x768)
            let (get_silent : t -> bool) =
              fun (x769 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x769) "silent")
            let (set_silent : t -> bool -> unit) =
              fun (x770 : t) ->
                fun (x771 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x770) "silent"
                    (Ojs.bool_to_js x771)
            let (get_return_by_value : t -> bool) =
              fun (x772 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x772) "returnByValue")
            let (set_return_by_value : t -> bool -> unit) =
              fun (x773 : t) ->
                fun (x774 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x773) "returnByValue"
                    (Ojs.bool_to_js x774)
            let (get_generate_preview : t -> bool) =
              fun (x775 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x775) "generatePreview")
            let (set_generate_preview : t -> bool -> unit) =
              fun (x776 : t) ->
                fun (x777 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x776) "generatePreview"
                    (Ojs.bool_to_js x777)
            let (get_throw_on_side_effect : t -> bool) =
              fun (x778 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x778) "throwOnSideEffect")
            let (set_throw_on_side_effect : t -> bool -> unit) =
              fun (x779 : t) ->
                fun (x780 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x779) "throwOnSideEffect"
                    (Ojs.bool_to_js x780)
          end
        module SetVariableValueParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x782 : Ojs.t) -> x782
            and t_to_js : t -> Ojs.t = fun (x781 : Ojs.t) -> x781
            let (get_scope_number : t -> int) =
              fun (x783 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x783) "scopeNumber")
            let (set_scope_number : t -> int -> unit) =
              fun (x784 : t) ->
                fun (x785 : int) ->
                  Ojs.set_prop_ascii (t_to_js x784) "scopeNumber"
                    (Ojs.int_to_js x785)
            let (get_variable_name : t -> string) =
              fun (x786 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x786) "variableName")
            let (set_variable_name : t -> string -> unit) =
              fun (x787 : t) ->
                fun (x788 : string) ->
                  Ojs.set_prop_ascii (t_to_js x787) "variableName"
                    (Ojs.string_to_js x788)
            let (get_new_value : t -> Runtime_CallArgument.t) =
              fun (x789 : t) ->
                Runtime_CallArgument.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x789) "newValue")
            let (set_new_value : t -> Runtime_CallArgument.t -> unit) =
              fun (x790 : t) ->
                fun (x791 : Runtime_CallArgument.t) ->
                  Ojs.set_prop_ascii (t_to_js x790) "newValue"
                    (Runtime_CallArgument.t_to_js x791)
            let (get_call_frame_id : t -> Debugger_CallFrameId.t) =
              fun (x792 : t) ->
                Debugger_CallFrameId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x792) "callFrameId")
            let (set_call_frame_id : t -> Debugger_CallFrameId.t -> unit) =
              fun (x793 : t) ->
                fun (x794 : Debugger_CallFrameId.t) ->
                  Ojs.set_prop_ascii (t_to_js x793) "callFrameId"
                    (Debugger_CallFrameId.t_to_js x794)
          end
        module SetReturnValueParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x796 : Ojs.t) -> x796
            and t_to_js : t -> Ojs.t = fun (x795 : Ojs.t) -> x795
            let (get_new_value : t -> Runtime_CallArgument.t) =
              fun (x797 : t) ->
                Runtime_CallArgument.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x797) "newValue")
            let (set_new_value : t -> Runtime_CallArgument.t -> unit) =
              fun (x798 : t) ->
                fun (x799 : Runtime_CallArgument.t) ->
                  Ojs.set_prop_ascii (t_to_js x798) "newValue"
                    (Runtime_CallArgument.t_to_js x799)
          end
        module SetAsyncCallStackDepthParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x801 : Ojs.t) -> x801
            and t_to_js : t -> Ojs.t = fun (x800 : Ojs.t) -> x800
            let (get_max_depth : t -> int) =
              fun (x802 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x802) "maxDepth")
            let (set_max_depth : t -> int -> unit) =
              fun (x803 : t) ->
                fun (x804 : int) ->
                  Ojs.set_prop_ascii (t_to_js x803) "maxDepth"
                    (Ojs.int_to_js x804)
          end
        module SetBlackboxPatternsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x806 : Ojs.t) -> x806
            and t_to_js : t -> Ojs.t = fun (x805 : Ojs.t) -> x805
            let (get_patterns : t -> string list) =
              fun (x807 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x807) "patterns")
            let (set_patterns : t -> string list -> unit) =
              fun (x809 : t) ->
                fun (x810 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x809) "patterns"
                    (Ojs.list_to_js Ojs.string_to_js x810)
          end
        module SetBlackboxedRangesParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x813 : Ojs.t) -> x813
            and t_to_js : t -> Ojs.t = fun (x812 : Ojs.t) -> x812
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x814 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x814) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x815 : t) ->
                fun (x816 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x815) "scriptId"
                    (Runtime_ScriptId.t_to_js x816)
            let (get_positions : t -> Debugger_ScriptPosition.t list) =
              fun (x817 : t) ->
                Ojs.list_of_js Debugger_ScriptPosition.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x817) "positions")
            let (set_positions : t -> Debugger_ScriptPosition.t list -> unit)
              =
              fun (x819 : t) ->
                fun (x820 : Debugger_ScriptPosition.t list) ->
                  Ojs.set_prop_ascii (t_to_js x819) "positions"
                    (Ojs.list_to_js Debugger_ScriptPosition.t_to_js x820)
          end
        module EnableReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x823 : Ojs.t) -> x823
            and t_to_js : t -> Ojs.t = fun (x822 : Ojs.t) -> x822
            let (get_debugger_id : t -> Runtime_UniqueDebuggerId.t) =
              fun (x824 : t) ->
                Runtime_UniqueDebuggerId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x824) "debuggerId")
            let (set_debugger_id : t -> Runtime_UniqueDebuggerId.t -> unit) =
              fun (x825 : t) ->
                fun (x826 : Runtime_UniqueDebuggerId.t) ->
                  Ojs.set_prop_ascii (t_to_js x825) "debuggerId"
                    (Runtime_UniqueDebuggerId.t_to_js x826)
          end
        module SetBreakpointByUrlReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x828 : Ojs.t) -> x828
            and t_to_js : t -> Ojs.t = fun (x827 : Ojs.t) -> x827
            let (get_breakpoint_id : t -> Debugger_BreakpointId.t) =
              fun (x829 : t) ->
                Debugger_BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x829) "breakpointId")
            let (set_breakpoint_id : t -> Debugger_BreakpointId.t -> unit) =
              fun (x830 : t) ->
                fun (x831 : Debugger_BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x830) "breakpointId"
                    (Debugger_BreakpointId.t_to_js x831)
            let (get_locations : t -> Debugger_Location.t list) =
              fun (x832 : t) ->
                Ojs.list_of_js Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x832) "locations")
            let (set_locations : t -> Debugger_Location.t list -> unit) =
              fun (x834 : t) ->
                fun (x835 : Debugger_Location.t list) ->
                  Ojs.set_prop_ascii (t_to_js x834) "locations"
                    (Ojs.list_to_js Debugger_Location.t_to_js x835)
          end
        module SetBreakpointReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x838 : Ojs.t) -> x838
            and t_to_js : t -> Ojs.t = fun (x837 : Ojs.t) -> x837
            let (get_breakpoint_id : t -> Debugger_BreakpointId.t) =
              fun (x839 : t) ->
                Debugger_BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x839) "breakpointId")
            let (set_breakpoint_id : t -> Debugger_BreakpointId.t -> unit) =
              fun (x840 : t) ->
                fun (x841 : Debugger_BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x840) "breakpointId"
                    (Debugger_BreakpointId.t_to_js x841)
            let (get_actual_location : t -> Debugger_Location.t) =
              fun (x842 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x842) "actualLocation")
            let (set_actual_location : t -> Debugger_Location.t -> unit) =
              fun (x843 : t) ->
                fun (x844 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x843) "actualLocation"
                    (Debugger_Location.t_to_js x844)
          end
        module GetPossibleBreakpointsReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x846 : Ojs.t) -> x846
            and t_to_js : t -> Ojs.t = fun (x845 : Ojs.t) -> x845
            let (get_locations : t -> Debugger_BreakLocation.t list) =
              fun (x847 : t) ->
                Ojs.list_of_js Debugger_BreakLocation.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x847) "locations")
            let (set_locations : t -> Debugger_BreakLocation.t list -> unit)
              =
              fun (x849 : t) ->
                fun (x850 : Debugger_BreakLocation.t list) ->
                  Ojs.set_prop_ascii (t_to_js x849) "locations"
                    (Ojs.list_to_js Debugger_BreakLocation.t_to_js x850)
          end
        module GetStackTraceReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x853 : Ojs.t) -> x853
            and t_to_js : t -> Ojs.t = fun (x852 : Ojs.t) -> x852
            let (get_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x854 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x854) "stackTrace")
            let (set_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x855 : t) ->
                fun (x856 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x855) "stackTrace"
                    (Runtime_StackTrace.t_to_js x856)
          end
        module SearchInContentReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x858 : Ojs.t) -> x858
            and t_to_js : t -> Ojs.t = fun (x857 : Ojs.t) -> x857
            let (get_result : t -> Debugger_SearchMatch.t list) =
              fun (x859 : t) ->
                Ojs.list_of_js Debugger_SearchMatch.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x859) "result")
            let (set_result : t -> Debugger_SearchMatch.t list -> unit) =
              fun (x861 : t) ->
                fun (x862 : Debugger_SearchMatch.t list) ->
                  Ojs.set_prop_ascii (t_to_js x861) "result"
                    (Ojs.list_to_js Debugger_SearchMatch.t_to_js x862)
          end
        module SetScriptSourceReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x865 : Ojs.t) -> x865
            and t_to_js : t -> Ojs.t = fun (x864 : Ojs.t) -> x864
            let (get_call_frames : t -> Debugger_CallFrame.t list) =
              fun (x866 : t) ->
                Ojs.list_of_js Debugger_CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x866) "callFrames")
            let (set_call_frames : t -> Debugger_CallFrame.t list -> unit) =
              fun (x868 : t) ->
                fun (x869 : Debugger_CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x868) "callFrames"
                    (Ojs.list_to_js Debugger_CallFrame.t_to_js x869)
            let (get_stack_changed : t -> bool) =
              fun (x871 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x871) "stackChanged")
            let (set_stack_changed : t -> bool -> unit) =
              fun (x872 : t) ->
                fun (x873 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x872) "stackChanged"
                    (Ojs.bool_to_js x873)
            let (get_async_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x874 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x874) "asyncStackTrace")
            let (set_async_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x875 : t) ->
                fun (x876 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x875) "asyncStackTrace"
                    (Runtime_StackTrace.t_to_js x876)
            let (get_async_stack_trace_id : t -> Runtime_StackTraceId.t) =
              fun (x877 : t) ->
                Runtime_StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x877) "asyncStackTraceId")
            let (set_async_stack_trace_id :
              t -> Runtime_StackTraceId.t -> unit) =
              fun (x878 : t) ->
                fun (x879 : Runtime_StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x878) "asyncStackTraceId"
                    (Runtime_StackTraceId.t_to_js x879)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x880 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x880) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x881 : t) ->
                fun (x882 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x881) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x882)
          end
        module RestartFrameReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x884 : Ojs.t) -> x884
            and t_to_js : t -> Ojs.t = fun (x883 : Ojs.t) -> x883
            let (get_call_frames : t -> Debugger_CallFrame.t list) =
              fun (x885 : t) ->
                Ojs.list_of_js Debugger_CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x885) "callFrames")
            let (set_call_frames : t -> Debugger_CallFrame.t list -> unit) =
              fun (x887 : t) ->
                fun (x888 : Debugger_CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x887) "callFrames"
                    (Ojs.list_to_js Debugger_CallFrame.t_to_js x888)
            let (get_async_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x890 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x890) "asyncStackTrace")
            let (set_async_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x891 : t) ->
                fun (x892 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x891) "asyncStackTrace"
                    (Runtime_StackTrace.t_to_js x892)
            let (get_async_stack_trace_id : t -> Runtime_StackTraceId.t) =
              fun (x893 : t) ->
                Runtime_StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x893) "asyncStackTraceId")
            let (set_async_stack_trace_id :
              t -> Runtime_StackTraceId.t -> unit) =
              fun (x894 : t) ->
                fun (x895 : Runtime_StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x894) "asyncStackTraceId"
                    (Runtime_StackTraceId.t_to_js x895)
          end
        module GetScriptSourceReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x897 : Ojs.t) -> x897
            and t_to_js : t -> Ojs.t = fun (x896 : Ojs.t) -> x896
            let (get_script_source : t -> string) =
              fun (x898 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x898) "scriptSource")
            let (set_script_source : t -> string -> unit) =
              fun (x899 : t) ->
                fun (x900 : string) ->
                  Ojs.set_prop_ascii (t_to_js x899) "scriptSource"
                    (Ojs.string_to_js x900)
          end
        module EvaluateOnCallFrameReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x902 : Ojs.t) -> x902
            and t_to_js : t -> Ojs.t = fun (x901 : Ojs.t) -> x901
            let (get_result : t -> Runtime_RemoteObject.t) =
              fun (x903 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x903) "result")
            let (set_result : t -> Runtime_RemoteObject.t -> unit) =
              fun (x904 : t) ->
                fun (x905 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x904) "result"
                    (Runtime_RemoteObject.t_to_js x905)
            let (get_exception_details : t -> Runtime_ExceptionDetails.t) =
              fun (x906 : t) ->
                Runtime_ExceptionDetails.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x906) "exceptionDetails")
            let (set_exception_details :
              t -> Runtime_ExceptionDetails.t -> unit) =
              fun (x907 : t) ->
                fun (x908 : Runtime_ExceptionDetails.t) ->
                  Ojs.set_prop_ascii (t_to_js x907) "exceptionDetails"
                    (Runtime_ExceptionDetails.t_to_js x908)
          end
        module ScriptParsedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x910 : Ojs.t) -> x910
            and t_to_js : t -> Ojs.t = fun (x909 : Ojs.t) -> x909
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x911 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x911) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x912 : t) ->
                fun (x913 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x912) "scriptId"
                    (Runtime_ScriptId.t_to_js x913)
            let (get_url : t -> string) =
              fun (x914 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x914) "url")
            let (set_url : t -> string -> unit) =
              fun (x915 : t) ->
                fun (x916 : string) ->
                  Ojs.set_prop_ascii (t_to_js x915) "url"
                    (Ojs.string_to_js x916)
            let (get_start_line : t -> int) =
              fun (x917 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x917) "startLine")
            let (set_start_line : t -> int -> unit) =
              fun (x918 : t) ->
                fun (x919 : int) ->
                  Ojs.set_prop_ascii (t_to_js x918) "startLine"
                    (Ojs.int_to_js x919)
            let (get_start_column : t -> int) =
              fun (x920 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x920) "startColumn")
            let (set_start_column : t -> int -> unit) =
              fun (x921 : t) ->
                fun (x922 : int) ->
                  Ojs.set_prop_ascii (t_to_js x921) "startColumn"
                    (Ojs.int_to_js x922)
            let (get_end_line : t -> int) =
              fun (x923 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x923) "endLine")
            let (set_end_line : t -> int -> unit) =
              fun (x924 : t) ->
                fun (x925 : int) ->
                  Ojs.set_prop_ascii (t_to_js x924) "endLine"
                    (Ojs.int_to_js x925)
            let (get_end_column : t -> int) =
              fun (x926 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x926) "endColumn")
            let (set_end_column : t -> int -> unit) =
              fun (x927 : t) ->
                fun (x928 : int) ->
                  Ojs.set_prop_ascii (t_to_js x927) "endColumn"
                    (Ojs.int_to_js x928)
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x929 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x929) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x930 : t) ->
                fun (x931 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x930) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x931)
            let (get_hash : t -> string) =
              fun (x932 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x932) "hash")
            let (set_hash : t -> string -> unit) =
              fun (x933 : t) ->
                fun (x934 : string) ->
                  Ojs.set_prop_ascii (t_to_js x933) "hash"
                    (Ojs.string_to_js x934)
            let (get_execution_context_aux_data : t -> AnonymousInterface0.t)
              =
              fun (x935 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x935)
                     "executionContextAuxData")
            let (set_execution_context_aux_data :
              t -> AnonymousInterface0.t -> unit) =
              fun (x936 : t) ->
                fun (x937 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x936) "executionContextAuxData"
                    (AnonymousInterface0.t_to_js x937)
            let (get_is_live_edit : t -> bool) =
              fun (x938 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x938) "isLiveEdit")
            let (set_is_live_edit : t -> bool -> unit) =
              fun (x939 : t) ->
                fun (x940 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x939) "isLiveEdit"
                    (Ojs.bool_to_js x940)
            let (get_source_map_url : t -> string) =
              fun (x941 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x941) "sourceMapURL")
            let (set_source_map_url : t -> string -> unit) =
              fun (x942 : t) ->
                fun (x943 : string) ->
                  Ojs.set_prop_ascii (t_to_js x942) "sourceMapURL"
                    (Ojs.string_to_js x943)
            let (get_has_source_url : t -> bool) =
              fun (x944 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x944) "hasSourceURL")
            let (set_has_source_url : t -> bool -> unit) =
              fun (x945 : t) ->
                fun (x946 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x945) "hasSourceURL"
                    (Ojs.bool_to_js x946)
            let (get_is_module : t -> bool) =
              fun (x947 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x947) "isModule")
            let (set_is_module : t -> bool -> unit) =
              fun (x948 : t) ->
                fun (x949 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x948) "isModule"
                    (Ojs.bool_to_js x949)
            let (get_length : t -> int) =
              fun (x950 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x950) "length")
            let (set_length : t -> int -> unit) =
              fun (x951 : t) ->
                fun (x952 : int) ->
                  Ojs.set_prop_ascii (t_to_js x951) "length"
                    (Ojs.int_to_js x952)
            let (get_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x953 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x953) "stackTrace")
            let (set_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x954 : t) ->
                fun (x955 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x954) "stackTrace"
                    (Runtime_StackTrace.t_to_js x955)
          end
        module ScriptFailedToParseEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x957 : Ojs.t) -> x957
            and t_to_js : t -> Ojs.t = fun (x956 : Ojs.t) -> x956
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x958 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x958) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x959 : t) ->
                fun (x960 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x959) "scriptId"
                    (Runtime_ScriptId.t_to_js x960)
            let (get_url : t -> string) =
              fun (x961 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x961) "url")
            let (set_url : t -> string -> unit) =
              fun (x962 : t) ->
                fun (x963 : string) ->
                  Ojs.set_prop_ascii (t_to_js x962) "url"
                    (Ojs.string_to_js x963)
            let (get_start_line : t -> int) =
              fun (x964 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x964) "startLine")
            let (set_start_line : t -> int -> unit) =
              fun (x965 : t) ->
                fun (x966 : int) ->
                  Ojs.set_prop_ascii (t_to_js x965) "startLine"
                    (Ojs.int_to_js x966)
            let (get_start_column : t -> int) =
              fun (x967 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x967) "startColumn")
            let (set_start_column : t -> int -> unit) =
              fun (x968 : t) ->
                fun (x969 : int) ->
                  Ojs.set_prop_ascii (t_to_js x968) "startColumn"
                    (Ojs.int_to_js x969)
            let (get_end_line : t -> int) =
              fun (x970 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x970) "endLine")
            let (set_end_line : t -> int -> unit) =
              fun (x971 : t) ->
                fun (x972 : int) ->
                  Ojs.set_prop_ascii (t_to_js x971) "endLine"
                    (Ojs.int_to_js x972)
            let (get_end_column : t -> int) =
              fun (x973 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x973) "endColumn")
            let (set_end_column : t -> int -> unit) =
              fun (x974 : t) ->
                fun (x975 : int) ->
                  Ojs.set_prop_ascii (t_to_js x974) "endColumn"
                    (Ojs.int_to_js x975)
            let (get_execution_context_id :
              t -> Runtime_ExecutionContextId.t) =
              fun (x976 : t) ->
                Runtime_ExecutionContextId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x976) "executionContextId")
            let (set_execution_context_id :
              t -> Runtime_ExecutionContextId.t -> unit) =
              fun (x977 : t) ->
                fun (x978 : Runtime_ExecutionContextId.t) ->
                  Ojs.set_prop_ascii (t_to_js x977) "executionContextId"
                    (Runtime_ExecutionContextId.t_to_js x978)
            let (get_hash : t -> string) =
              fun (x979 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x979) "hash")
            let (set_hash : t -> string -> unit) =
              fun (x980 : t) ->
                fun (x981 : string) ->
                  Ojs.set_prop_ascii (t_to_js x980) "hash"
                    (Ojs.string_to_js x981)
            let (get_execution_context_aux_data : t -> AnonymousInterface0.t)
              =
              fun (x982 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x982)
                     "executionContextAuxData")
            let (set_execution_context_aux_data :
              t -> AnonymousInterface0.t -> unit) =
              fun (x983 : t) ->
                fun (x984 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x983) "executionContextAuxData"
                    (AnonymousInterface0.t_to_js x984)
            let (get_source_map_url : t -> string) =
              fun (x985 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x985) "sourceMapURL")
            let (set_source_map_url : t -> string -> unit) =
              fun (x986 : t) ->
                fun (x987 : string) ->
                  Ojs.set_prop_ascii (t_to_js x986) "sourceMapURL"
                    (Ojs.string_to_js x987)
            let (get_has_source_url : t -> bool) =
              fun (x988 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x988) "hasSourceURL")
            let (set_has_source_url : t -> bool -> unit) =
              fun (x989 : t) ->
                fun (x990 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x989) "hasSourceURL"
                    (Ojs.bool_to_js x990)
            let (get_is_module : t -> bool) =
              fun (x991 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x991) "isModule")
            let (set_is_module : t -> bool -> unit) =
              fun (x992 : t) ->
                fun (x993 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x992) "isModule"
                    (Ojs.bool_to_js x993)
            let (get_length : t -> int) =
              fun (x994 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x994) "length")
            let (set_length : t -> int -> unit) =
              fun (x995 : t) ->
                fun (x996 : int) ->
                  Ojs.set_prop_ascii (t_to_js x995) "length"
                    (Ojs.int_to_js x996)
            let (get_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x997 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x997) "stackTrace")
            let (set_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x998 : t) ->
                fun (x999 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x998) "stackTrace"
                    (Runtime_StackTrace.t_to_js x999)
          end
        module BreakpointResolvedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1001 : Ojs.t) -> x1001
            and t_to_js : t -> Ojs.t = fun (x1000 : Ojs.t) -> x1000
            let (get_breakpoint_id : t -> Debugger_BreakpointId.t) =
              fun (x1002 : t) ->
                Debugger_BreakpointId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1002) "breakpointId")
            let (set_breakpoint_id : t -> Debugger_BreakpointId.t -> unit) =
              fun (x1003 : t) ->
                fun (x1004 : Debugger_BreakpointId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1003) "breakpointId"
                    (Debugger_BreakpointId.t_to_js x1004)
            let (get_location : t -> Debugger_Location.t) =
              fun (x1005 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1005) "location")
            let (set_location : t -> Debugger_Location.t -> unit) =
              fun (x1006 : t) ->
                fun (x1007 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x1006) "location"
                    (Debugger_Location.t_to_js x1007)
          end
        module PausedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1009 : Ojs.t) -> x1009
            and t_to_js : t -> Ojs.t = fun (x1008 : Ojs.t) -> x1008
            let (get_call_frames : t -> Debugger_CallFrame.t list) =
              fun (x1010 : t) ->
                Ojs.list_of_js Debugger_CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1010) "callFrames")
            let (set_call_frames : t -> Debugger_CallFrame.t list -> unit) =
              fun (x1012 : t) ->
                fun (x1013 : Debugger_CallFrame.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1012) "callFrames"
                    (Ojs.list_to_js Debugger_CallFrame.t_to_js x1013)
            let (get_reason : t -> string) =
              fun (x1015 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1015) "reason")
            let (set_reason : t -> string -> unit) =
              fun (x1016 : t) ->
                fun (x1017 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1016) "reason"
                    (Ojs.string_to_js x1017)
            let (get_data : t -> AnonymousInterface0.t) =
              fun (x1018 : t) ->
                AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1018) "data")
            let (set_data : t -> AnonymousInterface0.t -> unit) =
              fun (x1019 : t) ->
                fun (x1020 : AnonymousInterface0.t) ->
                  Ojs.set_prop_ascii (t_to_js x1019) "data"
                    (AnonymousInterface0.t_to_js x1020)
            let (get_hit_breakpoints : t -> string list) =
              fun (x1021 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1021) "hitBreakpoints")
            let (set_hit_breakpoints : t -> string list -> unit) =
              fun (x1023 : t) ->
                fun (x1024 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1023) "hitBreakpoints"
                    (Ojs.list_to_js Ojs.string_to_js x1024)
            let (get_async_stack_trace : t -> Runtime_StackTrace.t) =
              fun (x1026 : t) ->
                Runtime_StackTrace.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1026) "asyncStackTrace")
            let (set_async_stack_trace : t -> Runtime_StackTrace.t -> unit) =
              fun (x1027 : t) ->
                fun (x1028 : Runtime_StackTrace.t) ->
                  Ojs.set_prop_ascii (t_to_js x1027) "asyncStackTrace"
                    (Runtime_StackTrace.t_to_js x1028)
            let (get_async_stack_trace_id : t -> Runtime_StackTraceId.t) =
              fun (x1029 : t) ->
                Runtime_StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1029) "asyncStackTraceId")
            let (set_async_stack_trace_id :
              t -> Runtime_StackTraceId.t -> unit) =
              fun (x1030 : t) ->
                fun (x1031 : Runtime_StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1030) "asyncStackTraceId"
                    (Runtime_StackTraceId.t_to_js x1031)
            let (get_async_call_stack_trace_id : t -> Runtime_StackTraceId.t)
              =
              fun (x1032 : t) ->
                Runtime_StackTraceId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1032) "asyncCallStackTraceId")
            let (set_async_call_stack_trace_id :
              t -> Runtime_StackTraceId.t -> unit) =
              fun (x1033 : t) ->
                fun (x1034 : Runtime_StackTraceId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1033) "asyncCallStackTraceId"
                    (Runtime_StackTraceId.t_to_js x1034)
          end
      end
    module Console =
      struct
        module ConsoleMessage =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1036 : Ojs.t) -> x1036
            and t_to_js : t -> Ojs.t = fun (x1035 : Ojs.t) -> x1035
            let (get_source : t -> string) =
              fun (x1037 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1037) "source")
            let (set_source : t -> string -> unit) =
              fun (x1038 : t) ->
                fun (x1039 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1038) "source"
                    (Ojs.string_to_js x1039)
            let (get_level : t -> string) =
              fun (x1040 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1040) "level")
            let (set_level : t -> string -> unit) =
              fun (x1041 : t) ->
                fun (x1042 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1041) "level"
                    (Ojs.string_to_js x1042)
            let (get_text : t -> string) =
              fun (x1043 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1043) "text")
            let (set_text : t -> string -> unit) =
              fun (x1044 : t) ->
                fun (x1045 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1044) "text"
                    (Ojs.string_to_js x1045)
            let (get_url : t -> string) =
              fun (x1046 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1046) "url")
            let (set_url : t -> string -> unit) =
              fun (x1047 : t) ->
                fun (x1048 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1047) "url"
                    (Ojs.string_to_js x1048)
            let (get_line : t -> int) =
              fun (x1049 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1049) "line")
            let (set_line : t -> int -> unit) =
              fun (x1050 : t) ->
                fun (x1051 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1050) "line"
                    (Ojs.int_to_js x1051)
            let (get_column : t -> int) =
              fun (x1052 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1052) "column")
            let (set_column : t -> int -> unit) =
              fun (x1053 : t) ->
                fun (x1054 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1053) "column"
                    (Ojs.int_to_js x1054)
          end
        module MessageAddedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1056 : Ojs.t) -> x1056
            and t_to_js : t -> Ojs.t = fun (x1055 : Ojs.t) -> x1055
            let (get_message : t -> Console_ConsoleMessage.t) =
              fun (x1057 : t) ->
                Console_ConsoleMessage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1057) "message")
            let (set_message : t -> Console_ConsoleMessage.t -> unit) =
              fun (x1058 : t) ->
                fun (x1059 : Console_ConsoleMessage.t) ->
                  Ojs.set_prop_ascii (t_to_js x1058) "message"
                    (Console_ConsoleMessage.t_to_js x1059)
          end
      end
    module Profiler =
      struct
        module ProfileNode =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1061 : Ojs.t) -> x1061
            and t_to_js : t -> Ojs.t = fun (x1060 : Ojs.t) -> x1060
            let (get_id : t -> int) =
              fun (x1062 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1062) "id")
            let (set_id : t -> int -> unit) =
              fun (x1063 : t) ->
                fun (x1064 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1063) "id"
                    (Ojs.int_to_js x1064)
            let (get_call_frame : t -> Runtime_CallFrame.t) =
              fun (x1065 : t) ->
                Runtime_CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1065) "callFrame")
            let (set_call_frame : t -> Runtime_CallFrame.t -> unit) =
              fun (x1066 : t) ->
                fun (x1067 : Runtime_CallFrame.t) ->
                  Ojs.set_prop_ascii (t_to_js x1066) "callFrame"
                    (Runtime_CallFrame.t_to_js x1067)
            let (get_hit_count : t -> int) =
              fun (x1068 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1068) "hitCount")
            let (set_hit_count : t -> int -> unit) =
              fun (x1069 : t) ->
                fun (x1070 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1069) "hitCount"
                    (Ojs.int_to_js x1070)
            let (get_children : t -> int list) =
              fun (x1071 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1071) "children")
            let (set_children : t -> int list -> unit) =
              fun (x1073 : t) ->
                fun (x1074 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1073) "children"
                    (Ojs.list_to_js Ojs.int_to_js x1074)
            let (get_deopt_reason : t -> string) =
              fun (x1076 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1076) "deoptReason")
            let (set_deopt_reason : t -> string -> unit) =
              fun (x1077 : t) ->
                fun (x1078 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1077) "deoptReason"
                    (Ojs.string_to_js x1078)
            let (get_position_ticks : t -> Profiler_PositionTickInfo.t list)
              =
              fun (x1079 : t) ->
                Ojs.list_of_js Profiler_PositionTickInfo.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1079) "positionTicks")
            let (set_position_ticks :
              t -> Profiler_PositionTickInfo.t list -> unit) =
              fun (x1081 : t) ->
                fun (x1082 : Profiler_PositionTickInfo.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1081) "positionTicks"
                    (Ojs.list_to_js Profiler_PositionTickInfo.t_to_js x1082)
          end
        module Profile =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1085 : Ojs.t) -> x1085
            and t_to_js : t -> Ojs.t = fun (x1084 : Ojs.t) -> x1084
            let (get_nodes : t -> Profiler_ProfileNode.t list) =
              fun (x1086 : t) ->
                Ojs.list_of_js Profiler_ProfileNode.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1086) "nodes")
            let (set_nodes : t -> Profiler_ProfileNode.t list -> unit) =
              fun (x1088 : t) ->
                fun (x1089 : Profiler_ProfileNode.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1088) "nodes"
                    (Ojs.list_to_js Profiler_ProfileNode.t_to_js x1089)
            let (get_start_time : t -> int) =
              fun (x1091 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1091) "startTime")
            let (set_start_time : t -> int -> unit) =
              fun (x1092 : t) ->
                fun (x1093 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1092) "startTime"
                    (Ojs.int_to_js x1093)
            let (get_end_time : t -> int) =
              fun (x1094 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1094) "endTime")
            let (set_end_time : t -> int -> unit) =
              fun (x1095 : t) ->
                fun (x1096 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1095) "endTime"
                    (Ojs.int_to_js x1096)
            let (get_samples : t -> int list) =
              fun (x1097 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1097) "samples")
            let (set_samples : t -> int list -> unit) =
              fun (x1099 : t) ->
                fun (x1100 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1099) "samples"
                    (Ojs.list_to_js Ojs.int_to_js x1100)
            let (get_time_deltas : t -> int list) =
              fun (x1102 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1102) "timeDeltas")
            let (set_time_deltas : t -> int list -> unit) =
              fun (x1104 : t) ->
                fun (x1105 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1104) "timeDeltas"
                    (Ojs.list_to_js Ojs.int_to_js x1105)
          end
        module PositionTickInfo =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1108 : Ojs.t) -> x1108
            and t_to_js : t -> Ojs.t = fun (x1107 : Ojs.t) -> x1107
            let (get_line : t -> int) =
              fun (x1109 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1109) "line")
            let (set_line : t -> int -> unit) =
              fun (x1110 : t) ->
                fun (x1111 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1110) "line"
                    (Ojs.int_to_js x1111)
            let (get_ticks : t -> int) =
              fun (x1112 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1112) "ticks")
            let (set_ticks : t -> int -> unit) =
              fun (x1113 : t) ->
                fun (x1114 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1113) "ticks"
                    (Ojs.int_to_js x1114)
          end
        module CoverageRange =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1116 : Ojs.t) -> x1116
            and t_to_js : t -> Ojs.t = fun (x1115 : Ojs.t) -> x1115
            let (get_start_offset : t -> int) =
              fun (x1117 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1117) "startOffset")
            let (set_start_offset : t -> int -> unit) =
              fun (x1118 : t) ->
                fun (x1119 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1118) "startOffset"
                    (Ojs.int_to_js x1119)
            let (get_end_offset : t -> int) =
              fun (x1120 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1120) "endOffset")
            let (set_end_offset : t -> int -> unit) =
              fun (x1121 : t) ->
                fun (x1122 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1121) "endOffset"
                    (Ojs.int_to_js x1122)
            let (get_count : t -> int) =
              fun (x1123 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1123) "count")
            let (set_count : t -> int -> unit) =
              fun (x1124 : t) ->
                fun (x1125 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1124) "count"
                    (Ojs.int_to_js x1125)
          end
        module FunctionCoverage =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1127 : Ojs.t) -> x1127
            and t_to_js : t -> Ojs.t = fun (x1126 : Ojs.t) -> x1126
            let (get_function_name : t -> string) =
              fun (x1128 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1128) "functionName")
            let (set_function_name : t -> string -> unit) =
              fun (x1129 : t) ->
                fun (x1130 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1129) "functionName"
                    (Ojs.string_to_js x1130)
            let (get_ranges : t -> Profiler_CoverageRange.t list) =
              fun (x1131 : t) ->
                Ojs.list_of_js Profiler_CoverageRange.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1131) "ranges")
            let (set_ranges : t -> Profiler_CoverageRange.t list -> unit) =
              fun (x1133 : t) ->
                fun (x1134 : Profiler_CoverageRange.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1133) "ranges"
                    (Ojs.list_to_js Profiler_CoverageRange.t_to_js x1134)
            let (get_is_block_coverage : t -> bool) =
              fun (x1136 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1136) "isBlockCoverage")
            let (set_is_block_coverage : t -> bool -> unit) =
              fun (x1137 : t) ->
                fun (x1138 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1137) "isBlockCoverage"
                    (Ojs.bool_to_js x1138)
          end
        module ScriptCoverage =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1140 : Ojs.t) -> x1140
            and t_to_js : t -> Ojs.t = fun (x1139 : Ojs.t) -> x1139
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x1141 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1141) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x1142 : t) ->
                fun (x1143 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1142) "scriptId"
                    (Runtime_ScriptId.t_to_js x1143)
            let (get_url : t -> string) =
              fun (x1144 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1144) "url")
            let (set_url : t -> string -> unit) =
              fun (x1145 : t) ->
                fun (x1146 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1145) "url"
                    (Ojs.string_to_js x1146)
            let (get_functions : t -> Profiler_FunctionCoverage.t list) =
              fun (x1147 : t) ->
                Ojs.list_of_js Profiler_FunctionCoverage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1147) "functions")
            let (set_functions :
              t -> Profiler_FunctionCoverage.t list -> unit) =
              fun (x1149 : t) ->
                fun (x1150 : Profiler_FunctionCoverage.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1149) "functions"
                    (Ojs.list_to_js Profiler_FunctionCoverage.t_to_js x1150)
          end
        module TypeObject =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1153 : Ojs.t) -> x1153
            and t_to_js : t -> Ojs.t = fun (x1152 : Ojs.t) -> x1152
            let (get_name : t -> string) =
              fun (x1154 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1154) "name")
            let (set_name : t -> string -> unit) =
              fun (x1155 : t) ->
                fun (x1156 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1155) "name"
                    (Ojs.string_to_js x1156)
          end
        module TypeProfileEntry =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1158 : Ojs.t) -> x1158
            and t_to_js : t -> Ojs.t = fun (x1157 : Ojs.t) -> x1157
            let (get_offset : t -> int) =
              fun (x1159 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1159) "offset")
            let (set_offset : t -> int -> unit) =
              fun (x1160 : t) ->
                fun (x1161 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1160) "offset"
                    (Ojs.int_to_js x1161)
            let (get_types : t -> Profiler_TypeObject.t list) =
              fun (x1162 : t) ->
                Ojs.list_of_js Profiler_TypeObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1162) "types")
            let (set_types : t -> Profiler_TypeObject.t list -> unit) =
              fun (x1164 : t) ->
                fun (x1165 : Profiler_TypeObject.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1164) "types"
                    (Ojs.list_to_js Profiler_TypeObject.t_to_js x1165)
          end
        module ScriptTypeProfile =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1168 : Ojs.t) -> x1168
            and t_to_js : t -> Ojs.t = fun (x1167 : Ojs.t) -> x1167
            let (get_script_id : t -> Runtime_ScriptId.t) =
              fun (x1169 : t) ->
                Runtime_ScriptId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1169) "scriptId")
            let (set_script_id : t -> Runtime_ScriptId.t -> unit) =
              fun (x1170 : t) ->
                fun (x1171 : Runtime_ScriptId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1170) "scriptId"
                    (Runtime_ScriptId.t_to_js x1171)
            let (get_url : t -> string) =
              fun (x1172 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1172) "url")
            let (set_url : t -> string -> unit) =
              fun (x1173 : t) ->
                fun (x1174 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1173) "url"
                    (Ojs.string_to_js x1174)
            let (get_entries : t -> Profiler_TypeProfileEntry.t list) =
              fun (x1175 : t) ->
                Ojs.list_of_js Profiler_TypeProfileEntry.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1175) "entries")
            let (set_entries : t -> Profiler_TypeProfileEntry.t list -> unit)
              =
              fun (x1177 : t) ->
                fun (x1178 : Profiler_TypeProfileEntry.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1177) "entries"
                    (Ojs.list_to_js Profiler_TypeProfileEntry.t_to_js x1178)
          end
        module SetSamplingIntervalParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1181 : Ojs.t) -> x1181
            and t_to_js : t -> Ojs.t = fun (x1180 : Ojs.t) -> x1180
            let (get_interval : t -> int) =
              fun (x1182 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1182) "interval")
            let (set_interval : t -> int -> unit) =
              fun (x1183 : t) ->
                fun (x1184 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1183) "interval"
                    (Ojs.int_to_js x1184)
          end
        module StartPreciseCoverageParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1186 : Ojs.t) -> x1186
            and t_to_js : t -> Ojs.t = fun (x1185 : Ojs.t) -> x1185
            let (get_call_count : t -> bool) =
              fun (x1187 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1187) "callCount")
            let (set_call_count : t -> bool -> unit) =
              fun (x1188 : t) ->
                fun (x1189 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1188) "callCount"
                    (Ojs.bool_to_js x1189)
            let (get_detailed : t -> bool) =
              fun (x1190 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1190) "detailed")
            let (set_detailed : t -> bool -> unit) =
              fun (x1191 : t) ->
                fun (x1192 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1191) "detailed"
                    (Ojs.bool_to_js x1192)
          end
        module StopReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1194 : Ojs.t) -> x1194
            and t_to_js : t -> Ojs.t = fun (x1193 : Ojs.t) -> x1193
            let (get_profile : t -> Profiler_Profile.t) =
              fun (x1195 : t) ->
                Profiler_Profile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1195) "profile")
            let (set_profile : t -> Profiler_Profile.t -> unit) =
              fun (x1196 : t) ->
                fun (x1197 : Profiler_Profile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1196) "profile"
                    (Profiler_Profile.t_to_js x1197)
          end
        module TakePreciseCoverageReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1199 : Ojs.t) -> x1199
            and t_to_js : t -> Ojs.t = fun (x1198 : Ojs.t) -> x1198
            let (get_result : t -> Profiler_ScriptCoverage.t list) =
              fun (x1200 : t) ->
                Ojs.list_of_js Profiler_ScriptCoverage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1200) "result")
            let (set_result : t -> Profiler_ScriptCoverage.t list -> unit) =
              fun (x1202 : t) ->
                fun (x1203 : Profiler_ScriptCoverage.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1202) "result"
                    (Ojs.list_to_js Profiler_ScriptCoverage.t_to_js x1203)
          end
        module GetBestEffortCoverageReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1206 : Ojs.t) -> x1206
            and t_to_js : t -> Ojs.t = fun (x1205 : Ojs.t) -> x1205
            let (get_result : t -> Profiler_ScriptCoverage.t list) =
              fun (x1207 : t) ->
                Ojs.list_of_js Profiler_ScriptCoverage.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1207) "result")
            let (set_result : t -> Profiler_ScriptCoverage.t list -> unit) =
              fun (x1209 : t) ->
                fun (x1210 : Profiler_ScriptCoverage.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1209) "result"
                    (Ojs.list_to_js Profiler_ScriptCoverage.t_to_js x1210)
          end
        module TakeTypeProfileReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1213 : Ojs.t) -> x1213
            and t_to_js : t -> Ojs.t = fun (x1212 : Ojs.t) -> x1212
            let (get_result : t -> Profiler_ScriptTypeProfile.t list) =
              fun (x1214 : t) ->
                Ojs.list_of_js Profiler_ScriptTypeProfile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1214) "result")
            let (set_result : t -> Profiler_ScriptTypeProfile.t list -> unit)
              =
              fun (x1216 : t) ->
                fun (x1217 : Profiler_ScriptTypeProfile.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1216) "result"
                    (Ojs.list_to_js Profiler_ScriptTypeProfile.t_to_js x1217)
          end
        module ConsoleProfileStartedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1220 : Ojs.t) -> x1220
            and t_to_js : t -> Ojs.t = fun (x1219 : Ojs.t) -> x1219
            let (get_id : t -> string) =
              fun (x1221 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1221) "id")
            let (set_id : t -> string -> unit) =
              fun (x1222 : t) ->
                fun (x1223 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1222) "id"
                    (Ojs.string_to_js x1223)
            let (get_location : t -> Debugger_Location.t) =
              fun (x1224 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1224) "location")
            let (set_location : t -> Debugger_Location.t -> unit) =
              fun (x1225 : t) ->
                fun (x1226 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x1225) "location"
                    (Debugger_Location.t_to_js x1226)
            let (get_title : t -> string) =
              fun (x1227 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1227) "title")
            let (set_title : t -> string -> unit) =
              fun (x1228 : t) ->
                fun (x1229 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1228) "title"
                    (Ojs.string_to_js x1229)
          end
        module ConsoleProfileFinishedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1231 : Ojs.t) -> x1231
            and t_to_js : t -> Ojs.t = fun (x1230 : Ojs.t) -> x1230
            let (get_id : t -> string) =
              fun (x1232 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1232) "id")
            let (set_id : t -> string -> unit) =
              fun (x1233 : t) ->
                fun (x1234 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1233) "id"
                    (Ojs.string_to_js x1234)
            let (get_location : t -> Debugger_Location.t) =
              fun (x1235 : t) ->
                Debugger_Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1235) "location")
            let (set_location : t -> Debugger_Location.t -> unit) =
              fun (x1236 : t) ->
                fun (x1237 : Debugger_Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x1236) "location"
                    (Debugger_Location.t_to_js x1237)
            let (get_profile : t -> Profiler_Profile.t) =
              fun (x1238 : t) ->
                Profiler_Profile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1238) "profile")
            let (set_profile : t -> Profiler_Profile.t -> unit) =
              fun (x1239 : t) ->
                fun (x1240 : Profiler_Profile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1239) "profile"
                    (Profiler_Profile.t_to_js x1240)
            let (get_title : t -> string) =
              fun (x1241 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1241) "title")
            let (set_title : t -> string -> unit) =
              fun (x1242 : t) ->
                fun (x1243 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1242) "title"
                    (Ojs.string_to_js x1243)
          end
      end
    module HeapProfiler =
      struct
        module HeapSnapshotObjectId =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x1245 : Ojs.t) -> Ojs.string_of_js x1245
            and t_to_js : t -> Ojs.t =
              fun (x1244 : string) -> Ojs.string_to_js x1244
          end
        module SamplingHeapProfileNode =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1247 : Ojs.t) -> x1247
            and t_to_js : t -> Ojs.t = fun (x1246 : Ojs.t) -> x1246
            let (get_call_frame : t -> Runtime_CallFrame.t) =
              fun (x1248 : t) ->
                Runtime_CallFrame.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1248) "callFrame")
            let (set_call_frame : t -> Runtime_CallFrame.t -> unit) =
              fun (x1249 : t) ->
                fun (x1250 : Runtime_CallFrame.t) ->
                  Ojs.set_prop_ascii (t_to_js x1249) "callFrame"
                    (Runtime_CallFrame.t_to_js x1250)
            let (get_self_size : t -> int) =
              fun (x1251 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1251) "selfSize")
            let (set_self_size : t -> int -> unit) =
              fun (x1252 : t) ->
                fun (x1253 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1252) "selfSize"
                    (Ojs.int_to_js x1253)
            let (get_children : t -> t list) =
              fun (x1254 : t) ->
                Ojs.list_of_js t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1254) "children")
            let (set_children : t -> t list -> unit) =
              fun (x1256 : t) ->
                fun (x1257 : t list) ->
                  Ojs.set_prop_ascii (t_to_js x1256) "children"
                    (Ojs.list_to_js t_to_js x1257)
          end
        module SamplingHeapProfile =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1260 : Ojs.t) -> x1260
            and t_to_js : t -> Ojs.t = fun (x1259 : Ojs.t) -> x1259
            let (get_head : t -> HeapProfiler_SamplingHeapProfileNode.t) =
              fun (x1261 : t) ->
                HeapProfiler_SamplingHeapProfileNode.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1261) "head")
            let (set_head :
              t -> HeapProfiler_SamplingHeapProfileNode.t -> unit) =
              fun (x1262 : t) ->
                fun (x1263 : HeapProfiler_SamplingHeapProfileNode.t) ->
                  Ojs.set_prop_ascii (t_to_js x1262) "head"
                    (HeapProfiler_SamplingHeapProfileNode.t_to_js x1263)
          end
        module StartTrackingHeapObjectsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1265 : Ojs.t) -> x1265
            and t_to_js : t -> Ojs.t = fun (x1264 : Ojs.t) -> x1264
            let (get_track_allocations : t -> bool) =
              fun (x1266 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1266) "trackAllocations")
            let (set_track_allocations : t -> bool -> unit) =
              fun (x1267 : t) ->
                fun (x1268 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1267) "trackAllocations"
                    (Ojs.bool_to_js x1268)
          end
        module StopTrackingHeapObjectsParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1270 : Ojs.t) -> x1270
            and t_to_js : t -> Ojs.t = fun (x1269 : Ojs.t) -> x1269
            let (get_report_progress : t -> bool) =
              fun (x1271 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1271) "reportProgress")
            let (set_report_progress : t -> bool -> unit) =
              fun (x1272 : t) ->
                fun (x1273 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1272) "reportProgress"
                    (Ojs.bool_to_js x1273)
          end
        module TakeHeapSnapshotParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1275 : Ojs.t) -> x1275
            and t_to_js : t -> Ojs.t = fun (x1274 : Ojs.t) -> x1274
            let (get_report_progress : t -> bool) =
              fun (x1276 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1276) "reportProgress")
            let (set_report_progress : t -> bool -> unit) =
              fun (x1277 : t) ->
                fun (x1278 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1277) "reportProgress"
                    (Ojs.bool_to_js x1278)
          end
        module GetObjectByHeapObjectIdParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1280 : Ojs.t) -> x1280
            and t_to_js : t -> Ojs.t = fun (x1279 : Ojs.t) -> x1279
            let (get_object_id : t -> HeapProfiler_HeapSnapshotObjectId.t) =
              fun (x1281 : t) ->
                HeapProfiler_HeapSnapshotObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1281) "objectId")
            let (set_object_id :
              t -> HeapProfiler_HeapSnapshotObjectId.t -> unit) =
              fun (x1282 : t) ->
                fun (x1283 : HeapProfiler_HeapSnapshotObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1282) "objectId"
                    (HeapProfiler_HeapSnapshotObjectId.t_to_js x1283)
            let (get_object_group : t -> string) =
              fun (x1284 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1284) "objectGroup")
            let (set_object_group : t -> string -> unit) =
              fun (x1285 : t) ->
                fun (x1286 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1285) "objectGroup"
                    (Ojs.string_to_js x1286)
          end
        module AddInspectedHeapObjectParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1288 : Ojs.t) -> x1288
            and t_to_js : t -> Ojs.t = fun (x1287 : Ojs.t) -> x1287
            let (get_heap_object_id :
              t -> HeapProfiler_HeapSnapshotObjectId.t) =
              fun (x1289 : t) ->
                HeapProfiler_HeapSnapshotObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1289) "heapObjectId")
            let (set_heap_object_id :
              t -> HeapProfiler_HeapSnapshotObjectId.t -> unit) =
              fun (x1290 : t) ->
                fun (x1291 : HeapProfiler_HeapSnapshotObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1290) "heapObjectId"
                    (HeapProfiler_HeapSnapshotObjectId.t_to_js x1291)
          end
        module GetHeapObjectIdParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1293 : Ojs.t) -> x1293
            and t_to_js : t -> Ojs.t = fun (x1292 : Ojs.t) -> x1292
            let (get_object_id : t -> Runtime_RemoteObjectId.t) =
              fun (x1294 : t) ->
                Runtime_RemoteObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1294) "objectId")
            let (set_object_id : t -> Runtime_RemoteObjectId.t -> unit) =
              fun (x1295 : t) ->
                fun (x1296 : Runtime_RemoteObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1295) "objectId"
                    (Runtime_RemoteObjectId.t_to_js x1296)
          end
        module StartSamplingParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1298 : Ojs.t) -> x1298
            and t_to_js : t -> Ojs.t = fun (x1297 : Ojs.t) -> x1297
            let (get_sampling_interval : t -> int) =
              fun (x1299 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1299) "samplingInterval")
            let (set_sampling_interval : t -> int -> unit) =
              fun (x1300 : t) ->
                fun (x1301 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1300) "samplingInterval"
                    (Ojs.int_to_js x1301)
          end
        module GetObjectByHeapObjectIdReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1303 : Ojs.t) -> x1303
            and t_to_js : t -> Ojs.t = fun (x1302 : Ojs.t) -> x1302
            let (get_result : t -> Runtime_RemoteObject.t) =
              fun (x1304 : t) ->
                Runtime_RemoteObject.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1304) "result")
            let (set_result : t -> Runtime_RemoteObject.t -> unit) =
              fun (x1305 : t) ->
                fun (x1306 : Runtime_RemoteObject.t) ->
                  Ojs.set_prop_ascii (t_to_js x1305) "result"
                    (Runtime_RemoteObject.t_to_js x1306)
          end
        module GetHeapObjectIdReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1308 : Ojs.t) -> x1308
            and t_to_js : t -> Ojs.t = fun (x1307 : Ojs.t) -> x1307
            let (get_heap_snapshot_object_id :
              t -> HeapProfiler_HeapSnapshotObjectId.t) =
              fun (x1309 : t) ->
                HeapProfiler_HeapSnapshotObjectId.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1309) "heapSnapshotObjectId")
            let (set_heap_snapshot_object_id :
              t -> HeapProfiler_HeapSnapshotObjectId.t -> unit) =
              fun (x1310 : t) ->
                fun (x1311 : HeapProfiler_HeapSnapshotObjectId.t) ->
                  Ojs.set_prop_ascii (t_to_js x1310) "heapSnapshotObjectId"
                    (HeapProfiler_HeapSnapshotObjectId.t_to_js x1311)
          end
        module StopSamplingReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1313 : Ojs.t) -> x1313
            and t_to_js : t -> Ojs.t = fun (x1312 : Ojs.t) -> x1312
            let (get_profile : t -> HeapProfiler_SamplingHeapProfile.t) =
              fun (x1314 : t) ->
                HeapProfiler_SamplingHeapProfile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1314) "profile")
            let (set_profile :
              t -> HeapProfiler_SamplingHeapProfile.t -> unit) =
              fun (x1315 : t) ->
                fun (x1316 : HeapProfiler_SamplingHeapProfile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1315) "profile"
                    (HeapProfiler_SamplingHeapProfile.t_to_js x1316)
          end
        module GetSamplingProfileReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1318 : Ojs.t) -> x1318
            and t_to_js : t -> Ojs.t = fun (x1317 : Ojs.t) -> x1317
            let (get_profile : t -> HeapProfiler_SamplingHeapProfile.t) =
              fun (x1319 : t) ->
                HeapProfiler_SamplingHeapProfile.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1319) "profile")
            let (set_profile :
              t -> HeapProfiler_SamplingHeapProfile.t -> unit) =
              fun (x1320 : t) ->
                fun (x1321 : HeapProfiler_SamplingHeapProfile.t) ->
                  Ojs.set_prop_ascii (t_to_js x1320) "profile"
                    (HeapProfiler_SamplingHeapProfile.t_to_js x1321)
          end
        module AddHeapSnapshotChunkEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1323 : Ojs.t) -> x1323
            and t_to_js : t -> Ojs.t = fun (x1322 : Ojs.t) -> x1322
            let (get_chunk : t -> string) =
              fun (x1324 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1324) "chunk")
            let (set_chunk : t -> string -> unit) =
              fun (x1325 : t) ->
                fun (x1326 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1325) "chunk"
                    (Ojs.string_to_js x1326)
          end
        module ReportHeapSnapshotProgressEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1328 : Ojs.t) -> x1328
            and t_to_js : t -> Ojs.t = fun (x1327 : Ojs.t) -> x1327
            let (get_done : t -> int) =
              fun (x1329 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1329) "done")
            let (set_done : t -> int -> unit) =
              fun (x1330 : t) ->
                fun (x1331 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1330) "done"
                    (Ojs.int_to_js x1331)
            let (get_total : t -> int) =
              fun (x1332 : t) ->
                Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1332) "total")
            let (set_total : t -> int -> unit) =
              fun (x1333 : t) ->
                fun (x1334 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1333) "total"
                    (Ojs.int_to_js x1334)
            let (get_finished : t -> bool) =
              fun (x1335 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1335) "finished")
            let (set_finished : t -> bool -> unit) =
              fun (x1336 : t) ->
                fun (x1337 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1336) "finished"
                    (Ojs.bool_to_js x1337)
          end
        module LastSeenObjectIdEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1339 : Ojs.t) -> x1339
            and t_to_js : t -> Ojs.t = fun (x1338 : Ojs.t) -> x1338
            let (get_last_seen_object_id : t -> int) =
              fun (x1340 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1340) "lastSeenObjectId")
            let (set_last_seen_object_id : t -> int -> unit) =
              fun (x1341 : t) ->
                fun (x1342 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1341) "lastSeenObjectId"
                    (Ojs.int_to_js x1342)
            let (get_timestamp : t -> int) =
              fun (x1343 : t) ->
                Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1343) "timestamp")
            let (set_timestamp : t -> int -> unit) =
              fun (x1344 : t) ->
                fun (x1345 : int) ->
                  Ojs.set_prop_ascii (t_to_js x1344) "timestamp"
                    (Ojs.int_to_js x1345)
          end
        module HeapStatsUpdateEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1347 : Ojs.t) -> x1347
            and t_to_js : t -> Ojs.t = fun (x1346 : Ojs.t) -> x1346
            let (get_stats_update : t -> int list) =
              fun (x1348 : t) ->
                Ojs.list_of_js Ojs.int_of_js
                  (Ojs.get_prop_ascii (t_to_js x1348) "statsUpdate")
            let (set_stats_update : t -> int list -> unit) =
              fun (x1350 : t) ->
                fun (x1351 : int list) ->
                  Ojs.set_prop_ascii (t_to_js x1350) "statsUpdate"
                    (Ojs.list_to_js Ojs.int_to_js x1351)
          end
      end
    module NodeTracing =
      struct
        module TraceConfig =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1354 : Ojs.t) -> x1354
            and t_to_js : t -> Ojs.t = fun (x1353 : Ojs.t) -> x1353
            let (get_record_mode : t -> string) =
              fun (x1355 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1355) "recordMode")
            let (set_record_mode : t -> string -> unit) =
              fun (x1356 : t) ->
                fun (x1357 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1356) "recordMode"
                    (Ojs.string_to_js x1357)
            let (get_included_categories : t -> string list) =
              fun (x1358 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1358) "includedCategories")
            let (set_included_categories : t -> string list -> unit) =
              fun (x1360 : t) ->
                fun (x1361 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1360) "includedCategories"
                    (Ojs.list_to_js Ojs.string_to_js x1361)
          end
        module StartParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1364 : Ojs.t) -> x1364
            and t_to_js : t -> Ojs.t = fun (x1363 : Ojs.t) -> x1363
            let (get_trace_config : t -> NodeTracing_TraceConfig.t) =
              fun (x1365 : t) ->
                NodeTracing_TraceConfig.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1365) "traceConfig")
            let (set_trace_config : t -> NodeTracing_TraceConfig.t -> unit) =
              fun (x1366 : t) ->
                fun (x1367 : NodeTracing_TraceConfig.t) ->
                  Ojs.set_prop_ascii (t_to_js x1366) "traceConfig"
                    (NodeTracing_TraceConfig.t_to_js x1367)
          end
        module GetCategoriesReturnType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1369 : Ojs.t) -> x1369
            and t_to_js : t -> Ojs.t = fun (x1368 : Ojs.t) -> x1368
            let (get_categories : t -> string list) =
              fun (x1370 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1370) "categories")
            let (set_categories : t -> string list -> unit) =
              fun (x1372 : t) ->
                fun (x1373 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x1372) "categories"
                    (Ojs.list_to_js Ojs.string_to_js x1373)
          end
        module DataCollectedEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1376 : Ojs.t) -> x1376
            and t_to_js : t -> Ojs.t = fun (x1375 : Ojs.t) -> x1375
            let (get_value : t -> AnonymousInterface0.t list) =
              fun (x1377 : t) ->
                Ojs.list_of_js AnonymousInterface0.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1377) "value")
            let (set_value : t -> AnonymousInterface0.t list -> unit) =
              fun (x1379 : t) ->
                fun (x1380 : AnonymousInterface0.t list) ->
                  Ojs.set_prop_ascii (t_to_js x1379) "value"
                    (Ojs.list_to_js AnonymousInterface0.t_to_js x1380)
          end
      end
    module NodeWorker =
      struct
        module WorkerID =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x1383 : Ojs.t) -> Ojs.string_of_js x1383
            and t_to_js : t -> Ojs.t =
              fun (x1382 : string) -> Ojs.string_to_js x1382
          end
        module SessionID =
          struct
            type t = string
            let rec t_of_js : Ojs.t -> t =
              fun (x1385 : Ojs.t) -> Ojs.string_of_js x1385
            and t_to_js : t -> Ojs.t =
              fun (x1384 : string) -> Ojs.string_to_js x1384
          end
        module WorkerInfo =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1387 : Ojs.t) -> x1387
            and t_to_js : t -> Ojs.t = fun (x1386 : Ojs.t) -> x1386
            let (get_worker_id : t -> NodeWorker_WorkerID.t) =
              fun (x1388 : t) ->
                NodeWorker_WorkerID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1388) "workerId")
            let (set_worker_id : t -> NodeWorker_WorkerID.t -> unit) =
              fun (x1389 : t) ->
                fun (x1390 : NodeWorker_WorkerID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1389) "workerId"
                    (NodeWorker_WorkerID.t_to_js x1390)
            let (get_type : t -> string) =
              fun (x1391 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1391) "type")
            let (set_type : t -> string -> unit) =
              fun (x1392 : t) ->
                fun (x1393 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1392) "type"
                    (Ojs.string_to_js x1393)
            let (get_title : t -> string) =
              fun (x1394 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1394) "title")
            let (set_title : t -> string -> unit) =
              fun (x1395 : t) ->
                fun (x1396 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1395) "title"
                    (Ojs.string_to_js x1396)
            let (get_url : t -> string) =
              fun (x1397 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1397) "url")
            let (set_url : t -> string -> unit) =
              fun (x1398 : t) ->
                fun (x1399 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1398) "url"
                    (Ojs.string_to_js x1399)
          end
        module SendMessageToWorkerParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1401 : Ojs.t) -> x1401
            and t_to_js : t -> Ojs.t = fun (x1400 : Ojs.t) -> x1400
            let (get_message : t -> string) =
              fun (x1402 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1402) "message")
            let (set_message : t -> string -> unit) =
              fun (x1403 : t) ->
                fun (x1404 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1403) "message"
                    (Ojs.string_to_js x1404)
            let (get_session_id : t -> NodeWorker_SessionID.t) =
              fun (x1405 : t) ->
                NodeWorker_SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1405) "sessionId")
            let (set_session_id : t -> NodeWorker_SessionID.t -> unit) =
              fun (x1406 : t) ->
                fun (x1407 : NodeWorker_SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1406) "sessionId"
                    (NodeWorker_SessionID.t_to_js x1407)
          end
        module EnableParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1409 : Ojs.t) -> x1409
            and t_to_js : t -> Ojs.t = fun (x1408 : Ojs.t) -> x1408
            let (get_wait_for_debugger_on_start : t -> bool) =
              fun (x1410 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1410)
                     "waitForDebuggerOnStart")
            let (set_wait_for_debugger_on_start : t -> bool -> unit) =
              fun (x1411 : t) ->
                fun (x1412 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1411) "waitForDebuggerOnStart"
                    (Ojs.bool_to_js x1412)
          end
        module DetachParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1414 : Ojs.t) -> x1414
            and t_to_js : t -> Ojs.t = fun (x1413 : Ojs.t) -> x1413
            let (get_session_id : t -> NodeWorker_SessionID.t) =
              fun (x1415 : t) ->
                NodeWorker_SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1415) "sessionId")
            let (set_session_id : t -> NodeWorker_SessionID.t -> unit) =
              fun (x1416 : t) ->
                fun (x1417 : NodeWorker_SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1416) "sessionId"
                    (NodeWorker_SessionID.t_to_js x1417)
          end
        module AttachedToWorkerEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1419 : Ojs.t) -> x1419
            and t_to_js : t -> Ojs.t = fun (x1418 : Ojs.t) -> x1418
            let (get_session_id : t -> NodeWorker_SessionID.t) =
              fun (x1420 : t) ->
                NodeWorker_SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1420) "sessionId")
            let (set_session_id : t -> NodeWorker_SessionID.t -> unit) =
              fun (x1421 : t) ->
                fun (x1422 : NodeWorker_SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1421) "sessionId"
                    (NodeWorker_SessionID.t_to_js x1422)
            let (get_worker_info : t -> NodeWorker_WorkerInfo.t) =
              fun (x1423 : t) ->
                NodeWorker_WorkerInfo.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1423) "workerInfo")
            let (set_worker_info : t -> NodeWorker_WorkerInfo.t -> unit) =
              fun (x1424 : t) ->
                fun (x1425 : NodeWorker_WorkerInfo.t) ->
                  Ojs.set_prop_ascii (t_to_js x1424) "workerInfo"
                    (NodeWorker_WorkerInfo.t_to_js x1425)
            let (get_waiting_for_debugger : t -> bool) =
              fun (x1426 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x1426) "waitingForDebugger")
            let (set_waiting_for_debugger : t -> bool -> unit) =
              fun (x1427 : t) ->
                fun (x1428 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1427) "waitingForDebugger"
                    (Ojs.bool_to_js x1428)
          end
        module DetachedFromWorkerEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1430 : Ojs.t) -> x1430
            and t_to_js : t -> Ojs.t = fun (x1429 : Ojs.t) -> x1429
            let (get_session_id : t -> NodeWorker_SessionID.t) =
              fun (x1431 : t) ->
                NodeWorker_SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1431) "sessionId")
            let (set_session_id : t -> NodeWorker_SessionID.t -> unit) =
              fun (x1432 : t) ->
                fun (x1433 : NodeWorker_SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1432) "sessionId"
                    (NodeWorker_SessionID.t_to_js x1433)
          end
        module ReceivedMessageFromWorkerEventDataType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1435 : Ojs.t) -> x1435
            and t_to_js : t -> Ojs.t = fun (x1434 : Ojs.t) -> x1434
            let (get_session_id : t -> NodeWorker_SessionID.t) =
              fun (x1436 : t) ->
                NodeWorker_SessionID.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x1436) "sessionId")
            let (set_session_id : t -> NodeWorker_SessionID.t -> unit) =
              fun (x1437 : t) ->
                fun (x1438 : NodeWorker_SessionID.t) ->
                  Ojs.set_prop_ascii (t_to_js x1437) "sessionId"
                    (NodeWorker_SessionID.t_to_js x1438)
            let (get_message : t -> string) =
              fun (x1439 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x1439) "message")
            let (set_message : t -> string -> unit) =
              fun (x1440 : t) ->
                fun (x1441 : string) ->
                  Ojs.set_prop_ascii (t_to_js x1440) "message"
                    (Ojs.string_to_js x1441)
          end
      end
    module NodeRuntime =
      struct
        module NotifyWhenWaitingForDisconnectParameterType =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x1443 : Ojs.t) -> x1443
            and t_to_js : t -> Ojs.t = fun (x1442 : Ojs.t) -> x1442
            let (get_enabled : t -> bool) =
              fun (x1444 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1444) "enabled")
            let (set_enabled : t -> bool -> unit) =
              fun (x1445 : t) ->
                fun (x1446 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x1445) "enabled"
                    (Ojs.bool_to_js x1446)
          end
      end
    module Session =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1448 : Ojs.t) -> x1448
        and t_to_js : t -> Ojs.t = fun (x1447 : Ojs.t) -> x1447
        let (create : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.new_obj (Ojs.get_prop_ascii Import.inspector "Session")
                 [||])
        let (connect : t -> unit) =
          fun (x1449 : t) -> ignore (Ojs.call (t_to_js x1449) "connect" [||])
        let (disconnect : t -> unit) =
          fun (x1450 : t) ->
            ignore (Ojs.call (t_to_js x1450) "disconnect" [||])
        let (post :
          t ->
            method_:string ->
              ?params:AnonymousInterface0.t ->
                ?callback:(err:Error.t or_null ->
                             ?params:AnonymousInterface0.t -> unit -> unit)
                  -> unit -> unit)
          =
          fun (x1461 : t) ->
            fun ~method_:(x1451 : string) ->
              fun ?params:(x1452 : AnonymousInterface0.t option) ->
                fun
                  ?callback:(x1453 :
                              (err:Error.t or_null ->
                                 ?params:AnonymousInterface0.t ->
                                   unit -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1462 = t_to_js x1461 in
                       Ojs.call (Ojs.get_prop_ascii x1462 "post") "apply"
                         [|x1462;((let x1454 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1454 "push"
                                        [|(Ojs.string_to_js x1451)|]);
                                   (match x1452 with
                                    | Some x1460 ->
                                        ignore
                                          (Ojs.call x1454 "push"
                                             [|(AnonymousInterface0.t_to_js
                                                  x1460)|])
                                    | None -> ());
                                   (match x1453 with
                                    | Some x1455 ->
                                        ignore
                                          (Ojs.call x1454 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1456 : Ojs.t) ->
                                                     fun (x1458 : Ojs.t) ->
                                                       x1455
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1456)
                                                         ?params:(Ojs.option_of_js
                                                                    AnonymousInterface0.t_of_js
                                                                    x1458) ()))|])
                                    | None -> ());
                                   x1454))|])
        let (post' :
          t ->
            method_:string ->
              ?callback:(err:Error.t or_null ->
                           ?params:AnonymousInterface0.t -> unit -> unit)
                -> unit -> unit)
          =
          fun (x1471 : t) ->
            fun ~method_:(x1463 : string) ->
              fun
                ?callback:(x1464 :
                            (err:Error.t or_null ->
                               ?params:AnonymousInterface0.t -> unit -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1472 = t_to_js x1471 in
                     Ojs.call (Ojs.get_prop_ascii x1472 "post") "apply"
                       [|x1472;((let x1465 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1465 "push"
                                      [|(Ojs.string_to_js x1463)|]);
                                 (match x1464 with
                                  | Some x1466 ->
                                      ignore
                                        (Ojs.call x1465 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1467 : Ojs.t) ->
                                                   fun (x1469 : Ojs.t) ->
                                                     x1466
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1467)
                                                       ?params:(Ojs.option_of_js
                                                                  AnonymousInterface0.t_of_js
                                                                  x1469) ()))|])
                                  | None -> ());
                                 x1465))|])
        let (post'' :
          t ->
            method_:[ `Schema_getDomains ] ->
              ?callback:(err:Error.t or_null ->
                           params:Schema_GetDomainsReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1480 : t) ->
            fun ~method_:(x1473 : [ `Schema_getDomains ]) ->
              fun
                ?callback:(x1474 :
                            (err:Error.t or_null ->
                               params:Schema_GetDomainsReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1481 = t_to_js x1480 in
                     Ojs.call (Ojs.get_prop_ascii x1481 "post") "apply"
                       [|x1481;((let x1475 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1475 "push"
                                      [|((match x1473 with
                                          | `Schema_getDomains ->
                                              Ojs.string_to_js
                                                "SchemaGetDomains"))|]);
                                 (match x1474 with
                                  | Some x1476 ->
                                      ignore
                                        (Ojs.call x1475 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1477 : Ojs.t) ->
                                                   fun (x1479 : Ojs.t) ->
                                                     x1476
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1477)
                                                       ~params:(Schema_GetDomainsReturnType.t_of_js
                                                                  x1479)))|])
                                  | None -> ());
                                 x1475))|])
        let (post''' :
          t ->
            method_:[ `Runtime_evaluate ] ->
              ?params:Runtime_EvaluateParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_EvaluateReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1491 : t) ->
            fun ~method_:(x1482 : [ `Runtime_evaluate ]) ->
              fun ?params:(x1483 : Runtime_EvaluateParameterType.t option) ->
                fun
                  ?callback:(x1484 :
                              (err:Error.t or_null ->
                                 params:Runtime_EvaluateReturnType.t -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1492 = t_to_js x1491 in
                       Ojs.call (Ojs.get_prop_ascii x1492 "post") "apply"
                         [|x1492;((let x1485 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1485 "push"
                                        [|((match x1482 with
                                            | `Runtime_evaluate ->
                                                Ojs.string_to_js
                                                  "RuntimeEvaluate"))|]);
                                   (match x1483 with
                                    | Some x1490 ->
                                        ignore
                                          (Ojs.call x1485 "push"
                                             [|(Runtime_EvaluateParameterType.t_to_js
                                                  x1490)|])
                                    | None -> ());
                                   (match x1484 with
                                    | Some x1486 ->
                                        ignore
                                          (Ojs.call x1485 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1487 : Ojs.t) ->
                                                     fun (x1489 : Ojs.t) ->
                                                       x1486
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1487)
                                                         ~params:(Runtime_EvaluateReturnType.t_of_js
                                                                    x1489)))|])
                                    | None -> ());
                                   x1485))|])
        let (post'''' :
          t ->
            method_:[ `Runtime_evaluate ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_EvaluateReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1500 : t) ->
            fun ~method_:(x1493 : [ `Runtime_evaluate ]) ->
              fun
                ?callback:(x1494 :
                            (err:Error.t or_null ->
                               params:Runtime_EvaluateReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1501 = t_to_js x1500 in
                     Ojs.call (Ojs.get_prop_ascii x1501 "post") "apply"
                       [|x1501;((let x1495 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1495 "push"
                                      [|((match x1493 with
                                          | `Runtime_evaluate ->
                                              Ojs.string_to_js
                                                "RuntimeEvaluate"))|]);
                                 (match x1494 with
                                  | Some x1496 ->
                                      ignore
                                        (Ojs.call x1495 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1497 : Ojs.t) ->
                                                   fun (x1499 : Ojs.t) ->
                                                     x1496
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1497)
                                                       ~params:(Runtime_EvaluateReturnType.t_of_js
                                                                  x1499)))|])
                                  | None -> ());
                                 x1495))|])
        let (post''''' :
          t ->
            method_:[ `Runtime_awaitPromise ] ->
              ?params:Runtime_AwaitPromiseParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_AwaitPromiseReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1511 : t) ->
            fun ~method_:(x1502 : [ `Runtime_awaitPromise ]) ->
              fun
                ?params:(x1503 : Runtime_AwaitPromiseParameterType.t option)
                ->
                fun
                  ?callback:(x1504 :
                              (err:Error.t or_null ->
                                 params:Runtime_AwaitPromiseReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1512 = t_to_js x1511 in
                       Ojs.call (Ojs.get_prop_ascii x1512 "post") "apply"
                         [|x1512;((let x1505 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1505 "push"
                                        [|((match x1502 with
                                            | `Runtime_awaitPromise ->
                                                Ojs.string_to_js
                                                  "RuntimeAwaitPromise"))|]);
                                   (match x1503 with
                                    | Some x1510 ->
                                        ignore
                                          (Ojs.call x1505 "push"
                                             [|(Runtime_AwaitPromiseParameterType.t_to_js
                                                  x1510)|])
                                    | None -> ());
                                   (match x1504 with
                                    | Some x1506 ->
                                        ignore
                                          (Ojs.call x1505 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1507 : Ojs.t) ->
                                                     fun (x1509 : Ojs.t) ->
                                                       x1506
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1507)
                                                         ~params:(Runtime_AwaitPromiseReturnType.t_of_js
                                                                    x1509)))|])
                                    | None -> ());
                                   x1505))|])
        let (post'''''' :
          t ->
            method_:[ `Runtime_awaitPromise ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_AwaitPromiseReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1520 : t) ->
            fun ~method_:(x1513 : [ `Runtime_awaitPromise ]) ->
              fun
                ?callback:(x1514 :
                            (err:Error.t or_null ->
                               params:Runtime_AwaitPromiseReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1521 = t_to_js x1520 in
                     Ojs.call (Ojs.get_prop_ascii x1521 "post") "apply"
                       [|x1521;((let x1515 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1515 "push"
                                      [|((match x1513 with
                                          | `Runtime_awaitPromise ->
                                              Ojs.string_to_js
                                                "RuntimeAwaitPromise"))|]);
                                 (match x1514 with
                                  | Some x1516 ->
                                      ignore
                                        (Ojs.call x1515 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1517 : Ojs.t) ->
                                                   fun (x1519 : Ojs.t) ->
                                                     x1516
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1517)
                                                       ~params:(Runtime_AwaitPromiseReturnType.t_of_js
                                                                  x1519)))|])
                                  | None -> ());
                                 x1515))|])
        let (post''''''' :
          t ->
            method_:[ `Runtime_callFunctionOn ] ->
              ?params:Runtime_CallFunctionOnParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_CallFunctionOnReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1531 : t) ->
            fun ~method_:(x1522 : [ `Runtime_callFunctionOn ]) ->
              fun
                ?params:(x1523 :
                          Runtime_CallFunctionOnParameterType.t option)
                ->
                fun
                  ?callback:(x1524 :
                              (err:Error.t or_null ->
                                 params:Runtime_CallFunctionOnReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1532 = t_to_js x1531 in
                       Ojs.call (Ojs.get_prop_ascii x1532 "post") "apply"
                         [|x1532;((let x1525 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1525 "push"
                                        [|((match x1522 with
                                            | `Runtime_callFunctionOn ->
                                                Ojs.string_to_js
                                                  "RuntimeCallFunctionOn"))|]);
                                   (match x1523 with
                                    | Some x1530 ->
                                        ignore
                                          (Ojs.call x1525 "push"
                                             [|(Runtime_CallFunctionOnParameterType.t_to_js
                                                  x1530)|])
                                    | None -> ());
                                   (match x1524 with
                                    | Some x1526 ->
                                        ignore
                                          (Ojs.call x1525 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1527 : Ojs.t) ->
                                                     fun (x1529 : Ojs.t) ->
                                                       x1526
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1527)
                                                         ~params:(Runtime_CallFunctionOnReturnType.t_of_js
                                                                    x1529)))|])
                                    | None -> ());
                                   x1525))|])
        let (post'''''''' :
          t ->
            method_:[ `Runtime_callFunctionOn ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_CallFunctionOnReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1540 : t) ->
            fun ~method_:(x1533 : [ `Runtime_callFunctionOn ]) ->
              fun
                ?callback:(x1534 :
                            (err:Error.t or_null ->
                               params:Runtime_CallFunctionOnReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1541 = t_to_js x1540 in
                     Ojs.call (Ojs.get_prop_ascii x1541 "post") "apply"
                       [|x1541;((let x1535 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1535 "push"
                                      [|((match x1533 with
                                          | `Runtime_callFunctionOn ->
                                              Ojs.string_to_js
                                                "RuntimeCallFunctionOn"))|]);
                                 (match x1534 with
                                  | Some x1536 ->
                                      ignore
                                        (Ojs.call x1535 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1537 : Ojs.t) ->
                                                   fun (x1539 : Ojs.t) ->
                                                     x1536
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1537)
                                                       ~params:(Runtime_CallFunctionOnReturnType.t_of_js
                                                                  x1539)))|])
                                  | None -> ());
                                 x1535))|])
        let (post''''''''' :
          t ->
            method_:[ `Runtime_getProperties ] ->
              ?params:Runtime_GetPropertiesParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_GetPropertiesReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1551 : t) ->
            fun ~method_:(x1542 : [ `Runtime_getProperties ]) ->
              fun
                ?params:(x1543 : Runtime_GetPropertiesParameterType.t option)
                ->
                fun
                  ?callback:(x1544 :
                              (err:Error.t or_null ->
                                 params:Runtime_GetPropertiesReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1552 = t_to_js x1551 in
                       Ojs.call (Ojs.get_prop_ascii x1552 "post") "apply"
                         [|x1552;((let x1545 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1545 "push"
                                        [|((match x1542 with
                                            | `Runtime_getProperties ->
                                                Ojs.string_to_js
                                                  "RuntimeGetProperties"))|]);
                                   (match x1543 with
                                    | Some x1550 ->
                                        ignore
                                          (Ojs.call x1545 "push"
                                             [|(Runtime_GetPropertiesParameterType.t_to_js
                                                  x1550)|])
                                    | None -> ());
                                   (match x1544 with
                                    | Some x1546 ->
                                        ignore
                                          (Ojs.call x1545 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1547 : Ojs.t) ->
                                                     fun (x1549 : Ojs.t) ->
                                                       x1546
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1547)
                                                         ~params:(Runtime_GetPropertiesReturnType.t_of_js
                                                                    x1549)))|])
                                    | None -> ());
                                   x1545))|])
        let (post'''''''''' :
          t ->
            method_:[ `Runtime_getProperties ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_GetPropertiesReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1560 : t) ->
            fun ~method_:(x1553 : [ `Runtime_getProperties ]) ->
              fun
                ?callback:(x1554 :
                            (err:Error.t or_null ->
                               params:Runtime_GetPropertiesReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1561 = t_to_js x1560 in
                     Ojs.call (Ojs.get_prop_ascii x1561 "post") "apply"
                       [|x1561;((let x1555 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1555 "push"
                                      [|((match x1553 with
                                          | `Runtime_getProperties ->
                                              Ojs.string_to_js
                                                "RuntimeGetProperties"))|]);
                                 (match x1554 with
                                  | Some x1556 ->
                                      ignore
                                        (Ojs.call x1555 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1557 : Ojs.t) ->
                                                   fun (x1559 : Ojs.t) ->
                                                     x1556
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1557)
                                                       ~params:(Runtime_GetPropertiesReturnType.t_of_js
                                                                  x1559)))|])
                                  | None -> ());
                                 x1555))|])
        let (post''''''''''' :
          t ->
            method_:[ `Runtime_releaseObject ] ->
              ?params:Runtime_ReleaseObjectParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1570 : t) ->
            fun ~method_:(x1562 : [ `Runtime_releaseObject ]) ->
              fun
                ?params:(x1563 : Runtime_ReleaseObjectParameterType.t option)
                ->
                fun ?callback:(x1564 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1571 = t_to_js x1570 in
                       Ojs.call (Ojs.get_prop_ascii x1571 "post") "apply"
                         [|x1571;((let x1565 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1565 "push"
                                        [|((match x1562 with
                                            | `Runtime_releaseObject ->
                                                Ojs.string_to_js
                                                  "RuntimeReleaseObject"))|]);
                                   (match x1563 with
                                    | Some x1569 ->
                                        ignore
                                          (Ojs.call x1565 "push"
                                             [|(Runtime_ReleaseObjectParameterType.t_to_js
                                                  x1569)|])
                                    | None -> ());
                                   (match x1564 with
                                    | Some x1566 ->
                                        ignore
                                          (Ojs.call x1565 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1567 : Ojs.t) ->
                                                     x1566
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1567)))|])
                                    | None -> ());
                                   x1565))|])
        let (post'''''''''''' :
          t ->
            method_:[ `Runtime_releaseObject ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1578 : t) ->
            fun ~method_:(x1572 : [ `Runtime_releaseObject ]) ->
              fun ?callback:(x1573 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1579 = t_to_js x1578 in
                     Ojs.call (Ojs.get_prop_ascii x1579 "post") "apply"
                       [|x1579;((let x1574 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1574 "push"
                                      [|((match x1572 with
                                          | `Runtime_releaseObject ->
                                              Ojs.string_to_js
                                                "RuntimeReleaseObject"))|]);
                                 (match x1573 with
                                  | Some x1575 ->
                                      ignore
                                        (Ojs.call x1574 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1576 : Ojs.t) ->
                                                   x1575
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1576)))|])
                                  | None -> ());
                                 x1574))|])
        let (post''''''''''''' :
          t ->
            method_:[ `Runtime_releaseObjectGroup ] ->
              ?params:Runtime_ReleaseObjectGroupParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1588 : t) ->
            fun ~method_:(x1580 : [ `Runtime_releaseObjectGroup ]) ->
              fun
                ?params:(x1581 :
                          Runtime_ReleaseObjectGroupParameterType.t option)
                ->
                fun ?callback:(x1582 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1589 = t_to_js x1588 in
                       Ojs.call (Ojs.get_prop_ascii x1589 "post") "apply"
                         [|x1589;((let x1583 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1583 "push"
                                        [|((match x1580 with
                                            | `Runtime_releaseObjectGroup ->
                                                Ojs.string_to_js
                                                  "RuntimeReleaseObjectGroup"))|]);
                                   (match x1581 with
                                    | Some x1587 ->
                                        ignore
                                          (Ojs.call x1583 "push"
                                             [|(Runtime_ReleaseObjectGroupParameterType.t_to_js
                                                  x1587)|])
                                    | None -> ());
                                   (match x1582 with
                                    | Some x1584 ->
                                        ignore
                                          (Ojs.call x1583 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1585 : Ojs.t) ->
                                                     x1584
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1585)))|])
                                    | None -> ());
                                   x1583))|])
        let (post'''''''''''''' :
          t ->
            method_:[ `Runtime_releaseObjectGroup ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1596 : t) ->
            fun ~method_:(x1590 : [ `Runtime_releaseObjectGroup ]) ->
              fun ?callback:(x1591 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1597 = t_to_js x1596 in
                     Ojs.call (Ojs.get_prop_ascii x1597 "post") "apply"
                       [|x1597;((let x1592 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1592 "push"
                                      [|((match x1590 with
                                          | `Runtime_releaseObjectGroup ->
                                              Ojs.string_to_js
                                                "RuntimeReleaseObjectGroup"))|]);
                                 (match x1591 with
                                  | Some x1593 ->
                                      ignore
                                        (Ojs.call x1592 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1594 : Ojs.t) ->
                                                   x1593
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1594)))|])
                                  | None -> ());
                                 x1592))|])
        let (post''''''''''''''' :
          t ->
            method_:[ `Runtime_runIfWaitingForDebugger ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1604 : t) ->
            fun ~method_:(x1598 : [ `Runtime_runIfWaitingForDebugger ]) ->
              fun ?callback:(x1599 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1605 = t_to_js x1604 in
                     Ojs.call (Ojs.get_prop_ascii x1605 "post") "apply"
                       [|x1605;((let x1600 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1600 "push"
                                      [|((match x1598 with
                                          | `Runtime_runIfWaitingForDebugger
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeRunIfWaitingForDebugger"))|]);
                                 (match x1599 with
                                  | Some x1601 ->
                                      ignore
                                        (Ojs.call x1600 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1602 : Ojs.t) ->
                                                   x1601
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1602)))|])
                                  | None -> ());
                                 x1600))|])
        let (post'''''''''''''''' :
          t ->
            method_:[ `Runtime_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1612 : t) ->
            fun ~method_:(x1606 : [ `Runtime_enable ]) ->
              fun ?callback:(x1607 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1613 = t_to_js x1612 in
                     Ojs.call (Ojs.get_prop_ascii x1613 "post") "apply"
                       [|x1613;((let x1608 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1608 "push"
                                      [|((match x1606 with
                                          | `Runtime_enable ->
                                              Ojs.string_to_js
                                                "RuntimeEnable"))|]);
                                 (match x1607 with
                                  | Some x1609 ->
                                      ignore
                                        (Ojs.call x1608 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1610 : Ojs.t) ->
                                                   x1609
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1610)))|])
                                  | None -> ());
                                 x1608))|])
        let (post''''''''''''''''' :
          t ->
            method_:[ `Runtime_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1620 : t) ->
            fun ~method_:(x1614 : [ `Runtime_disable ]) ->
              fun ?callback:(x1615 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1621 = t_to_js x1620 in
                     Ojs.call (Ojs.get_prop_ascii x1621 "post") "apply"
                       [|x1621;((let x1616 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1616 "push"
                                      [|((match x1614 with
                                          | `Runtime_disable ->
                                              Ojs.string_to_js
                                                "RuntimeDisable"))|]);
                                 (match x1615 with
                                  | Some x1617 ->
                                      ignore
                                        (Ojs.call x1616 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1618 : Ojs.t) ->
                                                   x1617
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1618)))|])
                                  | None -> ());
                                 x1616))|])
        let (post'''''''''''''''''' :
          t ->
            method_:[ `Runtime_discardConsoleEntries ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1628 : t) ->
            fun ~method_:(x1622 : [ `Runtime_discardConsoleEntries ]) ->
              fun ?callback:(x1623 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1629 = t_to_js x1628 in
                     Ojs.call (Ojs.get_prop_ascii x1629 "post") "apply"
                       [|x1629;((let x1624 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1624 "push"
                                      [|((match x1622 with
                                          | `Runtime_discardConsoleEntries ->
                                              Ojs.string_to_js
                                                "RuntimeDiscardConsoleEntries"))|]);
                                 (match x1623 with
                                  | Some x1625 ->
                                      ignore
                                        (Ojs.call x1624 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1626 : Ojs.t) ->
                                                   x1625
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1626)))|])
                                  | None -> ());
                                 x1624))|])
        let (post''''''''''''''''''' :
          t ->
            method_:[ `Runtime_setCustomObjectFormatterEnabled ] ->
              ?params:Runtime_SetCustomObjectFormatterEnabledParameterType.t
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1638 : t) ->
            fun
              ~method_:(x1630 : [ `Runtime_setCustomObjectFormatterEnabled ])
              ->
              fun
                ?params:(x1631 :
                          Runtime_SetCustomObjectFormatterEnabledParameterType.t
                            option)
                ->
                fun ?callback:(x1632 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1639 = t_to_js x1638 in
                       Ojs.call (Ojs.get_prop_ascii x1639 "post") "apply"
                         [|x1639;((let x1633 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1633 "push"
                                        [|((match x1630 with
                                            | `Runtime_setCustomObjectFormatterEnabled
                                                ->
                                                Ojs.string_to_js
                                                  "RuntimeSetCustomObjectFormatterEnabled"))|]);
                                   (match x1631 with
                                    | Some x1637 ->
                                        ignore
                                          (Ojs.call x1633 "push"
                                             [|(Runtime_SetCustomObjectFormatterEnabledParameterType.t_to_js
                                                  x1637)|])
                                    | None -> ());
                                   (match x1632 with
                                    | Some x1634 ->
                                        ignore
                                          (Ojs.call x1633 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1635 : Ojs.t) ->
                                                     x1634
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1635)))|])
                                    | None -> ());
                                   x1633))|])
        let (post'''''''''''''''''''' :
          t ->
            method_:[ `Runtime_setCustomObjectFormatterEnabled ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1646 : t) ->
            fun
              ~method_:(x1640 : [ `Runtime_setCustomObjectFormatterEnabled ])
              ->
              fun ?callback:(x1641 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1647 = t_to_js x1646 in
                     Ojs.call (Ojs.get_prop_ascii x1647 "post") "apply"
                       [|x1647;((let x1642 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1642 "push"
                                      [|((match x1640 with
                                          | `Runtime_setCustomObjectFormatterEnabled
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeSetCustomObjectFormatterEnabled"))|]);
                                 (match x1641 with
                                  | Some x1643 ->
                                      ignore
                                        (Ojs.call x1642 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1644 : Ojs.t) ->
                                                   x1643
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1644)))|])
                                  | None -> ());
                                 x1642))|])
        let (post''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_compileScript ] ->
              ?params:Runtime_CompileScriptParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_CompileScriptReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1657 : t) ->
            fun ~method_:(x1648 : [ `Runtime_compileScript ]) ->
              fun
                ?params:(x1649 : Runtime_CompileScriptParameterType.t option)
                ->
                fun
                  ?callback:(x1650 :
                              (err:Error.t or_null ->
                                 params:Runtime_CompileScriptReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1658 = t_to_js x1657 in
                       Ojs.call (Ojs.get_prop_ascii x1658 "post") "apply"
                         [|x1658;((let x1651 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1651 "push"
                                        [|((match x1648 with
                                            | `Runtime_compileScript ->
                                                Ojs.string_to_js
                                                  "RuntimeCompileScript"))|]);
                                   (match x1649 with
                                    | Some x1656 ->
                                        ignore
                                          (Ojs.call x1651 "push"
                                             [|(Runtime_CompileScriptParameterType.t_to_js
                                                  x1656)|])
                                    | None -> ());
                                   (match x1650 with
                                    | Some x1652 ->
                                        ignore
                                          (Ojs.call x1651 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1653 : Ojs.t) ->
                                                     fun (x1655 : Ojs.t) ->
                                                       x1652
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1653)
                                                         ~params:(Runtime_CompileScriptReturnType.t_of_js
                                                                    x1655)))|])
                                    | None -> ());
                                   x1651))|])
        let (post'''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_compileScript ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_CompileScriptReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1666 : t) ->
            fun ~method_:(x1659 : [ `Runtime_compileScript ]) ->
              fun
                ?callback:(x1660 :
                            (err:Error.t or_null ->
                               params:Runtime_CompileScriptReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1667 = t_to_js x1666 in
                     Ojs.call (Ojs.get_prop_ascii x1667 "post") "apply"
                       [|x1667;((let x1661 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1661 "push"
                                      [|((match x1659 with
                                          | `Runtime_compileScript ->
                                              Ojs.string_to_js
                                                "RuntimeCompileScript"))|]);
                                 (match x1660 with
                                  | Some x1662 ->
                                      ignore
                                        (Ojs.call x1661 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1663 : Ojs.t) ->
                                                   fun (x1665 : Ojs.t) ->
                                                     x1662
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1663)
                                                       ~params:(Runtime_CompileScriptReturnType.t_of_js
                                                                  x1665)))|])
                                  | None -> ());
                                 x1661))|])
        let (post''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_runScript ] ->
              ?params:Runtime_RunScriptParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_RunScriptReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1677 : t) ->
            fun ~method_:(x1668 : [ `Runtime_runScript ]) ->
              fun ?params:(x1669 : Runtime_RunScriptParameterType.t option)
                ->
                fun
                  ?callback:(x1670 :
                              (err:Error.t or_null ->
                                 params:Runtime_RunScriptReturnType.t -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1678 = t_to_js x1677 in
                       Ojs.call (Ojs.get_prop_ascii x1678 "post") "apply"
                         [|x1678;((let x1671 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1671 "push"
                                        [|((match x1668 with
                                            | `Runtime_runScript ->
                                                Ojs.string_to_js
                                                  "RuntimeRunScript"))|]);
                                   (match x1669 with
                                    | Some x1676 ->
                                        ignore
                                          (Ojs.call x1671 "push"
                                             [|(Runtime_RunScriptParameterType.t_to_js
                                                  x1676)|])
                                    | None -> ());
                                   (match x1670 with
                                    | Some x1672 ->
                                        ignore
                                          (Ojs.call x1671 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1673 : Ojs.t) ->
                                                     fun (x1675 : Ojs.t) ->
                                                       x1672
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1673)
                                                         ~params:(Runtime_RunScriptReturnType.t_of_js
                                                                    x1675)))|])
                                    | None -> ());
                                   x1671))|])
        let (post'''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_runScript ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_RunScriptReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1686 : t) ->
            fun ~method_:(x1679 : [ `Runtime_runScript ]) ->
              fun
                ?callback:(x1680 :
                            (err:Error.t or_null ->
                               params:Runtime_RunScriptReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1687 = t_to_js x1686 in
                     Ojs.call (Ojs.get_prop_ascii x1687 "post") "apply"
                       [|x1687;((let x1681 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1681 "push"
                                      [|((match x1679 with
                                          | `Runtime_runScript ->
                                              Ojs.string_to_js
                                                "RuntimeRunScript"))|]);
                                 (match x1680 with
                                  | Some x1682 ->
                                      ignore
                                        (Ojs.call x1681 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1683 : Ojs.t) ->
                                                   fun (x1685 : Ojs.t) ->
                                                     x1682
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1683)
                                                       ~params:(Runtime_RunScriptReturnType.t_of_js
                                                                  x1685)))|])
                                  | None -> ());
                                 x1681))|])
        let (post''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_queryObjects ] ->
              ?params:Runtime_QueryObjectsParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_QueryObjectsReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x1697 : t) ->
            fun ~method_:(x1688 : [ `Runtime_queryObjects ]) ->
              fun
                ?params:(x1689 : Runtime_QueryObjectsParameterType.t option)
                ->
                fun
                  ?callback:(x1690 :
                              (err:Error.t or_null ->
                                 params:Runtime_QueryObjectsReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1698 = t_to_js x1697 in
                       Ojs.call (Ojs.get_prop_ascii x1698 "post") "apply"
                         [|x1698;((let x1691 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1691 "push"
                                        [|((match x1688 with
                                            | `Runtime_queryObjects ->
                                                Ojs.string_to_js
                                                  "RuntimeQueryObjects"))|]);
                                   (match x1689 with
                                    | Some x1696 ->
                                        ignore
                                          (Ojs.call x1691 "push"
                                             [|(Runtime_QueryObjectsParameterType.t_to_js
                                                  x1696)|])
                                    | None -> ());
                                   (match x1690 with
                                    | Some x1692 ->
                                        ignore
                                          (Ojs.call x1691 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1693 : Ojs.t) ->
                                                     fun (x1695 : Ojs.t) ->
                                                       x1692
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1693)
                                                         ~params:(Runtime_QueryObjectsReturnType.t_of_js
                                                                    x1695)))|])
                                    | None -> ());
                                   x1691))|])
        let (post'''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_queryObjects ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_QueryObjectsReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1706 : t) ->
            fun ~method_:(x1699 : [ `Runtime_queryObjects ]) ->
              fun
                ?callback:(x1700 :
                            (err:Error.t or_null ->
                               params:Runtime_QueryObjectsReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1707 = t_to_js x1706 in
                     Ojs.call (Ojs.get_prop_ascii x1707 "post") "apply"
                       [|x1707;((let x1701 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1701 "push"
                                      [|((match x1699 with
                                          | `Runtime_queryObjects ->
                                              Ojs.string_to_js
                                                "RuntimeQueryObjects"))|]);
                                 (match x1700 with
                                  | Some x1702 ->
                                      ignore
                                        (Ojs.call x1701 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1703 : Ojs.t) ->
                                                   fun (x1705 : Ojs.t) ->
                                                     x1702
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1703)
                                                       ~params:(Runtime_QueryObjectsReturnType.t_of_js
                                                                  x1705)))|])
                                  | None -> ());
                                 x1701))|])
        let (post''''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_globalLexicalScopeNames ] ->
              ?params:Runtime_GlobalLexicalScopeNamesParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Runtime_GlobalLexicalScopeNamesReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1717 : t) ->
            fun ~method_:(x1708 : [ `Runtime_globalLexicalScopeNames ]) ->
              fun
                ?params:(x1709 :
                          Runtime_GlobalLexicalScopeNamesParameterType.t
                            option)
                ->
                fun
                  ?callback:(x1710 :
                              (err:Error.t or_null ->
                                 params:Runtime_GlobalLexicalScopeNamesReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1718 = t_to_js x1717 in
                       Ojs.call (Ojs.get_prop_ascii x1718 "post") "apply"
                         [|x1718;((let x1711 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1711 "push"
                                        [|((match x1708 with
                                            | `Runtime_globalLexicalScopeNames
                                                ->
                                                Ojs.string_to_js
                                                  "RuntimeGlobalLexicalScopeNames"))|]);
                                   (match x1709 with
                                    | Some x1716 ->
                                        ignore
                                          (Ojs.call x1711 "push"
                                             [|(Runtime_GlobalLexicalScopeNamesParameterType.t_to_js
                                                  x1716)|])
                                    | None -> ());
                                   (match x1710 with
                                    | Some x1712 ->
                                        ignore
                                          (Ojs.call x1711 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1713 : Ojs.t) ->
                                                     fun (x1715 : Ojs.t) ->
                                                       x1712
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1713)
                                                         ~params:(Runtime_GlobalLexicalScopeNamesReturnType.t_of_js
                                                                    x1715)))|])
                                    | None -> ());
                                   x1711))|])
        let (post'''''''''''''''''''''''''''' :
          t ->
            method_:[ `Runtime_globalLexicalScopeNames ] ->
              ?callback:(err:Error.t or_null ->
                           params:Runtime_GlobalLexicalScopeNamesReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x1726 : t) ->
            fun ~method_:(x1719 : [ `Runtime_globalLexicalScopeNames ]) ->
              fun
                ?callback:(x1720 :
                            (err:Error.t or_null ->
                               params:Runtime_GlobalLexicalScopeNamesReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1727 = t_to_js x1726 in
                     Ojs.call (Ojs.get_prop_ascii x1727 "post") "apply"
                       [|x1727;((let x1721 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1721 "push"
                                      [|((match x1719 with
                                          | `Runtime_globalLexicalScopeNames
                                              ->
                                              Ojs.string_to_js
                                                "RuntimeGlobalLexicalScopeNames"))|]);
                                 (match x1720 with
                                  | Some x1722 ->
                                      ignore
                                        (Ojs.call x1721 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1723 : Ojs.t) ->
                                                   fun (x1725 : Ojs.t) ->
                                                     x1722
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1723)
                                                       ~params:(Runtime_GlobalLexicalScopeNamesReturnType.t_of_js
                                                                  x1725)))|])
                                  | None -> ());
                                 x1721))|])
        let (post''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_enable ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_EnableReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1735 : t) ->
            fun ~method_:(x1728 : [ `Debugger_enable ]) ->
              fun
                ?callback:(x1729 :
                            (err:Error.t or_null ->
                               params:Debugger_EnableReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1736 = t_to_js x1735 in
                     Ojs.call (Ojs.get_prop_ascii x1736 "post") "apply"
                       [|x1736;((let x1730 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1730 "push"
                                      [|((match x1728 with
                                          | `Debugger_enable ->
                                              Ojs.string_to_js
                                                "DebuggerEnable"))|]);
                                 (match x1729 with
                                  | Some x1731 ->
                                      ignore
                                        (Ojs.call x1730 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1732 : Ojs.t) ->
                                                   fun (x1734 : Ojs.t) ->
                                                     x1731
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1732)
                                                       ~params:(Debugger_EnableReturnType.t_of_js
                                                                  x1734)))|])
                                  | None -> ());
                                 x1730))|])
        let (post'''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1743 : t) ->
            fun ~method_:(x1737 : [ `Debugger_disable ]) ->
              fun ?callback:(x1738 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1744 = t_to_js x1743 in
                     Ojs.call (Ojs.get_prop_ascii x1744 "post") "apply"
                       [|x1744;((let x1739 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1739 "push"
                                      [|((match x1737 with
                                          | `Debugger_disable ->
                                              Ojs.string_to_js
                                                "DebuggerDisable"))|]);
                                 (match x1738 with
                                  | Some x1740 ->
                                      ignore
                                        (Ojs.call x1739 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1741 : Ojs.t) ->
                                                   x1740
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1741)))|])
                                  | None -> ());
                                 x1739))|])
        let (post''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointsActive ] ->
              ?params:Debugger_SetBreakpointsActiveParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1753 : t) ->
            fun ~method_:(x1745 : [ `Debugger_setBreakpointsActive ]) ->
              fun
                ?params:(x1746 :
                          Debugger_SetBreakpointsActiveParameterType.t option)
                ->
                fun ?callback:(x1747 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1754 = t_to_js x1753 in
                       Ojs.call (Ojs.get_prop_ascii x1754 "post") "apply"
                         [|x1754;((let x1748 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1748 "push"
                                        [|((match x1745 with
                                            | `Debugger_setBreakpointsActive
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpointsActive"))|]);
                                   (match x1746 with
                                    | Some x1752 ->
                                        ignore
                                          (Ojs.call x1748 "push"
                                             [|(Debugger_SetBreakpointsActiveParameterType.t_to_js
                                                  x1752)|])
                                    | None -> ());
                                   (match x1747 with
                                    | Some x1749 ->
                                        ignore
                                          (Ojs.call x1748 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1750 : Ojs.t) ->
                                                     x1749
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1750)))|])
                                    | None -> ());
                                   x1748))|])
        let (post'''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointsActive ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1761 : t) ->
            fun ~method_:(x1755 : [ `Debugger_setBreakpointsActive ]) ->
              fun ?callback:(x1756 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1762 = t_to_js x1761 in
                     Ojs.call (Ojs.get_prop_ascii x1762 "post") "apply"
                       [|x1762;((let x1757 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1757 "push"
                                      [|((match x1755 with
                                          | `Debugger_setBreakpointsActive ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpointsActive"))|]);
                                 (match x1756 with
                                  | Some x1758 ->
                                      ignore
                                        (Ojs.call x1757 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1759 : Ojs.t) ->
                                                   x1758
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1759)))|])
                                  | None -> ());
                                 x1757))|])
        let (post''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setSkipAllPauses ] ->
              ?params:Debugger_SetSkipAllPausesParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1771 : t) ->
            fun ~method_:(x1763 : [ `Debugger_setSkipAllPauses ]) ->
              fun
                ?params:(x1764 :
                          Debugger_SetSkipAllPausesParameterType.t option)
                ->
                fun ?callback:(x1765 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1772 = t_to_js x1771 in
                       Ojs.call (Ojs.get_prop_ascii x1772 "post") "apply"
                         [|x1772;((let x1766 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1766 "push"
                                        [|((match x1763 with
                                            | `Debugger_setSkipAllPauses ->
                                                Ojs.string_to_js
                                                  "DebuggerSetSkipAllPauses"))|]);
                                   (match x1764 with
                                    | Some x1770 ->
                                        ignore
                                          (Ojs.call x1766 "push"
                                             [|(Debugger_SetSkipAllPausesParameterType.t_to_js
                                                  x1770)|])
                                    | None -> ());
                                   (match x1765 with
                                    | Some x1767 ->
                                        ignore
                                          (Ojs.call x1766 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1768 : Ojs.t) ->
                                                     x1767
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1768)))|])
                                    | None -> ());
                                   x1766))|])
        let (post'''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setSkipAllPauses ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1779 : t) ->
            fun ~method_:(x1773 : [ `Debugger_setSkipAllPauses ]) ->
              fun ?callback:(x1774 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1780 = t_to_js x1779 in
                     Ojs.call (Ojs.get_prop_ascii x1780 "post") "apply"
                       [|x1780;((let x1775 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1775 "push"
                                      [|((match x1773 with
                                          | `Debugger_setSkipAllPauses ->
                                              Ojs.string_to_js
                                                "DebuggerSetSkipAllPauses"))|]);
                                 (match x1774 with
                                  | Some x1776 ->
                                      ignore
                                        (Ojs.call x1775 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1777 : Ojs.t) ->
                                                   x1776
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1777)))|])
                                  | None -> ());
                                 x1775))|])
        let (post''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointByUrl ] ->
              ?params:Debugger_SetBreakpointByUrlParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_SetBreakpointByUrlReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1790 : t) ->
            fun ~method_:(x1781 : [ `Debugger_setBreakpointByUrl ]) ->
              fun
                ?params:(x1782 :
                          Debugger_SetBreakpointByUrlParameterType.t option)
                ->
                fun
                  ?callback:(x1783 :
                              (err:Error.t or_null ->
                                 params:Debugger_SetBreakpointByUrlReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1791 = t_to_js x1790 in
                       Ojs.call (Ojs.get_prop_ascii x1791 "post") "apply"
                         [|x1791;((let x1784 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1784 "push"
                                        [|((match x1781 with
                                            | `Debugger_setBreakpointByUrl ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpointByUrl"))|]);
                                   (match x1782 with
                                    | Some x1789 ->
                                        ignore
                                          (Ojs.call x1784 "push"
                                             [|(Debugger_SetBreakpointByUrlParameterType.t_to_js
                                                  x1789)|])
                                    | None -> ());
                                   (match x1783 with
                                    | Some x1785 ->
                                        ignore
                                          (Ojs.call x1784 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1786 : Ojs.t) ->
                                                     fun (x1788 : Ojs.t) ->
                                                       x1785
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1786)
                                                         ~params:(Debugger_SetBreakpointByUrlReturnType.t_of_js
                                                                    x1788)))|])
                                    | None -> ());
                                   x1784))|])
        let (post'''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpointByUrl ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_SetBreakpointByUrlReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x1799 : t) ->
            fun ~method_:(x1792 : [ `Debugger_setBreakpointByUrl ]) ->
              fun
                ?callback:(x1793 :
                            (err:Error.t or_null ->
                               params:Debugger_SetBreakpointByUrlReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1800 = t_to_js x1799 in
                     Ojs.call (Ojs.get_prop_ascii x1800 "post") "apply"
                       [|x1800;((let x1794 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1794 "push"
                                      [|((match x1792 with
                                          | `Debugger_setBreakpointByUrl ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpointByUrl"))|]);
                                 (match x1793 with
                                  | Some x1795 ->
                                      ignore
                                        (Ojs.call x1794 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1796 : Ojs.t) ->
                                                   fun (x1798 : Ojs.t) ->
                                                     x1795
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1796)
                                                       ~params:(Debugger_SetBreakpointByUrlReturnType.t_of_js
                                                                  x1798)))|])
                                  | None -> ());
                                 x1794))|])
        let (post''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpoint ] ->
              ?params:Debugger_SetBreakpointParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_SetBreakpointReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1810 : t) ->
            fun ~method_:(x1801 : [ `Debugger_setBreakpoint ]) ->
              fun
                ?params:(x1802 :
                          Debugger_SetBreakpointParameterType.t option)
                ->
                fun
                  ?callback:(x1803 :
                              (err:Error.t or_null ->
                                 params:Debugger_SetBreakpointReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1811 = t_to_js x1810 in
                       Ojs.call (Ojs.get_prop_ascii x1811 "post") "apply"
                         [|x1811;((let x1804 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1804 "push"
                                        [|((match x1801 with
                                            | `Debugger_setBreakpoint ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBreakpoint"))|]);
                                   (match x1802 with
                                    | Some x1809 ->
                                        ignore
                                          (Ojs.call x1804 "push"
                                             [|(Debugger_SetBreakpointParameterType.t_to_js
                                                  x1809)|])
                                    | None -> ());
                                   (match x1803 with
                                    | Some x1805 ->
                                        ignore
                                          (Ojs.call x1804 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1806 : Ojs.t) ->
                                                     fun (x1808 : Ojs.t) ->
                                                       x1805
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1806)
                                                         ~params:(Debugger_SetBreakpointReturnType.t_of_js
                                                                    x1808)))|])
                                    | None -> ());
                                   x1804))|])
        let (post'''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setBreakpoint ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_SetBreakpointReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1819 : t) ->
            fun ~method_:(x1812 : [ `Debugger_setBreakpoint ]) ->
              fun
                ?callback:(x1813 :
                            (err:Error.t or_null ->
                               params:Debugger_SetBreakpointReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1820 = t_to_js x1819 in
                     Ojs.call (Ojs.get_prop_ascii x1820 "post") "apply"
                       [|x1820;((let x1814 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1814 "push"
                                      [|((match x1812 with
                                          | `Debugger_setBreakpoint ->
                                              Ojs.string_to_js
                                                "DebuggerSetBreakpoint"))|]);
                                 (match x1813 with
                                  | Some x1815 ->
                                      ignore
                                        (Ojs.call x1814 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1816 : Ojs.t) ->
                                                   fun (x1818 : Ojs.t) ->
                                                     x1815
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1816)
                                                       ~params:(Debugger_SetBreakpointReturnType.t_of_js
                                                                  x1818)))|])
                                  | None -> ());
                                 x1814))|])
        let (post''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_removeBreakpoint ] ->
              ?params:Debugger_RemoveBreakpointParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1829 : t) ->
            fun ~method_:(x1821 : [ `Debugger_removeBreakpoint ]) ->
              fun
                ?params:(x1822 :
                          Debugger_RemoveBreakpointParameterType.t option)
                ->
                fun ?callback:(x1823 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1830 = t_to_js x1829 in
                       Ojs.call (Ojs.get_prop_ascii x1830 "post") "apply"
                         [|x1830;((let x1824 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1824 "push"
                                        [|((match x1821 with
                                            | `Debugger_removeBreakpoint ->
                                                Ojs.string_to_js
                                                  "DebuggerRemoveBreakpoint"))|]);
                                   (match x1822 with
                                    | Some x1828 ->
                                        ignore
                                          (Ojs.call x1824 "push"
                                             [|(Debugger_RemoveBreakpointParameterType.t_to_js
                                                  x1828)|])
                                    | None -> ());
                                   (match x1823 with
                                    | Some x1825 ->
                                        ignore
                                          (Ojs.call x1824 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1826 : Ojs.t) ->
                                                     x1825
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1826)))|])
                                    | None -> ());
                                   x1824))|])
        let (post'''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_removeBreakpoint ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1837 : t) ->
            fun ~method_:(x1831 : [ `Debugger_removeBreakpoint ]) ->
              fun ?callback:(x1832 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1838 = t_to_js x1837 in
                     Ojs.call (Ojs.get_prop_ascii x1838 "post") "apply"
                       [|x1838;((let x1833 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1833 "push"
                                      [|((match x1831 with
                                          | `Debugger_removeBreakpoint ->
                                              Ojs.string_to_js
                                                "DebuggerRemoveBreakpoint"))|]);
                                 (match x1832 with
                                  | Some x1834 ->
                                      ignore
                                        (Ojs.call x1833 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1835 : Ojs.t) ->
                                                   x1834
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1835)))|])
                                  | None -> ());
                                 x1833))|])
        let (post''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getPossibleBreakpoints ] ->
              ?params:Debugger_GetPossibleBreakpointsParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_GetPossibleBreakpointsReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x1848 : t) ->
            fun ~method_:(x1839 : [ `Debugger_getPossibleBreakpoints ]) ->
              fun
                ?params:(x1840 :
                          Debugger_GetPossibleBreakpointsParameterType.t
                            option)
                ->
                fun
                  ?callback:(x1841 :
                              (err:Error.t or_null ->
                                 params:Debugger_GetPossibleBreakpointsReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1849 = t_to_js x1848 in
                       Ojs.call (Ojs.get_prop_ascii x1849 "post") "apply"
                         [|x1849;((let x1842 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1842 "push"
                                        [|((match x1839 with
                                            | `Debugger_getPossibleBreakpoints
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerGetPossibleBreakpoints"))|]);
                                   (match x1840 with
                                    | Some x1847 ->
                                        ignore
                                          (Ojs.call x1842 "push"
                                             [|(Debugger_GetPossibleBreakpointsParameterType.t_to_js
                                                  x1847)|])
                                    | None -> ());
                                   (match x1841 with
                                    | Some x1843 ->
                                        ignore
                                          (Ojs.call x1842 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1844 : Ojs.t) ->
                                                     fun (x1846 : Ojs.t) ->
                                                       x1843
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1844)
                                                         ~params:(Debugger_GetPossibleBreakpointsReturnType.t_of_js
                                                                    x1846)))|])
                                    | None -> ());
                                   x1842))|])
        let (post'''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getPossibleBreakpoints ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_GetPossibleBreakpointsReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x1857 : t) ->
            fun ~method_:(x1850 : [ `Debugger_getPossibleBreakpoints ]) ->
              fun
                ?callback:(x1851 :
                            (err:Error.t or_null ->
                               params:Debugger_GetPossibleBreakpointsReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1858 = t_to_js x1857 in
                     Ojs.call (Ojs.get_prop_ascii x1858 "post") "apply"
                       [|x1858;((let x1852 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1852 "push"
                                      [|((match x1850 with
                                          | `Debugger_getPossibleBreakpoints
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerGetPossibleBreakpoints"))|]);
                                 (match x1851 with
                                  | Some x1853 ->
                                      ignore
                                        (Ojs.call x1852 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1854 : Ojs.t) ->
                                                   fun (x1856 : Ojs.t) ->
                                                     x1853
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1854)
                                                       ~params:(Debugger_GetPossibleBreakpointsReturnType.t_of_js
                                                                  x1856)))|])
                                  | None -> ());
                                 x1852))|])
        let (post''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_continueToLocation ] ->
              ?params:Debugger_ContinueToLocationParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1867 : t) ->
            fun ~method_:(x1859 : [ `Debugger_continueToLocation ]) ->
              fun
                ?params:(x1860 :
                          Debugger_ContinueToLocationParameterType.t option)
                ->
                fun ?callback:(x1861 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1868 = t_to_js x1867 in
                       Ojs.call (Ojs.get_prop_ascii x1868 "post") "apply"
                         [|x1868;((let x1862 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1862 "push"
                                        [|((match x1859 with
                                            | `Debugger_continueToLocation ->
                                                Ojs.string_to_js
                                                  "DebuggerContinueToLocation"))|]);
                                   (match x1860 with
                                    | Some x1866 ->
                                        ignore
                                          (Ojs.call x1862 "push"
                                             [|(Debugger_ContinueToLocationParameterType.t_to_js
                                                  x1866)|])
                                    | None -> ());
                                   (match x1861 with
                                    | Some x1863 ->
                                        ignore
                                          (Ojs.call x1862 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1864 : Ojs.t) ->
                                                     x1863
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1864)))|])
                                    | None -> ());
                                   x1862))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_continueToLocation ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1875 : t) ->
            fun ~method_:(x1869 : [ `Debugger_continueToLocation ]) ->
              fun ?callback:(x1870 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1876 = t_to_js x1875 in
                     Ojs.call (Ojs.get_prop_ascii x1876 "post") "apply"
                       [|x1876;((let x1871 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1871 "push"
                                      [|((match x1869 with
                                          | `Debugger_continueToLocation ->
                                              Ojs.string_to_js
                                                "DebuggerContinueToLocation"))|]);
                                 (match x1870 with
                                  | Some x1872 ->
                                      ignore
                                        (Ojs.call x1871 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1873 : Ojs.t) ->
                                                   x1872
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1873)))|])
                                  | None -> ());
                                 x1871))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pauseOnAsyncCall ] ->
              ?params:Debugger_PauseOnAsyncCallParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1885 : t) ->
            fun ~method_:(x1877 : [ `Debugger_pauseOnAsyncCall ]) ->
              fun
                ?params:(x1878 :
                          Debugger_PauseOnAsyncCallParameterType.t option)
                ->
                fun ?callback:(x1879 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1886 = t_to_js x1885 in
                       Ojs.call (Ojs.get_prop_ascii x1886 "post") "apply"
                         [|x1886;((let x1880 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1880 "push"
                                        [|((match x1877 with
                                            | `Debugger_pauseOnAsyncCall ->
                                                Ojs.string_to_js
                                                  "DebuggerPauseOnAsyncCall"))|]);
                                   (match x1878 with
                                    | Some x1884 ->
                                        ignore
                                          (Ojs.call x1880 "push"
                                             [|(Debugger_PauseOnAsyncCallParameterType.t_to_js
                                                  x1884)|])
                                    | None -> ());
                                   (match x1879 with
                                    | Some x1881 ->
                                        ignore
                                          (Ojs.call x1880 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1882 : Ojs.t) ->
                                                     x1881
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1882)))|])
                                    | None -> ());
                                   x1880))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pauseOnAsyncCall ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1893 : t) ->
            fun ~method_:(x1887 : [ `Debugger_pauseOnAsyncCall ]) ->
              fun ?callback:(x1888 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1894 = t_to_js x1893 in
                     Ojs.call (Ojs.get_prop_ascii x1894 "post") "apply"
                       [|x1894;((let x1889 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1889 "push"
                                      [|((match x1887 with
                                          | `Debugger_pauseOnAsyncCall ->
                                              Ojs.string_to_js
                                                "DebuggerPauseOnAsyncCall"))|]);
                                 (match x1888 with
                                  | Some x1890 ->
                                      ignore
                                        (Ojs.call x1889 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1891 : Ojs.t) ->
                                                   x1890
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1891)))|])
                                  | None -> ());
                                 x1889))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepOver ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1901 : t) ->
            fun ~method_:(x1895 : [ `Debugger_stepOver ]) ->
              fun ?callback:(x1896 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1902 = t_to_js x1901 in
                     Ojs.call (Ojs.get_prop_ascii x1902 "post") "apply"
                       [|x1902;((let x1897 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1897 "push"
                                      [|((match x1895 with
                                          | `Debugger_stepOver ->
                                              Ojs.string_to_js
                                                "DebuggerStepOver"))|]);
                                 (match x1896 with
                                  | Some x1898 ->
                                      ignore
                                        (Ojs.call x1897 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1899 : Ojs.t) ->
                                                   x1898
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1899)))|])
                                  | None -> ());
                                 x1897))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepInto ] ->
              ?params:Debugger_StepIntoParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1911 : t) ->
            fun ~method_:(x1903 : [ `Debugger_stepInto ]) ->
              fun ?params:(x1904 : Debugger_StepIntoParameterType.t option)
                ->
                fun ?callback:(x1905 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x1912 = t_to_js x1911 in
                       Ojs.call (Ojs.get_prop_ascii x1912 "post") "apply"
                         [|x1912;((let x1906 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1906 "push"
                                        [|((match x1903 with
                                            | `Debugger_stepInto ->
                                                Ojs.string_to_js
                                                  "DebuggerStepInto"))|]);
                                   (match x1904 with
                                    | Some x1910 ->
                                        ignore
                                          (Ojs.call x1906 "push"
                                             [|(Debugger_StepIntoParameterType.t_to_js
                                                  x1910)|])
                                    | None -> ());
                                   (match x1905 with
                                    | Some x1907 ->
                                        ignore
                                          (Ojs.call x1906 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x1908 : Ojs.t) ->
                                                     x1907
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1908)))|])
                                    | None -> ());
                                   x1906))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepInto ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1919 : t) ->
            fun ~method_:(x1913 : [ `Debugger_stepInto ]) ->
              fun ?callback:(x1914 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1920 = t_to_js x1919 in
                     Ojs.call (Ojs.get_prop_ascii x1920 "post") "apply"
                       [|x1920;((let x1915 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1915 "push"
                                      [|((match x1913 with
                                          | `Debugger_stepInto ->
                                              Ojs.string_to_js
                                                "DebuggerStepInto"))|]);
                                 (match x1914 with
                                  | Some x1916 ->
                                      ignore
                                        (Ojs.call x1915 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1917 : Ojs.t) ->
                                                   x1916
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1917)))|])
                                  | None -> ());
                                 x1915))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_stepOut ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1927 : t) ->
            fun ~method_:(x1921 : [ `Debugger_stepOut ]) ->
              fun ?callback:(x1922 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1928 = t_to_js x1927 in
                     Ojs.call (Ojs.get_prop_ascii x1928 "post") "apply"
                       [|x1928;((let x1923 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1923 "push"
                                      [|((match x1921 with
                                          | `Debugger_stepOut ->
                                              Ojs.string_to_js
                                                "DebuggerStepOut"))|]);
                                 (match x1922 with
                                  | Some x1924 ->
                                      ignore
                                        (Ojs.call x1923 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1925 : Ojs.t) ->
                                                   x1924
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1925)))|])
                                  | None -> ());
                                 x1923))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_pause ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1935 : t) ->
            fun ~method_:(x1929 : [ `Debugger_pause ]) ->
              fun ?callback:(x1930 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1936 = t_to_js x1935 in
                     Ojs.call (Ojs.get_prop_ascii x1936 "post") "apply"
                       [|x1936;((let x1931 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1931 "push"
                                      [|((match x1929 with
                                          | `Debugger_pause ->
                                              Ojs.string_to_js
                                                "DebuggerPause"))|]);
                                 (match x1930 with
                                  | Some x1932 ->
                                      ignore
                                        (Ojs.call x1931 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1933 : Ojs.t) ->
                                                   x1932
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1933)))|])
                                  | None -> ());
                                 x1931))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_scheduleStepIntoAsync ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1943 : t) ->
            fun ~method_:(x1937 : [ `Debugger_scheduleStepIntoAsync ]) ->
              fun ?callback:(x1938 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1944 = t_to_js x1943 in
                     Ojs.call (Ojs.get_prop_ascii x1944 "post") "apply"
                       [|x1944;((let x1939 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1939 "push"
                                      [|((match x1937 with
                                          | `Debugger_scheduleStepIntoAsync
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerScheduleStepIntoAsync"))|]);
                                 (match x1938 with
                                  | Some x1940 ->
                                      ignore
                                        (Ojs.call x1939 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1941 : Ojs.t) ->
                                                   x1940
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1941)))|])
                                  | None -> ());
                                 x1939))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_resume ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x1951 : t) ->
            fun ~method_:(x1945 : [ `Debugger_resume ]) ->
              fun ?callback:(x1946 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x1952 = t_to_js x1951 in
                     Ojs.call (Ojs.get_prop_ascii x1952 "post") "apply"
                       [|x1952;((let x1947 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1947 "push"
                                      [|((match x1945 with
                                          | `Debugger_resume ->
                                              Ojs.string_to_js
                                                "DebuggerResume"))|]);
                                 (match x1946 with
                                  | Some x1948 ->
                                      ignore
                                        (Ojs.call x1947 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1949 : Ojs.t) ->
                                                   x1948
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x1949)))|])
                                  | None -> ());
                                 x1947))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getStackTrace ] ->
              ?params:Debugger_GetStackTraceParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_GetStackTraceReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1962 : t) ->
            fun ~method_:(x1953 : [ `Debugger_getStackTrace ]) ->
              fun
                ?params:(x1954 :
                          Debugger_GetStackTraceParameterType.t option)
                ->
                fun
                  ?callback:(x1955 :
                              (err:Error.t or_null ->
                                 params:Debugger_GetStackTraceReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1963 = t_to_js x1962 in
                       Ojs.call (Ojs.get_prop_ascii x1963 "post") "apply"
                         [|x1963;((let x1956 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1956 "push"
                                        [|((match x1953 with
                                            | `Debugger_getStackTrace ->
                                                Ojs.string_to_js
                                                  "DebuggerGetStackTrace"))|]);
                                   (match x1954 with
                                    | Some x1961 ->
                                        ignore
                                          (Ojs.call x1956 "push"
                                             [|(Debugger_GetStackTraceParameterType.t_to_js
                                                  x1961)|])
                                    | None -> ());
                                   (match x1955 with
                                    | Some x1957 ->
                                        ignore
                                          (Ojs.call x1956 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1958 : Ojs.t) ->
                                                     fun (x1960 : Ojs.t) ->
                                                       x1957
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1958)
                                                         ~params:(Debugger_GetStackTraceReturnType.t_of_js
                                                                    x1960)))|])
                                    | None -> ());
                                   x1956))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_getStackTrace ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_GetStackTraceReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x1971 : t) ->
            fun ~method_:(x1964 : [ `Debugger_getStackTrace ]) ->
              fun
                ?callback:(x1965 :
                            (err:Error.t or_null ->
                               params:Debugger_GetStackTraceReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1972 = t_to_js x1971 in
                     Ojs.call (Ojs.get_prop_ascii x1972 "post") "apply"
                       [|x1972;((let x1966 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1966 "push"
                                      [|((match x1964 with
                                          | `Debugger_getStackTrace ->
                                              Ojs.string_to_js
                                                "DebuggerGetStackTrace"))|]);
                                 (match x1965 with
                                  | Some x1967 ->
                                      ignore
                                        (Ojs.call x1966 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1968 : Ojs.t) ->
                                                   fun (x1970 : Ojs.t) ->
                                                     x1967
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1968)
                                                       ~params:(Debugger_GetStackTraceReturnType.t_of_js
                                                                  x1970)))|])
                                  | None -> ());
                                 x1966))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_searchInContent ] ->
              ?params:Debugger_SearchInContentParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_SearchInContentReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x1982 : t) ->
            fun ~method_:(x1973 : [ `Debugger_searchInContent ]) ->
              fun
                ?params:(x1974 :
                          Debugger_SearchInContentParameterType.t option)
                ->
                fun
                  ?callback:(x1975 :
                              (err:Error.t or_null ->
                                 params:Debugger_SearchInContentReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x1983 = t_to_js x1982 in
                       Ojs.call (Ojs.get_prop_ascii x1983 "post") "apply"
                         [|x1983;((let x1976 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1976 "push"
                                        [|((match x1973 with
                                            | `Debugger_searchInContent ->
                                                Ojs.string_to_js
                                                  "DebuggerSearchInContent"))|]);
                                   (match x1974 with
                                    | Some x1981 ->
                                        ignore
                                          (Ojs.call x1976 "push"
                                             [|(Debugger_SearchInContentParameterType.t_to_js
                                                  x1981)|])
                                    | None -> ());
                                   (match x1975 with
                                    | Some x1977 ->
                                        ignore
                                          (Ojs.call x1976 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1978 : Ojs.t) ->
                                                     fun (x1980 : Ojs.t) ->
                                                       x1977
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1978)
                                                         ~params:(Debugger_SearchInContentReturnType.t_of_js
                                                                    x1980)))|])
                                    | None -> ());
                                   x1976))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_searchInContent ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_SearchInContentReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x1991 : t) ->
            fun ~method_:(x1984 : [ `Debugger_searchInContent ]) ->
              fun
                ?callback:(x1985 :
                            (err:Error.t or_null ->
                               params:Debugger_SearchInContentReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x1992 = t_to_js x1991 in
                     Ojs.call (Ojs.get_prop_ascii x1992 "post") "apply"
                       [|x1992;((let x1986 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1986 "push"
                                      [|((match x1984 with
                                          | `Debugger_searchInContent ->
                                              Ojs.string_to_js
                                                "DebuggerSearchInContent"))|]);
                                 (match x1985 with
                                  | Some x1987 ->
                                      ignore
                                        (Ojs.call x1986 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x1988 : Ojs.t) ->
                                                   fun (x1990 : Ojs.t) ->
                                                     x1987
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x1988)
                                                       ~params:(Debugger_SearchInContentReturnType.t_of_js
                                                                  x1990)))|])
                                  | None -> ());
                                 x1986))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''' :
          t ->
            method_:[ `Debugger_setScriptSource ] ->
              ?params:Debugger_SetScriptSourceParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_SetScriptSourceReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x2002 : t) ->
            fun ~method_:(x1993 : [ `Debugger_setScriptSource ]) ->
              fun
                ?params:(x1994 :
                          Debugger_SetScriptSourceParameterType.t option)
                ->
                fun
                  ?callback:(x1995 :
                              (err:Error.t or_null ->
                                 params:Debugger_SetScriptSourceReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2003 = t_to_js x2002 in
                       Ojs.call (Ojs.get_prop_ascii x2003 "post") "apply"
                         [|x2003;((let x1996 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1996 "push"
                                        [|((match x1993 with
                                            | `Debugger_setScriptSource ->
                                                Ojs.string_to_js
                                                  "DebuggerSetScriptSource"))|]);
                                   (match x1994 with
                                    | Some x2001 ->
                                        ignore
                                          (Ojs.call x1996 "push"
                                             [|(Debugger_SetScriptSourceParameterType.t_to_js
                                                  x2001)|])
                                    | None -> ());
                                   (match x1995 with
                                    | Some x1997 ->
                                        ignore
                                          (Ojs.call x1996 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x1998 : Ojs.t) ->
                                                     fun (x2000 : Ojs.t) ->
                                                       x1997
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x1998)
                                                         ~params:(Debugger_SetScriptSourceReturnType.t_of_js
                                                                    x2000)))|])
                                    | None -> ());
                                   x1996))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setScriptSource ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_SetScriptSourceReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2011 : t) ->
            fun ~method_:(x2004 : [ `Debugger_setScriptSource ]) ->
              fun
                ?callback:(x2005 :
                            (err:Error.t or_null ->
                               params:Debugger_SetScriptSourceReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2012 = t_to_js x2011 in
                     Ojs.call (Ojs.get_prop_ascii x2012 "post") "apply"
                       [|x2012;((let x2006 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2006 "push"
                                      [|((match x2004 with
                                          | `Debugger_setScriptSource ->
                                              Ojs.string_to_js
                                                "DebuggerSetScriptSource"))|]);
                                 (match x2005 with
                                  | Some x2007 ->
                                      ignore
                                        (Ojs.call x2006 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2008 : Ojs.t) ->
                                                   fun (x2010 : Ojs.t) ->
                                                     x2007
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2008)
                                                       ~params:(Debugger_SetScriptSourceReturnType.t_of_js
                                                                  x2010)))|])
                                  | None -> ());
                                 x2006))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_restartFrame ] ->
              ?params:Debugger_RestartFrameParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_RestartFrameReturnType.t -> unit)
                  -> unit -> unit)
          =
          fun (x2022 : t) ->
            fun ~method_:(x2013 : [ `Debugger_restartFrame ]) ->
              fun
                ?params:(x2014 : Debugger_RestartFrameParameterType.t option)
                ->
                fun
                  ?callback:(x2015 :
                              (err:Error.t or_null ->
                                 params:Debugger_RestartFrameReturnType.t ->
                                   unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2023 = t_to_js x2022 in
                       Ojs.call (Ojs.get_prop_ascii x2023 "post") "apply"
                         [|x2023;((let x2016 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2016 "push"
                                        [|((match x2013 with
                                            | `Debugger_restartFrame ->
                                                Ojs.string_to_js
                                                  "DebuggerRestartFrame"))|]);
                                   (match x2014 with
                                    | Some x2021 ->
                                        ignore
                                          (Ojs.call x2016 "push"
                                             [|(Debugger_RestartFrameParameterType.t_to_js
                                                  x2021)|])
                                    | None -> ());
                                   (match x2015 with
                                    | Some x2017 ->
                                        ignore
                                          (Ojs.call x2016 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2018 : Ojs.t) ->
                                                     fun (x2020 : Ojs.t) ->
                                                       x2017
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2018)
                                                         ~params:(Debugger_RestartFrameReturnType.t_of_js
                                                                    x2020)))|])
                                    | None -> ());
                                   x2016))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_restartFrame ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_RestartFrameReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x2031 : t) ->
            fun ~method_:(x2024 : [ `Debugger_restartFrame ]) ->
              fun
                ?callback:(x2025 :
                            (err:Error.t or_null ->
                               params:Debugger_RestartFrameReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2032 = t_to_js x2031 in
                     Ojs.call (Ojs.get_prop_ascii x2032 "post") "apply"
                       [|x2032;((let x2026 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2026 "push"
                                      [|((match x2024 with
                                          | `Debugger_restartFrame ->
                                              Ojs.string_to_js
                                                "DebuggerRestartFrame"))|]);
                                 (match x2025 with
                                  | Some x2027 ->
                                      ignore
                                        (Ojs.call x2026 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2028 : Ojs.t) ->
                                                   fun (x2030 : Ojs.t) ->
                                                     x2027
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2028)
                                                       ~params:(Debugger_RestartFrameReturnType.t_of_js
                                                                  x2030)))|])
                                  | None -> ());
                                 x2026))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_getScriptSource ] ->
              ?params:Debugger_GetScriptSourceParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_GetScriptSourceReturnType.t ->
                               unit)
                  -> unit -> unit)
          =
          fun (x2042 : t) ->
            fun ~method_:(x2033 : [ `Debugger_getScriptSource ]) ->
              fun
                ?params:(x2034 :
                          Debugger_GetScriptSourceParameterType.t option)
                ->
                fun
                  ?callback:(x2035 :
                              (err:Error.t or_null ->
                                 params:Debugger_GetScriptSourceReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2043 = t_to_js x2042 in
                       Ojs.call (Ojs.get_prop_ascii x2043 "post") "apply"
                         [|x2043;((let x2036 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2036 "push"
                                        [|((match x2033 with
                                            | `Debugger_getScriptSource ->
                                                Ojs.string_to_js
                                                  "DebuggerGetScriptSource"))|]);
                                   (match x2034 with
                                    | Some x2041 ->
                                        ignore
                                          (Ojs.call x2036 "push"
                                             [|(Debugger_GetScriptSourceParameterType.t_to_js
                                                  x2041)|])
                                    | None -> ());
                                   (match x2035 with
                                    | Some x2037 ->
                                        ignore
                                          (Ojs.call x2036 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2038 : Ojs.t) ->
                                                     fun (x2040 : Ojs.t) ->
                                                       x2037
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2038)
                                                         ~params:(Debugger_GetScriptSourceReturnType.t_of_js
                                                                    x2040)))|])
                                    | None -> ());
                                   x2036))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_getScriptSource ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_GetScriptSourceReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2051 : t) ->
            fun ~method_:(x2044 : [ `Debugger_getScriptSource ]) ->
              fun
                ?callback:(x2045 :
                            (err:Error.t or_null ->
                               params:Debugger_GetScriptSourceReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2052 = t_to_js x2051 in
                     Ojs.call (Ojs.get_prop_ascii x2052 "post") "apply"
                       [|x2052;((let x2046 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2046 "push"
                                      [|((match x2044 with
                                          | `Debugger_getScriptSource ->
                                              Ojs.string_to_js
                                                "DebuggerGetScriptSource"))|]);
                                 (match x2045 with
                                  | Some x2047 ->
                                      ignore
                                        (Ojs.call x2046 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2048 : Ojs.t) ->
                                                   fun (x2050 : Ojs.t) ->
                                                     x2047
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2048)
                                                       ~params:(Debugger_GetScriptSourceReturnType.t_of_js
                                                                  x2050)))|])
                                  | None -> ());
                                 x2046))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setPauseOnExceptions ] ->
              ?params:Debugger_SetPauseOnExceptionsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2061 : t) ->
            fun ~method_:(x2053 : [ `Debugger_setPauseOnExceptions ]) ->
              fun
                ?params:(x2054 :
                          Debugger_SetPauseOnExceptionsParameterType.t option)
                ->
                fun ?callback:(x2055 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2062 = t_to_js x2061 in
                       Ojs.call (Ojs.get_prop_ascii x2062 "post") "apply"
                         [|x2062;((let x2056 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2056 "push"
                                        [|((match x2053 with
                                            | `Debugger_setPauseOnExceptions
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetPauseOnExceptions"))|]);
                                   (match x2054 with
                                    | Some x2060 ->
                                        ignore
                                          (Ojs.call x2056 "push"
                                             [|(Debugger_SetPauseOnExceptionsParameterType.t_to_js
                                                  x2060)|])
                                    | None -> ());
                                   (match x2055 with
                                    | Some x2057 ->
                                        ignore
                                          (Ojs.call x2056 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2058 : Ojs.t) ->
                                                     x2057
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2058)))|])
                                    | None -> ());
                                   x2056))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setPauseOnExceptions ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2069 : t) ->
            fun ~method_:(x2063 : [ `Debugger_setPauseOnExceptions ]) ->
              fun ?callback:(x2064 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2070 = t_to_js x2069 in
                     Ojs.call (Ojs.get_prop_ascii x2070 "post") "apply"
                       [|x2070;((let x2065 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2065 "push"
                                      [|((match x2063 with
                                          | `Debugger_setPauseOnExceptions ->
                                              Ojs.string_to_js
                                                "DebuggerSetPauseOnExceptions"))|]);
                                 (match x2064 with
                                  | Some x2066 ->
                                      ignore
                                        (Ojs.call x2065 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2067 : Ojs.t) ->
                                                   x2066
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2067)))|])
                                  | None -> ());
                                 x2065))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_evaluateOnCallFrame ] ->
              ?params:Debugger_EvaluateOnCallFrameParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:Debugger_EvaluateOnCallFrameReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2080 : t) ->
            fun ~method_:(x2071 : [ `Debugger_evaluateOnCallFrame ]) ->
              fun
                ?params:(x2072 :
                          Debugger_EvaluateOnCallFrameParameterType.t option)
                ->
                fun
                  ?callback:(x2073 :
                              (err:Error.t or_null ->
                                 params:Debugger_EvaluateOnCallFrameReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2081 = t_to_js x2080 in
                       Ojs.call (Ojs.get_prop_ascii x2081 "post") "apply"
                         [|x2081;((let x2074 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2074 "push"
                                        [|((match x2071 with
                                            | `Debugger_evaluateOnCallFrame
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerEvaluateOnCallFrame"))|]);
                                   (match x2072 with
                                    | Some x2079 ->
                                        ignore
                                          (Ojs.call x2074 "push"
                                             [|(Debugger_EvaluateOnCallFrameParameterType.t_to_js
                                                  x2079)|])
                                    | None -> ());
                                   (match x2073 with
                                    | Some x2075 ->
                                        ignore
                                          (Ojs.call x2074 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2076 : Ojs.t) ->
                                                     fun (x2078 : Ojs.t) ->
                                                       x2075
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2076)
                                                         ~params:(Debugger_EvaluateOnCallFrameReturnType.t_of_js
                                                                    x2078)))|])
                                    | None -> ());
                                   x2074))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_evaluateOnCallFrame ] ->
              ?callback:(err:Error.t or_null ->
                           params:Debugger_EvaluateOnCallFrameReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2089 : t) ->
            fun ~method_:(x2082 : [ `Debugger_evaluateOnCallFrame ]) ->
              fun
                ?callback:(x2083 :
                            (err:Error.t or_null ->
                               params:Debugger_EvaluateOnCallFrameReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2090 = t_to_js x2089 in
                     Ojs.call (Ojs.get_prop_ascii x2090 "post") "apply"
                       [|x2090;((let x2084 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2084 "push"
                                      [|((match x2082 with
                                          | `Debugger_evaluateOnCallFrame ->
                                              Ojs.string_to_js
                                                "DebuggerEvaluateOnCallFrame"))|]);
                                 (match x2083 with
                                  | Some x2085 ->
                                      ignore
                                        (Ojs.call x2084 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2086 : Ojs.t) ->
                                                   fun (x2088 : Ojs.t) ->
                                                     x2085
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2086)
                                                       ~params:(Debugger_EvaluateOnCallFrameReturnType.t_of_js
                                                                  x2088)))|])
                                  | None -> ());
                                 x2084))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setVariableValue ] ->
              ?params:Debugger_SetVariableValueParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2099 : t) ->
            fun ~method_:(x2091 : [ `Debugger_setVariableValue ]) ->
              fun
                ?params:(x2092 :
                          Debugger_SetVariableValueParameterType.t option)
                ->
                fun ?callback:(x2093 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2100 = t_to_js x2099 in
                       Ojs.call (Ojs.get_prop_ascii x2100 "post") "apply"
                         [|x2100;((let x2094 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2094 "push"
                                        [|((match x2091 with
                                            | `Debugger_setVariableValue ->
                                                Ojs.string_to_js
                                                  "DebuggerSetVariableValue"))|]);
                                   (match x2092 with
                                    | Some x2098 ->
                                        ignore
                                          (Ojs.call x2094 "push"
                                             [|(Debugger_SetVariableValueParameterType.t_to_js
                                                  x2098)|])
                                    | None -> ());
                                   (match x2093 with
                                    | Some x2095 ->
                                        ignore
                                          (Ojs.call x2094 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2096 : Ojs.t) ->
                                                     x2095
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2096)))|])
                                    | None -> ());
                                   x2094))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setVariableValue ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2107 : t) ->
            fun ~method_:(x2101 : [ `Debugger_setVariableValue ]) ->
              fun ?callback:(x2102 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2108 = t_to_js x2107 in
                     Ojs.call (Ojs.get_prop_ascii x2108 "post") "apply"
                       [|x2108;((let x2103 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2103 "push"
                                      [|((match x2101 with
                                          | `Debugger_setVariableValue ->
                                              Ojs.string_to_js
                                                "DebuggerSetVariableValue"))|]);
                                 (match x2102 with
                                  | Some x2104 ->
                                      ignore
                                        (Ojs.call x2103 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2105 : Ojs.t) ->
                                                   x2104
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2105)))|])
                                  | None -> ());
                                 x2103))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setReturnValue ] ->
              ?params:Debugger_SetReturnValueParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2117 : t) ->
            fun ~method_:(x2109 : [ `Debugger_setReturnValue ]) ->
              fun
                ?params:(x2110 :
                          Debugger_SetReturnValueParameterType.t option)
                ->
                fun ?callback:(x2111 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2118 = t_to_js x2117 in
                       Ojs.call (Ojs.get_prop_ascii x2118 "post") "apply"
                         [|x2118;((let x2112 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2112 "push"
                                        [|((match x2109 with
                                            | `Debugger_setReturnValue ->
                                                Ojs.string_to_js
                                                  "DebuggerSetReturnValue"))|]);
                                   (match x2110 with
                                    | Some x2116 ->
                                        ignore
                                          (Ojs.call x2112 "push"
                                             [|(Debugger_SetReturnValueParameterType.t_to_js
                                                  x2116)|])
                                    | None -> ());
                                   (match x2111 with
                                    | Some x2113 ->
                                        ignore
                                          (Ojs.call x2112 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2114 : Ojs.t) ->
                                                     x2113
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2114)))|])
                                    | None -> ());
                                   x2112))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setReturnValue ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2125 : t) ->
            fun ~method_:(x2119 : [ `Debugger_setReturnValue ]) ->
              fun ?callback:(x2120 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2126 = t_to_js x2125 in
                     Ojs.call (Ojs.get_prop_ascii x2126 "post") "apply"
                       [|x2126;((let x2121 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2121 "push"
                                      [|((match x2119 with
                                          | `Debugger_setReturnValue ->
                                              Ojs.string_to_js
                                                "DebuggerSetReturnValue"))|]);
                                 (match x2120 with
                                  | Some x2122 ->
                                      ignore
                                        (Ojs.call x2121 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2123 : Ojs.t) ->
                                                   x2122
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2123)))|])
                                  | None -> ());
                                 x2121))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setAsyncCallStackDepth ] ->
              ?params:Debugger_SetAsyncCallStackDepthParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2135 : t) ->
            fun ~method_:(x2127 : [ `Debugger_setAsyncCallStackDepth ]) ->
              fun
                ?params:(x2128 :
                          Debugger_SetAsyncCallStackDepthParameterType.t
                            option)
                ->
                fun ?callback:(x2129 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2136 = t_to_js x2135 in
                       Ojs.call (Ojs.get_prop_ascii x2136 "post") "apply"
                         [|x2136;((let x2130 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2130 "push"
                                        [|((match x2127 with
                                            | `Debugger_setAsyncCallStackDepth
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetAsyncCallStackDepth"))|]);
                                   (match x2128 with
                                    | Some x2134 ->
                                        ignore
                                          (Ojs.call x2130 "push"
                                             [|(Debugger_SetAsyncCallStackDepthParameterType.t_to_js
                                                  x2134)|])
                                    | None -> ());
                                   (match x2129 with
                                    | Some x2131 ->
                                        ignore
                                          (Ojs.call x2130 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2132 : Ojs.t) ->
                                                     x2131
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2132)))|])
                                    | None -> ());
                                   x2130))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setAsyncCallStackDepth ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2143 : t) ->
            fun ~method_:(x2137 : [ `Debugger_setAsyncCallStackDepth ]) ->
              fun ?callback:(x2138 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2144 = t_to_js x2143 in
                     Ojs.call (Ojs.get_prop_ascii x2144 "post") "apply"
                       [|x2144;((let x2139 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2139 "push"
                                      [|((match x2137 with
                                          | `Debugger_setAsyncCallStackDepth
                                              ->
                                              Ojs.string_to_js
                                                "DebuggerSetAsyncCallStackDepth"))|]);
                                 (match x2138 with
                                  | Some x2140 ->
                                      ignore
                                        (Ojs.call x2139 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2141 : Ojs.t) ->
                                                   x2140
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2141)))|])
                                  | None -> ());
                                 x2139))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxPatterns ] ->
              ?params:Debugger_SetBlackboxPatternsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2153 : t) ->
            fun ~method_:(x2145 : [ `Debugger_setBlackboxPatterns ]) ->
              fun
                ?params:(x2146 :
                          Debugger_SetBlackboxPatternsParameterType.t option)
                ->
                fun ?callback:(x2147 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2154 = t_to_js x2153 in
                       Ojs.call (Ojs.get_prop_ascii x2154 "post") "apply"
                         [|x2154;((let x2148 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2148 "push"
                                        [|((match x2145 with
                                            | `Debugger_setBlackboxPatterns
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBlackboxPatterns"))|]);
                                   (match x2146 with
                                    | Some x2152 ->
                                        ignore
                                          (Ojs.call x2148 "push"
                                             [|(Debugger_SetBlackboxPatternsParameterType.t_to_js
                                                  x2152)|])
                                    | None -> ());
                                   (match x2147 with
                                    | Some x2149 ->
                                        ignore
                                          (Ojs.call x2148 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2150 : Ojs.t) ->
                                                     x2149
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2150)))|])
                                    | None -> ());
                                   x2148))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxPatterns ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2161 : t) ->
            fun ~method_:(x2155 : [ `Debugger_setBlackboxPatterns ]) ->
              fun ?callback:(x2156 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2162 = t_to_js x2161 in
                     Ojs.call (Ojs.get_prop_ascii x2162 "post") "apply"
                       [|x2162;((let x2157 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2157 "push"
                                      [|((match x2155 with
                                          | `Debugger_setBlackboxPatterns ->
                                              Ojs.string_to_js
                                                "DebuggerSetBlackboxPatterns"))|]);
                                 (match x2156 with
                                  | Some x2158 ->
                                      ignore
                                        (Ojs.call x2157 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2159 : Ojs.t) ->
                                                   x2158
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2159)))|])
                                  | None -> ());
                                 x2157))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxedRanges ] ->
              ?params:Debugger_SetBlackboxedRangesParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2171 : t) ->
            fun ~method_:(x2163 : [ `Debugger_setBlackboxedRanges ]) ->
              fun
                ?params:(x2164 :
                          Debugger_SetBlackboxedRangesParameterType.t option)
                ->
                fun ?callback:(x2165 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2172 = t_to_js x2171 in
                       Ojs.call (Ojs.get_prop_ascii x2172 "post") "apply"
                         [|x2172;((let x2166 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2166 "push"
                                        [|((match x2163 with
                                            | `Debugger_setBlackboxedRanges
                                                ->
                                                Ojs.string_to_js
                                                  "DebuggerSetBlackboxedRanges"))|]);
                                   (match x2164 with
                                    | Some x2170 ->
                                        ignore
                                          (Ojs.call x2166 "push"
                                             [|(Debugger_SetBlackboxedRangesParameterType.t_to_js
                                                  x2170)|])
                                    | None -> ());
                                   (match x2165 with
                                    | Some x2167 ->
                                        ignore
                                          (Ojs.call x2166 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2168 : Ojs.t) ->
                                                     x2167
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2168)))|])
                                    | None -> ());
                                   x2166))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Debugger_setBlackboxedRanges ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2179 : t) ->
            fun ~method_:(x2173 : [ `Debugger_setBlackboxedRanges ]) ->
              fun ?callback:(x2174 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2180 = t_to_js x2179 in
                     Ojs.call (Ojs.get_prop_ascii x2180 "post") "apply"
                       [|x2180;((let x2175 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2175 "push"
                                      [|((match x2173 with
                                          | `Debugger_setBlackboxedRanges ->
                                              Ojs.string_to_js
                                                "DebuggerSetBlackboxedRanges"))|]);
                                 (match x2174 with
                                  | Some x2176 ->
                                      ignore
                                        (Ojs.call x2175 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2177 : Ojs.t) ->
                                                   x2176
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2177)))|])
                                  | None -> ());
                                 x2175))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2187 : t) ->
            fun ~method_:(x2181 : [ `Console_enable ]) ->
              fun ?callback:(x2182 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2188 = t_to_js x2187 in
                     Ojs.call (Ojs.get_prop_ascii x2188 "post") "apply"
                       [|x2188;((let x2183 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2183 "push"
                                      [|((match x2181 with
                                          | `Console_enable ->
                                              Ojs.string_to_js
                                                "ConsoleEnable"))|]);
                                 (match x2182 with
                                  | Some x2184 ->
                                      ignore
                                        (Ojs.call x2183 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2185 : Ojs.t) ->
                                                   x2184
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2185)))|])
                                  | None -> ());
                                 x2183))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2195 : t) ->
            fun ~method_:(x2189 : [ `Console_disable ]) ->
              fun ?callback:(x2190 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2196 = t_to_js x2195 in
                     Ojs.call (Ojs.get_prop_ascii x2196 "post") "apply"
                       [|x2196;((let x2191 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2191 "push"
                                      [|((match x2189 with
                                          | `Console_disable ->
                                              Ojs.string_to_js
                                                "ConsoleDisable"))|]);
                                 (match x2190 with
                                  | Some x2192 ->
                                      ignore
                                        (Ojs.call x2191 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2193 : Ojs.t) ->
                                                   x2192
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2193)))|])
                                  | None -> ());
                                 x2191))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Console_clearMessages ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2203 : t) ->
            fun ~method_:(x2197 : [ `Console_clearMessages ]) ->
              fun ?callback:(x2198 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2204 = t_to_js x2203 in
                     Ojs.call (Ojs.get_prop_ascii x2204 "post") "apply"
                       [|x2204;((let x2199 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2199 "push"
                                      [|((match x2197 with
                                          | `Console_clearMessages ->
                                              Ojs.string_to_js
                                                "ConsoleClearMessages"))|]);
                                 (match x2198 with
                                  | Some x2200 ->
                                      ignore
                                        (Ojs.call x2199 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2201 : Ojs.t) ->
                                                   x2200
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2201)))|])
                                  | None -> ());
                                 x2199))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2211 : t) ->
            fun ~method_:(x2205 : [ `Profiler_enable ]) ->
              fun ?callback:(x2206 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2212 = t_to_js x2211 in
                     Ojs.call (Ojs.get_prop_ascii x2212 "post") "apply"
                       [|x2212;((let x2207 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2207 "push"
                                      [|((match x2205 with
                                          | `Profiler_enable ->
                                              Ojs.string_to_js
                                                "ProfilerEnable"))|]);
                                 (match x2206 with
                                  | Some x2208 ->
                                      ignore
                                        (Ojs.call x2207 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2209 : Ojs.t) ->
                                                   x2208
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2209)))|])
                                  | None -> ());
                                 x2207))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2219 : t) ->
            fun ~method_:(x2213 : [ `Profiler_disable ]) ->
              fun ?callback:(x2214 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2220 = t_to_js x2219 in
                     Ojs.call (Ojs.get_prop_ascii x2220 "post") "apply"
                       [|x2220;((let x2215 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2215 "push"
                                      [|((match x2213 with
                                          | `Profiler_disable ->
                                              Ojs.string_to_js
                                                "ProfilerDisable"))|]);
                                 (match x2214 with
                                  | Some x2216 ->
                                      ignore
                                        (Ojs.call x2215 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2217 : Ojs.t) ->
                                                   x2216
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2217)))|])
                                  | None -> ());
                                 x2215))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_setSamplingInterval ] ->
              ?params:Profiler_SetSamplingIntervalParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2229 : t) ->
            fun ~method_:(x2221 : [ `Profiler_setSamplingInterval ]) ->
              fun
                ?params:(x2222 :
                          Profiler_SetSamplingIntervalParameterType.t option)
                ->
                fun ?callback:(x2223 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2230 = t_to_js x2229 in
                       Ojs.call (Ojs.get_prop_ascii x2230 "post") "apply"
                         [|x2230;((let x2224 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2224 "push"
                                        [|((match x2221 with
                                            | `Profiler_setSamplingInterval
                                                ->
                                                Ojs.string_to_js
                                                  "ProfilerSetSamplingInterval"))|]);
                                   (match x2222 with
                                    | Some x2228 ->
                                        ignore
                                          (Ojs.call x2224 "push"
                                             [|(Profiler_SetSamplingIntervalParameterType.t_to_js
                                                  x2228)|])
                                    | None -> ());
                                   (match x2223 with
                                    | Some x2225 ->
                                        ignore
                                          (Ojs.call x2224 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2226 : Ojs.t) ->
                                                     x2225
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2226)))|])
                                    | None -> ());
                                   x2224))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_setSamplingInterval ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2237 : t) ->
            fun ~method_:(x2231 : [ `Profiler_setSamplingInterval ]) ->
              fun ?callback:(x2232 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2238 = t_to_js x2237 in
                     Ojs.call (Ojs.get_prop_ascii x2238 "post") "apply"
                       [|x2238;((let x2233 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2233 "push"
                                      [|((match x2231 with
                                          | `Profiler_setSamplingInterval ->
                                              Ojs.string_to_js
                                                "ProfilerSetSamplingInterval"))|]);
                                 (match x2232 with
                                  | Some x2234 ->
                                      ignore
                                        (Ojs.call x2233 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2235 : Ojs.t) ->
                                                   x2234
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2235)))|])
                                  | None -> ());
                                 x2233))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_start ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2245 : t) ->
            fun ~method_:(x2239 : [ `Profiler_start ]) ->
              fun ?callback:(x2240 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2246 = t_to_js x2245 in
                     Ojs.call (Ojs.get_prop_ascii x2246 "post") "apply"
                       [|x2246;((let x2241 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2241 "push"
                                      [|((match x2239 with
                                          | `Profiler_start ->
                                              Ojs.string_to_js
                                                "ProfilerStart"))|]);
                                 (match x2240 with
                                  | Some x2242 ->
                                      ignore
                                        (Ojs.call x2241 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2243 : Ojs.t) ->
                                                   x2242
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2243)))|])
                                  | None -> ());
                                 x2241))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stop ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler_StopReturnType.t -> unit)
                -> unit -> unit)
          =
          fun (x2254 : t) ->
            fun ~method_:(x2247 : [ `Profiler_stop ]) ->
              fun
                ?callback:(x2248 :
                            (err:Error.t or_null ->
                               params:Profiler_StopReturnType.t -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2255 = t_to_js x2254 in
                     Ojs.call (Ojs.get_prop_ascii x2255 "post") "apply"
                       [|x2255;((let x2249 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2249 "push"
                                      [|((match x2247 with
                                          | `Profiler_stop ->
                                              Ojs.string_to_js "ProfilerStop"))|]);
                                 (match x2248 with
                                  | Some x2250 ->
                                      ignore
                                        (Ojs.call x2249 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2251 : Ojs.t) ->
                                                   fun (x2253 : Ojs.t) ->
                                                     x2250
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2251)
                                                       ~params:(Profiler_StopReturnType.t_of_js
                                                                  x2253)))|])
                                  | None -> ());
                                 x2249))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startPreciseCoverage ] ->
              ?params:Profiler_StartPreciseCoverageParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2264 : t) ->
            fun ~method_:(x2256 : [ `Profiler_startPreciseCoverage ]) ->
              fun
                ?params:(x2257 :
                          Profiler_StartPreciseCoverageParameterType.t option)
                ->
                fun ?callback:(x2258 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2265 = t_to_js x2264 in
                       Ojs.call (Ojs.get_prop_ascii x2265 "post") "apply"
                         [|x2265;((let x2259 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2259 "push"
                                        [|((match x2256 with
                                            | `Profiler_startPreciseCoverage
                                                ->
                                                Ojs.string_to_js
                                                  "ProfilerStartPreciseCoverage"))|]);
                                   (match x2257 with
                                    | Some x2263 ->
                                        ignore
                                          (Ojs.call x2259 "push"
                                             [|(Profiler_StartPreciseCoverageParameterType.t_to_js
                                                  x2263)|])
                                    | None -> ());
                                   (match x2258 with
                                    | Some x2260 ->
                                        ignore
                                          (Ojs.call x2259 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2261 : Ojs.t) ->
                                                     x2260
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2261)))|])
                                    | None -> ());
                                   x2259))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startPreciseCoverage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2272 : t) ->
            fun ~method_:(x2266 : [ `Profiler_startPreciseCoverage ]) ->
              fun ?callback:(x2267 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2273 = t_to_js x2272 in
                     Ojs.call (Ojs.get_prop_ascii x2273 "post") "apply"
                       [|x2273;((let x2268 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2268 "push"
                                      [|((match x2266 with
                                          | `Profiler_startPreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerStartPreciseCoverage"))|]);
                                 (match x2267 with
                                  | Some x2269 ->
                                      ignore
                                        (Ojs.call x2268 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2270 : Ojs.t) ->
                                                   x2269
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2270)))|])
                                  | None -> ());
                                 x2268))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stopPreciseCoverage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2280 : t) ->
            fun ~method_:(x2274 : [ `Profiler_stopPreciseCoverage ]) ->
              fun ?callback:(x2275 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2281 = t_to_js x2280 in
                     Ojs.call (Ojs.get_prop_ascii x2281 "post") "apply"
                       [|x2281;((let x2276 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2276 "push"
                                      [|((match x2274 with
                                          | `Profiler_stopPreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerStopPreciseCoverage"))|]);
                                 (match x2275 with
                                  | Some x2277 ->
                                      ignore
                                        (Ojs.call x2276 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2278 : Ojs.t) ->
                                                   x2277
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2278)))|])
                                  | None -> ());
                                 x2276))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_takePreciseCoverage ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler_TakePreciseCoverageReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2289 : t) ->
            fun ~method_:(x2282 : [ `Profiler_takePreciseCoverage ]) ->
              fun
                ?callback:(x2283 :
                            (err:Error.t or_null ->
                               params:Profiler_TakePreciseCoverageReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2290 = t_to_js x2289 in
                     Ojs.call (Ojs.get_prop_ascii x2290 "post") "apply"
                       [|x2290;((let x2284 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2284 "push"
                                      [|((match x2282 with
                                          | `Profiler_takePreciseCoverage ->
                                              Ojs.string_to_js
                                                "ProfilerTakePreciseCoverage"))|]);
                                 (match x2283 with
                                  | Some x2285 ->
                                      ignore
                                        (Ojs.call x2284 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2286 : Ojs.t) ->
                                                   fun (x2288 : Ojs.t) ->
                                                     x2285
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2286)
                                                       ~params:(Profiler_TakePreciseCoverageReturnType.t_of_js
                                                                  x2288)))|])
                                  | None -> ());
                                 x2284))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_getBestEffortCoverage ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler_GetBestEffortCoverageReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x2298 : t) ->
            fun ~method_:(x2291 : [ `Profiler_getBestEffortCoverage ]) ->
              fun
                ?callback:(x2292 :
                            (err:Error.t or_null ->
                               params:Profiler_GetBestEffortCoverageReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2299 = t_to_js x2298 in
                     Ojs.call (Ojs.get_prop_ascii x2299 "post") "apply"
                       [|x2299;((let x2293 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2293 "push"
                                      [|((match x2291 with
                                          | `Profiler_getBestEffortCoverage
                                              ->
                                              Ojs.string_to_js
                                                "ProfilerGetBestEffortCoverage"))|]);
                                 (match x2292 with
                                  | Some x2294 ->
                                      ignore
                                        (Ojs.call x2293 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2295 : Ojs.t) ->
                                                   fun (x2297 : Ojs.t) ->
                                                     x2294
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2295)
                                                       ~params:(Profiler_GetBestEffortCoverageReturnType.t_of_js
                                                                  x2297)))|])
                                  | None -> ());
                                 x2293))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_startTypeProfile ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2306 : t) ->
            fun ~method_:(x2300 : [ `Profiler_startTypeProfile ]) ->
              fun ?callback:(x2301 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2307 = t_to_js x2306 in
                     Ojs.call (Ojs.get_prop_ascii x2307 "post") "apply"
                       [|x2307;((let x2302 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2302 "push"
                                      [|((match x2300 with
                                          | `Profiler_startTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerStartTypeProfile"))|]);
                                 (match x2301 with
                                  | Some x2303 ->
                                      ignore
                                        (Ojs.call x2302 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2304 : Ojs.t) ->
                                                   x2303
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2304)))|])
                                  | None -> ());
                                 x2302))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_stopTypeProfile ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2314 : t) ->
            fun ~method_:(x2308 : [ `Profiler_stopTypeProfile ]) ->
              fun ?callback:(x2309 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2315 = t_to_js x2314 in
                     Ojs.call (Ojs.get_prop_ascii x2315 "post") "apply"
                       [|x2315;((let x2310 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2310 "push"
                                      [|((match x2308 with
                                          | `Profiler_stopTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerStopTypeProfile"))|]);
                                 (match x2309 with
                                  | Some x2311 ->
                                      ignore
                                        (Ojs.call x2310 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2312 : Ojs.t) ->
                                                   x2311
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2312)))|])
                                  | None -> ());
                                 x2310))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `Profiler_takeTypeProfile ] ->
              ?callback:(err:Error.t or_null ->
                           params:Profiler_TakeTypeProfileReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2323 : t) ->
            fun ~method_:(x2316 : [ `Profiler_takeTypeProfile ]) ->
              fun
                ?callback:(x2317 :
                            (err:Error.t or_null ->
                               params:Profiler_TakeTypeProfileReturnType.t ->
                                 unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2324 = t_to_js x2323 in
                     Ojs.call (Ojs.get_prop_ascii x2324 "post") "apply"
                       [|x2324;((let x2318 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2318 "push"
                                      [|((match x2316 with
                                          | `Profiler_takeTypeProfile ->
                                              Ojs.string_to_js
                                                "ProfilerTakeTypeProfile"))|]);
                                 (match x2317 with
                                  | Some x2319 ->
                                      ignore
                                        (Ojs.call x2318 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2320 : Ojs.t) ->
                                                   fun (x2322 : Ojs.t) ->
                                                     x2319
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2320)
                                                       ~params:(Profiler_TakeTypeProfileReturnType.t_of_js
                                                                  x2322)))|])
                                  | None -> ());
                                 x2318))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2331 : t) ->
            fun ~method_:(x2325 : [ `HeapProfiler_enable ]) ->
              fun ?callback:(x2326 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2332 = t_to_js x2331 in
                     Ojs.call (Ojs.get_prop_ascii x2332 "post") "apply"
                       [|x2332;((let x2327 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2327 "push"
                                      [|((match x2325 with
                                          | `HeapProfiler_enable ->
                                              Ojs.string_to_js
                                                "HeapProfilerEnable"))|]);
                                 (match x2326 with
                                  | Some x2328 ->
                                      ignore
                                        (Ojs.call x2327 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2329 : Ojs.t) ->
                                                   x2328
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2329)))|])
                                  | None -> ());
                                 x2327))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2339 : t) ->
            fun ~method_:(x2333 : [ `HeapProfiler_disable ]) ->
              fun ?callback:(x2334 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2340 = t_to_js x2339 in
                     Ojs.call (Ojs.get_prop_ascii x2340 "post") "apply"
                       [|x2340;((let x2335 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2335 "push"
                                      [|((match x2333 with
                                          | `HeapProfiler_disable ->
                                              Ojs.string_to_js
                                                "HeapProfilerDisable"))|]);
                                 (match x2334 with
                                  | Some x2336 ->
                                      ignore
                                        (Ojs.call x2335 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2337 : Ojs.t) ->
                                                   x2336
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2337)))|])
                                  | None -> ());
                                 x2335))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startTrackingHeapObjects ] ->
              ?params:HeapProfiler_StartTrackingHeapObjectsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2349 : t) ->
            fun ~method_:(x2341 : [ `HeapProfiler_startTrackingHeapObjects ])
              ->
              fun
                ?params:(x2342 :
                          HeapProfiler_StartTrackingHeapObjectsParameterType.t
                            option)
                ->
                fun ?callback:(x2343 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2350 = t_to_js x2349 in
                       Ojs.call (Ojs.get_prop_ascii x2350 "post") "apply"
                         [|x2350;((let x2344 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2344 "push"
                                        [|((match x2341 with
                                            | `HeapProfiler_startTrackingHeapObjects
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStartTrackingHeapObjects"))|]);
                                   (match x2342 with
                                    | Some x2348 ->
                                        ignore
                                          (Ojs.call x2344 "push"
                                             [|(HeapProfiler_StartTrackingHeapObjectsParameterType.t_to_js
                                                  x2348)|])
                                    | None -> ());
                                   (match x2343 with
                                    | Some x2345 ->
                                        ignore
                                          (Ojs.call x2344 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2346 : Ojs.t) ->
                                                     x2345
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2346)))|])
                                    | None -> ());
                                   x2344))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startTrackingHeapObjects ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2357 : t) ->
            fun ~method_:(x2351 : [ `HeapProfiler_startTrackingHeapObjects ])
              ->
              fun ?callback:(x2352 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2358 = t_to_js x2357 in
                     Ojs.call (Ojs.get_prop_ascii x2358 "post") "apply"
                       [|x2358;((let x2353 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2353 "push"
                                      [|((match x2351 with
                                          | `HeapProfiler_startTrackingHeapObjects
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerStartTrackingHeapObjects"))|]);
                                 (match x2352 with
                                  | Some x2354 ->
                                      ignore
                                        (Ojs.call x2353 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2355 : Ojs.t) ->
                                                   x2354
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2355)))|])
                                  | None -> ());
                                 x2353))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopTrackingHeapObjects ] ->
              ?params:HeapProfiler_StopTrackingHeapObjectsParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2367 : t) ->
            fun ~method_:(x2359 : [ `HeapProfiler_stopTrackingHeapObjects ])
              ->
              fun
                ?params:(x2360 :
                          HeapProfiler_StopTrackingHeapObjectsParameterType.t
                            option)
                ->
                fun ?callback:(x2361 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2368 = t_to_js x2367 in
                       Ojs.call (Ojs.get_prop_ascii x2368 "post") "apply"
                         [|x2368;((let x2362 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2362 "push"
                                        [|((match x2359 with
                                            | `HeapProfiler_stopTrackingHeapObjects
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStopTrackingHeapObjects"))|]);
                                   (match x2360 with
                                    | Some x2366 ->
                                        ignore
                                          (Ojs.call x2362 "push"
                                             [|(HeapProfiler_StopTrackingHeapObjectsParameterType.t_to_js
                                                  x2366)|])
                                    | None -> ());
                                   (match x2361 with
                                    | Some x2363 ->
                                        ignore
                                          (Ojs.call x2362 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2364 : Ojs.t) ->
                                                     x2363
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2364)))|])
                                    | None -> ());
                                   x2362))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopTrackingHeapObjects ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2375 : t) ->
            fun ~method_:(x2369 : [ `HeapProfiler_stopTrackingHeapObjects ])
              ->
              fun ?callback:(x2370 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2376 = t_to_js x2375 in
                     Ojs.call (Ojs.get_prop_ascii x2376 "post") "apply"
                       [|x2376;((let x2371 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2371 "push"
                                      [|((match x2369 with
                                          | `HeapProfiler_stopTrackingHeapObjects
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerStopTrackingHeapObjects"))|]);
                                 (match x2370 with
                                  | Some x2372 ->
                                      ignore
                                        (Ojs.call x2371 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2373 : Ojs.t) ->
                                                   x2372
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2373)))|])
                                  | None -> ());
                                 x2371))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_takeHeapSnapshot ] ->
              ?params:HeapProfiler_TakeHeapSnapshotParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2385 : t) ->
            fun ~method_:(x2377 : [ `HeapProfiler_takeHeapSnapshot ]) ->
              fun
                ?params:(x2378 :
                          HeapProfiler_TakeHeapSnapshotParameterType.t option)
                ->
                fun ?callback:(x2379 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2386 = t_to_js x2385 in
                       Ojs.call (Ojs.get_prop_ascii x2386 "post") "apply"
                         [|x2386;((let x2380 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2380 "push"
                                        [|((match x2377 with
                                            | `HeapProfiler_takeHeapSnapshot
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerTakeHeapSnapshot"))|]);
                                   (match x2378 with
                                    | Some x2384 ->
                                        ignore
                                          (Ojs.call x2380 "push"
                                             [|(HeapProfiler_TakeHeapSnapshotParameterType.t_to_js
                                                  x2384)|])
                                    | None -> ());
                                   (match x2379 with
                                    | Some x2381 ->
                                        ignore
                                          (Ojs.call x2380 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2382 : Ojs.t) ->
                                                     x2381
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2382)))|])
                                    | None -> ());
                                   x2380))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_takeHeapSnapshot ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2393 : t) ->
            fun ~method_:(x2387 : [ `HeapProfiler_takeHeapSnapshot ]) ->
              fun ?callback:(x2388 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2394 = t_to_js x2393 in
                     Ojs.call (Ojs.get_prop_ascii x2394 "post") "apply"
                       [|x2394;((let x2389 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2389 "push"
                                      [|((match x2387 with
                                          | `HeapProfiler_takeHeapSnapshot ->
                                              Ojs.string_to_js
                                                "HeapProfilerTakeHeapSnapshot"))|]);
                                 (match x2388 with
                                  | Some x2390 ->
                                      ignore
                                        (Ojs.call x2389 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2391 : Ojs.t) ->
                                                   x2390
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2391)))|])
                                  | None -> ());
                                 x2389))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_collectGarbage ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2401 : t) ->
            fun ~method_:(x2395 : [ `HeapProfiler_collectGarbage ]) ->
              fun ?callback:(x2396 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2402 = t_to_js x2401 in
                     Ojs.call (Ojs.get_prop_ascii x2402 "post") "apply"
                       [|x2402;((let x2397 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2397 "push"
                                      [|((match x2395 with
                                          | `HeapProfiler_collectGarbage ->
                                              Ojs.string_to_js
                                                "HeapProfilerCollectGarbage"))|]);
                                 (match x2396 with
                                  | Some x2398 ->
                                      ignore
                                        (Ojs.call x2397 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2399 : Ojs.t) ->
                                                   x2398
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2399)))|])
                                  | None -> ());
                                 x2397))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getObjectByHeapObjectId ] ->
              ?params:HeapProfiler_GetObjectByHeapObjectIdParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:HeapProfiler_GetObjectByHeapObjectIdReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2412 : t) ->
            fun ~method_:(x2403 : [ `HeapProfiler_getObjectByHeapObjectId ])
              ->
              fun
                ?params:(x2404 :
                          HeapProfiler_GetObjectByHeapObjectIdParameterType.t
                            option)
                ->
                fun
                  ?callback:(x2405 :
                              (err:Error.t or_null ->
                                 params:HeapProfiler_GetObjectByHeapObjectIdReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2413 = t_to_js x2412 in
                       Ojs.call (Ojs.get_prop_ascii x2413 "post") "apply"
                         [|x2413;((let x2406 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2406 "push"
                                        [|((match x2403 with
                                            | `HeapProfiler_getObjectByHeapObjectId
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerGetObjectByHeapObjectId"))|]);
                                   (match x2404 with
                                    | Some x2411 ->
                                        ignore
                                          (Ojs.call x2406 "push"
                                             [|(HeapProfiler_GetObjectByHeapObjectIdParameterType.t_to_js
                                                  x2411)|])
                                    | None -> ());
                                   (match x2405 with
                                    | Some x2407 ->
                                        ignore
                                          (Ojs.call x2406 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2408 : Ojs.t) ->
                                                     fun (x2410 : Ojs.t) ->
                                                       x2407
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2408)
                                                         ~params:(HeapProfiler_GetObjectByHeapObjectIdReturnType.t_of_js
                                                                    x2410)))|])
                                    | None -> ());
                                   x2406))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getObjectByHeapObjectId ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler_GetObjectByHeapObjectIdReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x2421 : t) ->
            fun ~method_:(x2414 : [ `HeapProfiler_getObjectByHeapObjectId ])
              ->
              fun
                ?callback:(x2415 :
                            (err:Error.t or_null ->
                               params:HeapProfiler_GetObjectByHeapObjectIdReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2422 = t_to_js x2421 in
                     Ojs.call (Ojs.get_prop_ascii x2422 "post") "apply"
                       [|x2422;((let x2416 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2416 "push"
                                      [|((match x2414 with
                                          | `HeapProfiler_getObjectByHeapObjectId
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetObjectByHeapObjectId"))|]);
                                 (match x2415 with
                                  | Some x2417 ->
                                      ignore
                                        (Ojs.call x2416 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2418 : Ojs.t) ->
                                                   fun (x2420 : Ojs.t) ->
                                                     x2417
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2418)
                                                       ~params:(HeapProfiler_GetObjectByHeapObjectIdReturnType.t_of_js
                                                                  x2420)))|])
                                  | None -> ());
                                 x2416))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_addInspectedHeapObject ] ->
              ?params:HeapProfiler_AddInspectedHeapObjectParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2431 : t) ->
            fun ~method_:(x2423 : [ `HeapProfiler_addInspectedHeapObject ])
              ->
              fun
                ?params:(x2424 :
                          HeapProfiler_AddInspectedHeapObjectParameterType.t
                            option)
                ->
                fun ?callback:(x2425 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2432 = t_to_js x2431 in
                       Ojs.call (Ojs.get_prop_ascii x2432 "post") "apply"
                         [|x2432;((let x2426 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2426 "push"
                                        [|((match x2423 with
                                            | `HeapProfiler_addInspectedHeapObject
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerAddInspectedHeapObject"))|]);
                                   (match x2424 with
                                    | Some x2430 ->
                                        ignore
                                          (Ojs.call x2426 "push"
                                             [|(HeapProfiler_AddInspectedHeapObjectParameterType.t_to_js
                                                  x2430)|])
                                    | None -> ());
                                   (match x2425 with
                                    | Some x2427 ->
                                        ignore
                                          (Ojs.call x2426 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2428 : Ojs.t) ->
                                                     x2427
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2428)))|])
                                    | None -> ());
                                   x2426))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_addInspectedHeapObject ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2439 : t) ->
            fun ~method_:(x2433 : [ `HeapProfiler_addInspectedHeapObject ])
              ->
              fun ?callback:(x2434 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2440 = t_to_js x2439 in
                     Ojs.call (Ojs.get_prop_ascii x2440 "post") "apply"
                       [|x2440;((let x2435 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2435 "push"
                                      [|((match x2433 with
                                          | `HeapProfiler_addInspectedHeapObject
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerAddInspectedHeapObject"))|]);
                                 (match x2434 with
                                  | Some x2436 ->
                                      ignore
                                        (Ojs.call x2435 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2437 : Ojs.t) ->
                                                   x2436
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2437)))|])
                                  | None -> ());
                                 x2435))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getHeapObjectId ] ->
              ?params:HeapProfiler_GetHeapObjectIdParameterType.t ->
                ?callback:(err:Error.t or_null ->
                             params:HeapProfiler_GetHeapObjectIdReturnType.t
                               -> unit)
                  -> unit -> unit)
          =
          fun (x2450 : t) ->
            fun ~method_:(x2441 : [ `HeapProfiler_getHeapObjectId ]) ->
              fun
                ?params:(x2442 :
                          HeapProfiler_GetHeapObjectIdParameterType.t option)
                ->
                fun
                  ?callback:(x2443 :
                              (err:Error.t or_null ->
                                 params:HeapProfiler_GetHeapObjectIdReturnType.t
                                   -> unit)
                                option)
                  ->
                  fun () ->
                    ignore
                      (let x2451 = t_to_js x2450 in
                       Ojs.call (Ojs.get_prop_ascii x2451 "post") "apply"
                         [|x2451;((let x2444 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2444 "push"
                                        [|((match x2441 with
                                            | `HeapProfiler_getHeapObjectId
                                                ->
                                                Ojs.string_to_js
                                                  "HeapProfilerGetHeapObjectId"))|]);
                                   (match x2442 with
                                    | Some x2449 ->
                                        ignore
                                          (Ojs.call x2444 "push"
                                             [|(HeapProfiler_GetHeapObjectIdParameterType.t_to_js
                                                  x2449)|])
                                    | None -> ());
                                   (match x2443 with
                                    | Some x2445 ->
                                        ignore
                                          (Ojs.call x2444 "push"
                                             [|(Ojs.fun_to_js 2
                                                  (fun (x2446 : Ojs.t) ->
                                                     fun (x2448 : Ojs.t) ->
                                                       x2445
                                                         ~err:(or_null_of_js
                                                                 Error.t_of_js
                                                                 x2446)
                                                         ~params:(HeapProfiler_GetHeapObjectIdReturnType.t_of_js
                                                                    x2448)))|])
                                    | None -> ());
                                   x2444))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getHeapObjectId ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler_GetHeapObjectIdReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2459 : t) ->
            fun ~method_:(x2452 : [ `HeapProfiler_getHeapObjectId ]) ->
              fun
                ?callback:(x2453 :
                            (err:Error.t or_null ->
                               params:HeapProfiler_GetHeapObjectIdReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2460 = t_to_js x2459 in
                     Ojs.call (Ojs.get_prop_ascii x2460 "post") "apply"
                       [|x2460;((let x2454 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2454 "push"
                                      [|((match x2452 with
                                          | `HeapProfiler_getHeapObjectId ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetHeapObjectId"))|]);
                                 (match x2453 with
                                  | Some x2455 ->
                                      ignore
                                        (Ojs.call x2454 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2456 : Ojs.t) ->
                                                   fun (x2458 : Ojs.t) ->
                                                     x2455
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2456)
                                                       ~params:(HeapProfiler_GetHeapObjectIdReturnType.t_of_js
                                                                  x2458)))|])
                                  | None -> ());
                                 x2454))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startSampling ] ->
              ?params:HeapProfiler_StartSamplingParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2469 : t) ->
            fun ~method_:(x2461 : [ `HeapProfiler_startSampling ]) ->
              fun
                ?params:(x2462 :
                          HeapProfiler_StartSamplingParameterType.t option)
                ->
                fun ?callback:(x2463 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2470 = t_to_js x2469 in
                       Ojs.call (Ojs.get_prop_ascii x2470 "post") "apply"
                         [|x2470;((let x2464 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2464 "push"
                                        [|((match x2461 with
                                            | `HeapProfiler_startSampling ->
                                                Ojs.string_to_js
                                                  "HeapProfilerStartSampling"))|]);
                                   (match x2462 with
                                    | Some x2468 ->
                                        ignore
                                          (Ojs.call x2464 "push"
                                             [|(HeapProfiler_StartSamplingParameterType.t_to_js
                                                  x2468)|])
                                    | None -> ());
                                   (match x2463 with
                                    | Some x2465 ->
                                        ignore
                                          (Ojs.call x2464 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2466 : Ojs.t) ->
                                                     x2465
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2466)))|])
                                    | None -> ());
                                   x2464))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_startSampling ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2477 : t) ->
            fun ~method_:(x2471 : [ `HeapProfiler_startSampling ]) ->
              fun ?callback:(x2472 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2478 = t_to_js x2477 in
                     Ojs.call (Ojs.get_prop_ascii x2478 "post") "apply"
                       [|x2478;((let x2473 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2473 "push"
                                      [|((match x2471 with
                                          | `HeapProfiler_startSampling ->
                                              Ojs.string_to_js
                                                "HeapProfilerStartSampling"))|]);
                                 (match x2472 with
                                  | Some x2474 ->
                                      ignore
                                        (Ojs.call x2473 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2475 : Ojs.t) ->
                                                   x2474
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2475)))|])
                                  | None -> ());
                                 x2473))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_stopSampling ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler_StopSamplingReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2486 : t) ->
            fun ~method_:(x2479 : [ `HeapProfiler_stopSampling ]) ->
              fun
                ?callback:(x2480 :
                            (err:Error.t or_null ->
                               params:HeapProfiler_StopSamplingReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2487 = t_to_js x2486 in
                     Ojs.call (Ojs.get_prop_ascii x2487 "post") "apply"
                       [|x2487;((let x2481 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2481 "push"
                                      [|((match x2479 with
                                          | `HeapProfiler_stopSampling ->
                                              Ojs.string_to_js
                                                "HeapProfilerStopSampling"))|]);
                                 (match x2480 with
                                  | Some x2482 ->
                                      ignore
                                        (Ojs.call x2481 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2483 : Ojs.t) ->
                                                   fun (x2485 : Ojs.t) ->
                                                     x2482
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2483)
                                                       ~params:(HeapProfiler_StopSamplingReturnType.t_of_js
                                                                  x2485)))|])
                                  | None -> ());
                                 x2481))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `HeapProfiler_getSamplingProfile ] ->
              ?callback:(err:Error.t or_null ->
                           params:HeapProfiler_GetSamplingProfileReturnType.t
                             -> unit)
                -> unit -> unit)
          =
          fun (x2495 : t) ->
            fun ~method_:(x2488 : [ `HeapProfiler_getSamplingProfile ]) ->
              fun
                ?callback:(x2489 :
                            (err:Error.t or_null ->
                               params:HeapProfiler_GetSamplingProfileReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2496 = t_to_js x2495 in
                     Ojs.call (Ojs.get_prop_ascii x2496 "post") "apply"
                       [|x2496;((let x2490 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2490 "push"
                                      [|((match x2488 with
                                          | `HeapProfiler_getSamplingProfile
                                              ->
                                              Ojs.string_to_js
                                                "HeapProfilerGetSamplingProfile"))|]);
                                 (match x2489 with
                                  | Some x2491 ->
                                      ignore
                                        (Ojs.call x2490 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2492 : Ojs.t) ->
                                                   fun (x2494 : Ojs.t) ->
                                                     x2491
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2492)
                                                       ~params:(HeapProfiler_GetSamplingProfileReturnType.t_of_js
                                                                  x2494)))|])
                                  | None -> ());
                                 x2490))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_getCategories ] ->
              ?callback:(err:Error.t or_null ->
                           params:NodeTracing_GetCategoriesReturnType.t ->
                             unit)
                -> unit -> unit)
          =
          fun (x2504 : t) ->
            fun ~method_:(x2497 : [ `NodeTracing_getCategories ]) ->
              fun
                ?callback:(x2498 :
                            (err:Error.t or_null ->
                               params:NodeTracing_GetCategoriesReturnType.t
                                 -> unit)
                              option)
                ->
                fun () ->
                  ignore
                    (let x2505 = t_to_js x2504 in
                     Ojs.call (Ojs.get_prop_ascii x2505 "post") "apply"
                       [|x2505;((let x2499 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2499 "push"
                                      [|((match x2497 with
                                          | `NodeTracing_getCategories ->
                                              Ojs.string_to_js
                                                "NodeTracingGetCategories"))|]);
                                 (match x2498 with
                                  | Some x2500 ->
                                      ignore
                                        (Ojs.call x2499 "push"
                                           [|(Ojs.fun_to_js 2
                                                (fun (x2501 : Ojs.t) ->
                                                   fun (x2503 : Ojs.t) ->
                                                     x2500
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2501)
                                                       ~params:(NodeTracing_GetCategoriesReturnType.t_of_js
                                                                  x2503)))|])
                                  | None -> ());
                                 x2499))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_start ] ->
              ?params:NodeTracing_StartParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2514 : t) ->
            fun ~method_:(x2506 : [ `NodeTracing_start ]) ->
              fun ?params:(x2507 : NodeTracing_StartParameterType.t option)
                ->
                fun ?callback:(x2508 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2515 = t_to_js x2514 in
                       Ojs.call (Ojs.get_prop_ascii x2515 "post") "apply"
                         [|x2515;((let x2509 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2509 "push"
                                        [|((match x2506 with
                                            | `NodeTracing_start ->
                                                Ojs.string_to_js
                                                  "NodeTracingStart"))|]);
                                   (match x2507 with
                                    | Some x2513 ->
                                        ignore
                                          (Ojs.call x2509 "push"
                                             [|(NodeTracing_StartParameterType.t_to_js
                                                  x2513)|])
                                    | None -> ());
                                   (match x2508 with
                                    | Some x2510 ->
                                        ignore
                                          (Ojs.call x2509 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2511 : Ojs.t) ->
                                                     x2510
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2511)))|])
                                    | None -> ());
                                   x2509))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_start ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2522 : t) ->
            fun ~method_:(x2516 : [ `NodeTracing_start ]) ->
              fun ?callback:(x2517 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2523 = t_to_js x2522 in
                     Ojs.call (Ojs.get_prop_ascii x2523 "post") "apply"
                       [|x2523;((let x2518 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2518 "push"
                                      [|((match x2516 with
                                          | `NodeTracing_start ->
                                              Ojs.string_to_js
                                                "NodeTracingStart"))|]);
                                 (match x2517 with
                                  | Some x2519 ->
                                      ignore
                                        (Ojs.call x2518 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2520 : Ojs.t) ->
                                                   x2519
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2520)))|])
                                  | None -> ());
                                 x2518))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeTracing_stop ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2530 : t) ->
            fun ~method_:(x2524 : [ `NodeTracing_stop ]) ->
              fun ?callback:(x2525 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2531 = t_to_js x2530 in
                     Ojs.call (Ojs.get_prop_ascii x2531 "post") "apply"
                       [|x2531;((let x2526 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2526 "push"
                                      [|((match x2524 with
                                          | `NodeTracing_stop ->
                                              Ojs.string_to_js
                                                "NodeTracingStop"))|]);
                                 (match x2525 with
                                  | Some x2527 ->
                                      ignore
                                        (Ojs.call x2526 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2528 : Ojs.t) ->
                                                   x2527
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2528)))|])
                                  | None -> ());
                                 x2526))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_sendMessageToWorker ] ->
              ?params:NodeWorker_SendMessageToWorkerParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2540 : t) ->
            fun ~method_:(x2532 : [ `NodeWorker_sendMessageToWorker ]) ->
              fun
                ?params:(x2533 :
                          NodeWorker_SendMessageToWorkerParameterType.t
                            option)
                ->
                fun ?callback:(x2534 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2541 = t_to_js x2540 in
                       Ojs.call (Ojs.get_prop_ascii x2541 "post") "apply"
                         [|x2541;((let x2535 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2535 "push"
                                        [|((match x2532 with
                                            | `NodeWorker_sendMessageToWorker
                                                ->
                                                Ojs.string_to_js
                                                  "NodeWorkerSendMessageToWorker"))|]);
                                   (match x2533 with
                                    | Some x2539 ->
                                        ignore
                                          (Ojs.call x2535 "push"
                                             [|(NodeWorker_SendMessageToWorkerParameterType.t_to_js
                                                  x2539)|])
                                    | None -> ());
                                   (match x2534 with
                                    | Some x2536 ->
                                        ignore
                                          (Ojs.call x2535 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2537 : Ojs.t) ->
                                                     x2536
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2537)))|])
                                    | None -> ());
                                   x2535))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_sendMessageToWorker ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2548 : t) ->
            fun ~method_:(x2542 : [ `NodeWorker_sendMessageToWorker ]) ->
              fun ?callback:(x2543 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2549 = t_to_js x2548 in
                     Ojs.call (Ojs.get_prop_ascii x2549 "post") "apply"
                       [|x2549;((let x2544 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2544 "push"
                                      [|((match x2542 with
                                          | `NodeWorker_sendMessageToWorker
                                              ->
                                              Ojs.string_to_js
                                                "NodeWorkerSendMessageToWorker"))|]);
                                 (match x2543 with
                                  | Some x2545 ->
                                      ignore
                                        (Ojs.call x2544 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2546 : Ojs.t) ->
                                                   x2545
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2546)))|])
                                  | None -> ());
                                 x2544))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_enable ] ->
              ?params:NodeWorker_EnableParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2558 : t) ->
            fun ~method_:(x2550 : [ `NodeWorker_enable ]) ->
              fun ?params:(x2551 : NodeWorker_EnableParameterType.t option)
                ->
                fun ?callback:(x2552 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2559 = t_to_js x2558 in
                       Ojs.call (Ojs.get_prop_ascii x2559 "post") "apply"
                         [|x2559;((let x2553 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2553 "push"
                                        [|((match x2550 with
                                            | `NodeWorker_enable ->
                                                Ojs.string_to_js
                                                  "NodeWorkerEnable"))|]);
                                   (match x2551 with
                                    | Some x2557 ->
                                        ignore
                                          (Ojs.call x2553 "push"
                                             [|(NodeWorker_EnableParameterType.t_to_js
                                                  x2557)|])
                                    | None -> ());
                                   (match x2552 with
                                    | Some x2554 ->
                                        ignore
                                          (Ojs.call x2553 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2555 : Ojs.t) ->
                                                     x2554
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2555)))|])
                                    | None -> ());
                                   x2553))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_enable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2566 : t) ->
            fun ~method_:(x2560 : [ `NodeWorker_enable ]) ->
              fun ?callback:(x2561 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2567 = t_to_js x2566 in
                     Ojs.call (Ojs.get_prop_ascii x2567 "post") "apply"
                       [|x2567;((let x2562 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2562 "push"
                                      [|((match x2560 with
                                          | `NodeWorker_enable ->
                                              Ojs.string_to_js
                                                "NodeWorkerEnable"))|]);
                                 (match x2561 with
                                  | Some x2563 ->
                                      ignore
                                        (Ojs.call x2562 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2564 : Ojs.t) ->
                                                   x2563
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2564)))|])
                                  | None -> ());
                                 x2562))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_disable ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2574 : t) ->
            fun ~method_:(x2568 : [ `NodeWorker_disable ]) ->
              fun ?callback:(x2569 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2575 = t_to_js x2574 in
                     Ojs.call (Ojs.get_prop_ascii x2575 "post") "apply"
                       [|x2575;((let x2570 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2570 "push"
                                      [|((match x2568 with
                                          | `NodeWorker_disable ->
                                              Ojs.string_to_js
                                                "NodeWorkerDisable"))|]);
                                 (match x2569 with
                                  | Some x2571 ->
                                      ignore
                                        (Ojs.call x2570 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2572 : Ojs.t) ->
                                                   x2571
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2572)))|])
                                  | None -> ());
                                 x2570))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_detach ] ->
              ?params:NodeWorker_DetachParameterType.t ->
                ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2584 : t) ->
            fun ~method_:(x2576 : [ `NodeWorker_detach ]) ->
              fun ?params:(x2577 : NodeWorker_DetachParameterType.t option)
                ->
                fun ?callback:(x2578 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2585 = t_to_js x2584 in
                       Ojs.call (Ojs.get_prop_ascii x2585 "post") "apply"
                         [|x2585;((let x2579 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2579 "push"
                                        [|((match x2576 with
                                            | `NodeWorker_detach ->
                                                Ojs.string_to_js
                                                  "NodeWorkerDetach"))|]);
                                   (match x2577 with
                                    | Some x2583 ->
                                        ignore
                                          (Ojs.call x2579 "push"
                                             [|(NodeWorker_DetachParameterType.t_to_js
                                                  x2583)|])
                                    | None -> ());
                                   (match x2578 with
                                    | Some x2580 ->
                                        ignore
                                          (Ojs.call x2579 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2581 : Ojs.t) ->
                                                     x2580
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2581)))|])
                                    | None -> ());
                                   x2579))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeWorker_detach ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2592 : t) ->
            fun ~method_:(x2586 : [ `NodeWorker_detach ]) ->
              fun ?callback:(x2587 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2593 = t_to_js x2592 in
                     Ojs.call (Ojs.get_prop_ascii x2593 "post") "apply"
                       [|x2593;((let x2588 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2588 "push"
                                      [|((match x2586 with
                                          | `NodeWorker_detach ->
                                              Ojs.string_to_js
                                                "NodeWorkerDetach"))|]);
                                 (match x2587 with
                                  | Some x2589 ->
                                      ignore
                                        (Ojs.call x2588 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2590 : Ojs.t) ->
                                                   x2589
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2590)))|])
                                  | None -> ());
                                 x2588))|])
        let (post'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeRuntime_notifyWhenWaitingForDisconnect ] ->
              ?params:inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
                -> ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2602 : t) ->
            fun
              ~method_:(x2594 :
                         [ `NodeRuntime_notifyWhenWaitingForDisconnect ])
              ->
              fun
                ?params:(x2595 :
                          inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType
                            option)
                ->
                fun ?callback:(x2596 : (err:Error.t or_null -> unit) option)
                  ->
                  fun () ->
                    ignore
                      (let x2603 = t_to_js x2602 in
                       Ojs.call (Ojs.get_prop_ascii x2603 "post") "apply"
                         [|x2603;((let x2597 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2597 "push"
                                        [|((match x2594 with
                                            | `NodeRuntime_notifyWhenWaitingForDisconnect
                                                ->
                                                Ojs.string_to_js
                                                  "NodeRuntimeNotifyWhenWaitingForDisconnect"))|]);
                                   (match x2595 with
                                    | Some x2601 ->
                                        ignore
                                          (Ojs.call x2597 "push"
                                             [|(inspector_NodeRuntime_NotifyWhenWaitingForDisconnectParameterType_to_js
                                                  x2601)|])
                                    | None -> ());
                                   (match x2596 with
                                    | Some x2598 ->
                                        ignore
                                          (Ojs.call x2597 "push"
                                             [|(Ojs.fun_to_js 1
                                                  (fun (x2599 : Ojs.t) ->
                                                     x2598
                                                       ~err:(or_null_of_js
                                                               Error.t_of_js
                                                               x2599)))|])
                                    | None -> ());
                                   x2597))|])
        let (post''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
          :
          t ->
            method_:[ `NodeRuntime_notifyWhenWaitingForDisconnect ] ->
              ?callback:(err:Error.t or_null -> unit) -> unit -> unit)
          =
          fun (x2610 : t) ->
            fun
              ~method_:(x2604 :
                         [ `NodeRuntime_notifyWhenWaitingForDisconnect ])
              ->
              fun ?callback:(x2605 : (err:Error.t or_null -> unit) option) ->
                fun () ->
                  ignore
                    (let x2611 = t_to_js x2610 in
                     Ojs.call (Ojs.get_prop_ascii x2611 "post") "apply"
                       [|x2611;((let x2606 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2606 "push"
                                      [|((match x2604 with
                                          | `NodeRuntime_notifyWhenWaitingForDisconnect
                                              ->
                                              Ojs.string_to_js
                                                "NodeRuntimeNotifyWhenWaitingForDisconnect"))|]);
                                 (match x2605 with
                                  | Some x2607 ->
                                      ignore
                                        (Ojs.call x2606 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x2608 : Ojs.t) ->
                                                   x2607
                                                     ~err:(or_null_of_js
                                                             Error.t_of_js
                                                             x2608)))|])
                                  | None -> ());
                                 x2606))|])
        let (add_listener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x2616 : t) ->
            fun ~event:(x2612 : string) ->
              fun ~listener:(x2613 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2616) "addListener"
                     [|(Ojs.string_to_js x2612);(Ojs.fun_to_js_args
                                                   (fun (x2614 : _) ->
                                                      x2613
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2614 0)))|])
        let (add_listener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2621 : t) ->
            fun ~event:(x2617 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2618 :
                            message:AnonymousInterface0.t
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2621) "addListener"
                     [|((match x2617 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2619 : Ojs.t) ->
                            x2618
                              ~message:(inspector_InspectorNotification_of_js
                                          AnonymousInterface0.t_of_js x2619)))|])
        let (add_listener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2626 : t) ->
            fun ~event:(x2622 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2623 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2626) "addListener"
                     [|((match x2622 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2624 :
                                                                    Ojs.t) ->
                                                                    x2623
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x2624)))|])
        let (add_listener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2631 : t) ->
            fun ~event:(x2627 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2628 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2631) "addListener"
                     [|((match x2627 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2629 : Ojs.t) ->
                            x2628
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x2629)))|])
        let (add_listener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2634 : t) ->
            fun ~event:(x2632 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2633 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2634) "addListener"
                     [|((match x2632 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2633 ()))|])
        let (add_listener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2639 : t) ->
            fun ~event:(x2635 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x2636 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2639) "addListener"
                     [|((match x2635 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x2637 : Ojs.t) ->
                            x2636
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x2637)))|])
        let (add_listener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2644 : t) ->
            fun ~event:(x2640 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x2641 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2644) "addListener"
                     [|((match x2640 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x2642 : Ojs.t) ->
                            x2641
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x2642)))|])
        let (add_listener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2649 : t) ->
            fun ~event:(x2645 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x2646 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2649) "addListener"
                     [|((match x2645 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x2647 : Ojs.t) ->
                            x2646
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x2647)))|])
        let (add_listener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2654 : t) ->
            fun ~event:(x2650 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x2651 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2654) "addListener"
                     [|((match x2650 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x2652 : Ojs.t) ->
                            x2651
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x2652)))|])
        let (add_listener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2659 : t) ->
            fun ~event:(x2655 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x2656 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2659) "addListener"
                     [|((match x2655 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x2657 : Ojs.t) ->
                            x2656
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x2657)))|])
        let (add_listener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2664 : t) ->
            fun ~event:(x2660 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x2661 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2664) "addListener"
                     [|((match x2660 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x2662 : Ojs.t) ->
                            x2661
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x2662)))|])
        let (add_listener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2669 : t) ->
            fun ~event:(x2665 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x2666 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2669) "addListener"
                     [|((match x2665 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x2667 : Ojs.t) ->
                            x2666
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x2667)))|])
        let (add_listener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2674 : t) ->
            fun ~event:(x2670 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x2671 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2674) "addListener"
                     [|((match x2670 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x2672 :
                                                                    Ojs.t) ->
                                                                    x2671
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x2672)))|])
        let (add_listener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x2677 : t) ->
            fun ~event:(x2675 : [ `Debugger_resumed ]) ->
              fun ~listener:(x2676 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2677) "addListener"
                     [|((match x2675 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2676 ()))|])
        let (add_listener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2682 : t) ->
            fun ~event:(x2678 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x2679 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2682) "addListener"
                     [|((match x2678 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x2680 : Ojs.t) ->
                            x2679
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x2680)))|])
        let (add_listener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2687 : t) ->
            fun ~event:(x2683 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x2684 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2687) "addListener"
                     [|((match x2683 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x2685 : Ojs.t) ->
                            x2684
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x2685)))|])
        let (add_listener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2692 : t) ->
            fun ~event:(x2688 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x2689 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2692) "addListener"
                     [|((match x2688 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2690 :
                                                                    Ojs.t) ->
                                                                    x2689
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x2690)))|])
        let (add_listener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2697 : t) ->
            fun ~event:(x2693 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x2694 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2697) "addListener"
                     [|((match x2693 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x2695 : Ojs.t) ->
                            x2694
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x2695)))|])
        let (add_listener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2700 : t) ->
            fun ~event:(x2698 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x2699 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2700) "addListener"
                     [|((match x2698 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x2699 ()))|])
        let (add_listener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2705 : t) ->
            fun ~event:(x2701 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x2702 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2705) "addListener"
                     [|((match x2701 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x2703 : Ojs.t) ->
                            x2702
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x2703)))|])
        let (add_listener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2710 : t) ->
            fun ~event:(x2706 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x2707 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2710) "addListener"
                     [|((match x2706 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x2708 : Ojs.t) ->
                            x2707
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x2708)))|])
        let (add_listener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2715 : t) ->
            fun ~event:(x2711 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x2712 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2715) "addListener"
                     [|((match x2711 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x2713 : Ojs.t) ->
                            x2712
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x2713)))|])
        let (add_listener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2720 : t) ->
            fun ~event:(x2716 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x2717 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2720) "addListener"
                     [|((match x2716 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x2718 : Ojs.t) ->
                            x2717
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x2718)))|])
        let (add_listener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2723 : t) ->
            fun ~event:(x2721 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x2722 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2723) "addListener"
                     [|((match x2721 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x2722 ()))|])
        let (add_listener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2728 : t) ->
            fun ~event:(x2724 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x2725 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2728) "addListener"
                     [|((match x2724 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2726 : Ojs.t) ->
                            x2725
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x2726)))|])
        let (add_listener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2733 : t) ->
            fun ~event:(x2729 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x2730 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2733) "addListener"
                     [|((match x2729 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2731 : Ojs.t) ->
                            x2730
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x2731)))|])
        let (add_listener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2738 : t) ->
            fun ~event:(x2734 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x2735 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2738) "addListener"
                     [|((match x2734 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2736 : Ojs.t) ->
                            x2735
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x2736)))|])
        let (add_listener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2741 : t) ->
            fun ~event:(x2739 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x2740 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2741) "addListener"
                     [|((match x2739 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2740 ()))|])
        let (emit : t -> event:symbol or_string -> args:any list -> bool) =
          fun (x2747 : t) ->
            fun ~event:(x2742 : symbol or_string) ->
              fun ~args:(x2743 : any list) ->
                Ojs.bool_of_js
                  (let x2748 = t_to_js x2747 in
                   Ojs.call (Ojs.get_prop_ascii x2748 "emit") "apply"
                     [|x2748;((let x2744 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2744 "push"
                                    [|(or_string_to_js symbol_to_js x2742)|]);
                               List.iter
                                 (fun (x2745 : any) ->
                                    ignore
                                      (Ojs.call x2744 "push"
                                         [|(any_to_js x2745)|])) x2743;
                               x2744))|])
        let (emit' :
          t ->
            event:[ `inspectorNotification ] ->
              message:AnonymousInterface0.t inspector_InspectorNotification
                -> bool)
          =
          fun (x2752 : t) ->
            fun ~event:(x2749 : [ `inspectorNotification ]) ->
              fun
                ~message:(x2750 :
                           AnonymousInterface0.t
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2752) "emit"
                     [|((match x2749 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       inspector_InspectorNotification_to_js
                         AnonymousInterface0.t_to_js x2750)|])
        let (emit'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              message:inspector_Runtime_ExecutionContextCreatedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2756 : t) ->
            fun ~event:(x2753 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~message:(x2754 :
                           inspector_Runtime_ExecutionContextCreatedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2756) "emit"
                     [|((match x2753 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(inspector_InspectorNotification_to_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_to_js
                                                                    x2754)|])
        let (emit''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2760 : t) ->
            fun ~event:(x2757 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~message:(x2758 :
                           inspector_Runtime_ExecutionContextDestroyedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2760) "emit"
                     [|((match x2757 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ExecutionContextDestroyedEventDataType_to_js
                         x2758)|])
        let (emit'''' :
          t -> event:[ `Runtime_executionContextsCleared ] -> bool) =
          fun (x2762 : t) ->
            fun ~event:(x2761 : [ `Runtime_executionContextsCleared ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2762) "emit"
                   [|((match x2761 with
                       | `Runtime_executionContextsCleared ->
                           Ojs.string_to_js "RuntimeExecutionContextsCleared"))|])
        let (emit''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              message:inspector_Runtime_ExceptionThrownEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2766 : t) ->
            fun ~event:(x2763 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~message:(x2764 :
                           inspector_Runtime_ExceptionThrownEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2766) "emit"
                     [|((match x2763 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ExceptionThrownEventDataType_to_js
                         x2764)|])
        let (emit'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              message:inspector_Runtime_ExceptionRevokedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2770 : t) ->
            fun ~event:(x2767 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~message:(x2768 :
                           inspector_Runtime_ExceptionRevokedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2770) "emit"
                     [|((match x2767 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ExceptionRevokedEventDataType_to_js
                         x2768)|])
        let (emit''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              message:inspector_Runtime_ConsoleAPICalledEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2774 : t) ->
            fun ~event:(x2771 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~message:(x2772 :
                           inspector_Runtime_ConsoleAPICalledEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2774) "emit"
                     [|((match x2771 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_ConsoleAPICalledEventDataType_to_js
                         x2772)|])
        let (emit'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              message:inspector_Runtime_InspectRequestedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2778 : t) ->
            fun ~event:(x2775 : [ `Runtime_inspectRequested ]) ->
              fun
                ~message:(x2776 :
                           inspector_Runtime_InspectRequestedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2778) "emit"
                     [|((match x2775 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       inspector_InspectorNotification_to_js
                         inspector_Runtime_InspectRequestedEventDataType_to_js
                         x2776)|])
        let (emit''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              message:inspector_Debugger_ScriptParsedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2782 : t) ->
            fun ~event:(x2779 : [ `Debugger_scriptParsed ]) ->
              fun
                ~message:(x2780 :
                           inspector_Debugger_ScriptParsedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2782) "emit"
                     [|((match x2779 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       inspector_InspectorNotification_to_js
                         inspector_Debugger_ScriptParsedEventDataType_to_js
                         x2780)|])
        let (emit'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              message:inspector_Debugger_ScriptFailedToParseEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2786 : t) ->
            fun ~event:(x2783 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~message:(x2784 :
                           inspector_Debugger_ScriptFailedToParseEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2786) "emit"
                     [|((match x2783 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       inspector_InspectorNotification_to_js
                         inspector_Debugger_ScriptFailedToParseEventDataType_to_js
                         x2784)|])
        let (emit''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              message:inspector_Debugger_BreakpointResolvedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2790 : t) ->
            fun ~event:(x2787 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~message:(x2788 :
                           inspector_Debugger_BreakpointResolvedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2790) "emit"
                     [|((match x2787 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       inspector_InspectorNotification_to_js
                         inspector_Debugger_BreakpointResolvedEventDataType_to_js
                         x2788)|])
        let (emit'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              message:inspector_Debugger_PausedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2794 : t) ->
            fun ~event:(x2791 : [ `Debugger_paused ]) ->
              fun
                ~message:(x2792 :
                           inspector_Debugger_PausedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2794) "emit"
                     [|((match x2791 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(inspector_InspectorNotification_to_js
                                                                    inspector_Debugger_PausedEventDataType_to_js
                                                                    x2792)|])
        let (emit''''''''''''' : t -> event:[ `Debugger_resumed ] -> bool) =
          fun (x2796 : t) ->
            fun ~event:(x2795 : [ `Debugger_resumed ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2796) "emit"
                   [|((match x2795 with
                       | `Debugger_resumed ->
                           Ojs.string_to_js "DebuggerResumed"))|])
        let (emit'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              message:inspector_Console_MessageAddedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2800 : t) ->
            fun ~event:(x2797 : [ `Console_messageAdded ]) ->
              fun
                ~message:(x2798 :
                           inspector_Console_MessageAddedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2800) "emit"
                     [|((match x2797 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       inspector_InspectorNotification_to_js
                         inspector_Console_MessageAddedEventDataType_to_js
                         x2798)|])
        let (emit''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              message:inspector_Profiler_ConsoleProfileStartedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2804 : t) ->
            fun ~event:(x2801 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~message:(x2802 :
                           inspector_Profiler_ConsoleProfileStartedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2804) "emit"
                     [|((match x2801 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       inspector_InspectorNotification_to_js
                         inspector_Profiler_ConsoleProfileStartedEventDataType_to_js
                         x2802)|])
        let (emit'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2808 : t) ->
            fun ~event:(x2805 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~message:(x2806 :
                           inspector_Profiler_ConsoleProfileFinishedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2808) "emit"
                     [|((match x2805 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(inspector_InspectorNotification_to_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_to_js
                                                                    x2806)|])
        let (emit''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2812 : t) ->
            fun ~event:(x2809 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~message:(x2810 :
                           inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2812) "emit"
                     [|((match x2809 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_to_js
                         x2810)|])
        let (emit'''''''''''''''''' :
          t -> event:[ `HeapProfiler_resetProfiles ] -> bool) =
          fun (x2814 : t) ->
            fun ~event:(x2813 : [ `HeapProfiler_resetProfiles ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2814) "emit"
                   [|((match x2813 with
                       | `HeapProfiler_resetProfiles ->
                           Ojs.string_to_js "HeapProfilerResetProfiles"))|])
        let (emit''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2818 : t) ->
            fun ~event:(x2815 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~message:(x2816 :
                           inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2818) "emit"
                     [|((match x2815 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_to_js
                         x2816)|])
        let (emit'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2822 : t) ->
            fun ~event:(x2819 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~message:(x2820 :
                           inspector_HeapProfiler_LastSeenObjectIdEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2822) "emit"
                     [|((match x2819 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_LastSeenObjectIdEventDataType_to_js
                         x2820)|])
        let (emit''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2826 : t) ->
            fun ~event:(x2823 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~message:(x2824 :
                           inspector_HeapProfiler_HeapStatsUpdateEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2826) "emit"
                     [|((match x2823 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       inspector_InspectorNotification_to_js
                         inspector_HeapProfiler_HeapStatsUpdateEventDataType_to_js
                         x2824)|])
        let (emit'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              message:inspector_NodeTracing_DataCollectedEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2830 : t) ->
            fun ~event:(x2827 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~message:(x2828 :
                           inspector_NodeTracing_DataCollectedEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2830) "emit"
                     [|((match x2827 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeTracing_DataCollectedEventDataType_to_js
                         x2828)|])
        let (emit''''''''''''''''''''''' :
          t -> event:[ `NodeTracing_tracingComplete ] -> bool) =
          fun (x2832 : t) ->
            fun ~event:(x2831 : [ `NodeTracing_tracingComplete ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2832) "emit"
                   [|((match x2831 with
                       | `NodeTracing_tracingComplete ->
                           Ojs.string_to_js "NodeTracingTracingComplete"))|])
        let (emit'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              message:inspector_NodeWorker_AttachedToWorkerEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2836 : t) ->
            fun ~event:(x2833 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~message:(x2834 :
                           inspector_NodeWorker_AttachedToWorkerEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2836) "emit"
                     [|((match x2833 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeWorker_AttachedToWorkerEventDataType_to_js
                         x2834)|])
        let (emit''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2840 : t) ->
            fun ~event:(x2837 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~message:(x2838 :
                           inspector_NodeWorker_DetachedFromWorkerEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2840) "emit"
                     [|((match x2837 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeWorker_DetachedFromWorkerEventDataType_to_js
                         x2838)|])
        let (emit'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                inspector_InspectorNotification -> bool)
          =
          fun (x2844 : t) ->
            fun ~event:(x2841 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~message:(x2842 :
                           inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                             inspector_InspectorNotification)
                ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x2844) "emit"
                     [|((match x2841 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       inspector_InspectorNotification_to_js
                         inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_to_js
                         x2842)|])
        let (emit''''''''''''''''''''''''''' :
          t -> event:[ `NodeRuntime_waitingForDisconnect ] -> bool) =
          fun (x2846 : t) ->
            fun ~event:(x2845 : [ `NodeRuntime_waitingForDisconnect ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2846) "emit"
                   [|((match x2845 with
                       | `NodeRuntime_waitingForDisconnect ->
                           Ojs.string_to_js "NodeRuntimeWaitingForDisconnect"))|])
        let (on : t -> event:string -> listener:(args:any list -> unit) -> t)
          =
          fun (x2851 : t) ->
            fun ~event:(x2847 : string) ->
              fun ~listener:(x2848 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2851) "on"
                     [|(Ojs.string_to_js x2847);(Ojs.fun_to_js_args
                                                   (fun (x2849 : _) ->
                                                      x2848
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2849 0)))|])
        let (on' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2856 : t) ->
            fun ~event:(x2852 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2853 :
                            message:AnonymousInterface0.t
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2856) "on"
                     [|((match x2852 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2854 : Ojs.t) ->
                            x2853
                              ~message:(inspector_InspectorNotification_of_js
                                          AnonymousInterface0.t_of_js x2854)))|])
        let (on'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2861 : t) ->
            fun ~event:(x2857 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2858 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2861) "on"
                     [|((match x2857 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2859 :
                                                                    Ojs.t) ->
                                                                    x2858
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x2859)))|])
        let (on''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2866 : t) ->
            fun ~event:(x2862 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2863 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2866) "on"
                     [|((match x2862 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2864 : Ojs.t) ->
                            x2863
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x2864)))|])
        let (on'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2869 : t) ->
            fun ~event:(x2867 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2868 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2869) "on"
                     [|((match x2867 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2868 ()))|])
        let (on''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2874 : t) ->
            fun ~event:(x2870 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x2871 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2874) "on"
                     [|((match x2870 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x2872 : Ojs.t) ->
                            x2871
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x2872)))|])
        let (on'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2879 : t) ->
            fun ~event:(x2875 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x2876 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2879) "on"
                     [|((match x2875 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x2877 : Ojs.t) ->
                            x2876
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x2877)))|])
        let (on''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2884 : t) ->
            fun ~event:(x2880 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x2881 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2884) "on"
                     [|((match x2880 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x2882 : Ojs.t) ->
                            x2881
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x2882)))|])
        let (on'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2889 : t) ->
            fun ~event:(x2885 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x2886 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2889) "on"
                     [|((match x2885 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x2887 : Ojs.t) ->
                            x2886
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x2887)))|])
        let (on''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2894 : t) ->
            fun ~event:(x2890 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x2891 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2894) "on"
                     [|((match x2890 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x2892 : Ojs.t) ->
                            x2891
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x2892)))|])
        let (on'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2899 : t) ->
            fun ~event:(x2895 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x2896 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2899) "on"
                     [|((match x2895 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x2897 : Ojs.t) ->
                            x2896
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x2897)))|])
        let (on''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2904 : t) ->
            fun ~event:(x2900 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x2901 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2904) "on"
                     [|((match x2900 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x2902 : Ojs.t) ->
                            x2901
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x2902)))|])
        let (on'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2909 : t) ->
            fun ~event:(x2905 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x2906 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2909) "on"
                     [|((match x2905 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x2907 :
                                                                    Ojs.t) ->
                                                                    x2906
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x2907)))|])
        let (on''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x2912 : t) ->
            fun ~event:(x2910 : [ `Debugger_resumed ]) ->
              fun ~listener:(x2911 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2912) "on"
                     [|((match x2910 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2911 ()))|])
        let (on'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2917 : t) ->
            fun ~event:(x2913 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x2914 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2917) "on"
                     [|((match x2913 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x2915 : Ojs.t) ->
                            x2914
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x2915)))|])
        let (on''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2922 : t) ->
            fun ~event:(x2918 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x2919 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2922) "on"
                     [|((match x2918 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x2920 : Ojs.t) ->
                            x2919
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x2920)))|])
        let (on'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2927 : t) ->
            fun ~event:(x2923 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x2924 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2927) "on"
                     [|((match x2923 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2925 :
                                                                    Ojs.t) ->
                                                                    x2924
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x2925)))|])
        let (on''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2932 : t) ->
            fun ~event:(x2928 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x2929 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2932) "on"
                     [|((match x2928 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x2930 : Ojs.t) ->
                            x2929
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x2930)))|])
        let (on'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2935 : t) ->
            fun ~event:(x2933 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x2934 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2935) "on"
                     [|((match x2933 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x2934 ()))|])
        let (on''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2940 : t) ->
            fun ~event:(x2936 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x2937 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2940) "on"
                     [|((match x2936 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x2938 : Ojs.t) ->
                            x2937
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x2938)))|])
        let (on'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2945 : t) ->
            fun ~event:(x2941 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x2942 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2945) "on"
                     [|((match x2941 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x2943 : Ojs.t) ->
                            x2942
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x2943)))|])
        let (on''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2950 : t) ->
            fun ~event:(x2946 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x2947 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2950) "on"
                     [|((match x2946 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x2948 : Ojs.t) ->
                            x2947
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x2948)))|])
        let (on'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2955 : t) ->
            fun ~event:(x2951 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x2952 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2955) "on"
                     [|((match x2951 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x2953 : Ojs.t) ->
                            x2952
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x2953)))|])
        let (on''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2958 : t) ->
            fun ~event:(x2956 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x2957 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2958) "on"
                     [|((match x2956 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x2957 ()))|])
        let (on'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2963 : t) ->
            fun ~event:(x2959 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x2960 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2963) "on"
                     [|((match x2959 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2961 : Ojs.t) ->
                            x2960
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x2961)))|])
        let (on''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2968 : t) ->
            fun ~event:(x2964 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x2965 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2968) "on"
                     [|((match x2964 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2966 : Ojs.t) ->
                            x2965
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x2966)))|])
        let (on'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2973 : t) ->
            fun ~event:(x2969 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x2970 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2973) "on"
                     [|((match x2969 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x2971 : Ojs.t) ->
                            x2970
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x2971)))|])
        let (on''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2976 : t) ->
            fun ~event:(x2974 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x2975 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2976) "on"
                     [|((match x2974 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2975 ()))|])
        let (once :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x2981 : t) ->
            fun ~event:(x2977 : string) ->
              fun ~listener:(x2978 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2981) "once"
                     [|(Ojs.string_to_js x2977);(Ojs.fun_to_js_args
                                                   (fun (x2979 : _) ->
                                                      x2978
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x2979 0)))|])
        let (once' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2986 : t) ->
            fun ~event:(x2982 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x2983 :
                            message:AnonymousInterface0.t
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2986) "once"
                     [|((match x2982 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x2984 : Ojs.t) ->
                            x2983
                              ~message:(inspector_InspectorNotification_of_js
                                          AnonymousInterface0.t_of_js x2984)))|])
        let (once'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2991 : t) ->
            fun ~event:(x2987 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x2988 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2991) "once"
                     [|((match x2987 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x2989 :
                                                                    Ojs.t) ->
                                                                    x2988
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x2989)))|])
        let (once''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x2996 : t) ->
            fun ~event:(x2992 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x2993 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x2996) "once"
                     [|((match x2992 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x2994 : Ojs.t) ->
                            x2993
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x2994)))|])
        let (once'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x2999 : t) ->
            fun ~event:(x2997 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x2998 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x2999) "once"
                     [|((match x2997 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x2998 ()))|])
        let (once''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3004 : t) ->
            fun ~event:(x3000 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3001 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3004) "once"
                     [|((match x3000 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3002 : Ojs.t) ->
                            x3001
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x3002)))|])
        let (once'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3009 : t) ->
            fun ~event:(x3005 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3006 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3009) "once"
                     [|((match x3005 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3007 : Ojs.t) ->
                            x3006
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x3007)))|])
        let (once''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3014 : t) ->
            fun ~event:(x3010 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3011 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3014) "once"
                     [|((match x3010 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3012 : Ojs.t) ->
                            x3011
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x3012)))|])
        let (once'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3019 : t) ->
            fun ~event:(x3015 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3016 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3019) "once"
                     [|((match x3015 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3017 : Ojs.t) ->
                            x3016
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x3017)))|])
        let (once''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3024 : t) ->
            fun ~event:(x3020 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3021 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3024) "once"
                     [|((match x3020 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3022 : Ojs.t) ->
                            x3021
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x3022)))|])
        let (once'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3029 : t) ->
            fun ~event:(x3025 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3026 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3029) "once"
                     [|((match x3025 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3027 : Ojs.t) ->
                            x3026
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x3027)))|])
        let (once''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3034 : t) ->
            fun ~event:(x3030 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3031 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3034) "once"
                     [|((match x3030 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3032 : Ojs.t) ->
                            x3031
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x3032)))|])
        let (once'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3039 : t) ->
            fun ~event:(x3035 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3036 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3039) "once"
                     [|((match x3035 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3037 :
                                                                    Ojs.t) ->
                                                                    x3036
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x3037)))|])
        let (once''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3042 : t) ->
            fun ~event:(x3040 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3041 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3042) "once"
                     [|((match x3040 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3041 ()))|])
        let (once'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3047 : t) ->
            fun ~event:(x3043 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3044 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3047) "once"
                     [|((match x3043 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3045 : Ojs.t) ->
                            x3044
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x3045)))|])
        let (once''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3052 : t) ->
            fun ~event:(x3048 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3049 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3052) "once"
                     [|((match x3048 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3050 : Ojs.t) ->
                            x3049
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x3050)))|])
        let (once'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3057 : t) ->
            fun ~event:(x3053 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3054 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3057) "once"
                     [|((match x3053 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3055 :
                                                                    Ojs.t) ->
                                                                    x3054
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x3055)))|])
        let (once''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3062 : t) ->
            fun ~event:(x3058 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3059 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3062) "once"
                     [|((match x3058 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3060 : Ojs.t) ->
                            x3059
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x3060)))|])
        let (once'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3065 : t) ->
            fun ~event:(x3063 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3064 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3065) "once"
                     [|((match x3063 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3064 ()))|])
        let (once''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3070 : t) ->
            fun ~event:(x3066 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3067 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3070) "once"
                     [|((match x3066 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3068 : Ojs.t) ->
                            x3067
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x3068)))|])
        let (once'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3075 : t) ->
            fun ~event:(x3071 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3072 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3075) "once"
                     [|((match x3071 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3073 : Ojs.t) ->
                            x3072
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x3073)))|])
        let (once''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3080 : t) ->
            fun ~event:(x3076 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3077 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3080) "once"
                     [|((match x3076 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3078 : Ojs.t) ->
                            x3077
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x3078)))|])
        let (once'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3085 : t) ->
            fun ~event:(x3081 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3082 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3085) "once"
                     [|((match x3081 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3083 : Ojs.t) ->
                            x3082
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x3083)))|])
        let (once''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3088 : t) ->
            fun ~event:(x3086 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3087 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3088) "once"
                     [|((match x3086 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3087 ()))|])
        let (once'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3093 : t) ->
            fun ~event:(x3089 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3090 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3093) "once"
                     [|((match x3089 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3091 : Ojs.t) ->
                            x3090
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x3091)))|])
        let (once''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3098 : t) ->
            fun ~event:(x3094 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3095 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3098) "once"
                     [|((match x3094 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3096 : Ojs.t) ->
                            x3095
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x3096)))|])
        let (once'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3103 : t) ->
            fun ~event:(x3099 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3100 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3103) "once"
                     [|((match x3099 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3101 : Ojs.t) ->
                            x3100
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x3101)))|])
        let (once''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3106 : t) ->
            fun ~event:(x3104 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3105 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3106) "once"
                     [|((match x3104 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3105 ()))|])
        let (prepend_listener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x3111 : t) ->
            fun ~event:(x3107 : string) ->
              fun ~listener:(x3108 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3111) "prependListener"
                     [|(Ojs.string_to_js x3107);(Ojs.fun_to_js_args
                                                   (fun (x3109 : _) ->
                                                      x3108
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x3109 0)))|])
        let (prepend_listener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3116 : t) ->
            fun ~event:(x3112 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x3113 :
                            message:AnonymousInterface0.t
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3116) "prependListener"
                     [|((match x3112 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x3114 : Ojs.t) ->
                            x3113
                              ~message:(inspector_InspectorNotification_of_js
                                          AnonymousInterface0.t_of_js x3114)))|])
        let (prepend_listener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3121 : t) ->
            fun ~event:(x3117 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x3118 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3121) "prependListener"
                     [|((match x3117 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3119 :
                                                                    Ojs.t) ->
                                                                    x3118
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x3119)))|])
        let (prepend_listener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3126 : t) ->
            fun ~event:(x3122 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x3123 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3126) "prependListener"
                     [|((match x3122 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x3124 : Ojs.t) ->
                            x3123
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x3124)))|])
        let (prepend_listener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3129 : t) ->
            fun ~event:(x3127 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x3128 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3129) "prependListener"
                     [|((match x3127 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3128 ()))|])
        let (prepend_listener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3134 : t) ->
            fun ~event:(x3130 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3131 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3134) "prependListener"
                     [|((match x3130 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3132 : Ojs.t) ->
                            x3131
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x3132)))|])
        let (prepend_listener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3139 : t) ->
            fun ~event:(x3135 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3136 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3139) "prependListener"
                     [|((match x3135 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3137 : Ojs.t) ->
                            x3136
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x3137)))|])
        let (prepend_listener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3144 : t) ->
            fun ~event:(x3140 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3141 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3144) "prependListener"
                     [|((match x3140 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3142 : Ojs.t) ->
                            x3141
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x3142)))|])
        let (prepend_listener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3149 : t) ->
            fun ~event:(x3145 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3146 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3149) "prependListener"
                     [|((match x3145 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3147 : Ojs.t) ->
                            x3146
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x3147)))|])
        let (prepend_listener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3154 : t) ->
            fun ~event:(x3150 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3151 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3154) "prependListener"
                     [|((match x3150 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3152 : Ojs.t) ->
                            x3151
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x3152)))|])
        let (prepend_listener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3159 : t) ->
            fun ~event:(x3155 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3156 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3159) "prependListener"
                     [|((match x3155 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3157 : Ojs.t) ->
                            x3156
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x3157)))|])
        let (prepend_listener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3164 : t) ->
            fun ~event:(x3160 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3161 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3164) "prependListener"
                     [|((match x3160 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3162 : Ojs.t) ->
                            x3161
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x3162)))|])
        let (prepend_listener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3169 : t) ->
            fun ~event:(x3165 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3166 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3169) "prependListener"
                     [|((match x3165 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3167 :
                                                                    Ojs.t) ->
                                                                    x3166
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x3167)))|])
        let (prepend_listener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3172 : t) ->
            fun ~event:(x3170 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3171 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3172) "prependListener"
                     [|((match x3170 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3171 ()))|])
        let (prepend_listener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3177 : t) ->
            fun ~event:(x3173 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3174 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3177) "prependListener"
                     [|((match x3173 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3175 : Ojs.t) ->
                            x3174
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x3175)))|])
        let (prepend_listener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3182 : t) ->
            fun ~event:(x3178 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3179 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3182) "prependListener"
                     [|((match x3178 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3180 : Ojs.t) ->
                            x3179
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x3180)))|])
        let (prepend_listener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3187 : t) ->
            fun ~event:(x3183 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3184 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3187) "prependListener"
                     [|((match x3183 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3185 :
                                                                    Ojs.t) ->
                                                                    x3184
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x3185)))|])
        let (prepend_listener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3192 : t) ->
            fun ~event:(x3188 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3189 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3192) "prependListener"
                     [|((match x3188 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3190 : Ojs.t) ->
                            x3189
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x3190)))|])
        let (prepend_listener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3195 : t) ->
            fun ~event:(x3193 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3194 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3195) "prependListener"
                     [|((match x3193 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3194 ()))|])
        let (prepend_listener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3200 : t) ->
            fun ~event:(x3196 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3197 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3200) "prependListener"
                     [|((match x3196 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3198 : Ojs.t) ->
                            x3197
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x3198)))|])
        let (prepend_listener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3205 : t) ->
            fun ~event:(x3201 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3202 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3205) "prependListener"
                     [|((match x3201 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3203 : Ojs.t) ->
                            x3202
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x3203)))|])
        let (prepend_listener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3210 : t) ->
            fun ~event:(x3206 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3207 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3210) "prependListener"
                     [|((match x3206 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3208 : Ojs.t) ->
                            x3207
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x3208)))|])
        let (prepend_listener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3215 : t) ->
            fun ~event:(x3211 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3212 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3215) "prependListener"
                     [|((match x3211 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3213 : Ojs.t) ->
                            x3212
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x3213)))|])
        let (prepend_listener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3218 : t) ->
            fun ~event:(x3216 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3217 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3218) "prependListener"
                     [|((match x3216 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3217 ()))|])
        let (prepend_listener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3223 : t) ->
            fun ~event:(x3219 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3220 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3223) "prependListener"
                     [|((match x3219 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3221 : Ojs.t) ->
                            x3220
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x3221)))|])
        let (prepend_listener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3228 : t) ->
            fun ~event:(x3224 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3225 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3228) "prependListener"
                     [|((match x3224 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3226 : Ojs.t) ->
                            x3225
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x3226)))|])
        let (prepend_listener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3233 : t) ->
            fun ~event:(x3229 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3230 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3233) "prependListener"
                     [|((match x3229 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3231 : Ojs.t) ->
                            x3230
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x3231)))|])
        let (prepend_listener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3236 : t) ->
            fun ~event:(x3234 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3235 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3236) "prependListener"
                     [|((match x3234 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3235 ()))|])
        let (prepend_once_listener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x3241 : t) ->
            fun ~event:(x3237 : string) ->
              fun ~listener:(x3238 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3241) "prependOnceListener"
                     [|(Ojs.string_to_js x3237);(Ojs.fun_to_js_args
                                                   (fun (x3239 : _) ->
                                                      x3238
                                                        ~args:(Ojs.list_of_js_from
                                                                 any_of_js
                                                                 x3239 0)))|])
        let (prepend_once_listener' :
          t ->
            event:[ `inspectorNotification ] ->
              listener:(message:AnonymousInterface0.t
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3246 : t) ->
            fun ~event:(x3242 : [ `inspectorNotification ]) ->
              fun
                ~listener:(x3243 :
                            message:AnonymousInterface0.t
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3246) "prependOnceListener"
                     [|((match x3242 with
                         | `inspectorNotification ->
                             Ojs.string_to_js "inspectorNotification"));(
                       Ojs.fun_to_js 1
                         (fun (x3244 : Ojs.t) ->
                            x3243
                              ~message:(inspector_InspectorNotification_of_js
                                          AnonymousInterface0.t_of_js x3244)))|])
        let (prepend_once_listener'' :
          t ->
            event:[ `Runtime_executionContextCreated ] ->
              listener:(message:inspector_Runtime_ExecutionContextCreatedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3251 : t) ->
            fun ~event:(x3247 : [ `Runtime_executionContextCreated ]) ->
              fun
                ~listener:(x3248 :
                            message:inspector_Runtime_ExecutionContextCreatedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3251) "prependOnceListener"
                     [|((match x3247 with
                         | `Runtime_executionContextCreated ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextCreated"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3249 :
                                                                    Ojs.t) ->
                                                                    x3248
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Runtime_ExecutionContextCreatedEventDataType_of_js
                                                                    x3249)))|])
        let (prepend_once_listener''' :
          t ->
            event:[ `Runtime_executionContextDestroyed ] ->
              listener:(message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3256 : t) ->
            fun ~event:(x3252 : [ `Runtime_executionContextDestroyed ]) ->
              fun
                ~listener:(x3253 :
                            message:inspector_Runtime_ExecutionContextDestroyedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3256) "prependOnceListener"
                     [|((match x3252 with
                         | `Runtime_executionContextDestroyed ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextDestroyed"));(
                       Ojs.fun_to_js 1
                         (fun (x3254 : Ojs.t) ->
                            x3253
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExecutionContextDestroyedEventDataType_of_js
                                          x3254)))|])
        let (prepend_once_listener'''' :
          t ->
            event:[ `Runtime_executionContextsCleared ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3259 : t) ->
            fun ~event:(x3257 : [ `Runtime_executionContextsCleared ]) ->
              fun ~listener:(x3258 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3259) "prependOnceListener"
                     [|((match x3257 with
                         | `Runtime_executionContextsCleared ->
                             Ojs.string_to_js
                               "RuntimeExecutionContextsCleared"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3258 ()))|])
        let (prepend_once_listener''''' :
          t ->
            event:[ `Runtime_exceptionThrown ] ->
              listener:(message:inspector_Runtime_ExceptionThrownEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3264 : t) ->
            fun ~event:(x3260 : [ `Runtime_exceptionThrown ]) ->
              fun
                ~listener:(x3261 :
                            message:inspector_Runtime_ExceptionThrownEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3264) "prependOnceListener"
                     [|((match x3260 with
                         | `Runtime_exceptionThrown ->
                             Ojs.string_to_js "RuntimeExceptionThrown"));(
                       Ojs.fun_to_js 1
                         (fun (x3262 : Ojs.t) ->
                            x3261
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionThrownEventDataType_of_js
                                          x3262)))|])
        let (prepend_once_listener'''''' :
          t ->
            event:[ `Runtime_exceptionRevoked ] ->
              listener:(message:inspector_Runtime_ExceptionRevokedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3269 : t) ->
            fun ~event:(x3265 : [ `Runtime_exceptionRevoked ]) ->
              fun
                ~listener:(x3266 :
                            message:inspector_Runtime_ExceptionRevokedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3269) "prependOnceListener"
                     [|((match x3265 with
                         | `Runtime_exceptionRevoked ->
                             Ojs.string_to_js "RuntimeExceptionRevoked"));(
                       Ojs.fun_to_js 1
                         (fun (x3267 : Ojs.t) ->
                            x3266
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ExceptionRevokedEventDataType_of_js
                                          x3267)))|])
        let (prepend_once_listener''''''' :
          t ->
            event:[ `Runtime_consoleAPICalled ] ->
              listener:(message:inspector_Runtime_ConsoleAPICalledEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3274 : t) ->
            fun ~event:(x3270 : [ `Runtime_consoleAPICalled ]) ->
              fun
                ~listener:(x3271 :
                            message:inspector_Runtime_ConsoleAPICalledEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3274) "prependOnceListener"
                     [|((match x3270 with
                         | `Runtime_consoleAPICalled ->
                             Ojs.string_to_js "RuntimeConsoleAPICalled"));(
                       Ojs.fun_to_js 1
                         (fun (x3272 : Ojs.t) ->
                            x3271
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_ConsoleAPICalledEventDataType_of_js
                                          x3272)))|])
        let (prepend_once_listener'''''''' :
          t ->
            event:[ `Runtime_inspectRequested ] ->
              listener:(message:inspector_Runtime_InspectRequestedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3279 : t) ->
            fun ~event:(x3275 : [ `Runtime_inspectRequested ]) ->
              fun
                ~listener:(x3276 :
                            message:inspector_Runtime_InspectRequestedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3279) "prependOnceListener"
                     [|((match x3275 with
                         | `Runtime_inspectRequested ->
                             Ojs.string_to_js "RuntimeInspectRequested"));(
                       Ojs.fun_to_js 1
                         (fun (x3277 : Ojs.t) ->
                            x3276
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Runtime_InspectRequestedEventDataType_of_js
                                          x3277)))|])
        let (prepend_once_listener''''''''' :
          t ->
            event:[ `Debugger_scriptParsed ] ->
              listener:(message:inspector_Debugger_ScriptParsedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3284 : t) ->
            fun ~event:(x3280 : [ `Debugger_scriptParsed ]) ->
              fun
                ~listener:(x3281 :
                            message:inspector_Debugger_ScriptParsedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3284) "prependOnceListener"
                     [|((match x3280 with
                         | `Debugger_scriptParsed ->
                             Ojs.string_to_js "DebuggerScriptParsed"));(
                       Ojs.fun_to_js 1
                         (fun (x3282 : Ojs.t) ->
                            x3281
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptParsedEventDataType_of_js
                                          x3282)))|])
        let (prepend_once_listener'''''''''' :
          t ->
            event:[ `Debugger_scriptFailedToParse ] ->
              listener:(message:inspector_Debugger_ScriptFailedToParseEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3289 : t) ->
            fun ~event:(x3285 : [ `Debugger_scriptFailedToParse ]) ->
              fun
                ~listener:(x3286 :
                            message:inspector_Debugger_ScriptFailedToParseEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3289) "prependOnceListener"
                     [|((match x3285 with
                         | `Debugger_scriptFailedToParse ->
                             Ojs.string_to_js "DebuggerScriptFailedToParse"));(
                       Ojs.fun_to_js 1
                         (fun (x3287 : Ojs.t) ->
                            x3286
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_ScriptFailedToParseEventDataType_of_js
                                          x3287)))|])
        let (prepend_once_listener''''''''''' :
          t ->
            event:[ `Debugger_breakpointResolved ] ->
              listener:(message:inspector_Debugger_BreakpointResolvedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3294 : t) ->
            fun ~event:(x3290 : [ `Debugger_breakpointResolved ]) ->
              fun
                ~listener:(x3291 :
                            message:inspector_Debugger_BreakpointResolvedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3294) "prependOnceListener"
                     [|((match x3290 with
                         | `Debugger_breakpointResolved ->
                             Ojs.string_to_js "DebuggerBreakpointResolved"));(
                       Ojs.fun_to_js 1
                         (fun (x3292 : Ojs.t) ->
                            x3291
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Debugger_BreakpointResolvedEventDataType_of_js
                                          x3292)))|])
        let (prepend_once_listener'''''''''''' :
          t ->
            event:[ `Debugger_paused ] ->
              listener:(message:inspector_Debugger_PausedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3299 : t) ->
            fun ~event:(x3295 : [ `Debugger_paused ]) ->
              fun
                ~listener:(x3296 :
                            message:inspector_Debugger_PausedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3299) "prependOnceListener"
                     [|((match x3295 with
                         | `Debugger_paused ->
                             Ojs.string_to_js "DebuggerPaused"));(Ojs.fun_to_js
                                                                    1
                                                                    (
                                                                    fun
                                                                    (x3297 :
                                                                    Ojs.t) ->
                                                                    x3296
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Debugger_PausedEventDataType_of_js
                                                                    x3297)))|])
        let (prepend_once_listener''''''''''''' :
          t -> event:[ `Debugger_resumed ] -> listener:(unit -> unit) -> t) =
          fun (x3302 : t) ->
            fun ~event:(x3300 : [ `Debugger_resumed ]) ->
              fun ~listener:(x3301 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3302) "prependOnceListener"
                     [|((match x3300 with
                         | `Debugger_resumed ->
                             Ojs.string_to_js "DebuggerResumed"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3301 ()))|])
        let (prepend_once_listener'''''''''''''' :
          t ->
            event:[ `Console_messageAdded ] ->
              listener:(message:inspector_Console_MessageAddedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3307 : t) ->
            fun ~event:(x3303 : [ `Console_messageAdded ]) ->
              fun
                ~listener:(x3304 :
                            message:inspector_Console_MessageAddedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3307) "prependOnceListener"
                     [|((match x3303 with
                         | `Console_messageAdded ->
                             Ojs.string_to_js "ConsoleMessageAdded"));(
                       Ojs.fun_to_js 1
                         (fun (x3305 : Ojs.t) ->
                            x3304
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Console_MessageAddedEventDataType_of_js
                                          x3305)))|])
        let (prepend_once_listener''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileStarted ] ->
              listener:(message:inspector_Profiler_ConsoleProfileStartedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3312 : t) ->
            fun ~event:(x3308 : [ `Profiler_consoleProfileStarted ]) ->
              fun
                ~listener:(x3309 :
                            message:inspector_Profiler_ConsoleProfileStartedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3312) "prependOnceListener"
                     [|((match x3308 with
                         | `Profiler_consoleProfileStarted ->
                             Ojs.string_to_js "ProfilerConsoleProfileStarted"));(
                       Ojs.fun_to_js 1
                         (fun (x3310 : Ojs.t) ->
                            x3309
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_Profiler_ConsoleProfileStartedEventDataType_of_js
                                          x3310)))|])
        let (prepend_once_listener'''''''''''''''' :
          t ->
            event:[ `Profiler_consoleProfileFinished ] ->
              listener:(message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3317 : t) ->
            fun ~event:(x3313 : [ `Profiler_consoleProfileFinished ]) ->
              fun
                ~listener:(x3314 :
                            message:inspector_Profiler_ConsoleProfileFinishedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3317) "prependOnceListener"
                     [|((match x3313 with
                         | `Profiler_consoleProfileFinished ->
                             Ojs.string_to_js
                               "ProfilerConsoleProfileFinished"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x3315 :
                                                                    Ojs.t) ->
                                                                    x3314
                                                                    ~message:(
                                                                    inspector_InspectorNotification_of_js
                                                                    inspector_Profiler_ConsoleProfileFinishedEventDataType_of_js
                                                                    x3315)))|])
        let (prepend_once_listener''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_addHeapSnapshotChunk ] ->
              listener:(message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3322 : t) ->
            fun ~event:(x3318 : [ `HeapProfiler_addHeapSnapshotChunk ]) ->
              fun
                ~listener:(x3319 :
                            message:inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3322) "prependOnceListener"
                     [|((match x3318 with
                         | `HeapProfiler_addHeapSnapshotChunk ->
                             Ojs.string_to_js
                               "HeapProfilerAddHeapSnapshotChunk"));(
                       Ojs.fun_to_js 1
                         (fun (x3320 : Ojs.t) ->
                            x3319
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_AddHeapSnapshotChunkEventDataType_of_js
                                          x3320)))|])
        let (prepend_once_listener'''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_resetProfiles ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3325 : t) ->
            fun ~event:(x3323 : [ `HeapProfiler_resetProfiles ]) ->
              fun ~listener:(x3324 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3325) "prependOnceListener"
                     [|((match x3323 with
                         | `HeapProfiler_resetProfiles ->
                             Ojs.string_to_js "HeapProfilerResetProfiles"));(
                       Ojs.fun_to_js 1 (fun _ -> x3324 ()))|])
        let (prepend_once_listener''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_reportHeapSnapshotProgress ] ->
              listener:(message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3330 : t) ->
            fun ~event:(x3326 : [ `HeapProfiler_reportHeapSnapshotProgress ])
              ->
              fun
                ~listener:(x3327 :
                            message:inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3330) "prependOnceListener"
                     [|((match x3326 with
                         | `HeapProfiler_reportHeapSnapshotProgress ->
                             Ojs.string_to_js
                               "HeapProfilerReportHeapSnapshotProgress"));(
                       Ojs.fun_to_js 1
                         (fun (x3328 : Ojs.t) ->
                            x3327
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_ReportHeapSnapshotProgressEventDataType_of_js
                                          x3328)))|])
        let (prepend_once_listener'''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_lastSeenObjectId ] ->
              listener:(message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3335 : t) ->
            fun ~event:(x3331 : [ `HeapProfiler_lastSeenObjectId ]) ->
              fun
                ~listener:(x3332 :
                            message:inspector_HeapProfiler_LastSeenObjectIdEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3335) "prependOnceListener"
                     [|((match x3331 with
                         | `HeapProfiler_lastSeenObjectId ->
                             Ojs.string_to_js "HeapProfilerLastSeenObjectId"));(
                       Ojs.fun_to_js 1
                         (fun (x3333 : Ojs.t) ->
                            x3332
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_LastSeenObjectIdEventDataType_of_js
                                          x3333)))|])
        let (prepend_once_listener''''''''''''''''''''' :
          t ->
            event:[ `HeapProfiler_heapStatsUpdate ] ->
              listener:(message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3340 : t) ->
            fun ~event:(x3336 : [ `HeapProfiler_heapStatsUpdate ]) ->
              fun
                ~listener:(x3337 :
                            message:inspector_HeapProfiler_HeapStatsUpdateEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3340) "prependOnceListener"
                     [|((match x3336 with
                         | `HeapProfiler_heapStatsUpdate ->
                             Ojs.string_to_js "HeapProfilerHeapStatsUpdate"));(
                       Ojs.fun_to_js 1
                         (fun (x3338 : Ojs.t) ->
                            x3337
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_HeapProfiler_HeapStatsUpdateEventDataType_of_js
                                          x3338)))|])
        let (prepend_once_listener'''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_dataCollected ] ->
              listener:(message:inspector_NodeTracing_DataCollectedEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3345 : t) ->
            fun ~event:(x3341 : [ `NodeTracing_dataCollected ]) ->
              fun
                ~listener:(x3342 :
                            message:inspector_NodeTracing_DataCollectedEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3345) "prependOnceListener"
                     [|((match x3341 with
                         | `NodeTracing_dataCollected ->
                             Ojs.string_to_js "NodeTracingDataCollected"));(
                       Ojs.fun_to_js 1
                         (fun (x3343 : Ojs.t) ->
                            x3342
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeTracing_DataCollectedEventDataType_of_js
                                          x3343)))|])
        let (prepend_once_listener''''''''''''''''''''''' :
          t ->
            event:[ `NodeTracing_tracingComplete ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3348 : t) ->
            fun ~event:(x3346 : [ `NodeTracing_tracingComplete ]) ->
              fun ~listener:(x3347 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3348) "prependOnceListener"
                     [|((match x3346 with
                         | `NodeTracing_tracingComplete ->
                             Ojs.string_to_js "NodeTracingTracingComplete"));(
                       Ojs.fun_to_js 1 (fun _ -> x3347 ()))|])
        let (prepend_once_listener'''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_attachedToWorker ] ->
              listener:(message:inspector_NodeWorker_AttachedToWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3353 : t) ->
            fun ~event:(x3349 : [ `NodeWorker_attachedToWorker ]) ->
              fun
                ~listener:(x3350 :
                            message:inspector_NodeWorker_AttachedToWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3353) "prependOnceListener"
                     [|((match x3349 with
                         | `NodeWorker_attachedToWorker ->
                             Ojs.string_to_js "NodeWorkerAttachedToWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3351 : Ojs.t) ->
                            x3350
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_AttachedToWorkerEventDataType_of_js
                                          x3351)))|])
        let (prepend_once_listener''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_detachedFromWorker ] ->
              listener:(message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3358 : t) ->
            fun ~event:(x3354 : [ `NodeWorker_detachedFromWorker ]) ->
              fun
                ~listener:(x3355 :
                            message:inspector_NodeWorker_DetachedFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3358) "prependOnceListener"
                     [|((match x3354 with
                         | `NodeWorker_detachedFromWorker ->
                             Ojs.string_to_js "NodeWorkerDetachedFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3356 : Ojs.t) ->
                            x3355
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_DetachedFromWorkerEventDataType_of_js
                                          x3356)))|])
        let (prepend_once_listener'''''''''''''''''''''''''' :
          t ->
            event:[ `NodeWorker_receivedMessageFromWorker ] ->
              listener:(message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                          inspector_InspectorNotification -> unit)
                -> t)
          =
          fun (x3363 : t) ->
            fun ~event:(x3359 : [ `NodeWorker_receivedMessageFromWorker ]) ->
              fun
                ~listener:(x3360 :
                            message:inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType
                              inspector_InspectorNotification -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x3363) "prependOnceListener"
                     [|((match x3359 with
                         | `NodeWorker_receivedMessageFromWorker ->
                             Ojs.string_to_js
                               "NodeWorkerReceivedMessageFromWorker"));(
                       Ojs.fun_to_js 1
                         (fun (x3361 : Ojs.t) ->
                            x3360
                              ~message:(inspector_InspectorNotification_of_js
                                          inspector_NodeWorker_ReceivedMessageFromWorkerEventDataType_of_js
                                          x3361)))|])
        let (prepend_once_listener''''''''''''''''''''''''''' :
          t ->
            event:[ `NodeRuntime_waitingForDisconnect ] ->
              listener:(unit -> unit) -> t)
          =
          fun (x3366 : t) ->
            fun ~event:(x3364 : [ `NodeRuntime_waitingForDisconnect ]) ->
              fun ~listener:(x3365 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x3366) "prependOnceListener"
                     [|((match x3364 with
                         | `NodeRuntime_waitingForDisconnect ->
                             Ojs.string_to_js
                               "NodeRuntimeWaitingForDisconnect"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x3365 ()))|])
        let (cast : t -> Node_events.Events.EventEmitter.t) =
          fun (x3367 : t) ->
            Node_events.Events.EventEmitter.t_of_js (t_to_js x3367)
      end
    let (open_ : ?port:int -> ?host:string -> ?wait:bool -> unit -> unit) =
      fun ?port:(x3368 : int option) ->
        fun ?host:(x3369 : string option) ->
          fun ?wait:(x3370 : bool option) ->
            fun () ->
              ignore
                (let x3375 = Import.inspector in
                 Ojs.call (Ojs.get_prop_ascii x3375 "open") "apply"
                   [|x3375;((let x3371 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3368 with
                              | Some x3374 ->
                                  ignore
                                    (Ojs.call x3371 "push"
                                       [|(Ojs.int_to_js x3374)|])
                              | None -> ());
                             (match x3369 with
                              | Some x3373 ->
                                  ignore
                                    (Ojs.call x3371 "push"
                                       [|(Ojs.string_to_js x3373)|])
                              | None -> ());
                             (match x3370 with
                              | Some x3372 ->
                                  ignore
                                    (Ojs.call x3371 "push"
                                       [|(Ojs.bool_to_js x3372)|])
                              | None -> ());
                             x3371))|])
    let (close : unit -> unit) =
      fun () -> ignore (Ojs.call Import.inspector "close" [||])
    let (url : unit -> string or_undefined) =
      fun () ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.call Import.inspector "url" [||])
    let (wait_for_debugger : unit -> unit) =
      fun () -> ignore (Ojs.call Import.inspector "waitForDebugger" [||])
  end
