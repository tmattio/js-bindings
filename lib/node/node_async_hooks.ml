[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type async_hooks_AsyncHook = [ `Async_hooks_AsyncHook ] intf
        and 'T async_hooks_AsyncLocalStorage =
          [ `Async_hooks_AsyncLocalStorage of 'T ] intf
        and async_hooks_AsyncResource = [ `Async_hooks_AsyncResource ] intf
        and async_hooks_AsyncResourceOptions =
          [ `Async_hooks_AsyncResourceOptions ] intf
        and async_hooks_HookCallbacks = [ `Async_hooks_HookCallbacks ] intf
        let rec async_hooks_AsyncHook_of_js : Ojs.t -> async_hooks_AsyncHook
          = Obj.magic
        and async_hooks_AsyncHook_to_js : async_hooks_AsyncHook -> Ojs.t =
          Obj.magic
        and async_hooks_AsyncLocalStorage_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T async_hooks_AsyncLocalStorage =
          fun _T -> Obj.magic
        and async_hooks_AsyncLocalStorage_to_js :
          'T . ('T -> Ojs.t) -> 'T async_hooks_AsyncLocalStorage -> Ojs.t =
          fun _T -> Obj.magic
        and async_hooks_AsyncResource_of_js :
          Ojs.t -> async_hooks_AsyncResource = Obj.magic
        and async_hooks_AsyncResource_to_js :
          async_hooks_AsyncResource -> Ojs.t = Obj.magic
        and async_hooks_AsyncResourceOptions_of_js :
          Ojs.t -> async_hooks_AsyncResourceOptions = Obj.magic
        and async_hooks_AsyncResourceOptions_to_js :
          async_hooks_AsyncResourceOptions -> Ojs.t = Obj.magic
        and async_hooks_HookCallbacks_of_js :
          Ojs.t -> async_hooks_HookCallbacks = Obj.magic
        and async_hooks_HookCallbacks_to_js :
          async_hooks_HookCallbacks -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module AnonymousInterface0 =
  struct
    type t = anonymous_interface_0
    let rec t_of_js : Ojs.t -> t =
      fun (x2 : Ojs.t) -> anonymous_interface_0_of_js x2
    and t_to_js : t -> Ojs.t =
      fun (x1 : anonymous_interface_0) -> anonymous_interface_0_to_js x1
    let (get_asyncResource : t -> async_hooks_AsyncResource) =
      fun (x3 : t) ->
        async_hooks_AsyncResource_of_js
          (Ojs.get_prop_ascii (t_to_js x3) "asyncResource")
    let (set_asyncResource : t -> async_hooks_AsyncResource -> unit) =
      fun (x4 : t) ->
        fun (x5 : async_hooks_AsyncResource) ->
          Ojs.set_prop_ascii (t_to_js x4) "asyncResource"
            (async_hooks_AsyncResource_to_js x5)
  end
module Async_hooks =
  struct
    let (executionAsyncId : unit -> float) =
      fun () ->
        Ojs.float_of_js (Ojs.call Import.async_hooks "executionAsyncId" [||])
    let (executionAsyncResource : unit -> untyped_object) =
      fun () ->
        untyped_object_of_js
          (Ojs.call Import.async_hooks "executionAsyncResource" [||])
    let (triggerAsyncId : unit -> float) =
      fun () ->
        Ojs.float_of_js (Ojs.call Import.async_hooks "triggerAsyncId" [||])
    module HookCallbacks =
      struct
        type t = async_hooks_HookCallbacks
        let rec t_of_js : Ojs.t -> t =
          fun (x7 : Ojs.t) -> async_hooks_HookCallbacks_of_js x7
        and t_to_js : t -> Ojs.t =
          fun (x6 : async_hooks_HookCallbacks) ->
            async_hooks_HookCallbacks_to_js x6
        let (init :
          t ->
            asyncId:float ->
              type_:string ->
                triggerAsyncId:float -> resource:untyped_object -> unit)
          =
          fun (x12 : t) ->
            fun ~asyncId:(x8 : float) ->
              fun ~type_:(x9 : string) ->
                fun ~triggerAsyncId:(x10 : float) ->
                  fun ~resource:(x11 : untyped_object) ->
                    ignore
                      (Ojs.call (t_to_js x12) "init"
                         [|(Ojs.float_to_js x8);(Ojs.string_to_js x9);(
                           Ojs.float_to_js x10);(untyped_object_to_js x11)|])
        let (before : t -> asyncId:float -> unit) =
          fun (x14 : t) ->
            fun ~asyncId:(x13 : float) ->
              ignore
                (Ojs.call (t_to_js x14) "before" [|(Ojs.float_to_js x13)|])
        let (after : t -> asyncId:float -> unit) =
          fun (x16 : t) ->
            fun ~asyncId:(x15 : float) ->
              ignore
                (Ojs.call (t_to_js x16) "after" [|(Ojs.float_to_js x15)|])
        let (promiseResolve : t -> asyncId:float -> unit) =
          fun (x18 : t) ->
            fun ~asyncId:(x17 : float) ->
              ignore
                (Ojs.call (t_to_js x18) "promiseResolve"
                   [|(Ojs.float_to_js x17)|])
        let (destroy : t -> asyncId:float -> unit) =
          fun (x20 : t) ->
            fun ~asyncId:(x19 : float) ->
              ignore
                (Ojs.call (t_to_js x20) "destroy" [|(Ojs.float_to_js x19)|])
      end
    module AsyncHook =
      struct
        type t = async_hooks_AsyncHook
        let rec t_of_js : Ojs.t -> t =
          fun (x22 : Ojs.t) -> async_hooks_AsyncHook_of_js x22
        and t_to_js : t -> Ojs.t =
          fun (x21 : async_hooks_AsyncHook) ->
            async_hooks_AsyncHook_to_js x21
        let (enable : t -> t) =
          fun (x23 : t) -> t_of_js (Ojs.call (t_to_js x23) "enable" [||])
        let (disable : t -> t) =
          fun (x24 : t) -> t_of_js (Ojs.call (t_to_js x24) "disable" [||])
      end
    let (createHook :
      options:async_hooks_HookCallbacks -> async_hooks_AsyncHook) =
      fun ~options:(x25 : async_hooks_HookCallbacks) ->
        async_hooks_AsyncHook_of_js
          (Ojs.call Import.async_hooks "createHook"
             [|(async_hooks_HookCallbacks_to_js x25)|])
    module AsyncResourceOptions =
      struct
        type t = async_hooks_AsyncResourceOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x27 : Ojs.t) -> async_hooks_AsyncResourceOptions_of_js x27
        and t_to_js : t -> Ojs.t =
          fun (x26 : async_hooks_AsyncResourceOptions) ->
            async_hooks_AsyncResourceOptions_to_js x26
        let (get_triggerAsyncId : t -> float) =
          fun (x28 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x28) "triggerAsyncId")
        let (set_triggerAsyncId : t -> float -> unit) =
          fun (x29 : t) ->
            fun (x30 : float) ->
              Ojs.set_prop_ascii (t_to_js x29) "triggerAsyncId"
                (Ojs.float_to_js x30)
        let (get_requireManualDestroy : t -> bool) =
          fun (x31 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x31) "requireManualDestroy")
        let (set_requireManualDestroy : t -> bool -> unit) =
          fun (x32 : t) ->
            fun (x33 : bool) ->
              Ojs.set_prop_ascii (t_to_js x32) "requireManualDestroy"
                (Ojs.bool_to_js x33)
      end
    module AsyncResource =
      struct
        type t = async_hooks_AsyncResource
        let rec t_of_js : Ojs.t -> t =
          fun (x35 : Ojs.t) -> async_hooks_AsyncResource_of_js x35
        and t_to_js : t -> Ojs.t =
          fun (x34 : async_hooks_AsyncResource) ->
            async_hooks_AsyncResource_to_js x34
        let (create :
          type_:string ->
            ?triggerAsyncId:async_hooks_AsyncResourceOptions or_number ->
              unit -> t)
          =
          fun ~type_:(x36 : string) ->
            fun
              ?triggerAsyncId:(x37 :
                                async_hooks_AsyncResourceOptions or_number
                                  option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii Import.async_hooks "AsyncResource")
                     (let x38 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x38 "push" [|(Ojs.string_to_js x36)|]);
                      (match x37 with
                       | Some x39 ->
                           ignore
                             (Ojs.call x38 "push"
                                [|(or_number_to_js
                                     async_hooks_AsyncResourceOptions_to_js
                                     x39)|])
                       | None -> ());
                      x38))
        let (bind :
          fn:'Func ->
            ?type_:string ->
              unit -> ('Func, anonymous_interface_0) intersection2)
          =
          fun ~fn:(x41 : 'Func) ->
            fun ?type_:(x42 : string option) ->
              fun () ->
                intersection2_of_js Obj.magic anonymous_interface_0_of_js
                  (let x45 =
                     Ojs.get_prop_ascii Import.async_hooks "AsyncResource" in
                   Ojs.call (Ojs.get_prop_ascii x45 "bind") "apply"
                     [|x45;((let x43 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore (Ojs.call x43 "push" [|(Obj.magic x41)|]);
                             (match x42 with
                              | Some x44 ->
                                  ignore
                                    (Ojs.call x43 "push"
                                       [|(Ojs.string_to_js x44)|])
                              | None -> ());
                             x43))|])
        let (bind' :
          t -> fn:'Func -> ('Func, anonymous_interface_0) intersection2) =
          fun (x49 : t) ->
            fun ~fn:(x48 : 'Func) ->
              intersection2_of_js Obj.magic anonymous_interface_0_of_js
                (Ojs.call (t_to_js x49) "bind" [|(Obj.magic x48)|])
        let (runInAsyncScope :
          t ->
            fn:(this:'This -> args:any list -> 'Result) ->
              ?thisArg:'This -> args:any list -> 'Result)
          =
          fun (x60 : t) ->
            fun ~fn:(x52 : this:'This -> args:any list -> 'Result) ->
              fun ?thisArg:(x53 : 'This option) ->
                fun ~args:(x54 : any list) ->
                  Obj.magic
                    (let x61 = t_to_js x60 in
                     Ojs.call (Ojs.get_prop_ascii x61 "runInAsyncScope")
                       "apply"
                       [|x61;((let x55 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x55 "push"
                                    [|(Ojs.fun_to_js_args
                                         (fun (x58 : _) ->
                                            Obj.magic
                                              (x52
                                                 ~this:(Obj.magic
                                                          (Ojs.array_get x58
                                                             0))
                                                 ~args:(Ojs.list_of_js_from
                                                          any_of_js x58 1))))|]);
                               (match x53 with
                                | Some x57 ->
                                    ignore
                                      (Ojs.call x55 "push"
                                         [|(Obj.magic x57)|])
                                | None -> ());
                               List.iter
                                 (fun (x56 : any) ->
                                    ignore
                                      (Ojs.call x55 "push"
                                         [|(any_to_js x56)|])) x54;
                               x55))|])
        let (emitDestroy : t -> t) =
          fun (x62 : t) ->
            t_of_js (Ojs.call (t_to_js x62) "emitDestroy" [||])
        let (asyncId : t -> float) =
          fun (x63 : t) ->
            Ojs.float_of_js (Ojs.call (t_to_js x63) "asyncId" [||])
        let (triggerAsyncId : t -> float) =
          fun (x64 : t) ->
            Ojs.float_of_js (Ojs.call (t_to_js x64) "triggerAsyncId" [||])
      end
    module AsyncLocalStorage =
      struct
        type 'T t = 'T async_hooks_AsyncLocalStorage
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x67 : Ojs.t) ->
              async_hooks_AsyncLocalStorage_of_js __T_of_js x67
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x65 : __T async_hooks_AsyncLocalStorage) ->
              async_hooks_AsyncLocalStorage_to_js __T_to_js x65
        let (disable : 'T t -> unit) =
          fun (x69 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x69) "disable" [||])
        let (getStore : 'T t -> 'T or_undefined) =
          fun (x71 : 'T t) ->
            or_undefined_of_js Obj.magic
              (Ojs.call (t_to_js Obj.magic x71) "getStore" [||])
        let (run :
          'T t ->
            store:'T -> callback:(args:any list -> 'R) -> args:any list -> 'R)
          =
          fun (x81 : 'T t) ->
            fun ~store:(x74 : 'T) ->
              fun ~callback:(x75 : args:any list -> 'R) ->
                fun ~args:(x76 : any list) ->
                  Obj.magic
                    (let x83 = t_to_js Obj.magic x81 in
                     Ojs.call (Ojs.get_prop_ascii x83 "run") "apply"
                       [|x83;((let x77 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x77 "push" [|(Obj.magic x74)|]);
                               ignore
                                 (Ojs.call x77 "push"
                                    [|(Ojs.fun_to_js_args
                                         (fun (x79 : _) ->
                                            Obj.magic
                                              (x75
                                                 ~args:(Ojs.list_of_js_from
                                                          any_of_js x79 0))))|]);
                               List.iter
                                 (fun (x78 : any) ->
                                    ignore
                                      (Ojs.call x77 "push"
                                         [|(any_to_js x78)|])) x76;
                               x77))|])
        let (exit :
          'T t -> callback:(args:any list -> 'R) -> args:any list -> 'R) =
          fun (x90 : 'T t) ->
            fun ~callback:(x84 : args:any list -> 'R) ->
              fun ~args:(x85 : any list) ->
                Obj.magic
                  (let x92 = t_to_js Obj.magic x90 in
                   Ojs.call (Ojs.get_prop_ascii x92 "exit") "apply"
                     [|x92;((let x86 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x86 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x88 : _) ->
                                          Obj.magic
                                            (x84
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x88 0))))|]);
                             List.iter
                               (fun (x87 : any) ->
                                  ignore
                                    (Ojs.call x86 "push" [|(any_to_js x87)|]))
                               x85;
                             x86))|])
        let (enterWith : 'T t -> store:'T -> unit) =
          fun (x94 : 'T t) ->
            fun ~store:(x93 : 'T) ->
              ignore
                (Ojs.call (t_to_js Obj.magic x94) "enterWith"
                   [|(Obj.magic x93)|])
      end
  end
