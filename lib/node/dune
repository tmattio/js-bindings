(library
 (name node)
 (public_name node)
 (libraries js_of_ocaml ojs es2020)
 (modes byte)
 (js_of_ocaml
  (javascript_files node_stub.js))
 (flags
  (:standard
   ; 16: Hide "[unerasable-optional-argument]): this optional argument cannot be erased."
   -w
   -16)))

(rule
 (targets node.ml)
 (deps intf/node.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets assert.ml)
 (deps intf/assert.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets async_hooks.ml)
 (deps intf/async_hooks.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets buffer.ml)
 (deps intf/buffer.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets child_process.ml)
 (deps intf/child_process.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets cluster.ml)
 (deps intf/cluster.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets console.ml)
 (deps intf/console.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets constants.ml)
 (deps intf/constants.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets crypto.ml)
 (deps intf/crypto.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets dgram.ml)
 (deps intf/dgram.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets dns.ml)
 (deps intf/dns.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets domain.ml)
 (deps intf/domain.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets events.ml)
 (deps intf/events.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets fs.ml)
 (deps intf/fs.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets fs_promises.ml)
 (deps intf/fs_promises.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets globals.ml)
 (deps intf/globals.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets http.ml)
 (deps intf/http.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets http2.ml)
 (deps intf/http2.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets https.ml)
 (deps intf/https.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets import.ml)
 (deps intf/import.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets inspector.ml)
 (deps intf/inspector.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets module.ml)
 (deps intf/module.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets net.ml)
 (deps intf/net.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets os.ml)
 (deps intf/os.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets path.ml)
 (deps intf/path.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets perf_hooks.ml)
 (deps intf/perf_hooks.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets process.ml)
 (deps intf/process.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets punycode.ml)
 (deps intf/punycode.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets querystring.ml)
 (deps intf/querystring.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets readline.ml)
 (deps intf/readline.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets repl.ml)
 (deps intf/repl.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets stream.ml)
 (deps intf/stream.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets string_decoder.ml)
 (deps intf/string_decoder.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets timers.ml)
 (deps intf/timers.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets tls.ml)
 (deps intf/tls.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets trace_events.ml)
 (deps intf/trace_events.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets tty.ml)
 (deps intf/tty.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets url.ml)
 (deps intf/url.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets util.ml)
 (deps intf/util.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets v8.ml)
 (deps intf/v8.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets vm.ml)
 (deps intf/vm.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets wasi.ml)
 (deps intf/wasi.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets worker_threads.ml)
 (deps intf/worker_threads.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))

(rule
 (targets zlib.ml)
 (deps intf/zlib.mli)
 (mode promote)
 (action
  (run %{bin:gen_js_api} %{deps} -o %{targets})))
