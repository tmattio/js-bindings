[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
module Console =
  struct
    module Console =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
        and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
        let (assert_ :
          t ->
            value:any -> ?message:string -> params:any list -> unit -> unit)
          =
          fun (x9 : t) ->
            fun ~value:(x3 : any) ->
              fun ?message:(x4 : string option) ->
                fun ~params:(x5 : any list) ->
                  fun () ->
                    ignore
                      (let x10 = t_to_js x9 in
                       Ojs.call (Ojs.get_prop_ascii x10 "assert") "apply"
                         [|x10;((let x6 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x6 "push" [|(any_to_js x3)|]);
                                 (match x4 with
                                  | Some x8 ->
                                      ignore
                                        (Ojs.call x6 "push"
                                           [|(Ojs.string_to_js x8)|])
                                  | None -> ());
                                 List.iter
                                   (fun (x7 : any) ->
                                      ignore
                                        (Ojs.call x6 "push"
                                           [|(any_to_js x7)|])) x5;
                                 x6))|])
        let (clear : t -> unit) =
          fun (x11 : t) -> ignore (Ojs.call (t_to_js x11) "clear" [||])
        let (count : t -> ?label:string -> unit -> unit) =
          fun (x15 : t) ->
            fun ?label:(x12 : string option) ->
              fun () ->
                ignore
                  (let x16 = t_to_js x15 in
                   Ojs.call (Ojs.get_prop_ascii x16 "count") "apply"
                     [|x16;((let x13 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x12 with
                              | Some x14 ->
                                  ignore
                                    (Ojs.call x13 "push"
                                       [|(Ojs.string_to_js x14)|])
                              | None -> ());
                             x13))|])
        let (count_reset : t -> ?label:string -> unit -> unit) =
          fun (x20 : t) ->
            fun ?label:(x17 : string option) ->
              fun () ->
                ignore
                  (let x21 = t_to_js x20 in
                   Ojs.call (Ojs.get_prop_ascii x21 "countReset") "apply"
                     [|x21;((let x18 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x17 with
                              | Some x19 ->
                                  ignore
                                    (Ojs.call x18 "push"
                                       [|(Ojs.string_to_js x19)|])
                              | None -> ());
                             x18))|])
        let (debug : t -> ?message:any -> params:any list -> unit -> unit) =
          fun (x27 : t) ->
            fun ?message:(x22 : any option) ->
              fun ~params:(x23 : any list) ->
                fun () ->
                  ignore
                    (let x28 = t_to_js x27 in
                     Ojs.call (Ojs.get_prop_ascii x28 "debug") "apply"
                       [|x28;((let x24 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x22 with
                                | Some x26 ->
                                    ignore
                                      (Ojs.call x24 "push"
                                         [|(any_to_js x26)|])
                                | None -> ());
                               List.iter
                                 (fun (x25 : any) ->
                                    ignore
                                      (Ojs.call x24 "push"
                                         [|(any_to_js x25)|])) x23;
                               x24))|])
        let (dir :
          t ->
            obj:any ->
              ?options:Node_util.Util.InspectOptions.t -> unit -> unit)
          =
          fun (x33 : t) ->
            fun ~obj:(x29 : any) ->
              fun ?options:(x30 : Node_util.Util.InspectOptions.t option) ->
                fun () ->
                  ignore
                    (let x34 = t_to_js x33 in
                     Ojs.call (Ojs.get_prop_ascii x34 "dir") "apply"
                       [|x34;((let x31 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x31 "push" [|(any_to_js x29)|]);
                               (match x30 with
                                | Some x32 ->
                                    ignore
                                      (Ojs.call x31 "push"
                                         [|(Node_util.Util.InspectOptions.t_to_js
                                              x32)|])
                                | None -> ());
                               x31))|])
        let (dirxml : t -> data:any list -> unit) =
          fun (x38 : t) ->
            fun ~data:(x35 : any list) ->
              ignore
                (let x39 = t_to_js x38 in
                 Ojs.call (Ojs.get_prop_ascii x39 "dirxml") "apply"
                   [|x39;((let x36 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x37 : any) ->
                                ignore
                                  (Ojs.call x36 "push" [|(any_to_js x37)|]))
                             x35;
                           x36))|])
        let (error : t -> ?message:any -> params:any list -> unit -> unit) =
          fun (x45 : t) ->
            fun ?message:(x40 : any option) ->
              fun ~params:(x41 : any list) ->
                fun () ->
                  ignore
                    (let x46 = t_to_js x45 in
                     Ojs.call (Ojs.get_prop_ascii x46 "error") "apply"
                       [|x46;((let x42 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x40 with
                                | Some x44 ->
                                    ignore
                                      (Ojs.call x42 "push"
                                         [|(any_to_js x44)|])
                                | None -> ());
                               List.iter
                                 (fun (x43 : any) ->
                                    ignore
                                      (Ojs.call x42 "push"
                                         [|(any_to_js x43)|])) x41;
                               x42))|])
        let (group : t -> label:any list -> unit) =
          fun (x50 : t) ->
            fun ~label:(x47 : any list) ->
              ignore
                (let x51 = t_to_js x50 in
                 Ojs.call (Ojs.get_prop_ascii x51 "group") "apply"
                   [|x51;((let x48 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x49 : any) ->
                                ignore
                                  (Ojs.call x48 "push" [|(any_to_js x49)|]))
                             x47;
                           x48))|])
        let (group_collapsed : t -> label:any list -> unit) =
          fun (x55 : t) ->
            fun ~label:(x52 : any list) ->
              ignore
                (let x56 = t_to_js x55 in
                 Ojs.call (Ojs.get_prop_ascii x56 "groupCollapsed") "apply"
                   [|x56;((let x53 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x54 : any) ->
                                ignore
                                  (Ojs.call x53 "push" [|(any_to_js x54)|]))
                             x52;
                           x53))|])
        let (group_end : t -> unit) =
          fun (x57 : t) -> ignore (Ojs.call (t_to_js x57) "groupEnd" [||])
        let (info : t -> ?message:any -> params:any list -> unit -> unit) =
          fun (x63 : t) ->
            fun ?message:(x58 : any option) ->
              fun ~params:(x59 : any list) ->
                fun () ->
                  ignore
                    (let x64 = t_to_js x63 in
                     Ojs.call (Ojs.get_prop_ascii x64 "info") "apply"
                       [|x64;((let x60 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x58 with
                                | Some x62 ->
                                    ignore
                                      (Ojs.call x60 "push"
                                         [|(any_to_js x62)|])
                                | None -> ());
                               List.iter
                                 (fun (x61 : any) ->
                                    ignore
                                      (Ojs.call x60 "push"
                                         [|(any_to_js x61)|])) x59;
                               x60))|])
        let (log : t -> ?message:any -> params:any list -> unit -> unit) =
          fun (x70 : t) ->
            fun ?message:(x65 : any option) ->
              fun ~params:(x66 : any list) ->
                fun () ->
                  ignore
                    (let x71 = t_to_js x70 in
                     Ojs.call (Ojs.get_prop_ascii x71 "log") "apply"
                       [|x71;((let x67 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x65 with
                                | Some x69 ->
                                    ignore
                                      (Ojs.call x67 "push"
                                         [|(any_to_js x69)|])
                                | None -> ());
                               List.iter
                                 (fun (x68 : any) ->
                                    ignore
                                      (Ojs.call x67 "push"
                                         [|(any_to_js x68)|])) x66;
                               x67))|])
        let (table :
          t -> tabular_data:any -> ?properties:string list -> unit -> unit) =
          fun (x77 : t) ->
            fun ~tabular_data:(x72 : any) ->
              fun ?properties:(x73 : string list option) ->
                fun () ->
                  ignore
                    (let x78 = t_to_js x77 in
                     Ojs.call (Ojs.get_prop_ascii x78 "table") "apply"
                       [|x78;((let x74 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x74 "push" [|(any_to_js x72)|]);
                               (match x73 with
                                | Some x75 ->
                                    ignore
                                      (Ojs.call x74 "push"
                                         [|(Ojs.list_to_js Ojs.string_to_js
                                              x75)|])
                                | None -> ());
                               x74))|])
        let (time : t -> ?label:string -> unit -> unit) =
          fun (x82 : t) ->
            fun ?label:(x79 : string option) ->
              fun () ->
                ignore
                  (let x83 = t_to_js x82 in
                   Ojs.call (Ojs.get_prop_ascii x83 "time") "apply"
                     [|x83;((let x80 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x79 with
                              | Some x81 ->
                                  ignore
                                    (Ojs.call x80 "push"
                                       [|(Ojs.string_to_js x81)|])
                              | None -> ());
                             x80))|])
        let (time_end : t -> ?label:string -> unit -> unit) =
          fun (x87 : t) ->
            fun ?label:(x84 : string option) ->
              fun () ->
                ignore
                  (let x88 = t_to_js x87 in
                   Ojs.call (Ojs.get_prop_ascii x88 "timeEnd") "apply"
                     [|x88;((let x85 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x84 with
                              | Some x86 ->
                                  ignore
                                    (Ojs.call x85 "push"
                                       [|(Ojs.string_to_js x86)|])
                              | None -> ());
                             x85))|])
        let (time_log : t -> ?label:string -> data:any list -> unit -> unit)
          =
          fun (x94 : t) ->
            fun ?label:(x89 : string option) ->
              fun ~data:(x90 : any list) ->
                fun () ->
                  ignore
                    (let x95 = t_to_js x94 in
                     Ojs.call (Ojs.get_prop_ascii x95 "timeLog") "apply"
                       [|x95;((let x91 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x89 with
                                | Some x93 ->
                                    ignore
                                      (Ojs.call x91 "push"
                                         [|(Ojs.string_to_js x93)|])
                                | None -> ());
                               List.iter
                                 (fun (x92 : any) ->
                                    ignore
                                      (Ojs.call x91 "push"
                                         [|(any_to_js x92)|])) x90;
                               x91))|])
        let (trace : t -> ?message:any -> params:any list -> unit -> unit) =
          fun (x101 : t) ->
            fun ?message:(x96 : any option) ->
              fun ~params:(x97 : any list) ->
                fun () ->
                  ignore
                    (let x102 = t_to_js x101 in
                     Ojs.call (Ojs.get_prop_ascii x102 "trace") "apply"
                       [|x102;((let x98 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x96 with
                                 | Some x100 ->
                                     ignore
                                       (Ojs.call x98 "push"
                                          [|(any_to_js x100)|])
                                 | None -> ());
                                List.iter
                                  (fun (x99 : any) ->
                                     ignore
                                       (Ojs.call x98 "push"
                                          [|(any_to_js x99)|])) x97;
                                x98))|])
        let (warn : t -> ?message:any -> params:any list -> unit -> unit) =
          fun (x108 : t) ->
            fun ?message:(x103 : any option) ->
              fun ~params:(x104 : any list) ->
                fun () ->
                  ignore
                    (let x109 = t_to_js x108 in
                     Ojs.call (Ojs.get_prop_ascii x109 "warn") "apply"
                       [|x109;((let x105 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x103 with
                                 | Some x107 ->
                                     ignore
                                       (Ojs.call x105 "push"
                                          [|(any_to_js x107)|])
                                 | None -> ());
                                List.iter
                                  (fun (x106 : any) ->
                                     ignore
                                       (Ojs.call x105 "push"
                                          [|(any_to_js x106)|])) x104;
                                x105))|])
        let (profile : t -> ?label:string -> unit -> unit) =
          fun (x113 : t) ->
            fun ?label:(x110 : string option) ->
              fun () ->
                ignore
                  (let x114 = t_to_js x113 in
                   Ojs.call (Ojs.get_prop_ascii x114 "profile") "apply"
                     [|x114;((let x111 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x110 with
                               | Some x112 ->
                                   ignore
                                     (Ojs.call x111 "push"
                                        [|(Ojs.string_to_js x112)|])
                               | None -> ());
                              x111))|])
        let (profile_end : t -> ?label:string -> unit -> unit) =
          fun (x118 : t) ->
            fun ?label:(x115 : string option) ->
              fun () ->
                ignore
                  (let x119 = t_to_js x118 in
                   Ojs.call (Ojs.get_prop_ascii x119 "profileEnd") "apply"
                     [|x119;((let x116 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x115 with
                               | Some x117 ->
                                   ignore
                                     (Ojs.call x116 "push"
                                        [|(Ojs.string_to_js x117)|])
                               | None -> ());
                              x116))|])
        let (time_stamp : t -> ?label:string -> unit -> unit) =
          fun (x123 : t) ->
            fun ?label:(x120 : string option) ->
              fun () ->
                ignore
                  (let x124 = t_to_js x123 in
                   Ojs.call (Ojs.get_prop_ascii x124 "timeStamp") "apply"
                     [|x124;((let x121 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x120 with
                               | Some x122 ->
                                   ignore
                                     (Ojs.call x121 "push"
                                        [|(Ojs.string_to_js x122)|])
                               | None -> ());
                              x121))|])
        module ConsoleConstructorOptions =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x126 : Ojs.t) -> x126
            and t_to_js : t -> Ojs.t = fun (x125 : Ojs.t) -> x125
            let (get_stdout : t -> WritableStream.t) =
              fun (x127 : t) ->
                WritableStream.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x127) "stdout")
            let (set_stdout : t -> WritableStream.t -> unit) =
              fun (x128 : t) ->
                fun (x129 : WritableStream.t) ->
                  Ojs.set_prop_ascii (t_to_js x128) "stdout"
                    (WritableStream.t_to_js x129)
            let (get_stderr : t -> WritableStream.t) =
              fun (x130 : t) ->
                WritableStream.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x130) "stderr")
            let (set_stderr : t -> WritableStream.t -> unit) =
              fun (x131 : t) ->
                fun (x132 : WritableStream.t) ->
                  Ojs.set_prop_ascii (t_to_js x131) "stderr"
                    (WritableStream.t_to_js x132)
            let (get_ignore_errors : t -> bool) =
              fun (x133 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x133) "ignoreErrors")
            let (set_ignore_errors : t -> bool -> unit) =
              fun (x134 : t) ->
                fun (x135 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x134) "ignoreErrors"
                    (Ojs.bool_to_js x135)
            let (get_color_mode : t -> [ `auto ] or_boolean) =
              fun (x136 : t) ->
                or_boolean_of_js
                  (fun (x137 : Ojs.t) ->
                     let x138 = x137 in
                     match Ojs.string_of_js x138 with
                     | "auto" -> `auto
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x136) "colorMode")
            let (set_color_mode : t -> [ `auto ] or_boolean -> unit) =
              fun (x139 : t) ->
                fun (x140 : [ `auto ] or_boolean) ->
                  Ojs.set_prop_ascii (t_to_js x139) "colorMode"
                    (or_boolean_to_js
                       (fun (x141 : [ `auto ]) ->
                          match x141 with | `auto -> Ojs.string_to_js "auto")
                       x140)
            let (get_inspect_options : t -> Node_util.Util.InspectOptions.t)
              =
              fun (x142 : t) ->
                Node_util.Util.InspectOptions.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x142) "inspectOptions")
            let (set_inspect_options :
              t -> Node_util.Util.InspectOptions.t -> unit) =
              fun (x143 : t) ->
                fun (x144 : Node_util.Util.InspectOptions.t) ->
                  Ojs.set_prop_ascii (t_to_js x143) "inspectOptions"
                    (Node_util.Util.InspectOptions.t_to_js x144)
          end
        module ConsoleConstructor =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x146 : Ojs.t) -> x146
            and t_to_js : t -> Ojs.t = fun (x145 : Ojs.t) -> x145
            let (get_prototype : t -> t) =
              fun (x147 : t) ->
                t_of_js (Ojs.get_prop_ascii (t_to_js x147) "prototype")
            let (set_prototype : t -> t -> unit) =
              fun (x148 : t) ->
                fun (x149 : t) ->
                  Ojs.set_prop_ascii (t_to_js x148) "prototype"
                    (t_to_js x149)
            let (create :
              t ->
                stdout:WritableStream.t ->
                  ?stderr:WritableStream.t ->
                    ?ignore_errors:bool -> unit -> t)
              =
              fun (x156 : t) ->
                fun ~stdout:(x150 : WritableStream.t) ->
                  fun ?stderr:(x151 : WritableStream.t option) ->
                    fun ?ignore_errors:(x152 : bool option) ->
                      fun () ->
                        t_of_js
                          (Ojs.new_obj_arr (t_to_js x156)
                             (let x153 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x153 "push"
                                   [|(WritableStream.t_to_js x150)|]);
                              (match x151 with
                               | Some x155 ->
                                   ignore
                                     (Ojs.call x153 "push"
                                        [|(WritableStream.t_to_js x155)|])
                               | None -> ());
                              (match x152 with
                               | Some x154 ->
                                   ignore
                                     (Ojs.call x153 "push"
                                        [|(Ojs.bool_to_js x154)|])
                               | None -> ());
                              x153))
            let (create' : t -> options:ConsoleConstructorOptions.t -> t) =
              fun (x158 : t) ->
                fun ~options:(x157 : ConsoleConstructorOptions.t) ->
                  t_of_js
                    (Ojs.new_obj (t_to_js x158)
                       [|(ConsoleConstructorOptions.t_to_js x157)|])
          end
        let (get_console : t -> ConsoleConstructor.t) =
          fun (x159 : t) ->
            ConsoleConstructor.t_of_js
              (Ojs.get_prop_ascii (t_to_js x159) "Console")
        let (set_console : t -> ConsoleConstructor.t -> unit) =
          fun (x160 : t) ->
            fun (x161 : ConsoleConstructor.t) ->
              Ojs.set_prop_ascii (t_to_js x160) "Console"
                (ConsoleConstructor.t_to_js x161)
      end
    let (assert_ :
      bool -> ?message:string -> params:any list -> unit -> unit) =
      fun (x162 : bool) ->
        fun ?message:(x163 : string option) ->
          fun ~params:(x164 : any list) ->
            fun () ->
              ignore
                (let x168 = Import.console in
                 Ojs.call (Ojs.get_prop_ascii x168 "assert") "apply"
                   [|x168;((let x165 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x165 "push" [|(Ojs.bool_to_js x162)|]);
                            (match x163 with
                             | Some x167 ->
                                 ignore
                                   (Ojs.call x165 "push"
                                      [|(Ojs.string_to_js x167)|])
                             | None -> ());
                            List.iter
                              (fun (x166 : any) ->
                                 ignore
                                   (Ojs.call x165 "push" [|(any_to_js x166)|]))
                              x164;
                            x165))|])
    let (clear : unit) =
      Ojs.unit_of_js (Ojs.get_prop_ascii Import.console "clear")
    let (count : ?label:string -> unit -> unit) =
      fun ?label:(x169 : string option) ->
        fun () ->
          ignore
            (let x172 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x172 "count") "apply"
               [|x172;((let x170 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x169 with
                         | Some x171 ->
                             ignore
                               (Ojs.call x170 "push"
                                  [|(Ojs.string_to_js x171)|])
                         | None -> ());
                        x170))|])
    let (count_reset : ?label:string -> unit -> unit) =
      fun ?label:(x173 : string option) ->
        fun () ->
          ignore
            (let x176 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x176 "countReset") "apply"
               [|x176;((let x174 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x173 with
                         | Some x175 ->
                             ignore
                               (Ojs.call x174 "push"
                                  [|(Ojs.string_to_js x175)|])
                         | None -> ());
                        x174))|])
    let (debug : string -> params:any list -> unit -> unit) =
      fun (x177 : string) ->
        fun ~params:(x178 : any list) ->
          fun () ->
            ignore
              (let x181 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x181 "debug") "apply"
                 [|x181;((let x179 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x179 "push" [|(Ojs.string_to_js x177)|]);
                          List.iter
                            (fun (x180 : any) ->
                               ignore
                                 (Ojs.call x179 "push" [|(any_to_js x180)|]))
                            x178;
                          x179))|])
    let (dir :
      any -> ?options:Node_util.Util.InspectOptions.t -> unit -> unit) =
      fun (x182 : any) ->
        fun ?options:(x183 : Node_util.Util.InspectOptions.t option) ->
          fun () ->
            ignore
              (let x186 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x186 "dir") "apply"
                 [|x186;((let x184 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore (Ojs.call x184 "push" [|(any_to_js x182)|]);
                          (match x183 with
                           | Some x185 ->
                               ignore
                                 (Ojs.call x184 "push"
                                    [|(Node_util.Util.InspectOptions.t_to_js
                                         x185)|])
                           | None -> ());
                          x184))|])
    let (dirxml : any list -> unit) =
      fun (x187 : any list) ->
        ignore
          (let x190 = Import.console in
           Ojs.call (Ojs.get_prop_ascii x190 "dirxml") "apply"
             [|x190;((let x188 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x189 : any) ->
                           ignore (Ojs.call x188 "push" [|(any_to_js x189)|]))
                        x187;
                      x188))|])
    let (error : string -> params:any list -> unit -> unit) =
      fun (x191 : string) ->
        fun ~params:(x192 : any list) ->
          fun () ->
            ignore
              (let x195 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x195 "error") "apply"
                 [|x195;((let x193 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x193 "push" [|(Ojs.string_to_js x191)|]);
                          List.iter
                            (fun (x194 : any) ->
                               ignore
                                 (Ojs.call x193 "push" [|(any_to_js x194)|]))
                            x192;
                          x193))|])
    let (group : any list -> unit) =
      fun (x196 : any list) ->
        ignore
          (let x199 = Import.console in
           Ojs.call (Ojs.get_prop_ascii x199 "group") "apply"
             [|x199;((let x197 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x198 : any) ->
                           ignore (Ojs.call x197 "push" [|(any_to_js x198)|]))
                        x196;
                      x197))|])
    let (group_collapsed : any list -> unit) =
      fun (x200 : any list) ->
        ignore
          (let x203 = Import.console in
           Ojs.call (Ojs.get_prop_ascii x203 "groupCollapsed") "apply"
             [|x203;((let x201 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x202 : any) ->
                           ignore (Ojs.call x201 "push" [|(any_to_js x202)|]))
                        x200;
                      x201))|])
    let (group_end : unit) =
      Ojs.unit_of_js (Ojs.get_prop_ascii Import.console "groupEnd")
    let (info : string -> params:any list -> unit) =
      fun (x204 : string) ->
        fun ~params:(x205 : any list) ->
          ignore
            (let x208 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x208 "info") "apply"
               [|x208;((let x206 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x206 "push" [|(Ojs.string_to_js x204)|]);
                        List.iter
                          (fun (x207 : any) ->
                             ignore
                               (Ojs.call x206 "push" [|(any_to_js x207)|]))
                          x205;
                        x206))|])
    let (log : string -> params:any list -> unit -> unit) =
      fun (x209 : string) ->
        fun ~params:(x210 : any list) ->
          fun () ->
            ignore
              (let x213 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x213 "log") "apply"
                 [|x213;((let x211 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x211 "push" [|(Ojs.string_to_js x209)|]);
                          List.iter
                            (fun (x212 : any) ->
                               ignore
                                 (Ojs.call x211 "push" [|(any_to_js x212)|]))
                            x210;
                          x211))|])
    let (table : tabular_data:any -> ?properties:string list -> unit -> unit)
      =
      fun ~tabular_data:(x214 : any) ->
        fun ?properties:(x215 : string list option) ->
          fun () ->
            ignore
              (let x219 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x219 "table") "apply"
                 [|x219;((let x216 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore (Ojs.call x216 "push" [|(any_to_js x214)|]);
                          (match x215 with
                           | Some x217 ->
                               ignore
                                 (Ojs.call x216 "push"
                                    [|(Ojs.list_to_js Ojs.string_to_js x217)|])
                           | None -> ());
                          x216))|])
    let (time : ?label:string -> unit -> unit) =
      fun ?label:(x220 : string option) ->
        fun () ->
          ignore
            (let x223 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x223 "time") "apply"
               [|x223;((let x221 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x220 with
                         | Some x222 ->
                             ignore
                               (Ojs.call x221 "push"
                                  [|(Ojs.string_to_js x222)|])
                         | None -> ());
                        x221))|])
    let (time_end : ?label:string -> unit -> unit) =
      fun ?label:(x224 : string option) ->
        fun () ->
          ignore
            (let x227 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x227 "timeEnd") "apply"
               [|x227;((let x225 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x224 with
                         | Some x226 ->
                             ignore
                               (Ojs.call x225 "push"
                                  [|(Ojs.string_to_js x226)|])
                         | None -> ());
                        x225))|])
    let (time_log : ?label:string -> data:any list -> unit -> unit) =
      fun ?label:(x228 : string option) ->
        fun ~data:(x229 : any list) ->
          fun () ->
            ignore
              (let x233 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x233 "timeLog") "apply"
                 [|x233;((let x230 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x228 with
                           | Some x232 ->
                               ignore
                                 (Ojs.call x230 "push"
                                    [|(Ojs.string_to_js x232)|])
                           | None -> ());
                          List.iter
                            (fun (x231 : any) ->
                               ignore
                                 (Ojs.call x230 "push" [|(any_to_js x231)|]))
                            x229;
                          x230))|])
    let (trace : string -> params:any list -> unit -> unit) =
      fun (x234 : string) ->
        fun ~params:(x235 : any list) ->
          fun () ->
            ignore
              (let x238 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x238 "trace") "apply"
                 [|x238;((let x236 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x236 "push" [|(Ojs.string_to_js x234)|]);
                          List.iter
                            (fun (x237 : any) ->
                               ignore
                                 (Ojs.call x236 "push" [|(any_to_js x237)|]))
                            x235;
                          x236))|])
    let (warn : string -> params:any list -> unit -> unit) =
      fun (x239 : string) ->
        fun ~params:(x240 : any list) ->
          fun () ->
            ignore
              (let x243 = Import.console in
               Ojs.call (Ojs.get_prop_ascii x243 "warn") "apply"
                 [|x243;((let x241 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x241 "push" [|(Ojs.string_to_js x239)|]);
                          List.iter
                            (fun (x242 : any) ->
                               ignore
                                 (Ojs.call x241 "push" [|(any_to_js x242)|]))
                            x240;
                          x241))|])
    let (profile : ?label:string -> unit -> unit) =
      fun ?label:(x244 : string option) ->
        fun () ->
          ignore
            (let x247 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x247 "profile") "apply"
               [|x247;((let x245 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x244 with
                         | Some x246 ->
                             ignore
                               (Ojs.call x245 "push"
                                  [|(Ojs.string_to_js x246)|])
                         | None -> ());
                        x245))|])
    let (profile_end : ?label:string -> unit -> unit) =
      fun ?label:(x248 : string option) ->
        fun () ->
          ignore
            (let x251 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x251 "profileEnd") "apply"
               [|x251;((let x249 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x248 with
                         | Some x250 ->
                             ignore
                               (Ojs.call x249 "push"
                                  [|(Ojs.string_to_js x250)|])
                         | None -> ());
                        x249))|])
    let (time_stamp : ?label:string -> unit -> unit) =
      fun ?label:(x252 : string option) ->
        fun () ->
          ignore
            (let x255 = Import.console in
             Ojs.call (Ojs.get_prop_ascii x255 "timeStamp") "apply"
               [|x255;((let x253 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x252 with
                         | Some x254 ->
                             ignore
                               (Ojs.call x253 "push"
                                  [|(Ojs.string_to_js x254)|])
                         | None -> ());
                        x253))|])
  end
