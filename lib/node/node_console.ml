[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
module Internal =
  struct
    module AnonymousInterfaces = struct  end
    module Types =
      struct
        open AnonymousInterfaces
        type console_global_Console = [ `Console_global_Console ] intf
        and console_global_NodeJS_ConsoleConstructor =
          [ `Console_global_NodeJS_ConsoleConstructor ] intf
        and console_global_NodeJS_ConsoleConstructorOptions =
          [ `Console_global_NodeJS_ConsoleConstructorOptions ] intf
        and console_global_NodeJS_Global =
          [ `Console_global_NodeJS_Global ] intf
        let rec console_global_Console_of_js :
          Ojs.t -> console_global_Console = Obj.magic
        and console_global_Console_to_js : console_global_Console -> Ojs.t =
          Obj.magic
        and console_global_NodeJS_ConsoleConstructor_of_js :
          Ojs.t -> console_global_NodeJS_ConsoleConstructor = Obj.magic
        and console_global_NodeJS_ConsoleConstructor_to_js :
          console_global_NodeJS_ConsoleConstructor -> Ojs.t = Obj.magic
        and console_global_NodeJS_ConsoleConstructorOptions_of_js :
          Ojs.t -> console_global_NodeJS_ConsoleConstructorOptions =
          Obj.magic
        and console_global_NodeJS_ConsoleConstructorOptions_to_js :
          console_global_NodeJS_ConsoleConstructorOptions -> Ojs.t =
          Obj.magic
        and console_global_NodeJS_Global_of_js :
          Ojs.t -> console_global_NodeJS_Global = Obj.magic
        and console_global_NodeJS_Global_to_js :
          console_global_NodeJS_Global -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module Console =
  struct
    module Console =
      struct
        type t = console_global_Console
        let rec t_of_js : Ojs.t -> t =
          fun (x2 : Ojs.t) -> console_global_Console_of_js x2
        and t_to_js : t -> Ojs.t =
          fun (x1 : console_global_Console) ->
            console_global_Console_to_js x1
        let (get_Console : t -> console_global_NodeJS_ConsoleConstructor) =
          fun (x3 : t) ->
            console_global_NodeJS_ConsoleConstructor_of_js
              (Ojs.get_prop_ascii (t_to_js x3) "Console")
        let (set_Console :
          t -> console_global_NodeJS_ConsoleConstructor -> unit) =
          fun (x4 : t) ->
            fun (x5 : console_global_NodeJS_ConsoleConstructor) ->
              Ojs.set_prop_ascii (t_to_js x4) "Console"
                (console_global_NodeJS_ConsoleConstructor_to_js x5)
        let (assert_ :
          t ->
            value:any -> ?message:string -> optionalParams:any list -> unit)
          =
          fun (x12 : t) ->
            fun ~value:(x6 : any) ->
              fun ?message:(x7 : string option) ->
                fun ~optionalParams:(x8 : any list) ->
                  ignore
                    (let x13 = t_to_js x12 in
                     Ojs.call (Ojs.get_prop_ascii x13 "assert") "apply"
                       [|x13;((let x9 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore (Ojs.call x9 "push" [|(any_to_js x6)|]);
                               (match x7 with
                                | Some x11 ->
                                    ignore
                                      (Ojs.call x9 "push"
                                         [|(Ojs.string_to_js x11)|])
                                | None -> ());
                               List.iter
                                 (fun (x10 : any) ->
                                    ignore
                                      (Ojs.call x9 "push" [|(any_to_js x10)|]))
                                 x8;
                               x9))|])
        let (clear : t -> unit) =
          fun (x14 : t) -> ignore (Ojs.call (t_to_js x14) "clear" [||])
        let (count : t -> ?label:string -> unit -> unit) =
          fun (x18 : t) ->
            fun ?label:(x15 : string option) ->
              fun () ->
                ignore
                  (let x19 = t_to_js x18 in
                   Ojs.call (Ojs.get_prop_ascii x19 "count") "apply"
                     [|x19;((let x16 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x15 with
                              | Some x17 ->
                                  ignore
                                    (Ojs.call x16 "push"
                                       [|(Ojs.string_to_js x17)|])
                              | None -> ());
                             x16))|])
        let (countReset : t -> ?label:string -> unit -> unit) =
          fun (x23 : t) ->
            fun ?label:(x20 : string option) ->
              fun () ->
                ignore
                  (let x24 = t_to_js x23 in
                   Ojs.call (Ojs.get_prop_ascii x24 "countReset") "apply"
                     [|x24;((let x21 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x20 with
                              | Some x22 ->
                                  ignore
                                    (Ojs.call x21 "push"
                                       [|(Ojs.string_to_js x22)|])
                              | None -> ());
                             x21))|])
        let (debug : t -> ?message:any -> optionalParams:any list -> unit) =
          fun (x30 : t) ->
            fun ?message:(x25 : any option) ->
              fun ~optionalParams:(x26 : any list) ->
                ignore
                  (let x31 = t_to_js x30 in
                   Ojs.call (Ojs.get_prop_ascii x31 "debug") "apply"
                     [|x31;((let x27 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x25 with
                              | Some x29 ->
                                  ignore
                                    (Ojs.call x27 "push" [|(any_to_js x29)|])
                              | None -> ());
                             List.iter
                               (fun (x28 : any) ->
                                  ignore
                                    (Ojs.call x27 "push" [|(any_to_js x28)|]))
                               x26;
                             x27))|])
        let (dir :
          t ->
            obj:any ->
              ?options:Node_util.Util.InspectOptions.t -> unit -> unit)
          =
          fun (x36 : t) ->
            fun ~obj:(x32 : any) ->
              fun ?options:(x33 : Node_util.Util.InspectOptions.t option) ->
                fun () ->
                  ignore
                    (let x37 = t_to_js x36 in
                     Ojs.call (Ojs.get_prop_ascii x37 "dir") "apply"
                       [|x37;((let x34 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x34 "push" [|(any_to_js x32)|]);
                               (match x33 with
                                | Some x35 ->
                                    ignore
                                      (Ojs.call x34 "push"
                                         [|(Node_util.Util.InspectOptions.t_to_js
                                              x35)|])
                                | None -> ());
                               x34))|])
        let (dirxml : t -> data:any list -> unit) =
          fun (x41 : t) ->
            fun ~data:(x38 : any list) ->
              ignore
                (let x42 = t_to_js x41 in
                 Ojs.call (Ojs.get_prop_ascii x42 "dirxml") "apply"
                   [|x42;((let x39 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x40 : any) ->
                                ignore
                                  (Ojs.call x39 "push" [|(any_to_js x40)|]))
                             x38;
                           x39))|])
        let (error : t -> ?message:any -> optionalParams:any list -> unit) =
          fun (x48 : t) ->
            fun ?message:(x43 : any option) ->
              fun ~optionalParams:(x44 : any list) ->
                ignore
                  (let x49 = t_to_js x48 in
                   Ojs.call (Ojs.get_prop_ascii x49 "error") "apply"
                     [|x49;((let x45 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x43 with
                              | Some x47 ->
                                  ignore
                                    (Ojs.call x45 "push" [|(any_to_js x47)|])
                              | None -> ());
                             List.iter
                               (fun (x46 : any) ->
                                  ignore
                                    (Ojs.call x45 "push" [|(any_to_js x46)|]))
                               x44;
                             x45))|])
        let (group : t -> label:any list -> unit) =
          fun (x53 : t) ->
            fun ~label:(x50 : any list) ->
              ignore
                (let x54 = t_to_js x53 in
                 Ojs.call (Ojs.get_prop_ascii x54 "group") "apply"
                   [|x54;((let x51 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x52 : any) ->
                                ignore
                                  (Ojs.call x51 "push" [|(any_to_js x52)|]))
                             x50;
                           x51))|])
        let (groupCollapsed : t -> label:any list -> unit) =
          fun (x58 : t) ->
            fun ~label:(x55 : any list) ->
              ignore
                (let x59 = t_to_js x58 in
                 Ojs.call (Ojs.get_prop_ascii x59 "groupCollapsed") "apply"
                   [|x59;((let x56 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x57 : any) ->
                                ignore
                                  (Ojs.call x56 "push" [|(any_to_js x57)|]))
                             x55;
                           x56))|])
        let (groupEnd : t -> unit) =
          fun (x60 : t) -> ignore (Ojs.call (t_to_js x60) "groupEnd" [||])
        let (info : t -> ?message:any -> optionalParams:any list -> unit) =
          fun (x66 : t) ->
            fun ?message:(x61 : any option) ->
              fun ~optionalParams:(x62 : any list) ->
                ignore
                  (let x67 = t_to_js x66 in
                   Ojs.call (Ojs.get_prop_ascii x67 "info") "apply"
                     [|x67;((let x63 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x61 with
                              | Some x65 ->
                                  ignore
                                    (Ojs.call x63 "push" [|(any_to_js x65)|])
                              | None -> ());
                             List.iter
                               (fun (x64 : any) ->
                                  ignore
                                    (Ojs.call x63 "push" [|(any_to_js x64)|]))
                               x62;
                             x63))|])
        let (log : t -> ?message:any -> optionalParams:any list -> unit) =
          fun (x73 : t) ->
            fun ?message:(x68 : any option) ->
              fun ~optionalParams:(x69 : any list) ->
                ignore
                  (let x74 = t_to_js x73 in
                   Ojs.call (Ojs.get_prop_ascii x74 "log") "apply"
                     [|x74;((let x70 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x68 with
                              | Some x72 ->
                                  ignore
                                    (Ojs.call x70 "push" [|(any_to_js x72)|])
                              | None -> ());
                             List.iter
                               (fun (x71 : any) ->
                                  ignore
                                    (Ojs.call x70 "push" [|(any_to_js x71)|]))
                               x69;
                             x70))|])
        let (table :
          t -> tabularData:any -> ?properties:string list -> unit -> unit) =
          fun (x80 : t) ->
            fun ~tabularData:(x75 : any) ->
              fun ?properties:(x76 : string list option) ->
                fun () ->
                  ignore
                    (let x81 = t_to_js x80 in
                     Ojs.call (Ojs.get_prop_ascii x81 "table") "apply"
                       [|x81;((let x77 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x77 "push" [|(any_to_js x75)|]);
                               (match x76 with
                                | Some x78 ->
                                    ignore
                                      (Ojs.call x77 "push"
                                         [|(Ojs.list_to_js Ojs.string_to_js
                                              x78)|])
                                | None -> ());
                               x77))|])
        let (time : t -> ?label:string -> unit -> unit) =
          fun (x85 : t) ->
            fun ?label:(x82 : string option) ->
              fun () ->
                ignore
                  (let x86 = t_to_js x85 in
                   Ojs.call (Ojs.get_prop_ascii x86 "time") "apply"
                     [|x86;((let x83 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x82 with
                              | Some x84 ->
                                  ignore
                                    (Ojs.call x83 "push"
                                       [|(Ojs.string_to_js x84)|])
                              | None -> ());
                             x83))|])
        let (timeEnd : t -> ?label:string -> unit -> unit) =
          fun (x90 : t) ->
            fun ?label:(x87 : string option) ->
              fun () ->
                ignore
                  (let x91 = t_to_js x90 in
                   Ojs.call (Ojs.get_prop_ascii x91 "timeEnd") "apply"
                     [|x91;((let x88 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x87 with
                              | Some x89 ->
                                  ignore
                                    (Ojs.call x88 "push"
                                       [|(Ojs.string_to_js x89)|])
                              | None -> ());
                             x88))|])
        let (timeLog : t -> ?label:string -> data:any list -> unit) =
          fun (x97 : t) ->
            fun ?label:(x92 : string option) ->
              fun ~data:(x93 : any list) ->
                ignore
                  (let x98 = t_to_js x97 in
                   Ojs.call (Ojs.get_prop_ascii x98 "timeLog") "apply"
                     [|x98;((let x94 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x92 with
                              | Some x96 ->
                                  ignore
                                    (Ojs.call x94 "push"
                                       [|(Ojs.string_to_js x96)|])
                              | None -> ());
                             List.iter
                               (fun (x95 : any) ->
                                  ignore
                                    (Ojs.call x94 "push" [|(any_to_js x95)|]))
                               x93;
                             x94))|])
        let (trace : t -> ?message:any -> optionalParams:any list -> unit) =
          fun (x104 : t) ->
            fun ?message:(x99 : any option) ->
              fun ~optionalParams:(x100 : any list) ->
                ignore
                  (let x105 = t_to_js x104 in
                   Ojs.call (Ojs.get_prop_ascii x105 "trace") "apply"
                     [|x105;((let x101 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x99 with
                               | Some x103 ->
                                   ignore
                                     (Ojs.call x101 "push"
                                        [|(any_to_js x103)|])
                               | None -> ());
                              List.iter
                                (fun (x102 : any) ->
                                   ignore
                                     (Ojs.call x101 "push"
                                        [|(any_to_js x102)|])) x100;
                              x101))|])
        let (warn : t -> ?message:any -> optionalParams:any list -> unit) =
          fun (x111 : t) ->
            fun ?message:(x106 : any option) ->
              fun ~optionalParams:(x107 : any list) ->
                ignore
                  (let x112 = t_to_js x111 in
                   Ojs.call (Ojs.get_prop_ascii x112 "warn") "apply"
                     [|x112;((let x108 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x106 with
                               | Some x110 ->
                                   ignore
                                     (Ojs.call x108 "push"
                                        [|(any_to_js x110)|])
                               | None -> ());
                              List.iter
                                (fun (x109 : any) ->
                                   ignore
                                     (Ojs.call x108 "push"
                                        [|(any_to_js x109)|])) x107;
                              x108))|])
        let (profile : t -> ?label:string -> unit -> unit) =
          fun (x116 : t) ->
            fun ?label:(x113 : string option) ->
              fun () ->
                ignore
                  (let x117 = t_to_js x116 in
                   Ojs.call (Ojs.get_prop_ascii x117 "profile") "apply"
                     [|x117;((let x114 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x113 with
                               | Some x115 ->
                                   ignore
                                     (Ojs.call x114 "push"
                                        [|(Ojs.string_to_js x115)|])
                               | None -> ());
                              x114))|])
        let (profileEnd : t -> ?label:string -> unit -> unit) =
          fun (x121 : t) ->
            fun ?label:(x118 : string option) ->
              fun () ->
                ignore
                  (let x122 = t_to_js x121 in
                   Ojs.call (Ojs.get_prop_ascii x122 "profileEnd") "apply"
                     [|x122;((let x119 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x118 with
                               | Some x120 ->
                                   ignore
                                     (Ojs.call x119 "push"
                                        [|(Ojs.string_to_js x120)|])
                               | None -> ());
                              x119))|])
        let (timeStamp : t -> ?label:string -> unit -> unit) =
          fun (x126 : t) ->
            fun ?label:(x123 : string option) ->
              fun () ->
                ignore
                  (let x127 = t_to_js x126 in
                   Ojs.call (Ojs.get_prop_ascii x127 "timeStamp") "apply"
                     [|x127;((let x124 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x123 with
                               | Some x125 ->
                                   ignore
                                     (Ojs.call x124 "push"
                                        [|(Ojs.string_to_js x125)|])
                               | None -> ());
                              x124))|])
        module ConsoleConstructorOptions =
          struct
            type t = console_global_NodeJS_ConsoleConstructorOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x129 : Ojs.t) ->
                console_global_NodeJS_ConsoleConstructorOptions_of_js x129
            and t_to_js : t -> Ojs.t =
              fun (x128 : console_global_NodeJS_ConsoleConstructorOptions) ->
                console_global_NodeJS_ConsoleConstructorOptions_to_js x128
            let (get_stdout : t -> WritableStream.t) =
              fun (x130 : t) ->
                WritableStream.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x130) "stdout")
            let (set_stdout : t -> WritableStream.t -> unit) =
              fun (x131 : t) ->
                fun (x132 : WritableStream.t) ->
                  Ojs.set_prop_ascii (t_to_js x131) "stdout"
                    (WritableStream.t_to_js x132)
            let (get_stderr : t -> WritableStream.t) =
              fun (x133 : t) ->
                WritableStream.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x133) "stderr")
            let (set_stderr : t -> WritableStream.t -> unit) =
              fun (x134 : t) ->
                fun (x135 : WritableStream.t) ->
                  Ojs.set_prop_ascii (t_to_js x134) "stderr"
                    (WritableStream.t_to_js x135)
            let (get_ignoreErrors : t -> bool) =
              fun (x136 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x136) "ignoreErrors")
            let (set_ignoreErrors : t -> bool -> unit) =
              fun (x137 : t) ->
                fun (x138 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x137) "ignoreErrors"
                    (Ojs.bool_to_js x138)
            let (get_colorMode : t -> [ `auto ] or_boolean) =
              fun (x139 : t) ->
                or_boolean_of_js
                  (fun (x140 : Ojs.t) ->
                     let x141 = x140 in
                     match Ojs.string_of_js x141 with
                     | "auto" -> `auto
                     | _ -> assert false)
                  (Ojs.get_prop_ascii (t_to_js x139) "colorMode")
            let (set_colorMode : t -> [ `auto ] or_boolean -> unit) =
              fun (x142 : t) ->
                fun (x143 : [ `auto ] or_boolean) ->
                  Ojs.set_prop_ascii (t_to_js x142) "colorMode"
                    (or_boolean_to_js
                       (fun (x144 : [ `auto ]) ->
                          match x144 with | `auto -> Ojs.string_to_js "auto")
                       x143)
            let (get_inspectOptions : t -> Node_util.Util.InspectOptions.t) =
              fun (x145 : t) ->
                Node_util.Util.InspectOptions.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x145) "inspectOptions")
            let (set_inspectOptions :
              t -> Node_util.Util.InspectOptions.t -> unit) =
              fun (x146 : t) ->
                fun (x147 : Node_util.Util.InspectOptions.t) ->
                  Ojs.set_prop_ascii (t_to_js x146) "inspectOptions"
                    (Node_util.Util.InspectOptions.t_to_js x147)
          end
        module ConsoleConstructor =
          struct
            type t = console_global_NodeJS_ConsoleConstructor
            let rec t_of_js : Ojs.t -> t =
              fun (x149 : Ojs.t) ->
                console_global_NodeJS_ConsoleConstructor_of_js x149
            and t_to_js : t -> Ojs.t =
              fun (x148 : console_global_NodeJS_ConsoleConstructor) ->
                console_global_NodeJS_ConsoleConstructor_to_js x148
            let (get_prototype : t -> console_global_Console) =
              fun (x150 : t) ->
                console_global_Console_of_js
                  (Ojs.get_prop_ascii (t_to_js x150) "prototype")
            let (set_prototype : t -> console_global_Console -> unit) =
              fun (x151 : t) ->
                fun (x152 : console_global_Console) ->
                  Ojs.set_prop_ascii (t_to_js x151) "prototype"
                    (console_global_Console_to_js x152)
            let (create :
              t ->
                stdout:WritableStream.t ->
                  ?stderr:WritableStream.t ->
                    ?ignoreErrors:bool -> unit -> console_global_Console)
              =
              fun (x159 : t) ->
                fun ~stdout:(x153 : WritableStream.t) ->
                  fun ?stderr:(x154 : WritableStream.t option) ->
                    fun ?ignoreErrors:(x155 : bool option) ->
                      fun () ->
                        console_global_Console_of_js
                          (Ojs.new_obj_arr (t_to_js x159)
                             (let x156 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x156 "push"
                                   [|(WritableStream.t_to_js x153)|]);
                              (match x154 with
                               | Some x158 ->
                                   ignore
                                     (Ojs.call x156 "push"
                                        [|(WritableStream.t_to_js x158)|])
                               | None -> ());
                              (match x155 with
                               | Some x157 ->
                                   ignore
                                     (Ojs.call x156 "push"
                                        [|(Ojs.bool_to_js x157)|])
                               | None -> ());
                              x156))
            let (create' :
              t ->
                options:console_global_NodeJS_ConsoleConstructorOptions ->
                  console_global_Console)
              =
              fun (x161 : t) ->
                fun
                  ~options:(x160 :
                             console_global_NodeJS_ConsoleConstructorOptions)
                  ->
                  console_global_Console_of_js
                    (Ojs.new_obj (t_to_js x161)
                       [|(console_global_NodeJS_ConsoleConstructorOptions_to_js
                            x160)|])
          end
        module Global =
          struct
            type t = console_global_NodeJS_Global
            let rec t_of_js : Ojs.t -> t =
              fun (x163 : Ojs.t) -> console_global_NodeJS_Global_of_js x163
            and t_to_js : t -> Ojs.t =
              fun (x162 : console_global_NodeJS_Global) ->
                console_global_NodeJS_Global_to_js x162
            let (get_console : t -> console_global_Console) =
              fun (x164 : t) ->
                console_global_Console_of_js
                  (Ojs.get_prop_ascii (t_to_js x164) "console")
            let (set_console : t -> console_global_Console -> unit) =
              fun (x165 : t) ->
                fun (x166 : console_global_Console) ->
                  Ojs.set_prop_ascii (t_to_js x165) "console"
                    (console_global_Console_to_js x166)
          end
      end
  end
let (console : console_global_Console) =
  console_global_Console_of_js (Ojs.get_prop_ascii Ojs.global "console")
