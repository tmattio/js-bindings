[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
open Node_http
open Node_tls
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_reject_unauthorized : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3) "rejectUnauthorized")
    let (set_reject_unauthorized : t -> bool -> unit) =
      fun (x4 : t) ->
        fun (x5 : bool) ->
          Ojs.set_prop_ascii (t_to_js x4) "rejectUnauthorized"
            (Ojs.bool_to_js x5)
    let (get_servername : t -> string) =
      fun (x6 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6) "servername")
    let (set_servername : t -> string -> unit) =
      fun (x7 : t) ->
        fun (x8 : string) ->
          Ojs.set_prop_ascii (t_to_js x7) "servername" (Ojs.string_to_js x8)
  end
module Https =
  struct
    open Node_tls
    open Node_http
    module ServerOptions =
      struct
        type t =
          (Tls.SecureContextOptions.t, Tls.TlsOptions.t,
            Http.ServerOptions.t) intersection3
        let rec t_of_js : Ojs.t -> t =
          fun (x13 : Ojs.t) ->
            intersection3_of_js Tls.SecureContextOptions.t_of_js
              Tls.TlsOptions.t_of_js Http.ServerOptions.t_of_js x13
        and t_to_js : t -> Ojs.t =
          fun
            (x9 :
              (Tls.SecureContextOptions.t, Tls.TlsOptions.t,
                Http.ServerOptions.t) intersection3)
            ->
            intersection3_to_js Tls.SecureContextOptions.t_to_js
              Tls.TlsOptions.t_to_js Http.ServerOptions.t_to_js x9
      end
    module RequestOptions =
      struct
        type t =
          (Http.RequestOptions.t, Tls.SecureContextOptions.t,
            AnonymousInterface0.t) intersection3
        let rec t_of_js : Ojs.t -> t =
          fun (x21 : Ojs.t) ->
            intersection3_of_js Http.RequestOptions.t_of_js
              Tls.SecureContextOptions.t_of_js AnonymousInterface0.t_of_js
              x21
        and t_to_js : t -> Ojs.t =
          fun
            (x17 :
              (Http.RequestOptions.t, Tls.SecureContextOptions.t,
                AnonymousInterface0.t) intersection3)
            ->
            intersection3_to_js Http.RequestOptions.t_to_js
              Tls.SecureContextOptions.t_to_js AnonymousInterface0.t_to_js
              x17
      end
    module AgentOptions =
      struct
        include struct include Http.AgentOptions end
        let (get_reject_unauthorized : t -> bool) =
          fun (x25 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x25) "rejectUnauthorized")
        let (set_reject_unauthorized : t -> bool -> unit) =
          fun (x26 : t) ->
            fun (x27 : bool) ->
              Ojs.set_prop_ascii (t_to_js x26) "rejectUnauthorized"
                (Ojs.bool_to_js x27)
        let (get_max_cached_sessions : t -> int) =
          fun (x28 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x28) "maxCachedSessions")
        let (set_max_cached_sessions : t -> int -> unit) =
          fun (x29 : t) ->
            fun (x30 : int) ->
              Ojs.set_prop_ascii (t_to_js x29) "maxCachedSessions"
                (Ojs.int_to_js x30)
        let (cast' : t -> Tls.ConnectionOptions.t) =
          fun (x31 : t) -> Tls.ConnectionOptions.t_of_js (t_to_js x31)
      end
    module Agent =
      struct
        include struct include Http.Agent end
        let (create : ?options:AgentOptions.t -> unit -> t) =
          fun ?options:(x32 : AgentOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Import.https "Agent")
                   (let x33 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x32 with
                     | Some x34 ->
                         ignore
                           (Ojs.call x33 "push"
                              [|(AgentOptions.t_to_js x34)|])
                     | None -> ());
                    x33))
        let (get_options : t -> AgentOptions.t) =
          fun (x35 : t) ->
            AgentOptions.t_of_js (Ojs.get_prop_ascii (t_to_js x35) "options")
        let (set_options : t -> AgentOptions.t -> unit) =
          fun (x36 : t) ->
            fun (x37 : AgentOptions.t) ->
              Ojs.set_prop_ascii (t_to_js x36) "options"
                (AgentOptions.t_to_js x37)
      end
    module Server =
      struct
        include struct include Http.HttpBase end
        include struct include Tls.Server end
        let (create : ?request_listener:Http.RequestListener.t -> unit -> t)
          =
          fun ?request_listener:(x38 : Http.RequestListener.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Import.https "Server")
                   (let x39 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x38 with
                     | Some x40 ->
                         ignore
                           (Ojs.call x39 "push"
                              [|(Http.RequestListener.t_to_js x40)|])
                     | None -> ());
                    x39))
        let (create' :
          options:ServerOptions.t ->
            ?request_listener:Http.RequestListener.t -> unit -> t)
          =
          fun ~options:(x41 : ServerOptions.t) ->
            fun ?request_listener:(x42 : Http.RequestListener.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr (Ojs.get_prop_ascii Import.https "Server")
                     (let x43 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x43 "push" [|(ServerOptions.t_to_js x41)|]);
                      (match x42 with
                       | Some x44 ->
                           ignore
                             (Ojs.call x43 "push"
                                [|(Http.RequestListener.t_to_js x44)|])
                       | None -> ());
                      x43))
      end
    let (create_server :
      options:ServerOptions.t ->
        ?request_listener:Http.RequestListener.t -> unit -> Server.t)
      =
      fun ~options:(x45 : ServerOptions.t) ->
        fun ?request_listener:(x46 : Http.RequestListener.t option) ->
          fun () ->
            Server.t_of_js
              (let x49 = Import.https in
               Ojs.call (Ojs.get_prop_ascii x49 "createServer") "apply"
                 [|x49;((let x47 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x47 "push"
                              [|(ServerOptions.t_to_js x45)|]);
                         (match x46 with
                          | Some x48 ->
                              ignore
                                (Ojs.call x47 "push"
                                   [|(Http.RequestListener.t_to_js x48)|])
                          | None -> ());
                         x47))|])
    let (request :
      url:Node_url.Url.Url.t or_string ->
        ?options:RequestOptions.t ->
          ?callback:(res:Http.IncomingMessage.t -> unit) ->
            unit -> Http.ClientRequest.t)
      =
      fun ~url:(x50 : Node_url.Url.Url.t or_string) ->
        fun ?options:(x51 : RequestOptions.t option) ->
          fun ?callback:(x52 : (res:Http.IncomingMessage.t -> unit) option)
            ->
            fun () ->
              Http.ClientRequest.t_of_js
                (let x58 = Import.https in
                 Ojs.call (Ojs.get_prop_ascii x58 "request") "apply"
                   [|x58;((let x53 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x53 "push"
                                [|(or_string_to_js Node_url.Url.Url.t_to_js
                                     x50)|]);
                           (match x51 with
                            | Some x56 ->
                                ignore
                                  (Ojs.call x53 "push"
                                     [|(RequestOptions.t_to_js x56)|])
                            | None -> ());
                           (match x52 with
                            | Some x54 ->
                                ignore
                                  (Ojs.call x53 "push"
                                     [|(Ojs.fun_to_js 1
                                          (fun (x55 : Ojs.t) ->
                                             x54
                                               ~res:(Http.IncomingMessage.t_of_js
                                                       x55)))|])
                            | None -> ());
                           x53))|])
    let (get :
      url:Node_url.Url.Url.t or_string ->
        ?options:RequestOptions.t ->
          ?callback:(res:Http.IncomingMessage.t -> unit) ->
            unit -> Http.ClientRequest.t)
      =
      fun ~url:(x59 : Node_url.Url.Url.t or_string) ->
        fun ?options:(x60 : RequestOptions.t option) ->
          fun ?callback:(x61 : (res:Http.IncomingMessage.t -> unit) option)
            ->
            fun () ->
              Http.ClientRequest.t_of_js
                (let x67 = Import.https in
                 Ojs.call (Ojs.get_prop_ascii x67 "get") "apply"
                   [|x67;((let x62 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x62 "push"
                                [|(or_string_to_js Node_url.Url.Url.t_to_js
                                     x59)|]);
                           (match x60 with
                            | Some x65 ->
                                ignore
                                  (Ojs.call x62 "push"
                                     [|(RequestOptions.t_to_js x65)|])
                            | None -> ());
                           (match x61 with
                            | Some x63 ->
                                ignore
                                  (Ojs.call x62 "push"
                                     [|(Ojs.fun_to_js 1
                                          (fun (x64 : Ojs.t) ->
                                             x63
                                               ~res:(Http.IncomingMessage.t_of_js
                                                       x64)))|])
                            | None -> ());
                           x62))|])
    let (global_agent : Agent.t) =
      Agent.t_of_js (Ojs.get_prop_ascii Import.https "globalAgent")
  end
