[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type anonymous_interface_5 = [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js : Ojs.t -> anonymous_interface_5
          = Obj.magic
        and anonymous_interface_5_to_js : anonymous_interface_5 -> Ojs.t =
          Obj.magic
        type anonymous_interface_6 = [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js : Ojs.t -> anonymous_interface_6
          = Obj.magic
        and anonymous_interface_6_to_js : anonymous_interface_6 -> Ojs.t =
          Obj.magic
        type anonymous_interface_7 = [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js : Ojs.t -> anonymous_interface_7
          = Obj.magic
        and anonymous_interface_7_to_js : anonymous_interface_7 -> Ojs.t =
          Obj.magic
        type anonymous_interface_8 = [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js : Ojs.t -> anonymous_interface_8
          = Obj.magic
        and anonymous_interface_8_to_js : anonymous_interface_8 -> Ojs.t =
          Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type process_global_NodeJS_BeforeExitListener =
          [ `Process_global_NodeJS_BeforeExitListener ] intf
        and process_global_NodeJS_CpuUsage =
          [ `Process_global_NodeJS_CpuUsage ] intf
        and process_global_NodeJS_DisconnectListener =
          [ `Process_global_NodeJS_DisconnectListener ] intf
        and process_global_NodeJS_ExitListener =
          [ `Process_global_NodeJS_ExitListener ] intf
        and process_global_NodeJS_Global =
          [ `Process_global_NodeJS_Global ] intf
        and process_global_NodeJS_HRTime =
          [ `Process_global_NodeJS_HRTime ] intf
        and process_global_NodeJS_MemoryUsage =
          [ `Process_global_NodeJS_MemoryUsage ] intf
        and process_global_NodeJS_MessageListener =
          [ `Process_global_NodeJS_MessageListener ] intf
        and process_global_NodeJS_MultipleResolveListener =
          [ `Process_global_NodeJS_MultipleResolveListener ] intf
        and process_global_NodeJS_MultipleResolveType =
          [ `reject  | `resolve ]
        and process_global_NodeJS_NewListenerListener =
          [ `Process_global_NodeJS_NewListenerListener ] intf
        and process_global_NodeJS_Platform =
          [ `aix  | `android  | `cygwin  | `darwin  | `freebsd  | `linux 
          | `netbsd  | `openbsd  | `sunos  | `win32 ]
        and process_global_NodeJS_Process =
          [ `Process_global_NodeJS_Process ] intf
        and process_global_NodeJS_ProcessEnv =
          [ `Process_global_NodeJS_ProcessEnv ] intf
        and process_global_NodeJS_ProcessRelease =
          [ `Process_global_NodeJS_ProcessRelease ] intf
        and process_global_NodeJS_ProcessReport =
          [ `Process_global_NodeJS_ProcessReport ] intf
        and process_global_NodeJS_ProcessVersions =
          [ `Process_global_NodeJS_ProcessVersions ] intf
        and process_global_NodeJS_ReadStream =
          [ `Process_global_NodeJS_ReadStream ] intf
        and process_global_NodeJS_RejectionHandledListener =
          [ `Process_global_NodeJS_RejectionHandledListener ] intf
        and process_global_NodeJS_RemoveListenerListener =
          [ `Process_global_NodeJS_RemoveListenerListener ] intf
        and process_global_NodeJS_ResourceUsage =
          [ `Process_global_NodeJS_ResourceUsage ] intf
        and process_global_NodeJS_Signals =
          [ `SIGABRT  | `SIGALRM  | `SIGBREAK  | `SIGBUS  | `SIGCHLD 
          | `SIGCONT  | `SIGFPE  | `SIGHUP  | `SIGILL  | `SIGINFO  | 
            `SIGINT 
          | `SIGIO  | `SIGIOT  | `SIGKILL  | `SIGLOST  | `SIGPIPE 
          | `SIGPOLL  | `SIGPROF  | `SIGPWR  | `SIGQUIT  | `SIGSEGV 
          | `SIGSTKFLT  | `SIGSTOP  | `SIGSYS  | `SIGTERM  | `SIGTRAP 
          | `SIGTSTP  | `SIGTTIN  | `SIGTTOU  | `SIGUNUSED  | `SIGURG 
          | `SIGUSR1  | `SIGUSR2  | `SIGVTALRM  | `SIGWINCH  | `SIGXCPU 
          | `SIGXFSZ ]
        and process_global_NodeJS_SignalsListener =
          [ `Process_global_NodeJS_SignalsListener ] intf
        and process_global_NodeJS_Socket =
          [ `Process_global_NodeJS_Socket ] intf
        and process_global_NodeJS_UncaughtExceptionListener =
          [ `Process_global_NodeJS_UncaughtExceptionListener ] intf
        and process_global_NodeJS_UnhandledRejectionListener =
          [ `Process_global_NodeJS_UnhandledRejectionListener ] intf
        and process_global_NodeJS_WarningListener =
          [ `Process_global_NodeJS_WarningListener ] intf
        and process_global_NodeJS_WriteStream =
          [ `Process_global_NodeJS_WriteStream ] intf
        let rec process_global_NodeJS_BeforeExitListener_of_js :
          Ojs.t -> process_global_NodeJS_BeforeExitListener = Obj.magic
        and process_global_NodeJS_BeforeExitListener_to_js :
          process_global_NodeJS_BeforeExitListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_CpuUsage_of_js :
          Ojs.t -> process_global_NodeJS_CpuUsage = Obj.magic
        and process_global_NodeJS_CpuUsage_to_js :
          process_global_NodeJS_CpuUsage -> Ojs.t = Obj.magic
        and process_global_NodeJS_DisconnectListener_of_js :
          Ojs.t -> process_global_NodeJS_DisconnectListener = Obj.magic
        and process_global_NodeJS_DisconnectListener_to_js :
          process_global_NodeJS_DisconnectListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_ExitListener_of_js :
          Ojs.t -> process_global_NodeJS_ExitListener = Obj.magic
        and process_global_NodeJS_ExitListener_to_js :
          process_global_NodeJS_ExitListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_Global_of_js :
          Ojs.t -> process_global_NodeJS_Global = Obj.magic
        and process_global_NodeJS_Global_to_js :
          process_global_NodeJS_Global -> Ojs.t = Obj.magic
        and process_global_NodeJS_HRTime_of_js :
          Ojs.t -> process_global_NodeJS_HRTime = Obj.magic
        and process_global_NodeJS_HRTime_to_js :
          process_global_NodeJS_HRTime -> Ojs.t = Obj.magic
        and process_global_NodeJS_MemoryUsage_of_js :
          Ojs.t -> process_global_NodeJS_MemoryUsage = Obj.magic
        and process_global_NodeJS_MemoryUsage_to_js :
          process_global_NodeJS_MemoryUsage -> Ojs.t = Obj.magic
        and process_global_NodeJS_MessageListener_of_js :
          Ojs.t -> process_global_NodeJS_MessageListener = Obj.magic
        and process_global_NodeJS_MessageListener_to_js :
          process_global_NodeJS_MessageListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_MultipleResolveListener_of_js :
          Ojs.t -> process_global_NodeJS_MultipleResolveListener = Obj.magic
        and process_global_NodeJS_MultipleResolveListener_to_js :
          process_global_NodeJS_MultipleResolveListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_MultipleResolveType_of_js :
          Ojs.t -> process_global_NodeJS_MultipleResolveType =
          fun (x2 : Ojs.t) ->
            let x3 = x2 in
            match Ojs.string_of_js x3 with
            | "reject" -> `reject
            | "resolve" -> `resolve
            | _ -> assert false
        and process_global_NodeJS_MultipleResolveType_to_js :
          process_global_NodeJS_MultipleResolveType -> Ojs.t =
          fun (x1 : [ `reject  | `resolve ]) ->
            match x1 with
            | `reject -> Ojs.string_to_js "reject"
            | `resolve -> Ojs.string_to_js "resolve"
        and process_global_NodeJS_NewListenerListener_of_js :
          Ojs.t -> process_global_NodeJS_NewListenerListener = Obj.magic
        and process_global_NodeJS_NewListenerListener_to_js :
          process_global_NodeJS_NewListenerListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_Platform_of_js :
          Ojs.t -> process_global_NodeJS_Platform =
          fun (x5 : Ojs.t) ->
            let x6 = x5 in
            match Ojs.string_of_js x6 with
            | "aix" -> `aix
            | "android" -> `android
            | "cygwin" -> `cygwin
            | "darwin" -> `darwin
            | "freebsd" -> `freebsd
            | "linux" -> `linux
            | "netbsd" -> `netbsd
            | "openbsd" -> `openbsd
            | "sunos" -> `sunos
            | "win32" -> `win32
            | _ -> assert false
        and process_global_NodeJS_Platform_to_js :
          process_global_NodeJS_Platform -> Ojs.t =
          fun
            (x4 :
              [ `aix  | `android  | `cygwin  | `darwin  | `freebsd  | 
                `linux 
              | `netbsd  | `openbsd  | `sunos  | `win32 ])
            ->
            match x4 with
            | `aix -> Ojs.string_to_js "aix"
            | `android -> Ojs.string_to_js "android"
            | `cygwin -> Ojs.string_to_js "cygwin"
            | `darwin -> Ojs.string_to_js "darwin"
            | `freebsd -> Ojs.string_to_js "freebsd"
            | `linux -> Ojs.string_to_js "linux"
            | `netbsd -> Ojs.string_to_js "netbsd"
            | `openbsd -> Ojs.string_to_js "openbsd"
            | `sunos -> Ojs.string_to_js "sunos"
            | `win32 -> Ojs.string_to_js "win32"
        and process_global_NodeJS_Process_of_js :
          Ojs.t -> process_global_NodeJS_Process = Obj.magic
        and process_global_NodeJS_Process_to_js :
          process_global_NodeJS_Process -> Ojs.t = Obj.magic
        and process_global_NodeJS_ProcessEnv_of_js :
          Ojs.t -> process_global_NodeJS_ProcessEnv = Obj.magic
        and process_global_NodeJS_ProcessEnv_to_js :
          process_global_NodeJS_ProcessEnv -> Ojs.t = Obj.magic
        and process_global_NodeJS_ProcessRelease_of_js :
          Ojs.t -> process_global_NodeJS_ProcessRelease = Obj.magic
        and process_global_NodeJS_ProcessRelease_to_js :
          process_global_NodeJS_ProcessRelease -> Ojs.t = Obj.magic
        and process_global_NodeJS_ProcessReport_of_js :
          Ojs.t -> process_global_NodeJS_ProcessReport = Obj.magic
        and process_global_NodeJS_ProcessReport_to_js :
          process_global_NodeJS_ProcessReport -> Ojs.t = Obj.magic
        and process_global_NodeJS_ProcessVersions_of_js :
          Ojs.t -> process_global_NodeJS_ProcessVersions = Obj.magic
        and process_global_NodeJS_ProcessVersions_to_js :
          process_global_NodeJS_ProcessVersions -> Ojs.t = Obj.magic
        and process_global_NodeJS_ReadStream_of_js :
          Ojs.t -> process_global_NodeJS_ReadStream = Obj.magic
        and process_global_NodeJS_ReadStream_to_js :
          process_global_NodeJS_ReadStream -> Ojs.t = Obj.magic
        and process_global_NodeJS_RejectionHandledListener_of_js :
          Ojs.t -> process_global_NodeJS_RejectionHandledListener = Obj.magic
        and process_global_NodeJS_RejectionHandledListener_to_js :
          process_global_NodeJS_RejectionHandledListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_RemoveListenerListener_of_js :
          Ojs.t -> process_global_NodeJS_RemoveListenerListener = Obj.magic
        and process_global_NodeJS_RemoveListenerListener_to_js :
          process_global_NodeJS_RemoveListenerListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_ResourceUsage_of_js :
          Ojs.t -> process_global_NodeJS_ResourceUsage = Obj.magic
        and process_global_NodeJS_ResourceUsage_to_js :
          process_global_NodeJS_ResourceUsage -> Ojs.t = Obj.magic
        and process_global_NodeJS_Signals_of_js :
          Ojs.t -> process_global_NodeJS_Signals =
          fun (x8 : Ojs.t) ->
            let x9 = x8 in
            match Ojs.string_of_js x9 with
            | "SIGABRT" -> `SIGABRT
            | "SIGALRM" -> `SIGALRM
            | "SIGBREAK" -> `SIGBREAK
            | "SIGBUS" -> `SIGBUS
            | "SIGCHLD" -> `SIGCHLD
            | "SIGCONT" -> `SIGCONT
            | "SIGFPE" -> `SIGFPE
            | "SIGHUP" -> `SIGHUP
            | "SIGILL" -> `SIGILL
            | "SIGINFO" -> `SIGINFO
            | "SIGINT" -> `SIGINT
            | "SIGIO" -> `SIGIO
            | "SIGIOT" -> `SIGIOT
            | "SIGKILL" -> `SIGKILL
            | "SIGLOST" -> `SIGLOST
            | "SIGPIPE" -> `SIGPIPE
            | "SIGPOLL" -> `SIGPOLL
            | "SIGPROF" -> `SIGPROF
            | "SIGPWR" -> `SIGPWR
            | "SIGQUIT" -> `SIGQUIT
            | "SIGSEGV" -> `SIGSEGV
            | "SIGSTKFLT" -> `SIGSTKFLT
            | "SIGSTOP" -> `SIGSTOP
            | "SIGSYS" -> `SIGSYS
            | "SIGTERM" -> `SIGTERM
            | "SIGTRAP" -> `SIGTRAP
            | "SIGTSTP" -> `SIGTSTP
            | "SIGTTIN" -> `SIGTTIN
            | "SIGTTOU" -> `SIGTTOU
            | "SIGUNUSED" -> `SIGUNUSED
            | "SIGURG" -> `SIGURG
            | "SIGUSR1" -> `SIGUSR1
            | "SIGUSR2" -> `SIGUSR2
            | "SIGVTALRM" -> `SIGVTALRM
            | "SIGWINCH" -> `SIGWINCH
            | "SIGXCPU" -> `SIGXCPU
            | "SIGXFSZ" -> `SIGXFSZ
            | _ -> assert false
        and process_global_NodeJS_Signals_to_js :
          process_global_NodeJS_Signals -> Ojs.t =
          fun
            (x7 :
              [ `SIGABRT  | `SIGALRM  | `SIGBREAK  | `SIGBUS  | `SIGCHLD 
              | `SIGCONT  | `SIGFPE  | `SIGHUP  | `SIGILL  | `SIGINFO 
              | `SIGINT  | `SIGIO  | `SIGIOT  | `SIGKILL  | `SIGLOST 
              | `SIGPIPE  | `SIGPOLL  | `SIGPROF  | `SIGPWR  | `SIGQUIT 
              | `SIGSEGV  | `SIGSTKFLT  | `SIGSTOP  | `SIGSYS  | `SIGTERM 
              | `SIGTRAP  | `SIGTSTP  | `SIGTTIN  | `SIGTTOU  | `SIGUNUSED 
              | `SIGURG  | `SIGUSR1  | `SIGUSR2  | `SIGVTALRM  | `SIGWINCH 
              | `SIGXCPU  | `SIGXFSZ ])
            ->
            match x7 with
            | `SIGABRT -> Ojs.string_to_js "SIGABRT"
            | `SIGALRM -> Ojs.string_to_js "SIGALRM"
            | `SIGBREAK -> Ojs.string_to_js "SIGBREAK"
            | `SIGBUS -> Ojs.string_to_js "SIGBUS"
            | `SIGCHLD -> Ojs.string_to_js "SIGCHLD"
            | `SIGCONT -> Ojs.string_to_js "SIGCONT"
            | `SIGFPE -> Ojs.string_to_js "SIGFPE"
            | `SIGHUP -> Ojs.string_to_js "SIGHUP"
            | `SIGILL -> Ojs.string_to_js "SIGILL"
            | `SIGINFO -> Ojs.string_to_js "SIGINFO"
            | `SIGINT -> Ojs.string_to_js "SIGINT"
            | `SIGIO -> Ojs.string_to_js "SIGIO"
            | `SIGIOT -> Ojs.string_to_js "SIGIOT"
            | `SIGKILL -> Ojs.string_to_js "SIGKILL"
            | `SIGLOST -> Ojs.string_to_js "SIGLOST"
            | `SIGPIPE -> Ojs.string_to_js "SIGPIPE"
            | `SIGPOLL -> Ojs.string_to_js "SIGPOLL"
            | `SIGPROF -> Ojs.string_to_js "SIGPROF"
            | `SIGPWR -> Ojs.string_to_js "SIGPWR"
            | `SIGQUIT -> Ojs.string_to_js "SIGQUIT"
            | `SIGSEGV -> Ojs.string_to_js "SIGSEGV"
            | `SIGSTKFLT -> Ojs.string_to_js "SIGSTKFLT"
            | `SIGSTOP -> Ojs.string_to_js "SIGSTOP"
            | `SIGSYS -> Ojs.string_to_js "SIGSYS"
            | `SIGTERM -> Ojs.string_to_js "SIGTERM"
            | `SIGTRAP -> Ojs.string_to_js "SIGTRAP"
            | `SIGTSTP -> Ojs.string_to_js "SIGTSTP"
            | `SIGTTIN -> Ojs.string_to_js "SIGTTIN"
            | `SIGTTOU -> Ojs.string_to_js "SIGTTOU"
            | `SIGUNUSED -> Ojs.string_to_js "SIGUNUSED"
            | `SIGURG -> Ojs.string_to_js "SIGURG"
            | `SIGUSR1 -> Ojs.string_to_js "SIGUSR1"
            | `SIGUSR2 -> Ojs.string_to_js "SIGUSR2"
            | `SIGVTALRM -> Ojs.string_to_js "SIGVTALRM"
            | `SIGWINCH -> Ojs.string_to_js "SIGWINCH"
            | `SIGXCPU -> Ojs.string_to_js "SIGXCPU"
            | `SIGXFSZ -> Ojs.string_to_js "SIGXFSZ"
        and process_global_NodeJS_SignalsListener_of_js :
          Ojs.t -> process_global_NodeJS_SignalsListener = Obj.magic
        and process_global_NodeJS_SignalsListener_to_js :
          process_global_NodeJS_SignalsListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_Socket_of_js :
          Ojs.t -> process_global_NodeJS_Socket = Obj.magic
        and process_global_NodeJS_Socket_to_js :
          process_global_NodeJS_Socket -> Ojs.t = Obj.magic
        and process_global_NodeJS_UncaughtExceptionListener_of_js :
          Ojs.t -> process_global_NodeJS_UncaughtExceptionListener =
          Obj.magic
        and process_global_NodeJS_UncaughtExceptionListener_to_js :
          process_global_NodeJS_UncaughtExceptionListener -> Ojs.t =
          Obj.magic
        and process_global_NodeJS_UnhandledRejectionListener_of_js :
          Ojs.t -> process_global_NodeJS_UnhandledRejectionListener =
          Obj.magic
        and process_global_NodeJS_UnhandledRejectionListener_to_js :
          process_global_NodeJS_UnhandledRejectionListener -> Ojs.t =
          Obj.magic
        and process_global_NodeJS_WarningListener_of_js :
          Ojs.t -> process_global_NodeJS_WarningListener = Obj.magic
        and process_global_NodeJS_WarningListener_to_js :
          process_global_NodeJS_WarningListener -> Ojs.t = Obj.magic
        and process_global_NodeJS_WriteStream_of_js :
          Ojs.t -> process_global_NodeJS_WriteStream = Obj.magic
        and process_global_NodeJS_WriteStream_to_js :
          process_global_NodeJS_WriteStream -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module AnonymousInterface0 =
  struct
    type t = anonymous_interface_0
    let rec t_of_js : Ojs.t -> t =
      fun (x11 : Ojs.t) -> anonymous_interface_0_of_js x11
    and t_to_js : t -> Ojs.t =
      fun (x10 : anonymous_interface_0) -> anonymous_interface_0_to_js x10
  end
module AnonymousInterface1 =
  struct
    type t = anonymous_interface_1
    let rec t_of_js : Ojs.t -> t =
      fun (x13 : Ojs.t) -> anonymous_interface_1_of_js x13
    and t_to_js : t -> Ojs.t =
      fun (x12 : anonymous_interface_1) -> anonymous_interface_1_to_js x12
    let (get_cflags : t -> any list) =
      fun (x14 : t) ->
        Ojs.list_of_js any_of_js (Ojs.get_prop_ascii (t_to_js x14) "cflags")
    let (set_cflags : t -> any list -> unit) =
      fun (x16 : t) ->
        fun (x17 : any list) ->
          Ojs.set_prop_ascii (t_to_js x16) "cflags"
            (Ojs.list_to_js any_to_js x17)
    let (get_default_configuration : t -> string) =
      fun (x19 : t) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x19) "default_configuration")
    let (set_default_configuration : t -> string -> unit) =
      fun (x20 : t) ->
        fun (x21 : string) ->
          Ojs.set_prop_ascii (t_to_js x20) "default_configuration"
            (Ojs.string_to_js x21)
    let (get_defines : t -> string list) =
      fun (x22 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x22) "defines")
    let (set_defines : t -> string list -> unit) =
      fun (x24 : t) ->
        fun (x25 : string list) ->
          Ojs.set_prop_ascii (t_to_js x24) "defines"
            (Ojs.list_to_js Ojs.string_to_js x25)
    let (get_include_dirs : t -> string list) =
      fun (x27 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x27) "include_dirs")
    let (set_include_dirs : t -> string list -> unit) =
      fun (x29 : t) ->
        fun (x30 : string list) ->
          Ojs.set_prop_ascii (t_to_js x29) "include_dirs"
            (Ojs.list_to_js Ojs.string_to_js x30)
    let (get_libraries : t -> string list) =
      fun (x32 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x32) "libraries")
    let (set_libraries : t -> string list -> unit) =
      fun (x34 : t) ->
        fun (x35 : string list) ->
          Ojs.set_prop_ascii (t_to_js x34) "libraries"
            (Ojs.list_to_js Ojs.string_to_js x35)
  end
module AnonymousInterface2 =
  struct
    type t = anonymous_interface_2
    let rec t_of_js : Ojs.t -> t =
      fun (x38 : Ojs.t) -> anonymous_interface_2_of_js x38
    and t_to_js : t -> Ojs.t =
      fun (x37 : anonymous_interface_2) -> anonymous_interface_2_to_js x37
    let (get_clang : t -> int) =
      fun (x39 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x39) "clang")
    let (set_clang : t -> int -> unit) =
      fun (x40 : t) ->
        fun (x41 : int) ->
          Ojs.set_prop_ascii (t_to_js x40) "clang" (Ojs.int_to_js x41)
    let (get_host_arch : t -> string) =
      fun (x42 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x42) "host_arch")
    let (set_host_arch : t -> string -> unit) =
      fun (x43 : t) ->
        fun (x44 : string) ->
          Ojs.set_prop_ascii (t_to_js x43) "host_arch" (Ojs.string_to_js x44)
    let (get_node_install_npm : t -> bool) =
      fun (x45 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x45) "node_install_npm")
    let (set_node_install_npm : t -> bool -> unit) =
      fun (x46 : t) ->
        fun (x47 : bool) ->
          Ojs.set_prop_ascii (t_to_js x46) "node_install_npm"
            (Ojs.bool_to_js x47)
    let (get_node_install_waf : t -> bool) =
      fun (x48 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x48) "node_install_waf")
    let (set_node_install_waf : t -> bool -> unit) =
      fun (x49 : t) ->
        fun (x50 : bool) ->
          Ojs.set_prop_ascii (t_to_js x49) "node_install_waf"
            (Ojs.bool_to_js x50)
    let (get_node_prefix : t -> string) =
      fun (x51 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x51) "node_prefix")
    let (set_node_prefix : t -> string -> unit) =
      fun (x52 : t) ->
        fun (x53 : string) ->
          Ojs.set_prop_ascii (t_to_js x52) "node_prefix"
            (Ojs.string_to_js x53)
    let (get_node_shared_openssl : t -> bool) =
      fun (x54 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x54) "node_shared_openssl")
    let (set_node_shared_openssl : t -> bool -> unit) =
      fun (x55 : t) ->
        fun (x56 : bool) ->
          Ojs.set_prop_ascii (t_to_js x55) "node_shared_openssl"
            (Ojs.bool_to_js x56)
    let (get_node_shared_v8 : t -> bool) =
      fun (x57 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x57) "node_shared_v8")
    let (set_node_shared_v8 : t -> bool -> unit) =
      fun (x58 : t) ->
        fun (x59 : bool) ->
          Ojs.set_prop_ascii (t_to_js x58) "node_shared_v8"
            (Ojs.bool_to_js x59)
    let (get_node_shared_zlib : t -> bool) =
      fun (x60 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x60) "node_shared_zlib")
    let (set_node_shared_zlib : t -> bool -> unit) =
      fun (x61 : t) ->
        fun (x62 : bool) ->
          Ojs.set_prop_ascii (t_to_js x61) "node_shared_zlib"
            (Ojs.bool_to_js x62)
    let (get_node_use_dtrace : t -> bool) =
      fun (x63 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x63) "node_use_dtrace")
    let (set_node_use_dtrace : t -> bool -> unit) =
      fun (x64 : t) ->
        fun (x65 : bool) ->
          Ojs.set_prop_ascii (t_to_js x64) "node_use_dtrace"
            (Ojs.bool_to_js x65)
    let (get_node_use_etw : t -> bool) =
      fun (x66 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x66) "node_use_etw")
    let (set_node_use_etw : t -> bool -> unit) =
      fun (x67 : t) ->
        fun (x68 : bool) ->
          Ojs.set_prop_ascii (t_to_js x67) "node_use_etw"
            (Ojs.bool_to_js x68)
    let (get_node_use_openssl : t -> bool) =
      fun (x69 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x69) "node_use_openssl")
    let (set_node_use_openssl : t -> bool -> unit) =
      fun (x70 : t) ->
        fun (x71 : bool) ->
          Ojs.set_prop_ascii (t_to_js x70) "node_use_openssl"
            (Ojs.bool_to_js x71)
    let (get_target_arch : t -> string) =
      fun (x72 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x72) "target_arch")
    let (set_target_arch : t -> string -> unit) =
      fun (x73 : t) ->
        fun (x74 : string) ->
          Ojs.set_prop_ascii (t_to_js x73) "target_arch"
            (Ojs.string_to_js x74)
    let (get_v8_no_strict_aliasing : t -> int) =
      fun (x75 : t) ->
        Ojs.int_of_js
          (Ojs.get_prop_ascii (t_to_js x75) "v8_no_strict_aliasing")
    let (set_v8_no_strict_aliasing : t -> int -> unit) =
      fun (x76 : t) ->
        fun (x77 : int) ->
          Ojs.set_prop_ascii (t_to_js x76) "v8_no_strict_aliasing"
            (Ojs.int_to_js x77)
    let (get_v8_use_snapshot : t -> bool) =
      fun (x78 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x78) "v8_use_snapshot")
    let (set_v8_use_snapshot : t -> bool -> unit) =
      fun (x79 : t) ->
        fun (x80 : bool) ->
          Ojs.set_prop_ascii (t_to_js x79) "v8_use_snapshot"
            (Ojs.bool_to_js x80)
    let (get_visibility : t -> string) =
      fun (x81 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x81) "visibility")
    let (set_visibility : t -> string -> unit) =
      fun (x82 : t) ->
        fun (x83 : string) ->
          Ojs.set_prop_ascii (t_to_js x82) "visibility"
            (Ojs.string_to_js x83)
  end
module AnonymousInterface3 =
  struct
    type t = anonymous_interface_3
    let rec t_of_js : Ojs.t -> t =
      fun (x85 : Ojs.t) -> anonymous_interface_3_of_js x85
    and t_to_js : t -> Ojs.t =
      fun (x84 : anonymous_interface_3) -> anonymous_interface_3_to_js x84
    let (get_fd : t -> [ `L_n_0 ]) =
      fun (x86 : t) ->
        let x87 = Ojs.get_prop_ascii (t_to_js x86) "fd" in
        match Ojs.int_of_js x87 with | 0 -> `L_n_0 | _ -> assert false
    let (set_fd : t -> [ `L_n_0 ] -> unit) =
      fun (x88 : t) ->
        fun (x89 : [ `L_n_0 ]) ->
          Ojs.set_prop_ascii (t_to_js x88) "fd"
            (match x89 with | `L_n_0 -> Ojs.string_to_js "LN0")
  end
module AnonymousInterface4 =
  struct
    type t = anonymous_interface_4
    let rec t_of_js : Ojs.t -> t =
      fun (x91 : Ojs.t) -> anonymous_interface_4_of_js x91
    and t_to_js : t -> Ojs.t =
      fun (x90 : anonymous_interface_4) -> anonymous_interface_4_to_js x90
    let (get_fd : t -> [ `L_n_1 ]) =
      fun (x92 : t) ->
        let x93 = Ojs.get_prop_ascii (t_to_js x92) "fd" in
        match Ojs.int_of_js x93 with | 1 -> `L_n_1 | _ -> assert false
    let (set_fd : t -> [ `L_n_1 ] -> unit) =
      fun (x94 : t) ->
        fun (x95 : [ `L_n_1 ]) ->
          Ojs.set_prop_ascii (t_to_js x94) "fd"
            (match x95 with | `L_n_1 -> Ojs.string_to_js "LN1")
  end
module AnonymousInterface5 =
  struct
    type t = anonymous_interface_5
    let rec t_of_js : Ojs.t -> t =
      fun (x97 : Ojs.t) -> anonymous_interface_5_of_js x97
    and t_to_js : t -> Ojs.t =
      fun (x96 : anonymous_interface_5) -> anonymous_interface_5_to_js x96
    let (get_fd : t -> [ `L_n_2 ]) =
      fun (x98 : t) ->
        let x99 = Ojs.get_prop_ascii (t_to_js x98) "fd" in
        match Ojs.int_of_js x99 with | 2 -> `L_n_2 | _ -> assert false
    let (set_fd : t -> [ `L_n_2 ] -> unit) =
      fun (x100 : t) ->
        fun (x101 : [ `L_n_2 ]) ->
          Ojs.set_prop_ascii (t_to_js x100) "fd"
            (match x101 with | `L_n_2 -> Ojs.string_to_js "LN2")
  end
module AnonymousInterface6 =
  struct
    type t = anonymous_interface_6
    let rec t_of_js : Ojs.t -> t =
      fun (x103 : Ojs.t) -> anonymous_interface_6_of_js x103
    and t_to_js : t -> Ojs.t =
      fun (x102 : anonymous_interface_6) -> anonymous_interface_6_to_js x102
    let (get_inspector : t -> bool) =
      fun (x104 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x104) "inspector")
    let (set_inspector : t -> bool -> unit) =
      fun (x105 : t) ->
        fun (x106 : bool) ->
          Ojs.set_prop_ascii (t_to_js x105) "inspector" (Ojs.bool_to_js x106)
    let (get_debug : t -> bool) =
      fun (x107 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x107) "debug")
    let (set_debug : t -> bool -> unit) =
      fun (x108 : t) ->
        fun (x109 : bool) ->
          Ojs.set_prop_ascii (t_to_js x108) "debug" (Ojs.bool_to_js x109)
    let (get_uv : t -> bool) =
      fun (x110 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x110) "uv")
    let (set_uv : t -> bool -> unit) =
      fun (x111 : t) ->
        fun (x112 : bool) ->
          Ojs.set_prop_ascii (t_to_js x111) "uv" (Ojs.bool_to_js x112)
    let (get_ipv6 : t -> bool) =
      fun (x113 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x113) "ipv6")
    let (set_ipv6 : t -> bool -> unit) =
      fun (x114 : t) ->
        fun (x115 : bool) ->
          Ojs.set_prop_ascii (t_to_js x114) "ipv6" (Ojs.bool_to_js x115)
    let (get_tls_alpn : t -> bool) =
      fun (x116 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x116) "tls_alpn")
    let (set_tls_alpn : t -> bool -> unit) =
      fun (x117 : t) ->
        fun (x118 : bool) ->
          Ojs.set_prop_ascii (t_to_js x117) "tls_alpn" (Ojs.bool_to_js x118)
    let (get_tls_sni : t -> bool) =
      fun (x119 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x119) "tls_sni")
    let (set_tls_sni : t -> bool -> unit) =
      fun (x120 : t) ->
        fun (x121 : bool) ->
          Ojs.set_prop_ascii (t_to_js x120) "tls_sni" (Ojs.bool_to_js x121)
    let (get_tls_ocsp : t -> bool) =
      fun (x122 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x122) "tls_ocsp")
    let (set_tls_ocsp : t -> bool -> unit) =
      fun (x123 : t) ->
        fun (x124 : bool) ->
          Ojs.set_prop_ascii (t_to_js x123) "tls_ocsp" (Ojs.bool_to_js x124)
    let (get_tls : t -> bool) =
      fun (x125 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x125) "tls")
    let (set_tls : t -> bool -> unit) =
      fun (x126 : t) ->
        fun (x127 : bool) ->
          Ojs.set_prop_ascii (t_to_js x126) "tls" (Ojs.bool_to_js x127)
  end
module AnonymousInterface7 =
  struct
    type t = anonymous_interface_7
    let rec t_of_js : Ojs.t -> t =
      fun (x129 : Ojs.t) -> anonymous_interface_7_of_js x129
    and t_to_js : t -> Ojs.t =
      fun (x128 : anonymous_interface_7) -> anonymous_interface_7_to_js x128
    let (get_swallowErrors : t -> bool) =
      fun (x130 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x130) "swallowErrors")
    let (set_swallowErrors : t -> bool -> unit) =
      fun (x131 : t) ->
        fun (x132 : bool) ->
          Ojs.set_prop_ascii (t_to_js x131) "swallowErrors"
            (Ojs.bool_to_js x132)
  end
module AnonymousInterface8 =
  struct
    type t = anonymous_interface_8
    let rec t_of_js : Ojs.t -> t =
      fun (x134 : Ojs.t) -> anonymous_interface_8_of_js x134
    and t_to_js : t -> Ojs.t =
      fun (x133 : anonymous_interface_8) -> anonymous_interface_8_to_js x133
    let (get_target_defaults : t -> anonymous_interface_1) =
      fun (x135 : t) ->
        anonymous_interface_1_of_js
          (Ojs.get_prop_ascii (t_to_js x135) "target_defaults")
    let (set_target_defaults : t -> anonymous_interface_1 -> unit) =
      fun (x136 : t) ->
        fun (x137 : anonymous_interface_1) ->
          Ojs.set_prop_ascii (t_to_js x136) "target_defaults"
            (anonymous_interface_1_to_js x137)
    let (get_variables : t -> anonymous_interface_2) =
      fun (x138 : t) ->
        anonymous_interface_2_of_js
          (Ojs.get_prop_ascii (t_to_js x138) "variables")
    let (set_variables : t -> anonymous_interface_2 -> unit) =
      fun (x139 : t) ->
        fun (x140 : anonymous_interface_2) ->
          Ojs.set_prop_ascii (t_to_js x139) "variables"
            (anonymous_interface_2_to_js x140)
  end
let (process : process_global_NodeJS_Process) =
  process_global_NodeJS_Process_of_js
    (Ojs.get_prop_ascii Ojs.global "process")
module Process =
  struct
    open Node_tty
    module ReadStream =
      struct
        type t = process_global_NodeJS_ReadStream
        let rec t_of_js : Ojs.t -> t =
          fun (x142 : Ojs.t) -> process_global_NodeJS_ReadStream_of_js x142
        and t_to_js : t -> Ojs.t =
          fun (x141 : process_global_NodeJS_ReadStream) ->
            process_global_NodeJS_ReadStream_to_js x141
        let (cast : t -> Tty.ReadStream.t) =
          fun (x143 : t) -> Tty.ReadStream.t_of_js (t_to_js x143)
      end
    module WriteStream =
      struct
        type t = process_global_NodeJS_WriteStream
        let rec t_of_js : Ojs.t -> t =
          fun (x145 : Ojs.t) -> process_global_NodeJS_WriteStream_of_js x145
        and t_to_js : t -> Ojs.t =
          fun (x144 : process_global_NodeJS_WriteStream) ->
            process_global_NodeJS_WriteStream_to_js x144
        let (cast : t -> Tty.WriteStream.t) =
          fun (x146 : t) -> Tty.WriteStream.t_of_js (t_to_js x146)
      end
    module MemoryUsage =
      struct
        type t = process_global_NodeJS_MemoryUsage
        let rec t_of_js : Ojs.t -> t =
          fun (x148 : Ojs.t) -> process_global_NodeJS_MemoryUsage_of_js x148
        and t_to_js : t -> Ojs.t =
          fun (x147 : process_global_NodeJS_MemoryUsage) ->
            process_global_NodeJS_MemoryUsage_to_js x147
        let (get_rss : t -> int) =
          fun (x149 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x149) "rss")
        let (set_rss : t -> int -> unit) =
          fun (x150 : t) ->
            fun (x151 : int) ->
              Ojs.set_prop_ascii (t_to_js x150) "rss" (Ojs.int_to_js x151)
        let (get_heapTotal : t -> int) =
          fun (x152 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x152) "heapTotal")
        let (set_heapTotal : t -> int -> unit) =
          fun (x153 : t) ->
            fun (x154 : int) ->
              Ojs.set_prop_ascii (t_to_js x153) "heapTotal"
                (Ojs.int_to_js x154)
        let (get_heapUsed : t -> int) =
          fun (x155 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x155) "heapUsed")
        let (set_heapUsed : t -> int -> unit) =
          fun (x156 : t) ->
            fun (x157 : int) ->
              Ojs.set_prop_ascii (t_to_js x156) "heapUsed"
                (Ojs.int_to_js x157)
        let (get_external : t -> int) =
          fun (x158 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x158) "external")
        let (set_external : t -> int -> unit) =
          fun (x159 : t) ->
            fun (x160 : int) ->
              Ojs.set_prop_ascii (t_to_js x159) "external"
                (Ojs.int_to_js x160)
        let (get_arrayBuffers : t -> int) =
          fun (x161 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x161) "arrayBuffers")
        let (set_arrayBuffers : t -> int -> unit) =
          fun (x162 : t) ->
            fun (x163 : int) ->
              Ojs.set_prop_ascii (t_to_js x162) "arrayBuffers"
                (Ojs.int_to_js x163)
      end
    module CpuUsage =
      struct
        type t = process_global_NodeJS_CpuUsage
        let rec t_of_js : Ojs.t -> t =
          fun (x165 : Ojs.t) -> process_global_NodeJS_CpuUsage_of_js x165
        and t_to_js : t -> Ojs.t =
          fun (x164 : process_global_NodeJS_CpuUsage) ->
            process_global_NodeJS_CpuUsage_to_js x164
        let (get_user : t -> int) =
          fun (x166 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x166) "user")
        let (set_user : t -> int -> unit) =
          fun (x167 : t) ->
            fun (x168 : int) ->
              Ojs.set_prop_ascii (t_to_js x167) "user" (Ojs.int_to_js x168)
        let (get_system : t -> int) =
          fun (x169 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x169) "system")
        let (set_system : t -> int -> unit) =
          fun (x170 : t) ->
            fun (x171 : int) ->
              Ojs.set_prop_ascii (t_to_js x170) "system" (Ojs.int_to_js x171)
      end
    module ProcessRelease =
      struct
        type t = process_global_NodeJS_ProcessRelease
        let rec t_of_js : Ojs.t -> t =
          fun (x173 : Ojs.t) ->
            process_global_NodeJS_ProcessRelease_of_js x173
        and t_to_js : t -> Ojs.t =
          fun (x172 : process_global_NodeJS_ProcessRelease) ->
            process_global_NodeJS_ProcessRelease_to_js x172
        let (get_name : t -> string) =
          fun (x174 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x174) "name")
        let (set_name : t -> string -> unit) =
          fun (x175 : t) ->
            fun (x176 : string) ->
              Ojs.set_prop_ascii (t_to_js x175) "name"
                (Ojs.string_to_js x176)
        let (get_sourceUrl : t -> string) =
          fun (x177 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x177) "sourceUrl")
        let (set_sourceUrl : t -> string -> unit) =
          fun (x178 : t) ->
            fun (x179 : string) ->
              Ojs.set_prop_ascii (t_to_js x178) "sourceUrl"
                (Ojs.string_to_js x179)
        let (get_headersUrl : t -> string) =
          fun (x180 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x180) "headersUrl")
        let (set_headersUrl : t -> string -> unit) =
          fun (x181 : t) ->
            fun (x182 : string) ->
              Ojs.set_prop_ascii (t_to_js x181) "headersUrl"
                (Ojs.string_to_js x182)
        let (get_libUrl : t -> string) =
          fun (x183 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x183) "libUrl")
        let (set_libUrl : t -> string -> unit) =
          fun (x184 : t) ->
            fun (x185 : string) ->
              Ojs.set_prop_ascii (t_to_js x184) "libUrl"
                (Ojs.string_to_js x185)
        let (get_lts : t -> string) =
          fun (x186 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x186) "lts")
        let (set_lts : t -> string -> unit) =
          fun (x187 : t) ->
            fun (x188 : string) ->
              Ojs.set_prop_ascii (t_to_js x187) "lts" (Ojs.string_to_js x188)
      end
    module ProcessVersions =
      struct
        type t = process_global_NodeJS_ProcessVersions
        let rec t_of_js : Ojs.t -> t =
          fun (x190 : Ojs.t) ->
            process_global_NodeJS_ProcessVersions_of_js x190
        and t_to_js : t -> Ojs.t =
          fun (x189 : process_global_NodeJS_ProcessVersions) ->
            process_global_NodeJS_ProcessVersions_to_js x189
        let (get_http_parser : t -> string) =
          fun (x191 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x191) "http_parser")
        let (set_http_parser : t -> string -> unit) =
          fun (x192 : t) ->
            fun (x193 : string) ->
              Ojs.set_prop_ascii (t_to_js x192) "http_parser"
                (Ojs.string_to_js x193)
        let (get_node : t -> string) =
          fun (x194 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x194) "node")
        let (set_node : t -> string -> unit) =
          fun (x195 : t) ->
            fun (x196 : string) ->
              Ojs.set_prop_ascii (t_to_js x195) "node"
                (Ojs.string_to_js x196)
        let (get_v8 : t -> string) =
          fun (x197 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x197) "v8")
        let (set_v8 : t -> string -> unit) =
          fun (x198 : t) ->
            fun (x199 : string) ->
              Ojs.set_prop_ascii (t_to_js x198) "v8" (Ojs.string_to_js x199)
        let (get_ares : t -> string) =
          fun (x200 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x200) "ares")
        let (set_ares : t -> string -> unit) =
          fun (x201 : t) ->
            fun (x202 : string) ->
              Ojs.set_prop_ascii (t_to_js x201) "ares"
                (Ojs.string_to_js x202)
        let (get_uv : t -> string) =
          fun (x203 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x203) "uv")
        let (set_uv : t -> string -> unit) =
          fun (x204 : t) ->
            fun (x205 : string) ->
              Ojs.set_prop_ascii (t_to_js x204) "uv" (Ojs.string_to_js x205)
        let (get_zlib : t -> string) =
          fun (x206 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x206) "zlib")
        let (set_zlib : t -> string -> unit) =
          fun (x207 : t) ->
            fun (x208 : string) ->
              Ojs.set_prop_ascii (t_to_js x207) "zlib"
                (Ojs.string_to_js x208)
        let (get_modules : t -> string) =
          fun (x209 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x209) "modules")
        let (set_modules : t -> string -> unit) =
          fun (x210 : t) ->
            fun (x211 : string) ->
              Ojs.set_prop_ascii (t_to_js x210) "modules"
                (Ojs.string_to_js x211)
        let (get_openssl : t -> string) =
          fun (x212 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x212) "openssl")
        let (set_openssl : t -> string -> unit) =
          fun (x213 : t) ->
            fun (x214 : string) ->
              Ojs.set_prop_ascii (t_to_js x213) "openssl"
                (Ojs.string_to_js x214)
        let (cast : t -> string Dict.t) =
          fun (x215 : t) -> Dict.t_of_js Ojs.string_of_js (t_to_js x215)
      end
    module Platform =
      struct
        type t = process_global_NodeJS_Platform
        let rec t_of_js : Ojs.t -> t =
          fun (x218 : Ojs.t) -> process_global_NodeJS_Platform_of_js x218
        and t_to_js : t -> Ojs.t =
          fun (x217 : process_global_NodeJS_Platform) ->
            process_global_NodeJS_Platform_to_js x217
      end
    module Signals =
      struct
        type t = process_global_NodeJS_Signals
        let rec t_of_js : Ojs.t -> t =
          fun (x220 : Ojs.t) -> process_global_NodeJS_Signals_of_js x220
        and t_to_js : t -> Ojs.t =
          fun (x219 : process_global_NodeJS_Signals) ->
            process_global_NodeJS_Signals_to_js x219
      end
    module MultipleResolveType =
      struct
        type t = process_global_NodeJS_MultipleResolveType
        let rec t_of_js : Ojs.t -> t =
          fun (x222 : Ojs.t) ->
            process_global_NodeJS_MultipleResolveType_of_js x222
        and t_to_js : t -> Ojs.t =
          fun (x221 : process_global_NodeJS_MultipleResolveType) ->
            process_global_NodeJS_MultipleResolveType_to_js x221
      end
    module BeforeExitListener =
      struct
        type t = process_global_NodeJS_BeforeExitListener
        let rec t_of_js : Ojs.t -> t =
          fun (x224 : Ojs.t) ->
            process_global_NodeJS_BeforeExitListener_of_js x224
        and t_to_js : t -> Ojs.t =
          fun (x223 : process_global_NodeJS_BeforeExitListener) ->
            process_global_NodeJS_BeforeExitListener_to_js x223
        let (apply : t -> code:int -> unit) =
          fun (x226 : t) ->
            fun ~code:(x225 : int) ->
              ignore (Ojs.apply (t_to_js x226) [|(Ojs.int_to_js x225)|])
      end
    module DisconnectListener =
      struct
        type t = process_global_NodeJS_DisconnectListener
        let rec t_of_js : Ojs.t -> t =
          fun (x228 : Ojs.t) ->
            process_global_NodeJS_DisconnectListener_of_js x228
        and t_to_js : t -> Ojs.t =
          fun (x227 : process_global_NodeJS_DisconnectListener) ->
            process_global_NodeJS_DisconnectListener_to_js x227
        let (apply : t -> unit) =
          fun (x229 : t) -> ignore (Ojs.apply (t_to_js x229) [||])
      end
    module ExitListener =
      struct
        type t = process_global_NodeJS_ExitListener
        let rec t_of_js : Ojs.t -> t =
          fun (x231 : Ojs.t) -> process_global_NodeJS_ExitListener_of_js x231
        and t_to_js : t -> Ojs.t =
          fun (x230 : process_global_NodeJS_ExitListener) ->
            process_global_NodeJS_ExitListener_to_js x230
        let (apply : t -> code:int -> unit) =
          fun (x233 : t) ->
            fun ~code:(x232 : int) ->
              ignore (Ojs.apply (t_to_js x233) [|(Ojs.int_to_js x232)|])
      end
    module RejectionHandledListener =
      struct
        type t = process_global_NodeJS_RejectionHandledListener
        let rec t_of_js : Ojs.t -> t =
          fun (x235 : Ojs.t) ->
            process_global_NodeJS_RejectionHandledListener_of_js x235
        and t_to_js : t -> Ojs.t =
          fun (x234 : process_global_NodeJS_RejectionHandledListener) ->
            process_global_NodeJS_RejectionHandledListener_to_js x234
        let (apply : t -> promise:any Promise.t -> unit) =
          fun (x238 : t) ->
            fun ~promise:(x236 : any Promise.t) ->
              ignore
                (Ojs.apply (t_to_js x238)
                   [|(Promise.t_to_js any_to_js x236)|])
      end
    module UncaughtExceptionListener =
      struct
        type t = process_global_NodeJS_UncaughtExceptionListener
        let rec t_of_js : Ojs.t -> t =
          fun (x240 : Ojs.t) ->
            process_global_NodeJS_UncaughtExceptionListener_of_js x240
        and t_to_js : t -> Ojs.t =
          fun (x239 : process_global_NodeJS_UncaughtExceptionListener) ->
            process_global_NodeJS_UncaughtExceptionListener_to_js x239
        let (apply : t -> error:Error.t -> unit) =
          fun (x242 : t) ->
            fun ~error:(x241 : Error.t) ->
              ignore (Ojs.apply (t_to_js x242) [|(Error.t_to_js x241)|])
      end
    module UnhandledRejectionListener =
      struct
        type t = process_global_NodeJS_UnhandledRejectionListener
        let rec t_of_js : Ojs.t -> t =
          fun (x244 : Ojs.t) ->
            process_global_NodeJS_UnhandledRejectionListener_of_js x244
        and t_to_js : t -> Ojs.t =
          fun (x243 : process_global_NodeJS_UnhandledRejectionListener) ->
            process_global_NodeJS_UnhandledRejectionListener_to_js x243
        let (apply :
          t ->
            reason:anonymous_interface_0 or_null_or_undefined ->
              promise:any Promise.t -> unit)
          =
          fun (x249 : t) ->
            fun ~reason:(x245 : anonymous_interface_0 or_null_or_undefined)
              ->
              fun ~promise:(x247 : any Promise.t) ->
                ignore
                  (Ojs.apply (t_to_js x249)
                     [|(or_null_or_undefined_to_js
                          anonymous_interface_0_to_js x245);(Promise.t_to_js
                                                               any_to_js x247)|])
      end
    module WarningListener =
      struct
        type t = process_global_NodeJS_WarningListener
        let rec t_of_js : Ojs.t -> t =
          fun (x251 : Ojs.t) ->
            process_global_NodeJS_WarningListener_of_js x251
        and t_to_js : t -> Ojs.t =
          fun (x250 : process_global_NodeJS_WarningListener) ->
            process_global_NodeJS_WarningListener_to_js x250
        let (apply : t -> warning:Error.t -> unit) =
          fun (x253 : t) ->
            fun ~warning:(x252 : Error.t) ->
              ignore (Ojs.apply (t_to_js x253) [|(Error.t_to_js x252)|])
      end
    module MessageListener =
      struct
        type t = process_global_NodeJS_MessageListener
        let rec t_of_js : Ojs.t -> t =
          fun (x255 : Ojs.t) ->
            process_global_NodeJS_MessageListener_of_js x255
        and t_to_js : t -> Ojs.t =
          fun (x254 : process_global_NodeJS_MessageListener) ->
            process_global_NodeJS_MessageListener_to_js x254
        let (apply : t -> message:any -> sendHandle:any -> unit) =
          fun (x258 : t) ->
            fun ~message:(x256 : any) ->
              fun ~sendHandle:(x257 : any) ->
                ignore
                  (Ojs.apply (t_to_js x258)
                     [|(any_to_js x256);(any_to_js x257)|])
      end
    module SignalsListener =
      struct
        type t = process_global_NodeJS_SignalsListener
        let rec t_of_js : Ojs.t -> t =
          fun (x260 : Ojs.t) ->
            process_global_NodeJS_SignalsListener_of_js x260
        and t_to_js : t -> Ojs.t =
          fun (x259 : process_global_NodeJS_SignalsListener) ->
            process_global_NodeJS_SignalsListener_to_js x259
        let (apply : t -> signal:process_global_NodeJS_Signals -> unit) =
          fun (x262 : t) ->
            fun ~signal:(x261 : process_global_NodeJS_Signals) ->
              ignore
                (Ojs.apply (t_to_js x262)
                   [|(process_global_NodeJS_Signals_to_js x261)|])
      end
    module NewListenerListener =
      struct
        type t = process_global_NodeJS_NewListenerListener
        let rec t_of_js : Ojs.t -> t =
          fun (x264 : Ojs.t) ->
            process_global_NodeJS_NewListenerListener_of_js x264
        and t_to_js : t -> Ojs.t =
          fun (x263 : process_global_NodeJS_NewListenerListener) ->
            process_global_NodeJS_NewListenerListener_to_js x263
        let (apply :
          t ->
            type_:symbol or_string ->
              listener:(args:any list -> unit) -> unit)
          =
          fun (x270 : t) ->
            fun ~type_:(x265 : symbol or_string) ->
              fun ~listener:(x267 : args:any list -> unit) ->
                ignore
                  (Ojs.apply (t_to_js x270)
                     [|(or_string_to_js symbol_to_js x265);(Ojs.fun_to_js_args
                                                              (fun (x268 : _)
                                                                 ->
                                                                 x267
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x268 0)))|])
      end
    module RemoveListenerListener =
      struct
        type t = process_global_NodeJS_RemoveListenerListener
        let rec t_of_js : Ojs.t -> t =
          fun (x272 : Ojs.t) ->
            process_global_NodeJS_RemoveListenerListener_of_js x272
        and t_to_js : t -> Ojs.t =
          fun (x271 : process_global_NodeJS_RemoveListenerListener) ->
            process_global_NodeJS_RemoveListenerListener_to_js x271
        let (apply :
          t ->
            type_:symbol or_string ->
              listener:(args:any list -> unit) -> unit)
          =
          fun (x278 : t) ->
            fun ~type_:(x273 : symbol or_string) ->
              fun ~listener:(x275 : args:any list -> unit) ->
                ignore
                  (Ojs.apply (t_to_js x278)
                     [|(or_string_to_js symbol_to_js x273);(Ojs.fun_to_js_args
                                                              (fun (x276 : _)
                                                                 ->
                                                                 x275
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x276 0)))|])
      end
    module MultipleResolveListener =
      struct
        type t = process_global_NodeJS_MultipleResolveListener
        let rec t_of_js : Ojs.t -> t =
          fun (x280 : Ojs.t) ->
            process_global_NodeJS_MultipleResolveListener_of_js x280
        and t_to_js : t -> Ojs.t =
          fun (x279 : process_global_NodeJS_MultipleResolveListener) ->
            process_global_NodeJS_MultipleResolveListener_to_js x279
        let (apply :
          t ->
            type_:process_global_NodeJS_MultipleResolveType ->
              promise:any Promise.t -> value:any -> unit)
          =
          fun (x285 : t) ->
            fun ~type_:(x281 : process_global_NodeJS_MultipleResolveType) ->
              fun ~promise:(x282 : any Promise.t) ->
                fun ~value:(x284 : any) ->
                  ignore
                    (Ojs.apply (t_to_js x285)
                       [|(process_global_NodeJS_MultipleResolveType_to_js
                            x281);(Promise.t_to_js any_to_js x282);(any_to_js
                                                                    x284)|])
      end
    module Socket =
      struct
        type t = process_global_NodeJS_Socket
        let rec t_of_js : Ojs.t -> t =
          fun (x287 : Ojs.t) -> process_global_NodeJS_Socket_of_js x287
        and t_to_js : t -> Ojs.t =
          fun (x286 : process_global_NodeJS_Socket) ->
            process_global_NodeJS_Socket_to_js x286
        let (get_isTTY : t -> [ `L_b_true ]) =
          fun (x288 : t) ->
            let x289 = Ojs.get_prop_ascii (t_to_js x288) "isTTY" in
            match Ojs.bool_of_js x289 with
            | true -> `L_b_true
            | _ -> assert false
        let (set_isTTY : t -> [ `L_b_true ] -> unit) =
          fun (x290 : t) ->
            fun (x291 : [ `L_b_true ]) ->
              Ojs.set_prop_ascii (t_to_js x290) "isTTY"
                (match x291 with | `L_b_true -> Ojs.string_to_js "LBTrue")
        let (cast : t -> ReadWriteStream.t) =
          fun (x292 : t) -> ReadWriteStream.t_of_js (t_to_js x292)
      end
    module ProcessEnv =
      struct
        type t = process_global_NodeJS_ProcessEnv
        let rec t_of_js : Ojs.t -> t =
          fun (x294 : Ojs.t) -> process_global_NodeJS_ProcessEnv_of_js x294
        and t_to_js : t -> Ojs.t =
          fun (x293 : process_global_NodeJS_ProcessEnv) ->
            process_global_NodeJS_ProcessEnv_to_js x293
        let (cast : t -> string Dict.t) =
          fun (x295 : t) -> Dict.t_of_js Ojs.string_of_js (t_to_js x295)
      end
    module HRTime =
      struct
        type t = process_global_NodeJS_HRTime
        let rec t_of_js : Ojs.t -> t =
          fun (x298 : Ojs.t) -> process_global_NodeJS_HRTime_of_js x298
        and t_to_js : t -> Ojs.t =
          fun (x297 : process_global_NodeJS_HRTime) ->
            process_global_NodeJS_HRTime_to_js x297
        let (apply : t -> ?time:(int * int) -> unit -> (int * int)) =
          fun (x305 : t) ->
            fun ?time:(x299 : (int * int) option) ->
              fun () ->
                let x306 =
                  Ojs.call (t_to_js x305) "apply"
                    [|Ojs.null;((let x300 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x299 with
                                  | Some x301 ->
                                      ignore
                                        (Ojs.call x300 "push"
                                           [|((let (x302, x303) = x301 in
                                               let x304 = Ojs.array_make 2 in
                                               Ojs.array_set x304 0
                                                 (Ojs.int_to_js x302);
                                               Ojs.array_set x304 1
                                                 (Ojs.int_to_js x303);
                                               x304))|])
                                  | None -> ());
                                 x300))|] in
                ((Ojs.int_of_js (Ojs.array_get x306 0)),
                  (Ojs.int_of_js (Ojs.array_get x306 1)))
        let (bigint : t -> bigint) =
          fun (x307 : t) ->
            bigint_of_js (Ojs.call (t_to_js x307) "bigint" [||])
      end
    module ProcessReport =
      struct
        type t = process_global_NodeJS_ProcessReport
        let rec t_of_js : Ojs.t -> t =
          fun (x309 : Ojs.t) ->
            process_global_NodeJS_ProcessReport_of_js x309
        and t_to_js : t -> Ojs.t =
          fun (x308 : process_global_NodeJS_ProcessReport) ->
            process_global_NodeJS_ProcessReport_to_js x308
        let (get_directory : t -> string) =
          fun (x310 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x310) "directory")
        let (set_directory : t -> string -> unit) =
          fun (x311 : t) ->
            fun (x312 : string) ->
              Ojs.set_prop_ascii (t_to_js x311) "directory"
                (Ojs.string_to_js x312)
        let (get_filename : t -> string) =
          fun (x313 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x313) "filename")
        let (set_filename : t -> string -> unit) =
          fun (x314 : t) ->
            fun (x315 : string) ->
              Ojs.set_prop_ascii (t_to_js x314) "filename"
                (Ojs.string_to_js x315)
        let (getReport : t -> ?err:Error.t -> unit -> string) =
          fun (x319 : t) ->
            fun ?err:(x316 : Error.t option) ->
              fun () ->
                Ojs.string_of_js
                  (let x320 = t_to_js x319 in
                   Ojs.call (Ojs.get_prop_ascii x320 "getReport") "apply"
                     [|x320;((let x317 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x316 with
                               | Some x318 ->
                                   ignore
                                     (Ojs.call x317 "push"
                                        [|(Error.t_to_js x318)|])
                               | None -> ());
                              x317))|])
        let (get_reportOnFatalError : t -> bool) =
          fun (x321 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x321) "reportOnFatalError")
        let (set_reportOnFatalError : t -> bool -> unit) =
          fun (x322 : t) ->
            fun (x323 : bool) ->
              Ojs.set_prop_ascii (t_to_js x322) "reportOnFatalError"
                (Ojs.bool_to_js x323)
        let (get_reportOnSignal : t -> bool) =
          fun (x324 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x324) "reportOnSignal")
        let (set_reportOnSignal : t -> bool -> unit) =
          fun (x325 : t) ->
            fun (x326 : bool) ->
              Ojs.set_prop_ascii (t_to_js x325) "reportOnSignal"
                (Ojs.bool_to_js x326)
        let (get_reportOnUncaughtException : t -> bool) =
          fun (x327 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x327) "reportOnUncaughtException")
        let (set_reportOnUncaughtException : t -> bool -> unit) =
          fun (x328 : t) ->
            fun (x329 : bool) ->
              Ojs.set_prop_ascii (t_to_js x328) "reportOnUncaughtException"
                (Ojs.bool_to_js x329)
        let (get_signal : t -> process_global_NodeJS_Signals) =
          fun (x330 : t) ->
            process_global_NodeJS_Signals_of_js
              (Ojs.get_prop_ascii (t_to_js x330) "signal")
        let (set_signal : t -> process_global_NodeJS_Signals -> unit) =
          fun (x331 : t) ->
            fun (x332 : process_global_NodeJS_Signals) ->
              Ojs.set_prop_ascii (t_to_js x331) "signal"
                (process_global_NodeJS_Signals_to_js x332)
        let (writeReport : t -> ?fileName:string -> unit -> string) =
          fun (x336 : t) ->
            fun ?fileName:(x333 : string option) ->
              fun () ->
                Ojs.string_of_js
                  (let x337 = t_to_js x336 in
                   Ojs.call (Ojs.get_prop_ascii x337 "writeReport") "apply"
                     [|x337;((let x334 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x333 with
                               | Some x335 ->
                                   ignore
                                     (Ojs.call x334 "push"
                                        [|(Ojs.string_to_js x335)|])
                               | None -> ());
                              x334))|])
        let (writeReport' : t -> ?error:Error.t -> unit -> string) =
          fun (x341 : t) ->
            fun ?error:(x338 : Error.t option) ->
              fun () ->
                Ojs.string_of_js
                  (let x342 = t_to_js x341 in
                   Ojs.call (Ojs.get_prop_ascii x342 "writeReport") "apply"
                     [|x342;((let x339 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x338 with
                               | Some x340 ->
                                   ignore
                                     (Ojs.call x339 "push"
                                        [|(Error.t_to_js x340)|])
                               | None -> ());
                              x339))|])
        let (writeReport'' :
          t -> ?fileName:string -> ?err:Error.t -> unit -> string) =
          fun (x348 : t) ->
            fun ?fileName:(x343 : string option) ->
              fun ?err:(x344 : Error.t option) ->
                fun () ->
                  Ojs.string_of_js
                    (let x349 = t_to_js x348 in
                     Ojs.call (Ojs.get_prop_ascii x349 "writeReport") "apply"
                       [|x349;((let x345 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x343 with
                                 | Some x347 ->
                                     ignore
                                       (Ojs.call x345 "push"
                                          [|(Ojs.string_to_js x347)|])
                                 | None -> ());
                                (match x344 with
                                 | Some x346 ->
                                     ignore
                                       (Ojs.call x345 "push"
                                          [|(Error.t_to_js x346)|])
                                 | None -> ());
                                x345))|])
      end
    module ResourceUsage =
      struct
        type t = process_global_NodeJS_ResourceUsage
        let rec t_of_js : Ojs.t -> t =
          fun (x351 : Ojs.t) ->
            process_global_NodeJS_ResourceUsage_of_js x351
        and t_to_js : t -> Ojs.t =
          fun (x350 : process_global_NodeJS_ResourceUsage) ->
            process_global_NodeJS_ResourceUsage_to_js x350
        let (get_fsRead : t -> int) =
          fun (x352 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x352) "fsRead")
        let (set_fsRead : t -> int -> unit) =
          fun (x353 : t) ->
            fun (x354 : int) ->
              Ojs.set_prop_ascii (t_to_js x353) "fsRead" (Ojs.int_to_js x354)
        let (get_fsWrite : t -> int) =
          fun (x355 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x355) "fsWrite")
        let (set_fsWrite : t -> int -> unit) =
          fun (x356 : t) ->
            fun (x357 : int) ->
              Ojs.set_prop_ascii (t_to_js x356) "fsWrite"
                (Ojs.int_to_js x357)
        let (get_involuntaryContextSwitches : t -> int) =
          fun (x358 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x358) "involuntaryContextSwitches")
        let (set_involuntaryContextSwitches : t -> int -> unit) =
          fun (x359 : t) ->
            fun (x360 : int) ->
              Ojs.set_prop_ascii (t_to_js x359) "involuntaryContextSwitches"
                (Ojs.int_to_js x360)
        let (get_ipcReceived : t -> int) =
          fun (x361 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x361) "ipcReceived")
        let (set_ipcReceived : t -> int -> unit) =
          fun (x362 : t) ->
            fun (x363 : int) ->
              Ojs.set_prop_ascii (t_to_js x362) "ipcReceived"
                (Ojs.int_to_js x363)
        let (get_ipcSent : t -> int) =
          fun (x364 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x364) "ipcSent")
        let (set_ipcSent : t -> int -> unit) =
          fun (x365 : t) ->
            fun (x366 : int) ->
              Ojs.set_prop_ascii (t_to_js x365) "ipcSent"
                (Ojs.int_to_js x366)
        let (get_majorPageFault : t -> int) =
          fun (x367 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x367) "majorPageFault")
        let (set_majorPageFault : t -> int -> unit) =
          fun (x368 : t) ->
            fun (x369 : int) ->
              Ojs.set_prop_ascii (t_to_js x368) "majorPageFault"
                (Ojs.int_to_js x369)
        let (get_maxRSS : t -> int) =
          fun (x370 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x370) "maxRSS")
        let (set_maxRSS : t -> int -> unit) =
          fun (x371 : t) ->
            fun (x372 : int) ->
              Ojs.set_prop_ascii (t_to_js x371) "maxRSS" (Ojs.int_to_js x372)
        let (get_minorPageFault : t -> int) =
          fun (x373 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x373) "minorPageFault")
        let (set_minorPageFault : t -> int -> unit) =
          fun (x374 : t) ->
            fun (x375 : int) ->
              Ojs.set_prop_ascii (t_to_js x374) "minorPageFault"
                (Ojs.int_to_js x375)
        let (get_sharedMemorySize : t -> int) =
          fun (x376 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x376) "sharedMemorySize")
        let (set_sharedMemorySize : t -> int -> unit) =
          fun (x377 : t) ->
            fun (x378 : int) ->
              Ojs.set_prop_ascii (t_to_js x377) "sharedMemorySize"
                (Ojs.int_to_js x378)
        let (get_signalsCount : t -> int) =
          fun (x379 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x379) "signalsCount")
        let (set_signalsCount : t -> int -> unit) =
          fun (x380 : t) ->
            fun (x381 : int) ->
              Ojs.set_prop_ascii (t_to_js x380) "signalsCount"
                (Ojs.int_to_js x381)
        let (get_swappedOut : t -> int) =
          fun (x382 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x382) "swappedOut")
        let (set_swappedOut : t -> int -> unit) =
          fun (x383 : t) ->
            fun (x384 : int) ->
              Ojs.set_prop_ascii (t_to_js x383) "swappedOut"
                (Ojs.int_to_js x384)
        let (get_systemCPUTime : t -> int) =
          fun (x385 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x385) "systemCPUTime")
        let (set_systemCPUTime : t -> int -> unit) =
          fun (x386 : t) ->
            fun (x387 : int) ->
              Ojs.set_prop_ascii (t_to_js x386) "systemCPUTime"
                (Ojs.int_to_js x387)
        let (get_unsharedDataSize : t -> int) =
          fun (x388 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x388) "unsharedDataSize")
        let (set_unsharedDataSize : t -> int -> unit) =
          fun (x389 : t) ->
            fun (x390 : int) ->
              Ojs.set_prop_ascii (t_to_js x389) "unsharedDataSize"
                (Ojs.int_to_js x390)
        let (get_unsharedStackSize : t -> int) =
          fun (x391 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x391) "unsharedStackSize")
        let (set_unsharedStackSize : t -> int -> unit) =
          fun (x392 : t) ->
            fun (x393 : int) ->
              Ojs.set_prop_ascii (t_to_js x392) "unsharedStackSize"
                (Ojs.int_to_js x393)
        let (get_userCPUTime : t -> int) =
          fun (x394 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x394) "userCPUTime")
        let (set_userCPUTime : t -> int -> unit) =
          fun (x395 : t) ->
            fun (x396 : int) ->
              Ojs.set_prop_ascii (t_to_js x395) "userCPUTime"
                (Ojs.int_to_js x396)
        let (get_voluntaryContextSwitches : t -> int) =
          fun (x397 : t) ->
            Ojs.int_of_js
              (Ojs.get_prop_ascii (t_to_js x397) "voluntaryContextSwitches")
        let (set_voluntaryContextSwitches : t -> int -> unit) =
          fun (x398 : t) ->
            fun (x399 : int) ->
              Ojs.set_prop_ascii (t_to_js x398) "voluntaryContextSwitches"
                (Ojs.int_to_js x399)
      end
    module Process =
      struct
        type t = process_global_NodeJS_Process
        let rec t_of_js : Ojs.t -> t =
          fun (x401 : Ojs.t) -> process_global_NodeJS_Process_of_js x401
        and t_to_js : t -> Ojs.t =
          fun (x400 : process_global_NodeJS_Process) ->
            process_global_NodeJS_Process_to_js x400
        let (get_stdout :
          t ->
            (process_global_NodeJS_WriteStream, anonymous_interface_4)
              intersection2)
          =
          fun (x402 : t) ->
            intersection2_of_js process_global_NodeJS_WriteStream_of_js
              anonymous_interface_4_of_js
              (Ojs.get_prop_ascii (t_to_js x402) "stdout")
        let (set_stdout :
          t ->
            (process_global_NodeJS_WriteStream, anonymous_interface_4)
              intersection2 -> unit)
          =
          fun (x405 : t) ->
            fun
              (x406 :
                (process_global_NodeJS_WriteStream, anonymous_interface_4)
                  intersection2)
              ->
              Ojs.set_prop_ascii (t_to_js x405) "stdout"
                (intersection2_to_js process_global_NodeJS_WriteStream_to_js
                   anonymous_interface_4_to_js x406)
        let (get_stderr :
          t ->
            (process_global_NodeJS_WriteStream, anonymous_interface_5)
              intersection2)
          =
          fun (x409 : t) ->
            intersection2_of_js process_global_NodeJS_WriteStream_of_js
              anonymous_interface_5_of_js
              (Ojs.get_prop_ascii (t_to_js x409) "stderr")
        let (set_stderr :
          t ->
            (process_global_NodeJS_WriteStream, anonymous_interface_5)
              intersection2 -> unit)
          =
          fun (x412 : t) ->
            fun
              (x413 :
                (process_global_NodeJS_WriteStream, anonymous_interface_5)
                  intersection2)
              ->
              Ojs.set_prop_ascii (t_to_js x412) "stderr"
                (intersection2_to_js process_global_NodeJS_WriteStream_to_js
                   anonymous_interface_5_to_js x413)
        let (get_stdin :
          t ->
            (process_global_NodeJS_ReadStream, anonymous_interface_3)
              intersection2)
          =
          fun (x416 : t) ->
            intersection2_of_js process_global_NodeJS_ReadStream_of_js
              anonymous_interface_3_of_js
              (Ojs.get_prop_ascii (t_to_js x416) "stdin")
        let (set_stdin :
          t ->
            (process_global_NodeJS_ReadStream, anonymous_interface_3)
              intersection2 -> unit)
          =
          fun (x419 : t) ->
            fun
              (x420 :
                (process_global_NodeJS_ReadStream, anonymous_interface_3)
                  intersection2)
              ->
              Ojs.set_prop_ascii (t_to_js x419) "stdin"
                (intersection2_to_js process_global_NodeJS_ReadStream_to_js
                   anonymous_interface_3_to_js x420)
        let (openStdin : t -> process_global_NodeJS_Socket) =
          fun (x423 : t) ->
            process_global_NodeJS_Socket_of_js
              (Ojs.call (t_to_js x423) "openStdin" [||])
        let (get_argv : t -> string list) =
          fun (x424 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x424) "argv")
        let (set_argv : t -> string list -> unit) =
          fun (x426 : t) ->
            fun (x427 : string list) ->
              Ojs.set_prop_ascii (t_to_js x426) "argv"
                (Ojs.list_to_js Ojs.string_to_js x427)
        let (get_argv0 : t -> string) =
          fun (x429 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x429) "argv0")
        let (set_argv0 : t -> string -> unit) =
          fun (x430 : t) ->
            fun (x431 : string) ->
              Ojs.set_prop_ascii (t_to_js x430) "argv0"
                (Ojs.string_to_js x431)
        let (get_execArgv : t -> string list) =
          fun (x432 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x432) "execArgv")
        let (set_execArgv : t -> string list -> unit) =
          fun (x434 : t) ->
            fun (x435 : string list) ->
              Ojs.set_prop_ascii (t_to_js x434) "execArgv"
                (Ojs.list_to_js Ojs.string_to_js x435)
        let (get_execPath : t -> string) =
          fun (x437 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x437) "execPath")
        let (set_execPath : t -> string -> unit) =
          fun (x438 : t) ->
            fun (x439 : string) ->
              Ojs.set_prop_ascii (t_to_js x438) "execPath"
                (Ojs.string_to_js x439)
        let (abort : t -> never) =
          fun (x440 : t) ->
            never_of_js (Ojs.call (t_to_js x440) "abort" [||])
        let (chdir : t -> directory:string -> unit) =
          fun (x442 : t) ->
            fun ~directory:(x441 : string) ->
              ignore
                (Ojs.call (t_to_js x442) "chdir" [|(Ojs.string_to_js x441)|])
        let (cwd : t -> string) =
          fun (x443 : t) ->
            Ojs.string_of_js (Ojs.call (t_to_js x443) "cwd" [||])
        let (get_debugPort : t -> int) =
          fun (x444 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x444) "debugPort")
        let (set_debugPort : t -> int -> unit) =
          fun (x445 : t) ->
            fun (x446 : int) ->
              Ojs.set_prop_ascii (t_to_js x445) "debugPort"
                (Ojs.int_to_js x446)
        let (emitWarning :
          t ->
            warning:Error.t or_string ->
              ?name:string -> ?ctor:untyped_function -> unit -> unit)
          =
          fun (x454 : t) ->
            fun ~warning:(x447 : Error.t or_string) ->
              fun ?name:(x448 : string option) ->
                fun ?ctor:(x449 : untyped_function option) ->
                  fun () ->
                    ignore
                      (let x455 = t_to_js x454 in
                       Ojs.call (Ojs.get_prop_ascii x455 "emitWarning")
                         "apply"
                         [|x455;((let x450 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x450 "push"
                                       [|(or_string_to_js Error.t_to_js x447)|]);
                                  (match x448 with
                                   | Some x452 ->
                                       ignore
                                         (Ojs.call x450 "push"
                                            [|(Ojs.string_to_js x452)|])
                                   | None -> ());
                                  (match x449 with
                                   | Some x451 ->
                                       ignore
                                         (Ojs.call x450 "push"
                                            [|(untyped_function_to_js x451)|])
                                   | None -> ());
                                  x450))|])
        let (get_env : t -> process_global_NodeJS_ProcessEnv) =
          fun (x456 : t) ->
            process_global_NodeJS_ProcessEnv_of_js
              (Ojs.get_prop_ascii (t_to_js x456) "env")
        let (set_env : t -> process_global_NodeJS_ProcessEnv -> unit) =
          fun (x457 : t) ->
            fun (x458 : process_global_NodeJS_ProcessEnv) ->
              Ojs.set_prop_ascii (t_to_js x457) "env"
                (process_global_NodeJS_ProcessEnv_to_js x458)
        let (exit : t -> ?code:int -> unit -> never) =
          fun (x462 : t) ->
            fun ?code:(x459 : int option) ->
              fun () ->
                never_of_js
                  (let x463 = t_to_js x462 in
                   Ojs.call (Ojs.get_prop_ascii x463 "exit") "apply"
                     [|x463;((let x460 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x459 with
                               | Some x461 ->
                                   ignore
                                     (Ojs.call x460 "push"
                                        [|(Ojs.int_to_js x461)|])
                               | None -> ());
                              x460))|])
        let (get_exitCode : t -> int) =
          fun (x464 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x464) "exitCode")
        let (set_exitCode : t -> int -> unit) =
          fun (x465 : t) ->
            fun (x466 : int) ->
              Ojs.set_prop_ascii (t_to_js x465) "exitCode"
                (Ojs.int_to_js x466)
        let (getgid : t -> int) =
          fun (x467 : t) ->
            Ojs.int_of_js (Ojs.call (t_to_js x467) "getgid" [||])
        let (setgid : t -> id:string or_number -> unit) =
          fun (x470 : t) ->
            fun ~id:(x468 : string or_number) ->
              ignore
                (Ojs.call (t_to_js x470) "setgid"
                   [|(or_number_to_js Ojs.string_to_js x468)|])
        let (getuid : t -> int) =
          fun (x471 : t) ->
            Ojs.int_of_js (Ojs.call (t_to_js x471) "getuid" [||])
        let (setuid : t -> id:string or_number -> unit) =
          fun (x474 : t) ->
            fun ~id:(x472 : string or_number) ->
              ignore
                (Ojs.call (t_to_js x474) "setuid"
                   [|(or_number_to_js Ojs.string_to_js x472)|])
        let (geteuid : t -> int) =
          fun (x475 : t) ->
            Ojs.int_of_js (Ojs.call (t_to_js x475) "geteuid" [||])
        let (seteuid : t -> id:string or_number -> unit) =
          fun (x478 : t) ->
            fun ~id:(x476 : string or_number) ->
              ignore
                (Ojs.call (t_to_js x478) "seteuid"
                   [|(or_number_to_js Ojs.string_to_js x476)|])
        let (getegid : t -> int) =
          fun (x479 : t) ->
            Ojs.int_of_js (Ojs.call (t_to_js x479) "getegid" [||])
        let (setegid : t -> id:string or_number -> unit) =
          fun (x482 : t) ->
            fun ~id:(x480 : string or_number) ->
              ignore
                (Ojs.call (t_to_js x482) "setegid"
                   [|(or_number_to_js Ojs.string_to_js x480)|])
        let (getgroups : t -> int list) =
          fun (x483 : t) ->
            Ojs.list_of_js Ojs.int_of_js
              (Ojs.call (t_to_js x483) "getgroups" [||])
        let (setgroups : t -> groups:string or_number list -> unit) =
          fun (x488 : t) ->
            fun ~groups:(x485 : string or_number list) ->
              ignore
                (Ojs.call (t_to_js x488) "setgroups"
                   [|(Ojs.list_to_js
                        (fun (x486 : string or_number) ->
                           or_number_to_js Ojs.string_to_js x486) x485)|])
        let (setUncaughtExceptionCaptureCallback :
          t -> cb:(err:Error.t -> unit) or_null -> unit) =
          fun (x492 : t) ->
            fun ~cb:(x489 : (err:Error.t -> unit) or_null) ->
              ignore
                (Ojs.call (t_to_js x492)
                   "setUncaughtExceptionCaptureCallback"
                   [|(or_null_to_js
                        (fun (x490 : err:Error.t -> unit) ->
                           Ojs.fun_to_js 1
                             (fun (x491 : Ojs.t) ->
                                x490 ~err:(Error.t_of_js x491))) x489)|])
        let (hasUncaughtExceptionCaptureCallback : t -> bool) =
          fun (x493 : t) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x493) "hasUncaughtExceptionCaptureCallback"
                 [||])
        let (get_version : t -> string) =
          fun (x494 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x494) "version")
        let (set_version : t -> string -> unit) =
          fun (x495 : t) ->
            fun (x496 : string) ->
              Ojs.set_prop_ascii (t_to_js x495) "version"
                (Ojs.string_to_js x496)
        let (get_versions : t -> process_global_NodeJS_ProcessVersions) =
          fun (x497 : t) ->
            process_global_NodeJS_ProcessVersions_of_js
              (Ojs.get_prop_ascii (t_to_js x497) "versions")
        let (set_versions :
          t -> process_global_NodeJS_ProcessVersions -> unit) =
          fun (x498 : t) ->
            fun (x499 : process_global_NodeJS_ProcessVersions) ->
              Ojs.set_prop_ascii (t_to_js x498) "versions"
                (process_global_NodeJS_ProcessVersions_to_js x499)
        let (get_config : t -> anonymous_interface_8) =
          fun (x500 : t) ->
            anonymous_interface_8_of_js
              (Ojs.get_prop_ascii (t_to_js x500) "config")
        let (set_config : t -> anonymous_interface_8 -> unit) =
          fun (x501 : t) ->
            fun (x502 : anonymous_interface_8) ->
              Ojs.set_prop_ascii (t_to_js x501) "config"
                (anonymous_interface_8_to_js x502)
        let (kill :
          t -> pid:int -> ?signal:string or_number -> unit -> [ `L_b_true ])
          =
          fun (x508 : t) ->
            fun ~pid:(x503 : int) ->
              fun ?signal:(x504 : string or_number option) ->
                fun () ->
                  let x510 =
                    let x509 = t_to_js x508 in
                    Ojs.call (Ojs.get_prop_ascii x509 "kill") "apply"
                      [|x509;((let x505 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x505 "push"
                                    [|(Ojs.int_to_js x503)|]);
                               (match x504 with
                                | Some x506 ->
                                    ignore
                                      (Ojs.call x505 "push"
                                         [|(or_number_to_js Ojs.string_to_js
                                              x506)|])
                                | None -> ());
                               x505))|] in
                  match Ojs.bool_of_js x510 with
                  | true -> `L_b_true
                  | _ -> assert false
        let (get_pid : t -> int) =
          fun (x511 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x511) "pid")
        let (set_pid : t -> int -> unit) =
          fun (x512 : t) ->
            fun (x513 : int) ->
              Ojs.set_prop_ascii (t_to_js x512) "pid" (Ojs.int_to_js x513)
        let (get_ppid : t -> int) =
          fun (x514 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x514) "ppid")
        let (set_ppid : t -> int -> unit) =
          fun (x515 : t) ->
            fun (x516 : int) ->
              Ojs.set_prop_ascii (t_to_js x515) "ppid" (Ojs.int_to_js x516)
        let (get_title : t -> string) =
          fun (x517 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x517) "title")
        let (set_title : t -> string -> unit) =
          fun (x518 : t) ->
            fun (x519 : string) ->
              Ojs.set_prop_ascii (t_to_js x518) "title"
                (Ojs.string_to_js x519)
        let (get_arch : t -> string) =
          fun (x520 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x520) "arch")
        let (set_arch : t -> string -> unit) =
          fun (x521 : t) ->
            fun (x522 : string) ->
              Ojs.set_prop_ascii (t_to_js x521) "arch"
                (Ojs.string_to_js x522)
        let (get_platform : t -> process_global_NodeJS_Platform) =
          fun (x523 : t) ->
            process_global_NodeJS_Platform_of_js
              (Ojs.get_prop_ascii (t_to_js x523) "platform")
        let (set_platform : t -> process_global_NodeJS_Platform -> unit) =
          fun (x524 : t) ->
            fun (x525 : process_global_NodeJS_Platform) ->
              Ojs.set_prop_ascii (t_to_js x524) "platform"
                (process_global_NodeJS_Platform_to_js x525)
        let (get_mainModule : t -> Module.t) =
          fun (x526 : t) ->
            Module.t_of_js (Ojs.get_prop_ascii (t_to_js x526) "mainModule")
        let (set_mainModule : t -> Module.t -> unit) =
          fun (x527 : t) ->
            fun (x528 : Module.t) ->
              Ojs.set_prop_ascii (t_to_js x527) "mainModule"
                (Module.t_to_js x528)
        let (memoryUsage : t -> process_global_NodeJS_MemoryUsage) =
          fun (x529 : t) ->
            process_global_NodeJS_MemoryUsage_of_js
              (Ojs.call (t_to_js x529) "memoryUsage" [||])
        let (cpuUsage :
          t ->
            ?previousValue:process_global_NodeJS_CpuUsage ->
              unit -> process_global_NodeJS_CpuUsage)
          =
          fun (x533 : t) ->
            fun ?previousValue:(x530 : process_global_NodeJS_CpuUsage option)
              ->
              fun () ->
                process_global_NodeJS_CpuUsage_of_js
                  (let x534 = t_to_js x533 in
                   Ojs.call (Ojs.get_prop_ascii x534 "cpuUsage") "apply"
                     [|x534;((let x531 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x530 with
                               | Some x532 ->
                                   ignore
                                     (Ojs.call x531 "push"
                                        [|(process_global_NodeJS_CpuUsage_to_js
                                             x532)|])
                               | None -> ());
                              x531))|])
        let (nextTick :
          t -> callback:untyped_function -> args:any list -> unit) =
          fun (x539 : t) ->
            fun ~callback:(x535 : untyped_function) ->
              fun ~args:(x536 : any list) ->
                ignore
                  (let x540 = t_to_js x539 in
                   Ojs.call (Ojs.get_prop_ascii x540 "nextTick") "apply"
                     [|x540;((let x537 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x537 "push"
                                   [|(untyped_function_to_js x535)|]);
                              List.iter
                                (fun (x538 : any) ->
                                   ignore
                                     (Ojs.call x537 "push"
                                        [|(any_to_js x538)|])) x536;
                              x537))|])
        let (get_release : t -> process_global_NodeJS_ProcessRelease) =
          fun (x541 : t) ->
            process_global_NodeJS_ProcessRelease_of_js
              (Ojs.get_prop_ascii (t_to_js x541) "release")
        let (set_release : t -> process_global_NodeJS_ProcessRelease -> unit)
          =
          fun (x542 : t) ->
            fun (x543 : process_global_NodeJS_ProcessRelease) ->
              Ojs.set_prop_ascii (t_to_js x542) "release"
                (process_global_NodeJS_ProcessRelease_to_js x543)
        let (get_features : t -> anonymous_interface_6) =
          fun (x544 : t) ->
            anonymous_interface_6_of_js
              (Ojs.get_prop_ascii (t_to_js x544) "features")
        let (set_features : t -> anonymous_interface_6 -> unit) =
          fun (x545 : t) ->
            fun (x546 : anonymous_interface_6) ->
              Ojs.set_prop_ascii (t_to_js x545) "features"
                (anonymous_interface_6_to_js x546)
        let (umask : t -> int) =
          fun (x547 : t) ->
            Ojs.int_of_js (Ojs.call (t_to_js x547) "umask" [||])
        let (umask' : t -> mask:string or_number -> int) =
          fun (x550 : t) ->
            fun ~mask:(x548 : string or_number) ->
              Ojs.int_of_js
                (Ojs.call (t_to_js x550) "umask"
                   [|(or_number_to_js Ojs.string_to_js x548)|])
        let (uptime : t -> int) =
          fun (x551 : t) ->
            Ojs.int_of_js (Ojs.call (t_to_js x551) "uptime" [||])
        let (get_hrtime : t -> process_global_NodeJS_HRTime) =
          fun (x552 : t) ->
            process_global_NodeJS_HRTime_of_js
              (Ojs.get_prop_ascii (t_to_js x552) "hrtime")
        let (set_hrtime : t -> process_global_NodeJS_HRTime -> unit) =
          fun (x553 : t) ->
            fun (x554 : process_global_NodeJS_HRTime) ->
              Ojs.set_prop_ascii (t_to_js x553) "hrtime"
                (process_global_NodeJS_HRTime_to_js x554)
        let (get_domain : t -> Node_domain.Domain.Domain.t) =
          fun (x555 : t) ->
            Node_domain.Domain.Domain.t_of_js
              (Ojs.get_prop_ascii (t_to_js x555) "domain")
        let (set_domain : t -> Node_domain.Domain.Domain.t -> unit) =
          fun (x556 : t) ->
            fun (x557 : Node_domain.Domain.Domain.t) ->
              Ojs.set_prop_ascii (t_to_js x556) "domain"
                (Node_domain.Domain.Domain.t_to_js x557)
        let (send :
          t ->
            message:any ->
              ?sendHandle:any ->
                ?options:anonymous_interface_7 ->
                  ?callback:(error:Error.t or_null -> unit) -> unit -> bool)
          =
          fun (x568 : t) ->
            fun ~message:(x558 : any) ->
              fun ?sendHandle:(x559 : any option) ->
                fun ?options:(x560 : anonymous_interface_7 option) ->
                  fun
                    ?callback:(x561 : (error:Error.t or_null -> unit) option)
                    ->
                    fun () ->
                      Ojs.bool_of_js
                        (let x569 = t_to_js x568 in
                         Ojs.call (Ojs.get_prop_ascii x569 "send") "apply"
                           [|x569;((let x562 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x562 "push"
                                         [|(any_to_js x558)|]);
                                    (match x559 with
                                     | Some x567 ->
                                         ignore
                                           (Ojs.call x562 "push"
                                              [|(any_to_js x567)|])
                                     | None -> ());
                                    (match x560 with
                                     | Some x566 ->
                                         ignore
                                           (Ojs.call x562 "push"
                                              [|(anonymous_interface_7_to_js
                                                   x566)|])
                                     | None -> ());
                                    (match x561 with
                                     | Some x563 ->
                                         ignore
                                           (Ojs.call x562 "push"
                                              [|(Ojs.fun_to_js 1
                                                   (fun (x564 : Ojs.t) ->
                                                      x563
                                                        ~error:(or_null_of_js
                                                                  Error.t_of_js
                                                                  x564)))|])
                                     | None -> ());
                                    x562))|])
        let (disconnect : t -> unit) =
          fun (x570 : t) ->
            ignore (Ojs.call (t_to_js x570) "disconnect" [||])
        let (get_connected : t -> bool) =
          fun (x571 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x571) "connected")
        let (set_connected : t -> bool -> unit) =
          fun (x572 : t) ->
            fun (x573 : bool) ->
              Ojs.set_prop_ascii (t_to_js x572) "connected"
                (Ojs.bool_to_js x573)
        let (get_allowedNodeEnvironmentFlags : t -> string ReadonlySet.t) =
          fun (x574 : t) ->
            ReadonlySet.t_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x574)
                 "allowedNodeEnvironmentFlags")
        let (set_allowedNodeEnvironmentFlags :
          t -> string ReadonlySet.t -> unit) =
          fun (x576 : t) ->
            fun (x577 : string ReadonlySet.t) ->
              Ojs.set_prop_ascii (t_to_js x576) "allowedNodeEnvironmentFlags"
                (ReadonlySet.t_to_js Ojs.string_to_js x577)
        let (get_report : t -> process_global_NodeJS_ProcessReport) =
          fun (x579 : t) ->
            process_global_NodeJS_ProcessReport_of_js
              (Ojs.get_prop_ascii (t_to_js x579) "report")
        let (set_report : t -> process_global_NodeJS_ProcessReport -> unit) =
          fun (x580 : t) ->
            fun (x581 : process_global_NodeJS_ProcessReport) ->
              Ojs.set_prop_ascii (t_to_js x580) "report"
                (process_global_NodeJS_ProcessReport_to_js x581)
        let (resourceUsage : t -> process_global_NodeJS_ResourceUsage) =
          fun (x582 : t) ->
            process_global_NodeJS_ResourceUsage_of_js
              (Ojs.call (t_to_js x582) "resourceUsage" [||])
        let (get_traceDeprecation : t -> bool) =
          fun (x583 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x583) "traceDeprecation")
        let (set_traceDeprecation : t -> bool -> unit) =
          fun (x584 : t) ->
            fun (x585 : bool) ->
              Ojs.set_prop_ascii (t_to_js x584) "traceDeprecation"
                (Ojs.bool_to_js x585)
        let (addListener :
          t ->
            event:[ `beforeExit ] ->
              listener:process_global_NodeJS_BeforeExitListener -> t)
          =
          fun (x588 : t) ->
            fun ~event:(x586 : [ `beforeExit ]) ->
              fun ~listener:(x587 : process_global_NodeJS_BeforeExitListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x588) "addListener"
                     [|((match x586 with
                         | `beforeExit -> Ojs.string_to_js "beforeExit"));(
                       process_global_NodeJS_BeforeExitListener_to_js x587)|])
        let (addListener' :
          t ->
            event:[ `disconnect ] ->
              listener:process_global_NodeJS_DisconnectListener -> t)
          =
          fun (x591 : t) ->
            fun ~event:(x589 : [ `disconnect ]) ->
              fun ~listener:(x590 : process_global_NodeJS_DisconnectListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x591) "addListener"
                     [|((match x589 with
                         | `disconnect -> Ojs.string_to_js "disconnect"));(
                       process_global_NodeJS_DisconnectListener_to_js x590)|])
        let (addListener'' :
          t ->
            event:[ `exit ] ->
              listener:process_global_NodeJS_ExitListener -> t)
          =
          fun (x594 : t) ->
            fun ~event:(x592 : [ `exit ]) ->
              fun ~listener:(x593 : process_global_NodeJS_ExitListener) ->
                t_of_js
                  (Ojs.call (t_to_js x594) "addListener"
                     [|((match x592 with | `exit -> Ojs.string_to_js "exit"));(
                       process_global_NodeJS_ExitListener_to_js x593)|])
        let (addListener''' :
          t ->
            event:[ `rejectionHandled ] ->
              listener:process_global_NodeJS_RejectionHandledListener -> t)
          =
          fun (x597 : t) ->
            fun ~event:(x595 : [ `rejectionHandled ]) ->
              fun
                ~listener:(x596 :
                            process_global_NodeJS_RejectionHandledListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x597) "addListener"
                     [|((match x595 with
                         | `rejectionHandled ->
                             Ojs.string_to_js "rejectionHandled"));(process_global_NodeJS_RejectionHandledListener_to_js
                                                                    x596)|])
        let (addListener'''' :
          t ->
            event:[ `uncaughtException ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x600 : t) ->
            fun ~event:(x598 : [ `uncaughtException ]) ->
              fun
                ~listener:(x599 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x600) "addListener"
                     [|((match x598 with
                         | `uncaughtException ->
                             Ojs.string_to_js "uncaughtException"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x599)|])
        let (addListener''''' :
          t ->
            event:[ `uncaughtExceptionMonitor ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x603 : t) ->
            fun ~event:(x601 : [ `uncaughtExceptionMonitor ]) ->
              fun
                ~listener:(x602 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x603) "addListener"
                     [|((match x601 with
                         | `uncaughtExceptionMonitor ->
                             Ojs.string_to_js "uncaughtExceptionMonitor"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x602)|])
        let (addListener'''''' :
          t ->
            event:[ `unhandledRejection ] ->
              listener:process_global_NodeJS_UnhandledRejectionListener -> t)
          =
          fun (x606 : t) ->
            fun ~event:(x604 : [ `unhandledRejection ]) ->
              fun
                ~listener:(x605 :
                            process_global_NodeJS_UnhandledRejectionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x606) "addListener"
                     [|((match x604 with
                         | `unhandledRejection ->
                             Ojs.string_to_js "unhandledRejection"));(
                       process_global_NodeJS_UnhandledRejectionListener_to_js
                         x605)|])
        let (addListener''''''' :
          t ->
            event:[ `warning ] ->
              listener:process_global_NodeJS_WarningListener -> t)
          =
          fun (x609 : t) ->
            fun ~event:(x607 : [ `warning ]) ->
              fun ~listener:(x608 : process_global_NodeJS_WarningListener) ->
                t_of_js
                  (Ojs.call (t_to_js x609) "addListener"
                     [|((match x607 with
                         | `warning -> Ojs.string_to_js "warning"));(
                       process_global_NodeJS_WarningListener_to_js x608)|])
        let (addListener'''''''' :
          t ->
            event:[ `message ] ->
              listener:process_global_NodeJS_MessageListener -> t)
          =
          fun (x612 : t) ->
            fun ~event:(x610 : [ `message ]) ->
              fun ~listener:(x611 : process_global_NodeJS_MessageListener) ->
                t_of_js
                  (Ojs.call (t_to_js x612) "addListener"
                     [|((match x610 with
                         | `message -> Ojs.string_to_js "message"));(
                       process_global_NodeJS_MessageListener_to_js x611)|])
        let (addListener''''''''' :
          t ->
            event:process_global_NodeJS_Signals ->
              listener:process_global_NodeJS_SignalsListener -> t)
          =
          fun (x615 : t) ->
            fun ~event:(x613 : process_global_NodeJS_Signals) ->
              fun ~listener:(x614 : process_global_NodeJS_SignalsListener) ->
                t_of_js
                  (Ojs.call (t_to_js x615) "addListener"
                     [|(process_global_NodeJS_Signals_to_js x613);(process_global_NodeJS_SignalsListener_to_js
                                                                    x614)|])
        let (addListener'''''''''' :
          t ->
            event:[ `newListener ] ->
              listener:process_global_NodeJS_NewListenerListener -> t)
          =
          fun (x618 : t) ->
            fun ~event:(x616 : [ `newListener ]) ->
              fun
                ~listener:(x617 : process_global_NodeJS_NewListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x618) "addListener"
                     [|((match x616 with
                         | `newListener -> Ojs.string_to_js "newListener"));(
                       process_global_NodeJS_NewListenerListener_to_js x617)|])
        let (addListener''''''''''' :
          t ->
            event:[ `removeListener ] ->
              listener:process_global_NodeJS_RemoveListenerListener -> t)
          =
          fun (x621 : t) ->
            fun ~event:(x619 : [ `removeListener ]) ->
              fun
                ~listener:(x620 :
                            process_global_NodeJS_RemoveListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x621) "addListener"
                     [|((match x619 with
                         | `removeListener ->
                             Ojs.string_to_js "removeListener"));(process_global_NodeJS_RemoveListenerListener_to_js
                                                                    x620)|])
        let (addListener'''''''''''' :
          t ->
            event:[ `multipleResolves ] ->
              listener:process_global_NodeJS_MultipleResolveListener -> t)
          =
          fun (x624 : t) ->
            fun ~event:(x622 : [ `multipleResolves ]) ->
              fun
                ~listener:(x623 :
                            process_global_NodeJS_MultipleResolveListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x624) "addListener"
                     [|((match x622 with
                         | `multipleResolves ->
                             Ojs.string_to_js "multipleResolves"));(process_global_NodeJS_MultipleResolveListener_to_js
                                                                    x623)|])
        let (emit : t -> event:[ `beforeExit ] -> code:int -> bool) =
          fun (x627 : t) ->
            fun ~event:(x625 : [ `beforeExit ]) ->
              fun ~code:(x626 : int) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x627) "emit"
                     [|((match x625 with
                         | `beforeExit -> Ojs.string_to_js "beforeExit"));(
                       Ojs.int_to_js x626)|])
        let (emit' : t -> event:[ `disconnect ] -> bool) =
          fun (x629 : t) ->
            fun ~event:(x628 : [ `disconnect ]) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x629) "emit"
                   [|((match x628 with
                       | `disconnect -> Ojs.string_to_js "disconnect"))|])
        let (emit'' : t -> event:[ `exit ] -> code:int -> bool) =
          fun (x632 : t) ->
            fun ~event:(x630 : [ `exit ]) ->
              fun ~code:(x631 : int) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x632) "emit"
                     [|((match x630 with | `exit -> Ojs.string_to_js "exit"));(
                       Ojs.int_to_js x631)|])
        let (emit''' :
          t -> event:[ `rejectionHandled ] -> promise:any Promise.t -> bool)
          =
          fun (x636 : t) ->
            fun ~event:(x633 : [ `rejectionHandled ]) ->
              fun ~promise:(x634 : any Promise.t) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x636) "emit"
                     [|((match x633 with
                         | `rejectionHandled ->
                             Ojs.string_to_js "rejectionHandled"));(Promise.t_to_js
                                                                    any_to_js
                                                                    x634)|])
        let (emit'''' :
          t -> event:[ `uncaughtException ] -> error:Error.t -> bool) =
          fun (x639 : t) ->
            fun ~event:(x637 : [ `uncaughtException ]) ->
              fun ~error:(x638 : Error.t) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x639) "emit"
                     [|((match x637 with
                         | `uncaughtException ->
                             Ojs.string_to_js "uncaughtException"));(
                       Error.t_to_js x638)|])
        let (emit''''' :
          t -> event:[ `uncaughtExceptionMonitor ] -> error:Error.t -> bool)
          =
          fun (x642 : t) ->
            fun ~event:(x640 : [ `uncaughtExceptionMonitor ]) ->
              fun ~error:(x641 : Error.t) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x642) "emit"
                     [|((match x640 with
                         | `uncaughtExceptionMonitor ->
                             Ojs.string_to_js "uncaughtExceptionMonitor"));(
                       Error.t_to_js x641)|])
        let (emit'''''' :
          t ->
            event:[ `unhandledRejection ] ->
              reason:any -> promise:any Promise.t -> bool)
          =
          fun (x647 : t) ->
            fun ~event:(x643 : [ `unhandledRejection ]) ->
              fun ~reason:(x644 : any) ->
                fun ~promise:(x645 : any Promise.t) ->
                  Ojs.bool_of_js
                    (Ojs.call (t_to_js x647) "emit"
                       [|((match x643 with
                           | `unhandledRejection ->
                               Ojs.string_to_js "unhandledRejection"));(
                         any_to_js x644);(Promise.t_to_js any_to_js x645)|])
        let (emit''''''' :
          t -> event:[ `warning ] -> warning:Error.t -> bool) =
          fun (x650 : t) ->
            fun ~event:(x648 : [ `warning ]) ->
              fun ~warning:(x649 : Error.t) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x650) "emit"
                     [|((match x648 with
                         | `warning -> Ojs.string_to_js "warning"));(
                       Error.t_to_js x649)|])
        let (emit'''''''' :
          t -> event:[ `message ] -> message:any -> sendHandle:any -> t) =
          fun (x654 : t) ->
            fun ~event:(x651 : [ `message ]) ->
              fun ~message:(x652 : any) ->
                fun ~sendHandle:(x653 : any) ->
                  t_of_js
                    (Ojs.call (t_to_js x654) "emit"
                       [|((match x651 with
                           | `message -> Ojs.string_to_js "message"));(
                         any_to_js x652);(any_to_js x653)|])
        let (emit''''''''' :
          t ->
            event:process_global_NodeJS_Signals ->
              signal:process_global_NodeJS_Signals -> bool)
          =
          fun (x657 : t) ->
            fun ~event:(x655 : process_global_NodeJS_Signals) ->
              fun ~signal:(x656 : process_global_NodeJS_Signals) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x657) "emit"
                     [|(process_global_NodeJS_Signals_to_js x655);(process_global_NodeJS_Signals_to_js
                                                                    x656)|])
        let (emit'''''''''' :
          t ->
            event:[ `newListener ] ->
              eventName:symbol or_string ->
                listener:(args:any list -> unit) -> t)
          =
          fun (x664 : t) ->
            fun ~event:(x658 : [ `newListener ]) ->
              fun ~eventName:(x659 : symbol or_string) ->
                fun ~listener:(x661 : args:any list -> unit) ->
                  t_of_js
                    (Ojs.call (t_to_js x664) "emit"
                       [|((match x658 with
                           | `newListener -> Ojs.string_to_js "newListener"));(
                         or_string_to_js symbol_to_js x659);(Ojs.fun_to_js_args
                                                               (fun
                                                                  (x662 : _)
                                                                  ->
                                                                  x661
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x662 0)))|])
        let (emit''''''''''' :
          t ->
            event:[ `removeListener ] ->
              eventName:string -> listener:(args:any list -> unit) -> t)
          =
          fun (x670 : t) ->
            fun ~event:(x665 : [ `removeListener ]) ->
              fun ~eventName:(x666 : string) ->
                fun ~listener:(x667 : args:any list -> unit) ->
                  t_of_js
                    (Ojs.call (t_to_js x670) "emit"
                       [|((match x665 with
                           | `removeListener ->
                               Ojs.string_to_js "removeListener"));(Ojs.string_to_js
                                                                    x666);(
                         Ojs.fun_to_js_args
                           (fun (x668 : _) ->
                              x667
                                ~args:(Ojs.list_of_js_from any_of_js x668 0)))|])
        let (emit'''''''''''' :
          t ->
            event:[ `multipleResolves ] ->
              listener:process_global_NodeJS_MultipleResolveListener -> t)
          =
          fun (x673 : t) ->
            fun ~event:(x671 : [ `multipleResolves ]) ->
              fun
                ~listener:(x672 :
                            process_global_NodeJS_MultipleResolveListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x673) "emit"
                     [|((match x671 with
                         | `multipleResolves ->
                             Ojs.string_to_js "multipleResolves"));(process_global_NodeJS_MultipleResolveListener_to_js
                                                                    x672)|])
        let (on :
          t ->
            event:[ `beforeExit ] ->
              listener:process_global_NodeJS_BeforeExitListener -> t)
          =
          fun (x676 : t) ->
            fun ~event:(x674 : [ `beforeExit ]) ->
              fun ~listener:(x675 : process_global_NodeJS_BeforeExitListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x676) "on"
                     [|((match x674 with
                         | `beforeExit -> Ojs.string_to_js "beforeExit"));(
                       process_global_NodeJS_BeforeExitListener_to_js x675)|])
        let (on' :
          t ->
            event:[ `disconnect ] ->
              listener:process_global_NodeJS_DisconnectListener -> t)
          =
          fun (x679 : t) ->
            fun ~event:(x677 : [ `disconnect ]) ->
              fun ~listener:(x678 : process_global_NodeJS_DisconnectListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x679) "on"
                     [|((match x677 with
                         | `disconnect -> Ojs.string_to_js "disconnect"));(
                       process_global_NodeJS_DisconnectListener_to_js x678)|])
        let (on'' :
          t ->
            event:[ `exit ] ->
              listener:process_global_NodeJS_ExitListener -> t)
          =
          fun (x682 : t) ->
            fun ~event:(x680 : [ `exit ]) ->
              fun ~listener:(x681 : process_global_NodeJS_ExitListener) ->
                t_of_js
                  (Ojs.call (t_to_js x682) "on"
                     [|((match x680 with | `exit -> Ojs.string_to_js "exit"));(
                       process_global_NodeJS_ExitListener_to_js x681)|])
        let (on''' :
          t ->
            event:[ `rejectionHandled ] ->
              listener:process_global_NodeJS_RejectionHandledListener -> t)
          =
          fun (x685 : t) ->
            fun ~event:(x683 : [ `rejectionHandled ]) ->
              fun
                ~listener:(x684 :
                            process_global_NodeJS_RejectionHandledListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x685) "on"
                     [|((match x683 with
                         | `rejectionHandled ->
                             Ojs.string_to_js "rejectionHandled"));(process_global_NodeJS_RejectionHandledListener_to_js
                                                                    x684)|])
        let (on'''' :
          t ->
            event:[ `uncaughtException ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x688 : t) ->
            fun ~event:(x686 : [ `uncaughtException ]) ->
              fun
                ~listener:(x687 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x688) "on"
                     [|((match x686 with
                         | `uncaughtException ->
                             Ojs.string_to_js "uncaughtException"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x687)|])
        let (on''''' :
          t ->
            event:[ `uncaughtExceptionMonitor ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x691 : t) ->
            fun ~event:(x689 : [ `uncaughtExceptionMonitor ]) ->
              fun
                ~listener:(x690 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x691) "on"
                     [|((match x689 with
                         | `uncaughtExceptionMonitor ->
                             Ojs.string_to_js "uncaughtExceptionMonitor"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x690)|])
        let (on'''''' :
          t ->
            event:[ `unhandledRejection ] ->
              listener:process_global_NodeJS_UnhandledRejectionListener -> t)
          =
          fun (x694 : t) ->
            fun ~event:(x692 : [ `unhandledRejection ]) ->
              fun
                ~listener:(x693 :
                            process_global_NodeJS_UnhandledRejectionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x694) "on"
                     [|((match x692 with
                         | `unhandledRejection ->
                             Ojs.string_to_js "unhandledRejection"));(
                       process_global_NodeJS_UnhandledRejectionListener_to_js
                         x693)|])
        let (on''''''' :
          t ->
            event:[ `warning ] ->
              listener:process_global_NodeJS_WarningListener -> t)
          =
          fun (x697 : t) ->
            fun ~event:(x695 : [ `warning ]) ->
              fun ~listener:(x696 : process_global_NodeJS_WarningListener) ->
                t_of_js
                  (Ojs.call (t_to_js x697) "on"
                     [|((match x695 with
                         | `warning -> Ojs.string_to_js "warning"));(
                       process_global_NodeJS_WarningListener_to_js x696)|])
        let (on'''''''' :
          t ->
            event:[ `message ] ->
              listener:process_global_NodeJS_MessageListener -> t)
          =
          fun (x700 : t) ->
            fun ~event:(x698 : [ `message ]) ->
              fun ~listener:(x699 : process_global_NodeJS_MessageListener) ->
                t_of_js
                  (Ojs.call (t_to_js x700) "on"
                     [|((match x698 with
                         | `message -> Ojs.string_to_js "message"));(
                       process_global_NodeJS_MessageListener_to_js x699)|])
        let (on''''''''' :
          t ->
            event:process_global_NodeJS_Signals ->
              listener:process_global_NodeJS_SignalsListener -> t)
          =
          fun (x703 : t) ->
            fun ~event:(x701 : process_global_NodeJS_Signals) ->
              fun ~listener:(x702 : process_global_NodeJS_SignalsListener) ->
                t_of_js
                  (Ojs.call (t_to_js x703) "on"
                     [|(process_global_NodeJS_Signals_to_js x701);(process_global_NodeJS_SignalsListener_to_js
                                                                    x702)|])
        let (on'''''''''' :
          t ->
            event:[ `newListener ] ->
              listener:process_global_NodeJS_NewListenerListener -> t)
          =
          fun (x706 : t) ->
            fun ~event:(x704 : [ `newListener ]) ->
              fun
                ~listener:(x705 : process_global_NodeJS_NewListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x706) "on"
                     [|((match x704 with
                         | `newListener -> Ojs.string_to_js "newListener"));(
                       process_global_NodeJS_NewListenerListener_to_js x705)|])
        let (on''''''''''' :
          t ->
            event:[ `removeListener ] ->
              listener:process_global_NodeJS_RemoveListenerListener -> t)
          =
          fun (x709 : t) ->
            fun ~event:(x707 : [ `removeListener ]) ->
              fun
                ~listener:(x708 :
                            process_global_NodeJS_RemoveListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x709) "on"
                     [|((match x707 with
                         | `removeListener ->
                             Ojs.string_to_js "removeListener"));(process_global_NodeJS_RemoveListenerListener_to_js
                                                                    x708)|])
        let (on'''''''''''' :
          t ->
            event:[ `multipleResolves ] ->
              listener:process_global_NodeJS_MultipleResolveListener -> t)
          =
          fun (x712 : t) ->
            fun ~event:(x710 : [ `multipleResolves ]) ->
              fun
                ~listener:(x711 :
                            process_global_NodeJS_MultipleResolveListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x712) "on"
                     [|((match x710 with
                         | `multipleResolves ->
                             Ojs.string_to_js "multipleResolves"));(process_global_NodeJS_MultipleResolveListener_to_js
                                                                    x711)|])
        let (on''''''''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x718 : t) ->
            fun ~event:(x713 : symbol or_string) ->
              fun ~listener:(x715 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x718) "on"
                     [|(or_string_to_js symbol_to_js x713);(Ojs.fun_to_js_args
                                                              (fun (x716 : _)
                                                                 ->
                                                                 x715
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x716 0)))|])
        let (once :
          t ->
            event:[ `beforeExit ] ->
              listener:process_global_NodeJS_BeforeExitListener -> t)
          =
          fun (x721 : t) ->
            fun ~event:(x719 : [ `beforeExit ]) ->
              fun ~listener:(x720 : process_global_NodeJS_BeforeExitListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x721) "once"
                     [|((match x719 with
                         | `beforeExit -> Ojs.string_to_js "beforeExit"));(
                       process_global_NodeJS_BeforeExitListener_to_js x720)|])
        let (once' :
          t ->
            event:[ `disconnect ] ->
              listener:process_global_NodeJS_DisconnectListener -> t)
          =
          fun (x724 : t) ->
            fun ~event:(x722 : [ `disconnect ]) ->
              fun ~listener:(x723 : process_global_NodeJS_DisconnectListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x724) "once"
                     [|((match x722 with
                         | `disconnect -> Ojs.string_to_js "disconnect"));(
                       process_global_NodeJS_DisconnectListener_to_js x723)|])
        let (once'' :
          t ->
            event:[ `exit ] ->
              listener:process_global_NodeJS_ExitListener -> t)
          =
          fun (x727 : t) ->
            fun ~event:(x725 : [ `exit ]) ->
              fun ~listener:(x726 : process_global_NodeJS_ExitListener) ->
                t_of_js
                  (Ojs.call (t_to_js x727) "once"
                     [|((match x725 with | `exit -> Ojs.string_to_js "exit"));(
                       process_global_NodeJS_ExitListener_to_js x726)|])
        let (once''' :
          t ->
            event:[ `rejectionHandled ] ->
              listener:process_global_NodeJS_RejectionHandledListener -> t)
          =
          fun (x730 : t) ->
            fun ~event:(x728 : [ `rejectionHandled ]) ->
              fun
                ~listener:(x729 :
                            process_global_NodeJS_RejectionHandledListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x730) "once"
                     [|((match x728 with
                         | `rejectionHandled ->
                             Ojs.string_to_js "rejectionHandled"));(process_global_NodeJS_RejectionHandledListener_to_js
                                                                    x729)|])
        let (once'''' :
          t ->
            event:[ `uncaughtException ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x733 : t) ->
            fun ~event:(x731 : [ `uncaughtException ]) ->
              fun
                ~listener:(x732 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x733) "once"
                     [|((match x731 with
                         | `uncaughtException ->
                             Ojs.string_to_js "uncaughtException"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x732)|])
        let (once''''' :
          t ->
            event:[ `uncaughtExceptionMonitor ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x736 : t) ->
            fun ~event:(x734 : [ `uncaughtExceptionMonitor ]) ->
              fun
                ~listener:(x735 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x736) "once"
                     [|((match x734 with
                         | `uncaughtExceptionMonitor ->
                             Ojs.string_to_js "uncaughtExceptionMonitor"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x735)|])
        let (once'''''' :
          t ->
            event:[ `unhandledRejection ] ->
              listener:process_global_NodeJS_UnhandledRejectionListener -> t)
          =
          fun (x739 : t) ->
            fun ~event:(x737 : [ `unhandledRejection ]) ->
              fun
                ~listener:(x738 :
                            process_global_NodeJS_UnhandledRejectionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x739) "once"
                     [|((match x737 with
                         | `unhandledRejection ->
                             Ojs.string_to_js "unhandledRejection"));(
                       process_global_NodeJS_UnhandledRejectionListener_to_js
                         x738)|])
        let (once''''''' :
          t ->
            event:[ `warning ] ->
              listener:process_global_NodeJS_WarningListener -> t)
          =
          fun (x742 : t) ->
            fun ~event:(x740 : [ `warning ]) ->
              fun ~listener:(x741 : process_global_NodeJS_WarningListener) ->
                t_of_js
                  (Ojs.call (t_to_js x742) "once"
                     [|((match x740 with
                         | `warning -> Ojs.string_to_js "warning"));(
                       process_global_NodeJS_WarningListener_to_js x741)|])
        let (once'''''''' :
          t ->
            event:[ `message ] ->
              listener:process_global_NodeJS_MessageListener -> t)
          =
          fun (x745 : t) ->
            fun ~event:(x743 : [ `message ]) ->
              fun ~listener:(x744 : process_global_NodeJS_MessageListener) ->
                t_of_js
                  (Ojs.call (t_to_js x745) "once"
                     [|((match x743 with
                         | `message -> Ojs.string_to_js "message"));(
                       process_global_NodeJS_MessageListener_to_js x744)|])
        let (once''''''''' :
          t ->
            event:process_global_NodeJS_Signals ->
              listener:process_global_NodeJS_SignalsListener -> t)
          =
          fun (x748 : t) ->
            fun ~event:(x746 : process_global_NodeJS_Signals) ->
              fun ~listener:(x747 : process_global_NodeJS_SignalsListener) ->
                t_of_js
                  (Ojs.call (t_to_js x748) "once"
                     [|(process_global_NodeJS_Signals_to_js x746);(process_global_NodeJS_SignalsListener_to_js
                                                                    x747)|])
        let (once'''''''''' :
          t ->
            event:[ `newListener ] ->
              listener:process_global_NodeJS_NewListenerListener -> t)
          =
          fun (x751 : t) ->
            fun ~event:(x749 : [ `newListener ]) ->
              fun
                ~listener:(x750 : process_global_NodeJS_NewListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x751) "once"
                     [|((match x749 with
                         | `newListener -> Ojs.string_to_js "newListener"));(
                       process_global_NodeJS_NewListenerListener_to_js x750)|])
        let (once''''''''''' :
          t ->
            event:[ `removeListener ] ->
              listener:process_global_NodeJS_RemoveListenerListener -> t)
          =
          fun (x754 : t) ->
            fun ~event:(x752 : [ `removeListener ]) ->
              fun
                ~listener:(x753 :
                            process_global_NodeJS_RemoveListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x754) "once"
                     [|((match x752 with
                         | `removeListener ->
                             Ojs.string_to_js "removeListener"));(process_global_NodeJS_RemoveListenerListener_to_js
                                                                    x753)|])
        let (once'''''''''''' :
          t ->
            event:[ `multipleResolves ] ->
              listener:process_global_NodeJS_MultipleResolveListener -> t)
          =
          fun (x757 : t) ->
            fun ~event:(x755 : [ `multipleResolves ]) ->
              fun
                ~listener:(x756 :
                            process_global_NodeJS_MultipleResolveListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x757) "once"
                     [|((match x755 with
                         | `multipleResolves ->
                             Ojs.string_to_js "multipleResolves"));(process_global_NodeJS_MultipleResolveListener_to_js
                                                                    x756)|])
        let (prependListener :
          t ->
            event:[ `beforeExit ] ->
              listener:process_global_NodeJS_BeforeExitListener -> t)
          =
          fun (x760 : t) ->
            fun ~event:(x758 : [ `beforeExit ]) ->
              fun ~listener:(x759 : process_global_NodeJS_BeforeExitListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x760) "prependListener"
                     [|((match x758 with
                         | `beforeExit -> Ojs.string_to_js "beforeExit"));(
                       process_global_NodeJS_BeforeExitListener_to_js x759)|])
        let (prependListener' :
          t ->
            event:[ `disconnect ] ->
              listener:process_global_NodeJS_DisconnectListener -> t)
          =
          fun (x763 : t) ->
            fun ~event:(x761 : [ `disconnect ]) ->
              fun ~listener:(x762 : process_global_NodeJS_DisconnectListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x763) "prependListener"
                     [|((match x761 with
                         | `disconnect -> Ojs.string_to_js "disconnect"));(
                       process_global_NodeJS_DisconnectListener_to_js x762)|])
        let (prependListener'' :
          t ->
            event:[ `exit ] ->
              listener:process_global_NodeJS_ExitListener -> t)
          =
          fun (x766 : t) ->
            fun ~event:(x764 : [ `exit ]) ->
              fun ~listener:(x765 : process_global_NodeJS_ExitListener) ->
                t_of_js
                  (Ojs.call (t_to_js x766) "prependListener"
                     [|((match x764 with | `exit -> Ojs.string_to_js "exit"));(
                       process_global_NodeJS_ExitListener_to_js x765)|])
        let (prependListener''' :
          t ->
            event:[ `rejectionHandled ] ->
              listener:process_global_NodeJS_RejectionHandledListener -> t)
          =
          fun (x769 : t) ->
            fun ~event:(x767 : [ `rejectionHandled ]) ->
              fun
                ~listener:(x768 :
                            process_global_NodeJS_RejectionHandledListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x769) "prependListener"
                     [|((match x767 with
                         | `rejectionHandled ->
                             Ojs.string_to_js "rejectionHandled"));(process_global_NodeJS_RejectionHandledListener_to_js
                                                                    x768)|])
        let (prependListener'''' :
          t ->
            event:[ `uncaughtException ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x772 : t) ->
            fun ~event:(x770 : [ `uncaughtException ]) ->
              fun
                ~listener:(x771 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x772) "prependListener"
                     [|((match x770 with
                         | `uncaughtException ->
                             Ojs.string_to_js "uncaughtException"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x771)|])
        let (prependListener''''' :
          t ->
            event:[ `uncaughtExceptionMonitor ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x775 : t) ->
            fun ~event:(x773 : [ `uncaughtExceptionMonitor ]) ->
              fun
                ~listener:(x774 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x775) "prependListener"
                     [|((match x773 with
                         | `uncaughtExceptionMonitor ->
                             Ojs.string_to_js "uncaughtExceptionMonitor"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x774)|])
        let (prependListener'''''' :
          t ->
            event:[ `unhandledRejection ] ->
              listener:process_global_NodeJS_UnhandledRejectionListener -> t)
          =
          fun (x778 : t) ->
            fun ~event:(x776 : [ `unhandledRejection ]) ->
              fun
                ~listener:(x777 :
                            process_global_NodeJS_UnhandledRejectionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x778) "prependListener"
                     [|((match x776 with
                         | `unhandledRejection ->
                             Ojs.string_to_js "unhandledRejection"));(
                       process_global_NodeJS_UnhandledRejectionListener_to_js
                         x777)|])
        let (prependListener''''''' :
          t ->
            event:[ `warning ] ->
              listener:process_global_NodeJS_WarningListener -> t)
          =
          fun (x781 : t) ->
            fun ~event:(x779 : [ `warning ]) ->
              fun ~listener:(x780 : process_global_NodeJS_WarningListener) ->
                t_of_js
                  (Ojs.call (t_to_js x781) "prependListener"
                     [|((match x779 with
                         | `warning -> Ojs.string_to_js "warning"));(
                       process_global_NodeJS_WarningListener_to_js x780)|])
        let (prependListener'''''''' :
          t ->
            event:[ `message ] ->
              listener:process_global_NodeJS_MessageListener -> t)
          =
          fun (x784 : t) ->
            fun ~event:(x782 : [ `message ]) ->
              fun ~listener:(x783 : process_global_NodeJS_MessageListener) ->
                t_of_js
                  (Ojs.call (t_to_js x784) "prependListener"
                     [|((match x782 with
                         | `message -> Ojs.string_to_js "message"));(
                       process_global_NodeJS_MessageListener_to_js x783)|])
        let (prependListener''''''''' :
          t ->
            event:process_global_NodeJS_Signals ->
              listener:process_global_NodeJS_SignalsListener -> t)
          =
          fun (x787 : t) ->
            fun ~event:(x785 : process_global_NodeJS_Signals) ->
              fun ~listener:(x786 : process_global_NodeJS_SignalsListener) ->
                t_of_js
                  (Ojs.call (t_to_js x787) "prependListener"
                     [|(process_global_NodeJS_Signals_to_js x785);(process_global_NodeJS_SignalsListener_to_js
                                                                    x786)|])
        let (prependListener'''''''''' :
          t ->
            event:[ `newListener ] ->
              listener:process_global_NodeJS_NewListenerListener -> t)
          =
          fun (x790 : t) ->
            fun ~event:(x788 : [ `newListener ]) ->
              fun
                ~listener:(x789 : process_global_NodeJS_NewListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x790) "prependListener"
                     [|((match x788 with
                         | `newListener -> Ojs.string_to_js "newListener"));(
                       process_global_NodeJS_NewListenerListener_to_js x789)|])
        let (prependListener''''''''''' :
          t ->
            event:[ `removeListener ] ->
              listener:process_global_NodeJS_RemoveListenerListener -> t)
          =
          fun (x793 : t) ->
            fun ~event:(x791 : [ `removeListener ]) ->
              fun
                ~listener:(x792 :
                            process_global_NodeJS_RemoveListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x793) "prependListener"
                     [|((match x791 with
                         | `removeListener ->
                             Ojs.string_to_js "removeListener"));(process_global_NodeJS_RemoveListenerListener_to_js
                                                                    x792)|])
        let (prependListener'''''''''''' :
          t ->
            event:[ `multipleResolves ] ->
              listener:process_global_NodeJS_MultipleResolveListener -> t)
          =
          fun (x796 : t) ->
            fun ~event:(x794 : [ `multipleResolves ]) ->
              fun
                ~listener:(x795 :
                            process_global_NodeJS_MultipleResolveListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x796) "prependListener"
                     [|((match x794 with
                         | `multipleResolves ->
                             Ojs.string_to_js "multipleResolves"));(process_global_NodeJS_MultipleResolveListener_to_js
                                                                    x795)|])
        let (prependOnceListener :
          t ->
            event:[ `beforeExit ] ->
              listener:process_global_NodeJS_BeforeExitListener -> t)
          =
          fun (x799 : t) ->
            fun ~event:(x797 : [ `beforeExit ]) ->
              fun ~listener:(x798 : process_global_NodeJS_BeforeExitListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x799) "prependOnceListener"
                     [|((match x797 with
                         | `beforeExit -> Ojs.string_to_js "beforeExit"));(
                       process_global_NodeJS_BeforeExitListener_to_js x798)|])
        let (prependOnceListener' :
          t ->
            event:[ `disconnect ] ->
              listener:process_global_NodeJS_DisconnectListener -> t)
          =
          fun (x802 : t) ->
            fun ~event:(x800 : [ `disconnect ]) ->
              fun ~listener:(x801 : process_global_NodeJS_DisconnectListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x802) "prependOnceListener"
                     [|((match x800 with
                         | `disconnect -> Ojs.string_to_js "disconnect"));(
                       process_global_NodeJS_DisconnectListener_to_js x801)|])
        let (prependOnceListener'' :
          t ->
            event:[ `exit ] ->
              listener:process_global_NodeJS_ExitListener -> t)
          =
          fun (x805 : t) ->
            fun ~event:(x803 : [ `exit ]) ->
              fun ~listener:(x804 : process_global_NodeJS_ExitListener) ->
                t_of_js
                  (Ojs.call (t_to_js x805) "prependOnceListener"
                     [|((match x803 with | `exit -> Ojs.string_to_js "exit"));(
                       process_global_NodeJS_ExitListener_to_js x804)|])
        let (prependOnceListener''' :
          t ->
            event:[ `rejectionHandled ] ->
              listener:process_global_NodeJS_RejectionHandledListener -> t)
          =
          fun (x808 : t) ->
            fun ~event:(x806 : [ `rejectionHandled ]) ->
              fun
                ~listener:(x807 :
                            process_global_NodeJS_RejectionHandledListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x808) "prependOnceListener"
                     [|((match x806 with
                         | `rejectionHandled ->
                             Ojs.string_to_js "rejectionHandled"));(process_global_NodeJS_RejectionHandledListener_to_js
                                                                    x807)|])
        let (prependOnceListener'''' :
          t ->
            event:[ `uncaughtException ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x811 : t) ->
            fun ~event:(x809 : [ `uncaughtException ]) ->
              fun
                ~listener:(x810 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x811) "prependOnceListener"
                     [|((match x809 with
                         | `uncaughtException ->
                             Ojs.string_to_js "uncaughtException"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x810)|])
        let (prependOnceListener''''' :
          t ->
            event:[ `uncaughtExceptionMonitor ] ->
              listener:process_global_NodeJS_UncaughtExceptionListener -> t)
          =
          fun (x814 : t) ->
            fun ~event:(x812 : [ `uncaughtExceptionMonitor ]) ->
              fun
                ~listener:(x813 :
                            process_global_NodeJS_UncaughtExceptionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x814) "prependOnceListener"
                     [|((match x812 with
                         | `uncaughtExceptionMonitor ->
                             Ojs.string_to_js "uncaughtExceptionMonitor"));(
                       process_global_NodeJS_UncaughtExceptionListener_to_js
                         x813)|])
        let (prependOnceListener'''''' :
          t ->
            event:[ `unhandledRejection ] ->
              listener:process_global_NodeJS_UnhandledRejectionListener -> t)
          =
          fun (x817 : t) ->
            fun ~event:(x815 : [ `unhandledRejection ]) ->
              fun
                ~listener:(x816 :
                            process_global_NodeJS_UnhandledRejectionListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x817) "prependOnceListener"
                     [|((match x815 with
                         | `unhandledRejection ->
                             Ojs.string_to_js "unhandledRejection"));(
                       process_global_NodeJS_UnhandledRejectionListener_to_js
                         x816)|])
        let (prependOnceListener''''''' :
          t ->
            event:[ `warning ] ->
              listener:process_global_NodeJS_WarningListener -> t)
          =
          fun (x820 : t) ->
            fun ~event:(x818 : [ `warning ]) ->
              fun ~listener:(x819 : process_global_NodeJS_WarningListener) ->
                t_of_js
                  (Ojs.call (t_to_js x820) "prependOnceListener"
                     [|((match x818 with
                         | `warning -> Ojs.string_to_js "warning"));(
                       process_global_NodeJS_WarningListener_to_js x819)|])
        let (prependOnceListener'''''''' :
          t ->
            event:[ `message ] ->
              listener:process_global_NodeJS_MessageListener -> t)
          =
          fun (x823 : t) ->
            fun ~event:(x821 : [ `message ]) ->
              fun ~listener:(x822 : process_global_NodeJS_MessageListener) ->
                t_of_js
                  (Ojs.call (t_to_js x823) "prependOnceListener"
                     [|((match x821 with
                         | `message -> Ojs.string_to_js "message"));(
                       process_global_NodeJS_MessageListener_to_js x822)|])
        let (prependOnceListener''''''''' :
          t ->
            event:process_global_NodeJS_Signals ->
              listener:process_global_NodeJS_SignalsListener -> t)
          =
          fun (x826 : t) ->
            fun ~event:(x824 : process_global_NodeJS_Signals) ->
              fun ~listener:(x825 : process_global_NodeJS_SignalsListener) ->
                t_of_js
                  (Ojs.call (t_to_js x826) "prependOnceListener"
                     [|(process_global_NodeJS_Signals_to_js x824);(process_global_NodeJS_SignalsListener_to_js
                                                                    x825)|])
        let (prependOnceListener'''''''''' :
          t ->
            event:[ `newListener ] ->
              listener:process_global_NodeJS_NewListenerListener -> t)
          =
          fun (x829 : t) ->
            fun ~event:(x827 : [ `newListener ]) ->
              fun
                ~listener:(x828 : process_global_NodeJS_NewListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x829) "prependOnceListener"
                     [|((match x827 with
                         | `newListener -> Ojs.string_to_js "newListener"));(
                       process_global_NodeJS_NewListenerListener_to_js x828)|])
        let (prependOnceListener''''''''''' :
          t ->
            event:[ `removeListener ] ->
              listener:process_global_NodeJS_RemoveListenerListener -> t)
          =
          fun (x832 : t) ->
            fun ~event:(x830 : [ `removeListener ]) ->
              fun
                ~listener:(x831 :
                            process_global_NodeJS_RemoveListenerListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x832) "prependOnceListener"
                     [|((match x830 with
                         | `removeListener ->
                             Ojs.string_to_js "removeListener"));(process_global_NodeJS_RemoveListenerListener_to_js
                                                                    x831)|])
        let (prependOnceListener'''''''''''' :
          t ->
            event:[ `multipleResolves ] ->
              listener:process_global_NodeJS_MultipleResolveListener -> t)
          =
          fun (x835 : t) ->
            fun ~event:(x833 : [ `multipleResolves ]) ->
              fun
                ~listener:(x834 :
                            process_global_NodeJS_MultipleResolveListener)
                ->
                t_of_js
                  (Ojs.call (t_to_js x835) "prependOnceListener"
                     [|((match x833 with
                         | `multipleResolves ->
                             Ojs.string_to_js "multipleResolves"));(process_global_NodeJS_MultipleResolveListener_to_js
                                                                    x834)|])
        let (listeners :
          t ->
            event:[ `beforeExit ] ->
              process_global_NodeJS_BeforeExitListener list)
          =
          fun (x837 : t) ->
            fun ~event:(x836 : [ `beforeExit ]) ->
              Ojs.list_of_js process_global_NodeJS_BeforeExitListener_of_js
                (Ojs.call (t_to_js x837) "listeners"
                   [|((match x836 with
                       | `beforeExit -> Ojs.string_to_js "beforeExit"))|])
        let (listeners' :
          t ->
            event:[ `disconnect ] ->
              process_global_NodeJS_DisconnectListener list)
          =
          fun (x840 : t) ->
            fun ~event:(x839 : [ `disconnect ]) ->
              Ojs.list_of_js process_global_NodeJS_DisconnectListener_of_js
                (Ojs.call (t_to_js x840) "listeners"
                   [|((match x839 with
                       | `disconnect -> Ojs.string_to_js "disconnect"))|])
        let (listeners'' :
          t -> event:[ `exit ] -> process_global_NodeJS_ExitListener list) =
          fun (x843 : t) ->
            fun ~event:(x842 : [ `exit ]) ->
              Ojs.list_of_js process_global_NodeJS_ExitListener_of_js
                (Ojs.call (t_to_js x843) "listeners"
                   [|((match x842 with | `exit -> Ojs.string_to_js "exit"))|])
        let (listeners''' :
          t ->
            event:[ `rejectionHandled ] ->
              process_global_NodeJS_RejectionHandledListener list)
          =
          fun (x846 : t) ->
            fun ~event:(x845 : [ `rejectionHandled ]) ->
              Ojs.list_of_js
                process_global_NodeJS_RejectionHandledListener_of_js
                (Ojs.call (t_to_js x846) "listeners"
                   [|((match x845 with
                       | `rejectionHandled ->
                           Ojs.string_to_js "rejectionHandled"))|])
        let (listeners'''' :
          t ->
            event:[ `uncaughtException ] ->
              process_global_NodeJS_UncaughtExceptionListener list)
          =
          fun (x849 : t) ->
            fun ~event:(x848 : [ `uncaughtException ]) ->
              Ojs.list_of_js
                process_global_NodeJS_UncaughtExceptionListener_of_js
                (Ojs.call (t_to_js x849) "listeners"
                   [|((match x848 with
                       | `uncaughtException ->
                           Ojs.string_to_js "uncaughtException"))|])
        let (listeners''''' :
          t ->
            event:[ `uncaughtExceptionMonitor ] ->
              process_global_NodeJS_UncaughtExceptionListener list)
          =
          fun (x852 : t) ->
            fun ~event:(x851 : [ `uncaughtExceptionMonitor ]) ->
              Ojs.list_of_js
                process_global_NodeJS_UncaughtExceptionListener_of_js
                (Ojs.call (t_to_js x852) "listeners"
                   [|((match x851 with
                       | `uncaughtExceptionMonitor ->
                           Ojs.string_to_js "uncaughtExceptionMonitor"))|])
        let (listeners'''''' :
          t ->
            event:[ `unhandledRejection ] ->
              process_global_NodeJS_UnhandledRejectionListener list)
          =
          fun (x855 : t) ->
            fun ~event:(x854 : [ `unhandledRejection ]) ->
              Ojs.list_of_js
                process_global_NodeJS_UnhandledRejectionListener_of_js
                (Ojs.call (t_to_js x855) "listeners"
                   [|((match x854 with
                       | `unhandledRejection ->
                           Ojs.string_to_js "unhandledRejection"))|])
        let (listeners''''''' :
          t ->
            event:[ `warning ] -> process_global_NodeJS_WarningListener list)
          =
          fun (x858 : t) ->
            fun ~event:(x857 : [ `warning ]) ->
              Ojs.list_of_js process_global_NodeJS_WarningListener_of_js
                (Ojs.call (t_to_js x858) "listeners"
                   [|((match x857 with
                       | `warning -> Ojs.string_to_js "warning"))|])
        let (listeners'''''''' :
          t ->
            event:[ `message ] -> process_global_NodeJS_MessageListener list)
          =
          fun (x861 : t) ->
            fun ~event:(x860 : [ `message ]) ->
              Ojs.list_of_js process_global_NodeJS_MessageListener_of_js
                (Ojs.call (t_to_js x861) "listeners"
                   [|((match x860 with
                       | `message -> Ojs.string_to_js "message"))|])
        let (listeners''''''''' :
          t ->
            event:process_global_NodeJS_Signals ->
              process_global_NodeJS_SignalsListener list)
          =
          fun (x864 : t) ->
            fun ~event:(x863 : process_global_NodeJS_Signals) ->
              Ojs.list_of_js process_global_NodeJS_SignalsListener_of_js
                (Ojs.call (t_to_js x864) "listeners"
                   [|(process_global_NodeJS_Signals_to_js x863)|])
        let (listeners'''''''''' :
          t ->
            event:[ `newListener ] ->
              process_global_NodeJS_NewListenerListener list)
          =
          fun (x867 : t) ->
            fun ~event:(x866 : [ `newListener ]) ->
              Ojs.list_of_js process_global_NodeJS_NewListenerListener_of_js
                (Ojs.call (t_to_js x867) "listeners"
                   [|((match x866 with
                       | `newListener -> Ojs.string_to_js "newListener"))|])
        let (listeners''''''''''' :
          t ->
            event:[ `removeListener ] ->
              process_global_NodeJS_RemoveListenerListener list)
          =
          fun (x870 : t) ->
            fun ~event:(x869 : [ `removeListener ]) ->
              Ojs.list_of_js
                process_global_NodeJS_RemoveListenerListener_of_js
                (Ojs.call (t_to_js x870) "listeners"
                   [|((match x869 with
                       | `removeListener -> Ojs.string_to_js "removeListener"))|])
        let (listeners'''''''''''' :
          t ->
            event:[ `multipleResolves ] ->
              process_global_NodeJS_MultipleResolveListener list)
          =
          fun (x873 : t) ->
            fun ~event:(x872 : [ `multipleResolves ]) ->
              Ojs.list_of_js
                process_global_NodeJS_MultipleResolveListener_of_js
                (Ojs.call (t_to_js x873) "listeners"
                   [|((match x872 with
                       | `multipleResolves ->
                           Ojs.string_to_js "multipleResolves"))|])
        let (cast : t -> Node_events.Events.EventEmitter.t) =
          fun (x875 : t) ->
            Node_events.Events.EventEmitter.t_of_js (t_to_js x875)
      end
    module Global =
      struct
        type t = process_global_NodeJS_Global
        let rec t_of_js : Ojs.t -> t =
          fun (x877 : Ojs.t) -> process_global_NodeJS_Global_of_js x877
        and t_to_js : t -> Ojs.t =
          fun (x876 : process_global_NodeJS_Global) ->
            process_global_NodeJS_Global_to_js x876
        let (get_process : t -> process_global_NodeJS_Process) =
          fun (x878 : t) ->
            process_global_NodeJS_Process_of_js
              (Ojs.get_prop_ascii (t_to_js x878) "process")
        let (set_process : t -> process_global_NodeJS_Process -> unit) =
          fun (x879 : t) ->
            fun (x880 : process_global_NodeJS_Process) ->
              Ojs.set_prop_ascii (t_to_js x879) "process"
                (process_global_NodeJS_Process_to_js x880)
      end
  end
