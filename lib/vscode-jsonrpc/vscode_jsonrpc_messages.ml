[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Message =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_jsonrpc : t -> string) =
      fun (x3 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3) "jsonrpc")
    let (set_jsonrpc : t -> string -> unit) =
      fun (x4 : t) ->
        fun (x5 : string) ->
          Ojs.set_prop_ascii (t_to_js x4) "jsonrpc" (Ojs.string_to_js x5)
  end
module RequestMessage =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7 : Ojs.t) -> x7
    and t_to_js : t -> Ojs.t = fun (x6 : Ojs.t) -> x6
    let (get_id : t -> string or_number or_null) =
      fun (x8 : t) ->
        or_null_of_js
          (fun (x9 : Ojs.t) -> or_number_of_js Ojs.string_of_js x9)
          (Ojs.get_prop_ascii (t_to_js x8) "id")
    let (set_id : t -> string or_number or_null -> unit) =
      fun (x11 : t) ->
        fun (x12 : string or_number or_null) ->
          Ojs.set_prop_ascii (t_to_js x11) "id"
            (or_null_to_js
               (fun (x13 : string or_number) ->
                  or_number_to_js Ojs.string_to_js x13) x12)
    let (get_method : t -> string) =
      fun (x15 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x15) "method")
    let (set_method : t -> string -> unit) =
      fun (x16 : t) ->
        fun (x17 : string) ->
          Ojs.set_prop_ascii (t_to_js x16) "method" (Ojs.string_to_js x17)
    let (get_params : t -> (untyped_object, any) or_array) =
      fun (x18 : t) ->
        or_array_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x18) "params")
    let (set_params : t -> (untyped_object, any) or_array -> unit) =
      fun (x21 : t) ->
        fun (x22 : (untyped_object, any) or_array) ->
          Ojs.set_prop_ascii (t_to_js x21) "params"
            (or_array_to_js untyped_object_to_js any_to_js x22)
    let (cast : t -> Message.t) =
      fun (x25 : t) -> Message.t_of_js (t_to_js x25)
  end
module ErrorCodes =
  struct
    let (parse_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "ParseError")
    let (invalid_request : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "InvalidRequest")
    let (method_not_found : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "MethodNotFound")
    let (invalid_params : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "InvalidParams")
    let (internal_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "InternalError")
    let (jsonrpc_reserved_error_range_start : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "jsonrpcReservedErrorRangeStart")
    let (server_error_start : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "serverErrorStart")
    let (message_write_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "MessageWriteError")
    let (message_read_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "MessageReadError")
    let (server_not_initialized : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "ServerNotInitialized")
    let (unknown_error_code : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "UnknownErrorCode")
    let (jsonrpc_reserved_error_range_end : any) =
      any_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "jsonrpcReservedErrorRangeEnd")
    let (server_error_end : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "serverErrorEnd")
  end
module ResponseErrorLiteral =
  struct
    type 'D t = Ojs.t
    let rec t_of_js : 'D . (Ojs.t -> 'D) -> Ojs.t -> 'D t = fun (type __D) ->
      fun (__D_of_js : Ojs.t -> __D) -> fun (x27 : Ojs.t) -> x27
    and t_to_js : 'D . ('D -> Ojs.t) -> 'D t -> Ojs.t = fun (type __D) ->
      fun (__D_to_js : __D -> Ojs.t) -> fun (x26 : Ojs.t) -> x26
    type t_0 = unit t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x30 : Ojs.t) -> t_of_js Ojs.unit_of_js x30
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x28 : unit t) -> t_to_js Ojs.unit_to_js x28
    let (get_code : 'D t -> int) =
      fun (x32 : 'D t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x32) "code")
    let (set_code : 'D t -> int -> unit) =
      fun (x34 : 'D t) ->
        fun (x35 : int) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x34) "code"
            (Ojs.int_to_js x35)
    let (get_message : 'D t -> string) =
      fun (x37 : 'D t) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x37) "message")
    let (set_message : 'D t -> string -> unit) =
      fun (x39 : 'D t) ->
        fun (x40 : string) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x39) "message"
            (Ojs.string_to_js x40)
    let (get_data : 'D t -> 'D) =
      fun (x42 : 'D t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x42) "data")
    let (set_data : 'D t -> 'D -> unit) =
      fun (x44 : 'D t) ->
        fun (x45 : 'D) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x44) "data" (Obj.magic x45)
  end
module ResponseError =
  struct
    type 'D t = Ojs.t
    let rec t_of_js : 'D . (Ojs.t -> 'D) -> Ojs.t -> 'D t = fun (type __D) ->
      fun (__D_of_js : Ojs.t -> __D) -> fun (x48 : Ojs.t) -> x48
    and t_to_js : 'D . ('D -> Ojs.t) -> 'D t -> Ojs.t = fun (type __D) ->
      fun (__D_to_js : __D -> Ojs.t) -> fun (x47 : Ojs.t) -> x47
    type t_0 = unit t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x51 : Ojs.t) -> t_of_js Ojs.unit_of_js x51
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x49 : unit t) -> t_to_js Ojs.unit_to_js x49
    let (get_code : 'D t -> int) =
      fun (x53 : 'D t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x53) "code")
    let (get_data : 'D t -> 'D or_undefined) =
      fun (x55 : 'D t) ->
        or_undefined_of_js Obj.magic
          (Ojs.get_prop_ascii (t_to_js Obj.magic x55) "data")
    let (create : code:int -> message:string -> ?data:'D -> unit -> 'D t) =
      fun ~code:(x58 : int) ->
        fun ~message:(x59 : string) ->
          fun ?data:(x60 : 'D option) ->
            fun () ->
              t_of_js Obj.magic
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "ResponseError")
                   (let x61 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore (Ojs.call x61 "push" [|(Ojs.int_to_js x58)|]);
                    ignore (Ojs.call x61 "push" [|(Ojs.string_to_js x59)|]);
                    (match x60 with
                     | Some x62 ->
                         ignore (Ojs.call x61 "push" [|(Obj.magic x62)|])
                     | None -> ());
                    x61))
    let (to_json : 'D t -> 'D ResponseErrorLiteral.t) =
      fun (x64 : 'D t) ->
        ResponseErrorLiteral.t_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x64) "toJson" [||])
    let (cast : 'D t -> Error.t) =
      fun (x67 : 'D t) -> Error.t_of_js (t_to_js Obj.magic x67)
  end
module ResponseMessage =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x70 : Ojs.t) -> x70
    and t_to_js : t -> Ojs.t = fun (x69 : Ojs.t) -> x69
    let (get_id : t -> string or_number or_null) =
      fun (x71 : t) ->
        or_null_of_js
          (fun (x72 : Ojs.t) -> or_number_of_js Ojs.string_of_js x72)
          (Ojs.get_prop_ascii (t_to_js x71) "id")
    let (set_id : t -> string or_number or_null -> unit) =
      fun (x74 : t) ->
        fun (x75 : string or_number or_null) ->
          Ojs.set_prop_ascii (t_to_js x74) "id"
            (or_null_to_js
               (fun (x76 : string or_number) ->
                  or_number_to_js Ojs.string_to_js x76) x75)
    let (get_result :
      t ->
        (untyped_object, any) or_array or_boolean or_string or_number or_null)
      =
      fun (x78 : t) ->
        or_null_of_js
          (fun (x79 : Ojs.t) ->
             or_number_of_js
               (fun (x80 : Ojs.t) ->
                  or_string_of_js
                    (fun (x81 : Ojs.t) ->
                       or_boolean_of_js
                         (fun (x82 : Ojs.t) ->
                            or_array_of_js untyped_object_of_js any_of_js x82)
                         x81) x80) x79)
          (Ojs.get_prop_ascii (t_to_js x78) "result")
    let (set_result :
      t ->
        (untyped_object, any) or_array or_boolean or_string or_number or_null
          -> unit)
      =
      fun (x85 : t) ->
        fun
          (x86 :
            (untyped_object, any) or_array or_boolean or_string or_number
              or_null)
          ->
          Ojs.set_prop_ascii (t_to_js x85) "result"
            (or_null_to_js
               (fun
                  (x87 :
                    (untyped_object, any) or_array or_boolean or_string
                      or_number)
                  ->
                  or_number_to_js
                    (fun
                       (x88 :
                         (untyped_object, any) or_array or_boolean or_string)
                       ->
                       or_string_to_js
                         (fun
                            (x89 : (untyped_object, any) or_array or_boolean)
                            ->
                            or_boolean_to_js
                              (fun (x90 : (untyped_object, any) or_array) ->
                                 or_array_to_js untyped_object_to_js
                                   any_to_js x90) x89) x88) x87) x86)
    let (get_error : t -> any ResponseErrorLiteral.t) =
      fun (x93 : t) ->
        ResponseErrorLiteral.t_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x93) "error")
    let (set_error : t -> any ResponseErrorLiteral.t -> unit) =
      fun (x95 : t) ->
        fun (x96 : any ResponseErrorLiteral.t) ->
          Ojs.set_prop_ascii (t_to_js x95) "error"
            (ResponseErrorLiteral.t_to_js any_to_js x96)
    let (cast : t -> Message.t) =
      fun (x98 : t) -> Message.t_of_js (t_to_js x98)
  end
module LSPMessageType =
  struct
    type t =
      [ `L_s0_receive_notification  | `L_s1_receive_request 
      | `L_s2_receive_response  | `L_s3_send_notification 
      | `L_s4_send_request  | `L_s5_send_response ]
    let rec t_of_js : Ojs.t -> t =
      fun (x100 : Ojs.t) ->
        let x101 = x100 in
        match Ojs.string_of_js x101 with
        | "receive-notification" -> `L_s0_receive_notification
        | "receive-request" -> `L_s1_receive_request
        | "receive-response" -> `L_s2_receive_response
        | "send-notification" -> `L_s3_send_notification
        | "send-request" -> `L_s4_send_request
        | "send-response" -> `L_s5_send_response
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x99 :
          [ `L_s0_receive_notification  | `L_s1_receive_request 
          | `L_s2_receive_response  | `L_s3_send_notification 
          | `L_s4_send_request  | `L_s5_send_response ])
        ->
        match x99 with
        | `L_s0_receive_notification ->
            Ojs.string_to_js "receive-notification"
        | `L_s1_receive_request -> Ojs.string_to_js "receive-request"
        | `L_s2_receive_response -> Ojs.string_to_js "receive-response"
        | `L_s3_send_notification -> Ojs.string_to_js "send-notification"
        | `L_s4_send_request -> Ojs.string_to_js "send-request"
        | `L_s5_send_response -> Ojs.string_to_js "send-response"
  end
module LSPLogMessage =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x103 : Ojs.t) -> x103
    and t_to_js : t -> Ojs.t = fun (x102 : Ojs.t) -> x102
    let (get_type : t -> LSPMessageType.t) =
      fun (x104 : t) ->
        LSPMessageType.t_of_js (Ojs.get_prop_ascii (t_to_js x104) "type")
    let (set_type : t -> LSPMessageType.t -> unit) =
      fun (x105 : t) ->
        fun (x106 : LSPMessageType.t) ->
          Ojs.set_prop_ascii (t_to_js x105) "type"
            (LSPMessageType.t_to_js x106)
    let (get_message :
      t ->
        (NotificationMessage.t, RequestMessage.t, ResponseMessage.t) union3)
      =
      fun (x107 : t) ->
        union3_of_js NotificationMessage.t_of_js RequestMessage.t_of_js
          ResponseMessage.t_of_js
          (Ojs.get_prop_ascii (t_to_js x107) "message")
    let (set_message :
      t ->
        (NotificationMessage.t, RequestMessage.t, ResponseMessage.t) union3
          -> unit)
      =
      fun (x111 : t) ->
        fun
          (x112 :
            (NotificationMessage.t, RequestMessage.t, ResponseMessage.t)
              union3)
          ->
          Ojs.set_prop_ascii (t_to_js x111) "message"
            (union3_to_js NotificationMessage.t_to_js RequestMessage.t_to_js
               ResponseMessage.t_to_js x112)
    let (get_timestamp : t -> int) =
      fun (x116 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x116) "timestamp")
    let (set_timestamp : t -> int -> unit) =
      fun (x117 : t) ->
        fun (x118 : int) ->
          Ojs.set_prop_ascii (t_to_js x117) "timestamp" (Ojs.int_to_js x118)
  end
module ParameterStructures =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x120 : Ojs.t) -> x120
    and t_to_js : t -> Ojs.t = fun (x119 : Ojs.t) -> x119
    let (get_kind : t -> any) =
      fun (x121 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x121) "kind")
    let (get_auto : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ParameterStructures") "auto")
    let (get_by_position : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ParameterStructures")
             "byPosition")
    let (get_by_name : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ParameterStructures") "byName")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ParameterStructures")
             [||])
    let (is : value:any -> bool) =
      fun ~value:(x122 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ParameterStructures")
             "is" [|(any_to_js x122)|])
    let (to_string : t -> string) =
      fun (x123 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x123) "toString" [||])
  end
module MessageSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x125 : Ojs.t) -> x125
    and t_to_js : t -> Ojs.t = fun (x124 : Ojs.t) -> x124
    let (get_method : t -> string) =
      fun (x126 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x126) "method")
    let (get_number_of_params : t -> int) =
      fun (x127 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x127) "numberOfParams")
    let (get_parameter_structures : t -> ParameterStructures.t) =
      fun (x128 : t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js x128) "parameterStructures")
  end
module AbstractMessageSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x130 : Ojs.t) -> x130
    and t_to_js : t -> Ojs.t = fun (x129 : Ojs.t) -> x129
    let (get_method : t -> string) =
      fun (x131 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x131) "method")
    let (get_number_of_params : t -> int) =
      fun (x132 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x132) "numberOfParams")
    let (create : method_:string -> number_of_params:int -> t) =
      fun ~method_:(x133 : string) ->
        fun ~number_of_params:(x134 : int) ->
          t_of_js
            (Ojs.new_obj
               (Ojs.get_prop_ascii Ojs.global "AbstractMessageSignature")
               [|(Ojs.string_to_js x133);(Ojs.int_to_js x134)|])
    let (get_parameter_structures : t -> ParameterStructures.t) =
      fun (x135 : t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js x135) "parameterStructures")
    let (cast : t -> MessageSignature.t) =
      fun (x136 : t) -> MessageSignature.t_of_js (t_to_js x136)
  end
module EM =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x138 : Ojs.t) -> x138
    and t_to_js : t -> Ojs.t = fun (x137 : Ojs.t) -> x137
    let (get_end_marker : t -> int) =
      fun (x139 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x139) "_$endMarker$_")
    let (set_end_marker : t -> int -> unit) =
      fun (x140 : t) ->
        fun (x141 : int) ->
          Ojs.set_prop_ascii (t_to_js x140) "_$endMarker$_"
            (Ojs.int_to_js x141)
  end
module RequestType0 =
  struct
    type ('R, 'E) t = ('R, 'E) RequestType.t0
    let rec t_of_js :
      'R 'E . (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('R, 'E) t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__E_of_js : Ojs.t -> __E) ->
          fun (x145 : Ojs.t) -> RequestType.t0_of_js __R_of_js __E_of_js x145
    and t_to_js :
      'R 'E . ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('R, 'E) t -> Ojs.t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__E_to_js : __E -> Ojs.t) ->
          fun (x142 : (__R, __E) RequestType.t0) ->
            RequestType.t0_to_js __R_to_js __E_to_js x142
    let (get__ : ('R, 'E) t -> ('R * 'E * EM.t) or_undefined) =
      fun (x148 : ('R, 'E) t) ->
        or_undefined_of_js
          (fun (x151 : Ojs.t) ->
             let x152 = x151 in
             ((Obj.magic (Ojs.array_get x152 0)),
               (Obj.magic (Ojs.array_get x152 1)),
               (EM.t_of_js (Ojs.array_get x152 2))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x148) "_")
    let (create : method_:string -> ('R, 'E) t) =
      fun ~method_:(x153 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType0")
             [|(Ojs.string_to_js x153)|])
    let (cast : ('R, 'E) t -> AbstractMessageSignature.t) =
      fun (x156 : ('R, 'E) t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic Obj.magic x156)
  end
module RequestType =
  struct
    type ('P, 'R, 'E) t = ('P, 'R, 'E) RequestType.t
    let rec t_of_js :
      'P 'R 'E .
        (Ojs.t -> 'P) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P, 'R, 'E) t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) ->
            fun (x163 : Ojs.t) ->
              RequestType.t_of_js __P_of_js __R_of_js __E_of_js x163
    and t_to_js :
      'P 'R 'E .
        ('P -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P, 'R, 'E) t -> Ojs.t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) ->
            fun (x159 : (__P, __R, __E) RequestType.t) ->
              RequestType.t_to_js __P_to_js __R_to_js __E_to_js x159
    let (get_parameter_structures : ('P, 'R, 'E) t -> any) =
      fun (x167 : ('P, 'R, 'E) t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x167)
             "_parameterStructures")
    let (set_parameter_structures : ('P, 'R, 'E) t -> any -> unit) =
      fun (x171 : ('P, 'R, 'E) t) ->
        fun (x172 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x171)
            "_parameterStructures" (any_to_js x172)
    let (get__ : ('P, 'R, 'E) t -> ('P * 'R * 'E * EM.t) or_undefined) =
      fun (x176 : ('P, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x180 : Ojs.t) ->
             let x181 = x180 in
             ((Obj.magic (Ojs.array_get x181 0)),
               (Obj.magic (Ojs.array_get x181 1)),
               (Obj.magic (Ojs.array_get x181 2)),
               (EM.t_of_js (Ojs.array_get x181 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x176)
             "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t -> unit -> ('P, 'R, 'E) t)
      =
      fun ~method_:(x182 : string) ->
        fun ?_parameterStructures:(x183 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RequestType")
                 (let x184 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x184 "push" [|(Ojs.string_to_js x182)|]);
                  (match x183 with
                   | Some x185 ->
                       ignore
                         (Ojs.call x184 "push"
                            [|(ParameterStructures.t_to_js x185)|])
                   | None -> ());
                  x184))
    let (get_parameter_structures : ('P, 'R, 'E) t -> ParameterStructures.t)
      =
      fun (x189 : ('P, 'R, 'E) t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x189)
             "parameterStructures")
    let (cast : ('P, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x193 : ('P, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x193)
  end
module RequestType1 =
  struct
    type ('P1, 'R, 'E) t = ('P1, 'R, 'E) RequestType.t1
    let rec t_of_js :
      'P1 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'R, 'E) t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) ->
            fun (x201 : Ojs.t) ->
              RequestType.t1_of_js __P1_of_js __R_of_js __E_of_js x201
    and t_to_js :
      'P1 'R 'E .
        ('P1 -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) ->
            fun (x197 : (__P1, __R, __E) RequestType.t1) ->
              RequestType.t1_to_js __P1_to_js __R_to_js __E_to_js x197
    let (get_parameter_structures : ('P1, 'R, 'E) t -> any) =
      fun (x205 : ('P1, 'R, 'E) t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x205)
             "_parameterStructures")
    let (set_parameter_structures : ('P1, 'R, 'E) t -> any -> unit) =
      fun (x209 : ('P1, 'R, 'E) t) ->
        fun (x210 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x209)
            "_parameterStructures" (any_to_js x210)
    let (get__ : ('P1, 'R, 'E) t -> ('P1 * 'R * 'E * EM.t) or_undefined) =
      fun (x214 : ('P1, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x218 : Ojs.t) ->
             let x219 = x218 in
             ((Obj.magic (Ojs.array_get x219 0)),
               (Obj.magic (Ojs.array_get x219 1)),
               (Obj.magic (Ojs.array_get x219 2)),
               (EM.t_of_js (Ojs.array_get x219 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x214)
             "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t ->
          unit -> ('P1, 'R, 'E) t)
      =
      fun ~method_:(x220 : string) ->
        fun ?_parameterStructures:(x221 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RequestType1")
                 (let x222 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x222 "push" [|(Ojs.string_to_js x220)|]);
                  (match x221 with
                   | Some x223 ->
                       ignore
                         (Ojs.call x222 "push"
                            [|(ParameterStructures.t_to_js x223)|])
                   | None -> ());
                  x222))
    let (get_parameter_structures : ('P1, 'R, 'E) t -> ParameterStructures.t)
      =
      fun (x227 : ('P1, 'R, 'E) t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x227)
             "parameterStructures")
    let (cast : ('P1, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x231 : ('P1, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x231)
  end
module RequestType2 =
  struct
    type ('P1, 'P2, 'R, 'E) t = ('P1, 'P2, 'R, 'E) RequestType.t2
    let rec t_of_js :
      'P1 'P2 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__R_of_js : Ojs.t -> __R) ->
            fun (__E_of_js : Ojs.t -> __E) ->
              fun (x240 : Ojs.t) ->
                RequestType.t2_of_js __P1_of_js __P2_of_js __R_of_js
                  __E_of_js x240
    and t_to_js :
      'P1 'P2 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'P2, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__R_to_js : __R -> Ojs.t) ->
            fun (__E_to_js : __E -> Ojs.t) ->
              fun (x235 : (__P1, __P2, __R, __E) RequestType.t2) ->
                RequestType.t2_to_js __P1_to_js __P2_to_js __R_to_js
                  __E_to_js x235
    let (get__ :
      ('P1, 'P2, 'R, 'E) t -> ('P1 * 'P2 * 'R * 'E * EM.t) or_undefined) =
      fun (x245 : ('P1, 'P2, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x250 : Ojs.t) ->
             let x251 = x250 in
             ((Obj.magic (Ojs.array_get x251 0)),
               (Obj.magic (Ojs.array_get x251 1)),
               (Obj.magic (Ojs.array_get x251 2)),
               (Obj.magic (Ojs.array_get x251 3)),
               (EM.t_of_js (Ojs.array_get x251 4))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x245) "_")
    let (create : method_:string -> ('P1, 'P2, 'R, 'E) t) =
      fun ~method_:(x252 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType2")
             [|(Ojs.string_to_js x252)|])
    let (cast : ('P1, 'P2, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x257 : ('P1, 'P2, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x257)
  end
module RequestType3 =
  struct
    type ('P1, 'P2, 'P3, 'R, 'E) t = ('P1, 'P2, 'P3, 'R, 'E) RequestType.t3
    let rec t_of_js :
      'P1 'P2 'P3 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'R) ->
                (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__R_of_js : Ojs.t -> __R) ->
              fun (__E_of_js : Ojs.t -> __E) ->
                fun (x268 : Ojs.t) ->
                  RequestType.t3_of_js __P1_of_js __P2_of_js __P3_of_js
                    __R_of_js __E_of_js x268
    and t_to_js :
      'P1 'P2 'P3 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('R -> Ojs.t) ->
                ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) ->
              fun (__E_to_js : __E -> Ojs.t) ->
                fun (x262 : (__P1, __P2, __P3, __R, __E) RequestType.t3) ->
                  RequestType.t3_to_js __P1_to_js __P2_to_js __P3_to_js
                    __R_to_js __E_to_js x262
    let (get__ :
      ('P1, 'P2, 'P3, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x274 : ('P1, 'P2, 'P3, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x280 : Ojs.t) ->
             let x281 = x280 in
             ((Obj.magic (Ojs.array_get x281 0)),
               (Obj.magic (Ojs.array_get x281 1)),
               (Obj.magic (Ojs.array_get x281 2)),
               (Obj.magic (Ojs.array_get x281 3)),
               (Obj.magic (Ojs.array_get x281 4)),
               (EM.t_of_js (Ojs.array_get x281 5))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x274)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'R, 'E) t) =
      fun ~method_:(x282 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType3")
             [|(Ojs.string_to_js x282)|])
    let (cast : ('P1, 'P2, 'P3, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x288 : ('P1, 'P2, 'P3, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x288)
  end
module RequestType4 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'R, 'E) RequestType.t4
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'R) ->
                  (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__R_of_js : Ojs.t -> __R) ->
                fun (__E_of_js : Ojs.t -> __E) ->
                  fun (x301 : Ojs.t) ->
                    RequestType.t4_of_js __P1_of_js __P2_of_js __P3_of_js
                      __P4_of_js __R_of_js __E_of_js x301
    and t_to_js :
      'P1 'P2 'P3 'P4 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('R -> Ojs.t) ->
                  ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) ->
                fun (__E_to_js : __E -> Ojs.t) ->
                  fun
                    (x294 :
                      (__P1, __P2, __P3, __P4, __R, __E) RequestType.t4)
                    ->
                    RequestType.t4_to_js __P1_to_js __P2_to_js __P3_to_js
                      __P4_to_js __R_to_js __E_to_js x294
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x308 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x315 : Ojs.t) ->
             let x316 = x315 in
             ((Obj.magic (Ojs.array_get x316 0)),
               (Obj.magic (Ojs.array_get x316 1)),
               (Obj.magic (Ojs.array_get x316 2)),
               (Obj.magic (Ojs.array_get x316 3)),
               (Obj.magic (Ojs.array_get x316 4)),
               (Obj.magic (Ojs.array_get x316 5)),
               (EM.t_of_js (Ojs.array_get x316 6))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic x308) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) =
      fun ~method_:(x317 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType4")
             [|(Ojs.string_to_js x317)|])
    let (cast : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t -> AbstractMessageSignature.t)
      =
      fun (x324 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic x324)
  end
module RequestType5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) RequestType.t5
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'R) ->
                    (Ojs.t -> 'E) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (__E_of_js : Ojs.t -> __E) ->
                    fun (x339 : Ojs.t) ->
                      RequestType.t5_of_js __P1_of_js __P2_of_js __P3_of_js
                        __P4_of_js __P5_of_js __R_of_js __E_of_js x339
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('E -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (__E_to_js : __E -> Ojs.t) ->
                    fun
                      (x331 :
                        (__P1, __P2, __P3, __P4, __P5, __R, __E)
                          RequestType.t5)
                      ->
                      RequestType.t5_to_js __P1_to_js __P2_to_js __P3_to_js
                        __P4_to_js __P5_to_js __R_to_js __E_to_js x331
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x347 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x355 : Ojs.t) ->
             let x356 = x355 in
             ((Obj.magic (Ojs.array_get x356 0)),
               (Obj.magic (Ojs.array_get x356 1)),
               (Obj.magic (Ojs.array_get x356 2)),
               (Obj.magic (Ojs.array_get x356 3)),
               (Obj.magic (Ojs.array_get x356 4)),
               (Obj.magic (Ojs.array_get x356 5)),
               (Obj.magic (Ojs.array_get x356 6)),
               (EM.t_of_js (Ojs.array_get x356 7))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic x347) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) =
      fun ~method_:(x357 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType5")
             [|(Ojs.string_to_js x357)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x365 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic x365)
  end
module RequestType6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) RequestType.t6
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'R) ->
                      (Ojs.t -> 'E) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (__E_of_js : Ojs.t -> __E) ->
                      fun (x382 : Ojs.t) ->
                        RequestType.t6_of_js __P1_of_js __P2_of_js __P3_of_js
                          __P4_of_js __P5_of_js __P6_of_js __R_of_js
                          __E_of_js x382
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('E -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (__E_to_js : __E -> Ojs.t) ->
                      fun
                        (x373 :
                          (__P1, __P2, __P3, __P4, __P5, __P6, __R, __E)
                            RequestType.t6)
                        ->
                        RequestType.t6_to_js __P1_to_js __P2_to_js __P3_to_js
                          __P4_to_js __P5_to_js __P6_to_js __R_to_js
                          __E_to_js x373
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x391 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x400 : Ojs.t) ->
             let x401 = x400 in
             ((Obj.magic (Ojs.array_get x401 0)),
               (Obj.magic (Ojs.array_get x401 1)),
               (Obj.magic (Ojs.array_get x401 2)),
               (Obj.magic (Ojs.array_get x401 3)),
               (Obj.magic (Ojs.array_get x401 4)),
               (Obj.magic (Ojs.array_get x401 5)),
               (Obj.magic (Ojs.array_get x401 6)),
               (Obj.magic (Ojs.array_get x401 7)),
               (EM.t_of_js (Ojs.array_get x401 8))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic x391) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t)
      =
      fun ~method_:(x402 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType6")
             [|(Ojs.string_to_js x402)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t -> AbstractMessageSignature.t)
      =
      fun (x411 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic x411)
  end
module RequestType7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) RequestType.t7
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'R) ->
                        (Ojs.t -> 'E) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (__E_of_js : Ojs.t -> __E) ->
                        fun (x430 : Ojs.t) ->
                          RequestType.t7_of_js __P1_of_js __P2_of_js
                            __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                            __P7_of_js __R_of_js __E_of_js x430
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('E -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (__E_to_js : __E -> Ojs.t) ->
                        fun
                          (x420 :
                            (__P1, __P2, __P3, __P4, __P5, __P6, __P7, 
                              __R, __E) RequestType.t7)
                          ->
                          RequestType.t7_to_js __P1_to_js __P2_to_js
                            __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                            __P7_to_js __R_to_js __E_to_js x420
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'R * 'E * EM.t)
          or_undefined)
      =
      fun (x440 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x450 : Ojs.t) ->
             let x451 = x450 in
             ((Obj.magic (Ojs.array_get x451 0)),
               (Obj.magic (Ojs.array_get x451 1)),
               (Obj.magic (Ojs.array_get x451 2)),
               (Obj.magic (Ojs.array_get x451 3)),
               (Obj.magic (Ojs.array_get x451 4)),
               (Obj.magic (Ojs.array_get x451 5)),
               (Obj.magic (Ojs.array_get x451 6)),
               (Obj.magic (Ojs.array_get x451 7)),
               (Obj.magic (Ojs.array_get x451 8)),
               (EM.t_of_js (Ojs.array_get x451 9))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic x440) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) =
      fun ~method_:(x452 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType7")
             [|(Ojs.string_to_js x452)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
        AbstractMessageSignature.t)
      =
      fun (x462 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic x462)
  end
module RequestType8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) RequestType.t8
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'R) ->
                          (Ojs.t -> 'E) ->
                            Ojs.t ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__R_of_js : Ojs.t -> __R) ->
                        fun (__E_of_js : Ojs.t -> __E) ->
                          fun (x483 : Ojs.t) ->
                            RequestType.t8_of_js __P1_of_js __P2_of_js
                              __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                              __P7_of_js __P8_of_js __R_of_js __E_of_js x483
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('E -> Ojs.t) ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                              'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__R_to_js : __R -> Ojs.t) ->
                        fun (__E_to_js : __E -> Ojs.t) ->
                          fun
                            (x472 :
                              (__P1, __P2, __P3, __P4, __P5, __P6, __P7,
                                __P8, __R, __E) RequestType.t8)
                            ->
                            RequestType.t8_to_js __P1_to_js __P2_to_js
                              __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                              __P7_to_js __P8_to_js __R_to_js __E_to_js x472
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'R * 'E * EM.t)
          or_undefined)
      =
      fun (x494 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x505 : Ojs.t) ->
             let x506 = x505 in
             ((Obj.magic (Ojs.array_get x506 0)),
               (Obj.magic (Ojs.array_get x506 1)),
               (Obj.magic (Ojs.array_get x506 2)),
               (Obj.magic (Ojs.array_get x506 3)),
               (Obj.magic (Ojs.array_get x506 4)),
               (Obj.magic (Ojs.array_get x506 5)),
               (Obj.magic (Ojs.array_get x506 6)),
               (Obj.magic (Ojs.array_get x506 7)),
               (Obj.magic (Ojs.array_get x506 8)),
               (Obj.magic (Ojs.array_get x506 9)),
               (EM.t_of_js (Ojs.array_get x506 10))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x494) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) =
      fun ~method_:(x507 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType8")
             [|(Ojs.string_to_js x507)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t ->
        AbstractMessageSignature.t)
      =
      fun (x518 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x518)
  end
module RequestType9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) RequestType.t9
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          (Ojs.t -> 'R) ->
                            (Ojs.t -> 'E) ->
                              Ojs.t ->
                                ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                  'P9, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (__E_of_js : Ojs.t -> __E) ->
                            fun (x541 : Ojs.t) ->
                              RequestType.t9_of_js __P1_of_js __P2_of_js
                                __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                                __P7_of_js __P8_of_js __P9_of_js __R_of_js
                                __E_of_js x541
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('E -> Ojs.t) ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'P9, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (__E_to_js : __E -> Ojs.t) ->
                            fun
                              (x529 :
                                (__P1, __P2, __P3, __P4, __P5, __P6, 
                                  __P7, __P8, __P9, __R, __E) RequestType.t9)
                              ->
                              RequestType.t9_to_js __P1_to_js __P2_to_js
                                __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                                __P7_to_js __P8_to_js __P9_to_js __R_to_js
                                __E_to_js x529
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'P9 * 'R * 'E *
          EM.t) or_undefined)
      =
      fun (x553 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x565 : Ojs.t) ->
             let x566 = x565 in
             ((Obj.magic (Ojs.array_get x566 0)),
               (Obj.magic (Ojs.array_get x566 1)),
               (Obj.magic (Ojs.array_get x566 2)),
               (Obj.magic (Ojs.array_get x566 3)),
               (Obj.magic (Ojs.array_get x566 4)),
               (Obj.magic (Ojs.array_get x566 5)),
               (Obj.magic (Ojs.array_get x566 6)),
               (Obj.magic (Ojs.array_get x566 7)),
               (Obj.magic (Ojs.array_get x566 8)),
               (Obj.magic (Ojs.array_get x566 9)),
               (Obj.magic (Ojs.array_get x566 10)),
               (EM.t_of_js (Ojs.array_get x566 11))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                x553) "_")
    let (create :
      method_:string ->
        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t)
      =
      fun ~method_:(x567 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType9")
             [|(Ojs.string_to_js x567)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t ->
        AbstractMessageSignature.t)
      =
      fun (x579 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x579)
  end
module NotificationMessage =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x592 : Ojs.t) -> x592
    and t_to_js : t -> Ojs.t = fun (x591 : Ojs.t) -> x591
    let (get_method : t -> string) =
      fun (x593 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x593) "method")
    let (set_method : t -> string -> unit) =
      fun (x594 : t) ->
        fun (x595 : string) ->
          Ojs.set_prop_ascii (t_to_js x594) "method" (Ojs.string_to_js x595)
    let (get_params : t -> (untyped_object, unit) union2) =
      fun (x596 : t) ->
        union2_of_js untyped_object_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x596) "params")
    let (set_params : t -> (untyped_object, unit) union2 -> unit) =
      fun (x599 : t) ->
        fun (x600 : (untyped_object, unit) union2) ->
          Ojs.set_prop_ascii (t_to_js x599) "params"
            (union2_to_js untyped_object_to_js Ojs.unit_to_js x600)
    let (cast : t -> Message.t) =
      fun (x603 : t) -> Message.t_of_js (t_to_js x603)
  end
module NotificationType =
  struct
    type 'P t = Ojs.t
    let rec t_of_js : 'P . (Ojs.t -> 'P) -> Ojs.t -> 'P t = fun (type __P) ->
      fun (__P_of_js : Ojs.t -> __P) -> fun (x605 : Ojs.t) -> x605
    and t_to_js : 'P . ('P -> Ojs.t) -> 'P t -> Ojs.t = fun (type __P) ->
      fun (__P_to_js : __P -> Ojs.t) -> fun (x604 : Ojs.t) -> x604
    let (get_parameter_structures : 'P t -> any) =
      fun (x606 : 'P t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x606) "_parameterStructures")
    let (set_parameter_structures : 'P t -> any -> unit) =
      fun (x608 : 'P t) ->
        fun (x609 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x608) "_parameterStructures"
            (any_to_js x609)
    let (get__ : 'P t -> ('P * EM.t) or_undefined) =
      fun (x611 : 'P t) ->
        or_undefined_of_js
          (fun (x613 : Ojs.t) ->
             let x614 = x613 in
             ((Obj.magic (Ojs.array_get x614 0)),
               (EM.t_of_js (Ojs.array_get x614 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x611) "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t -> unit -> 'P t)
      =
      fun ~method_:(x615 : string) ->
        fun ?_parameterStructures:(x616 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "NotificationType")
                 (let x617 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x617 "push" [|(Ojs.string_to_js x615)|]);
                  (match x616 with
                   | Some x618 ->
                       ignore
                         (Ojs.call x617 "push"
                            [|(ParameterStructures.t_to_js x618)|])
                   | None -> ());
                  x617))
    let (get_parameter_structures : 'P t -> ParameterStructures.t) =
      fun (x620 : 'P t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x620) "parameterStructures")
    let (cast : 'P t -> AbstractMessageSignature.t) =
      fun (x622 : 'P t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic x622)
  end
module NotificationType0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x625 : Ojs.t) -> x625
    and t_to_js : t -> Ojs.t = fun (x624 : Ojs.t) -> x624
    let (get__ : t -> EM.t or_undefined) =
      fun (x626 : t) ->
        or_undefined_of_js EM.t_of_js (Ojs.get_prop_ascii (t_to_js x626) "_")
    let (create : method_:string -> t) =
      fun ~method_:(x628 : string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType0")
             [|(Ojs.string_to_js x628)|])
    let (cast : t -> AbstractMessageSignature.t) =
      fun (x629 : t) -> AbstractMessageSignature.t_of_js (t_to_js x629)
  end
module NotificationType1 =
  struct
    type 'P1 t = 'P1 NotificationType.t1
    let rec t_of_js : 'P1 . (Ojs.t -> 'P1) -> Ojs.t -> 'P1 t = fun (type
      __P1) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (x632 : Ojs.t) -> NotificationType.t1_of_js __P1_of_js x632
    and t_to_js : 'P1 . ('P1 -> Ojs.t) -> 'P1 t -> Ojs.t = fun (type __P1) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (x630 : __P1 NotificationType.t1) ->
          NotificationType.t1_to_js __P1_to_js x630
    let (get_parameter_structures : 'P1 t -> any) =
      fun (x634 : 'P1 t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x634) "_parameterStructures")
    let (set_parameter_structures : 'P1 t -> any -> unit) =
      fun (x636 : 'P1 t) ->
        fun (x637 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x636) "_parameterStructures"
            (any_to_js x637)
    let (get__ : 'P1 t -> ('P1 * EM.t) or_undefined) =
      fun (x639 : 'P1 t) ->
        or_undefined_of_js
          (fun (x641 : Ojs.t) ->
             let x642 = x641 in
             ((Obj.magic (Ojs.array_get x642 0)),
               (EM.t_of_js (Ojs.array_get x642 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x639) "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t -> unit -> 'P1 t)
      =
      fun ~method_:(x643 : string) ->
        fun ?_parameterStructures:(x644 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "NotificationType1")
                 (let x645 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x645 "push" [|(Ojs.string_to_js x643)|]);
                  (match x644 with
                   | Some x646 ->
                       ignore
                         (Ojs.call x645 "push"
                            [|(ParameterStructures.t_to_js x646)|])
                   | None -> ());
                  x645))
    let (get_parameter_structures : 'P1 t -> ParameterStructures.t) =
      fun (x648 : 'P1 t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x648) "parameterStructures")
    let (cast : 'P1 t -> AbstractMessageSignature.t) =
      fun (x650 : 'P1 t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic x650)
  end
module NotificationType2 =
  struct
    type ('P1, 'P2) t = ('P1, 'P2) NotificationType.t2
    let rec t_of_js :
      'P1 'P2 . (Ojs.t -> 'P1) -> (Ojs.t -> 'P2) -> Ojs.t -> ('P1, 'P2) t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (x655 : Ojs.t) ->
            NotificationType.t2_of_js __P1_of_js __P2_of_js x655
    and t_to_js :
      'P1 'P2 . ('P1 -> Ojs.t) -> ('P2 -> Ojs.t) -> ('P1, 'P2) t -> Ojs.t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (x652 : (__P1, __P2) NotificationType.t2) ->
            NotificationType.t2_to_js __P1_to_js __P2_to_js x652
    let (get__ : ('P1, 'P2) t -> ('P1 * 'P2 * EM.t) or_undefined) =
      fun (x658 : ('P1, 'P2) t) ->
        or_undefined_of_js
          (fun (x661 : Ojs.t) ->
             let x662 = x661 in
             ((Obj.magic (Ojs.array_get x662 0)),
               (Obj.magic (Ojs.array_get x662 1)),
               (EM.t_of_js (Ojs.array_get x662 2))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x658) "_")
    let (create : method_:string -> ('P1, 'P2) t) =
      fun ~method_:(x663 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType2")
             [|(Ojs.string_to_js x663)|])
    let (cast : ('P1, 'P2) t -> AbstractMessageSignature.t) =
      fun (x666 : ('P1, 'P2) t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic Obj.magic x666)
  end
module NotificationType3 =
  struct
    type ('P1, 'P2, 'P3) t = ('P1, 'P2, 'P3) NotificationType.t3
    let rec t_of_js :
      'P1 'P2 'P3 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) -> (Ojs.t -> 'P3) -> Ojs.t -> ('P1, 'P2, 'P3) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (x673 : Ojs.t) ->
              NotificationType.t3_of_js __P1_of_js __P2_of_js __P3_of_js x673
    and t_to_js :
      'P1 'P2 'P3 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) -> ('P3 -> Ojs.t) -> ('P1, 'P2, 'P3) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (x669 : (__P1, __P2, __P3) NotificationType.t3) ->
              NotificationType.t3_to_js __P1_to_js __P2_to_js __P3_to_js x669
    let (get__ : ('P1, 'P2, 'P3) t -> ('P1 * 'P2 * 'P3 * EM.t) or_undefined)
      =
      fun (x677 : ('P1, 'P2, 'P3) t) ->
        or_undefined_of_js
          (fun (x681 : Ojs.t) ->
             let x682 = x681 in
             ((Obj.magic (Ojs.array_get x682 0)),
               (Obj.magic (Ojs.array_get x682 1)),
               (Obj.magic (Ojs.array_get x682 2)),
               (EM.t_of_js (Ojs.array_get x682 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x677)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3) t) =
      fun ~method_:(x683 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType3")
             [|(Ojs.string_to_js x683)|])
    let (cast : ('P1, 'P2, 'P3) t -> AbstractMessageSignature.t) =
      fun (x687 : ('P1, 'P2, 'P3) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x687)
  end
module NotificationType4 =
  struct
    type ('P1, 'P2, 'P3, 'P4) t = ('P1, 'P2, 'P3, 'P4) NotificationType.t4
    let rec t_of_js :
      'P1 'P2 'P3 'P4 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (x696 : Ojs.t) ->
                NotificationType.t4_of_js __P1_of_js __P2_of_js __P3_of_js
                  __P4_of_js x696
    and t_to_js :
      'P1 'P2 'P3 'P4 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (x691 : (__P1, __P2, __P3, __P4) NotificationType.t4) ->
                NotificationType.t4_to_js __P1_to_js __P2_to_js __P3_to_js
                  __P4_to_js x691
    let (get__ :
      ('P1, 'P2, 'P3, 'P4) t -> ('P1 * 'P2 * 'P3 * 'P4 * EM.t) or_undefined)
      =
      fun (x701 : ('P1, 'P2, 'P3, 'P4) t) ->
        or_undefined_of_js
          (fun (x706 : Ojs.t) ->
             let x707 = x706 in
             ((Obj.magic (Ojs.array_get x707 0)),
               (Obj.magic (Ojs.array_get x707 1)),
               (Obj.magic (Ojs.array_get x707 2)),
               (Obj.magic (Ojs.array_get x707 3)),
               (EM.t_of_js (Ojs.array_get x707 4))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x701) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4) t) =
      fun ~method_:(x708 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType4")
             [|(Ojs.string_to_js x708)|])
    let (cast : ('P1, 'P2, 'P3, 'P4) t -> AbstractMessageSignature.t) =
      fun (x713 : ('P1, 'P2, 'P3, 'P4) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x713)
  end
module NotificationType5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5) t =
      ('P1, 'P2, 'P3, 'P4, 'P5) NotificationType.t5
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (x724 : Ojs.t) ->
                  NotificationType.t5_of_js __P1_of_js __P2_of_js __P3_of_js
                    __P4_of_js __P5_of_js x724
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun
                  (x718 : (__P1, __P2, __P3, __P4, __P5) NotificationType.t5)
                  ->
                  NotificationType.t5_to_js __P1_to_js __P2_to_js __P3_to_js
                    __P4_to_js __P5_to_js x718
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * EM.t) or_undefined)
      =
      fun (x730 : ('P1, 'P2, 'P3, 'P4, 'P5) t) ->
        or_undefined_of_js
          (fun (x736 : Ojs.t) ->
             let x737 = x736 in
             ((Obj.magic (Ojs.array_get x737 0)),
               (Obj.magic (Ojs.array_get x737 1)),
               (Obj.magic (Ojs.array_get x737 2)),
               (Obj.magic (Ojs.array_get x737 3)),
               (Obj.magic (Ojs.array_get x737 4)),
               (EM.t_of_js (Ojs.array_get x737 5))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x730)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5) t) =
      fun ~method_:(x738 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType5")
             [|(Ojs.string_to_js x738)|])
    let (cast : ('P1, 'P2, 'P3, 'P4, 'P5) t -> AbstractMessageSignature.t) =
      fun (x744 : ('P1, 'P2, 'P3, 'P4, 'P5) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x744)
  end
module NotificationType6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) NotificationType.t6
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (x757 : Ojs.t) ->
                    NotificationType.t6_of_js __P1_of_js __P2_of_js
                      __P3_of_js __P4_of_js __P5_of_js __P6_of_js x757
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun
                    (x750 :
                      (__P1, __P2, __P3, __P4, __P5, __P6)
                        NotificationType.t6)
                    ->
                    NotificationType.t6_to_js __P1_to_js __P2_to_js
                      __P3_to_js __P4_to_js __P5_to_js __P6_to_js x750
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * EM.t) or_undefined)
      =
      fun (x764 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) ->
        or_undefined_of_js
          (fun (x771 : Ojs.t) ->
             let x772 = x771 in
             ((Obj.magic (Ojs.array_get x772 0)),
               (Obj.magic (Ojs.array_get x772 1)),
               (Obj.magic (Ojs.array_get x772 2)),
               (Obj.magic (Ojs.array_get x772 3)),
               (Obj.magic (Ojs.array_get x772 4)),
               (Obj.magic (Ojs.array_get x772 5)),
               (EM.t_of_js (Ojs.array_get x772 6))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic x764) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) =
      fun ~method_:(x773 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType6")
             [|(Ojs.string_to_js x773)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t -> AbstractMessageSignature.t) =
      fun (x780 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic x780)
  end
module NotificationType7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) NotificationType.t7
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (x795 : Ojs.t) ->
                      NotificationType.t7_of_js __P1_of_js __P2_of_js
                        __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                        __P7_of_js x795
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun
                      (x787 :
                        (__P1, __P2, __P3, __P4, __P5, __P6, __P7)
                          NotificationType.t7)
                      ->
                      NotificationType.t7_to_js __P1_to_js __P2_to_js
                        __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                        __P7_to_js x787
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * EM.t) or_undefined)
      =
      fun (x803 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) ->
        or_undefined_of_js
          (fun (x811 : Ojs.t) ->
             let x812 = x811 in
             ((Obj.magic (Ojs.array_get x812 0)),
               (Obj.magic (Ojs.array_get x812 1)),
               (Obj.magic (Ojs.array_get x812 2)),
               (Obj.magic (Ojs.array_get x812 3)),
               (Obj.magic (Ojs.array_get x812 4)),
               (Obj.magic (Ojs.array_get x812 5)),
               (Obj.magic (Ojs.array_get x812 6)),
               (EM.t_of_js (Ojs.array_get x812 7))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic x803) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) =
      fun ~method_:(x813 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType7")
             [|(Ojs.string_to_js x813)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t -> AbstractMessageSignature.t) =
      fun (x821 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic x821)
  end
module NotificationType8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) NotificationType.t8
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (x838 : Ojs.t) ->
                        NotificationType.t8_of_js __P1_of_js __P2_of_js
                          __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                          __P7_of_js __P8_of_js x838
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun
                        (x829 :
                          (__P1, __P2, __P3, __P4, __P5, __P6, __P7, 
                            __P8) NotificationType.t8)
                        ->
                        NotificationType.t8_to_js __P1_to_js __P2_to_js
                          __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                          __P7_to_js __P8_to_js x829
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * EM.t) or_undefined)
      =
      fun (x847 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) ->
        or_undefined_of_js
          (fun (x856 : Ojs.t) ->
             let x857 = x856 in
             ((Obj.magic (Ojs.array_get x857 0)),
               (Obj.magic (Ojs.array_get x857 1)),
               (Obj.magic (Ojs.array_get x857 2)),
               (Obj.magic (Ojs.array_get x857 3)),
               (Obj.magic (Ojs.array_get x857 4)),
               (Obj.magic (Ojs.array_get x857 5)),
               (Obj.magic (Ojs.array_get x857 6)),
               (Obj.magic (Ojs.array_get x857 7)),
               (EM.t_of_js (Ojs.array_get x857 8))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic x847) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) =
      fun ~method_:(x858 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType8")
             [|(Ojs.string_to_js x858)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t ->
        AbstractMessageSignature.t)
      =
      fun (x867 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic x867)
  end
module NotificationType9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) NotificationType.t9
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (x886 : Ojs.t) ->
                          NotificationType.t9_of_js __P1_of_js __P2_of_js
                            __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                            __P7_of_js __P8_of_js __P9_of_js x886
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun
                          (x876 :
                            (__P1, __P2, __P3, __P4, __P5, __P6, __P7, 
                              __P8, __P9) NotificationType.t9)
                          ->
                          NotificationType.t9_to_js __P1_to_js __P2_to_js
                            __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                            __P7_to_js __P8_to_js __P9_to_js x876
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'P9 * EM.t)
          or_undefined)
      =
      fun (x896 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) ->
        or_undefined_of_js
          (fun (x906 : Ojs.t) ->
             let x907 = x906 in
             ((Obj.magic (Ojs.array_get x907 0)),
               (Obj.magic (Ojs.array_get x907 1)),
               (Obj.magic (Ojs.array_get x907 2)),
               (Obj.magic (Ojs.array_get x907 3)),
               (Obj.magic (Ojs.array_get x907 4)),
               (Obj.magic (Ojs.array_get x907 5)),
               (Obj.magic (Ojs.array_get x907 6)),
               (Obj.magic (Ojs.array_get x907 7)),
               (Obj.magic (Ojs.array_get x907 8)),
               (EM.t_of_js (Ojs.array_get x907 9))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic x896) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) =
      fun ~method_:(x908 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType9")
             [|(Ojs.string_to_js x908)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
        AbstractMessageSignature.t)
      =
      fun (x918 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic x918)
  end
let (is_request_message : message:Message.t or_undefined -> bool) =
  fun ~message:(x928 : Message.t or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isRequestMessage"
         [|(or_undefined_to_js Message.t_to_js x928)|])
let (is_notification_message : message:Message.t or_undefined -> bool) =
  fun ~message:(x930 : Message.t or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isNotificationMessage"
         [|(or_undefined_to_js Message.t_to_js x930)|])
let (is_response_message : message:Message.t or_undefined -> bool) =
  fun ~message:(x932 : Message.t or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isResponseMessage"
         [|(or_undefined_to_js Message.t_to_js x932)|])
