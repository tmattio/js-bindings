[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Message =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_jsonrpc : t -> string) =
      fun (x3 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3) "jsonrpc")
    let (set_jsonrpc : t -> string -> unit) =
      fun (x4 : t) ->
        fun (x5 : string) ->
          Ojs.set_prop_ascii (t_to_js x4) "jsonrpc" (Ojs.string_to_js x5)
  end
module RequestMessage =
  struct
    include struct include Message end
    let (get_id : t -> string or_number or_null) =
      fun (x6 : t) ->
        or_null_of_js
          (fun (x7 : Ojs.t) -> or_number_of_js Ojs.string_of_js x7)
          (Ojs.get_prop_ascii (t_to_js x6) "id")
    let (set_id : t -> string or_number or_null -> unit) =
      fun (x9 : t) ->
        fun (x10 : string or_number or_null) ->
          Ojs.set_prop_ascii (t_to_js x9) "id"
            (or_null_to_js
               (fun (x11 : string or_number) ->
                  or_number_to_js Ojs.string_to_js x11) x10)
    let (get_method : t -> string) =
      fun (x13 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x13) "method")
    let (set_method : t -> string -> unit) =
      fun (x14 : t) ->
        fun (x15 : string) ->
          Ojs.set_prop_ascii (t_to_js x14) "method" (Ojs.string_to_js x15)
    let (get_params : t -> (untyped_object, any) or_array) =
      fun (x16 : t) ->
        or_array_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x16) "params")
    let (set_params : t -> (untyped_object, any) or_array -> unit) =
      fun (x19 : t) ->
        fun (x20 : (untyped_object, any) or_array) ->
          Ojs.set_prop_ascii (t_to_js x19) "params"
            (or_array_to_js untyped_object_to_js any_to_js x20)
  end
module ErrorCodes =
  struct
    let (parse_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "ParseError")
    let (invalid_request : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "InvalidRequest")
    let (method_not_found : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "MethodNotFound")
    let (invalid_params : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "InvalidParams")
    let (internal_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "InternalError")
    let (jsonrpc_reserved_error_range_start : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "jsonrpcReservedErrorRangeStart")
    let (server_error_start : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "serverErrorStart")
    let (message_write_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "MessageWriteError")
    let (message_read_error : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "MessageReadError")
    let (server_not_initialized : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "ServerNotInitialized")
    let (unknown_error_code : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "UnknownErrorCode")
    let (jsonrpc_reserved_error_range_end : any) =
      any_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "jsonrpcReservedErrorRangeEnd")
    let (server_error_end : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "ErrorCodes") "serverErrorEnd")
  end
module ResponseErrorLiteral =
  struct
    type 'D t = Ojs.t
    let rec t_of_js : 'D . (Ojs.t -> 'D) -> Ojs.t -> 'D t = fun (type __D) ->
      fun (__D_of_js : Ojs.t -> __D) -> fun (x24 : Ojs.t) -> x24
    and t_to_js : 'D . ('D -> Ojs.t) -> 'D t -> Ojs.t = fun (type __D) ->
      fun (__D_to_js : __D -> Ojs.t) -> fun (x23 : Ojs.t) -> x23
    type t_0 = unit t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x27 : Ojs.t) -> t_of_js Ojs.unit_of_js x27
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x25 : unit t) -> t_to_js Ojs.unit_to_js x25
    let (get_code : 'D t -> int) =
      fun (x29 : 'D t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x29) "code")
    let (set_code : 'D t -> int -> unit) =
      fun (x31 : 'D t) ->
        fun (x32 : int) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x31) "code"
            (Ojs.int_to_js x32)
    let (get_message : 'D t -> string) =
      fun (x34 : 'D t) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x34) "message")
    let (set_message : 'D t -> string -> unit) =
      fun (x36 : 'D t) ->
        fun (x37 : string) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x36) "message"
            (Ojs.string_to_js x37)
    let (get_data : 'D t -> 'D) =
      fun (x39 : 'D t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x39) "data")
    let (set_data : 'D t -> 'D -> unit) =
      fun (x41 : 'D t) ->
        fun (x42 : 'D) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x41) "data" (Obj.magic x42)
  end
module ResponseError =
  struct
    type 'D t = Ojs.t
    let rec t_of_js : 'D . (Ojs.t -> 'D) -> Ojs.t -> 'D t = fun (type __D) ->
      fun (__D_of_js : Ojs.t -> __D) -> fun (x45 : Ojs.t) -> x45
    and t_to_js : 'D . ('D -> Ojs.t) -> 'D t -> Ojs.t = fun (type __D) ->
      fun (__D_to_js : __D -> Ojs.t) -> fun (x44 : Ojs.t) -> x44
    type t_0 = unit t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x48 : Ojs.t) -> t_of_js Ojs.unit_of_js x48
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x46 : unit t) -> t_to_js Ojs.unit_to_js x46
    let (get_code : 'D t -> int) =
      fun (x50 : 'D t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x50) "code")
    let (get_data : 'D t -> 'D or_undefined) =
      fun (x52 : 'D t) ->
        or_undefined_of_js Obj.magic
          (Ojs.get_prop_ascii (t_to_js Obj.magic x52) "data")
    let (create : code:int -> message:string -> ?data:'D -> unit -> 'D t) =
      fun ~code:(x55 : int) ->
        fun ~message:(x56 : string) ->
          fun ?data:(x57 : 'D option) ->
            fun () ->
              t_of_js Obj.magic
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global
                         "__LIB__VSCODE_JSONRPC__IMPORTS") "ResponseError")
                   (let x58 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore (Ojs.call x58 "push" [|(Ojs.int_to_js x55)|]);
                    ignore (Ojs.call x58 "push" [|(Ojs.string_to_js x56)|]);
                    (match x57 with
                     | Some x59 ->
                         ignore (Ojs.call x58 "push" [|(Obj.magic x59)|])
                     | None -> ());
                    x58))
    let (to_json : 'D t -> 'D ResponseErrorLiteral.t) =
      fun (x61 : 'D t) ->
        ResponseErrorLiteral.t_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x61) "toJson" [||])
    let (cast : 'D t -> Error.t) =
      fun (x64 : 'D t) -> Error.t_of_js (t_to_js Obj.magic x64)
  end
module ResponseMessage =
  struct
    include struct include Message end
    let (get_id : t -> string or_number or_null) =
      fun (x66 : t) ->
        or_null_of_js
          (fun (x67 : Ojs.t) -> or_number_of_js Ojs.string_of_js x67)
          (Ojs.get_prop_ascii (t_to_js x66) "id")
    let (set_id : t -> string or_number or_null -> unit) =
      fun (x69 : t) ->
        fun (x70 : string or_number or_null) ->
          Ojs.set_prop_ascii (t_to_js x69) "id"
            (or_null_to_js
               (fun (x71 : string or_number) ->
                  or_number_to_js Ojs.string_to_js x71) x70)
    let (get_result :
      t ->
        (untyped_object, any) or_array or_boolean or_string or_number or_null)
      =
      fun (x73 : t) ->
        or_null_of_js
          (fun (x74 : Ojs.t) ->
             or_number_of_js
               (fun (x75 : Ojs.t) ->
                  or_string_of_js
                    (fun (x76 : Ojs.t) ->
                       or_boolean_of_js
                         (fun (x77 : Ojs.t) ->
                            or_array_of_js untyped_object_of_js any_of_js x77)
                         x76) x75) x74)
          (Ojs.get_prop_ascii (t_to_js x73) "result")
    let (set_result :
      t ->
        (untyped_object, any) or_array or_boolean or_string or_number or_null
          -> unit)
      =
      fun (x80 : t) ->
        fun
          (x81 :
            (untyped_object, any) or_array or_boolean or_string or_number
              or_null)
          ->
          Ojs.set_prop_ascii (t_to_js x80) "result"
            (or_null_to_js
               (fun
                  (x82 :
                    (untyped_object, any) or_array or_boolean or_string
                      or_number)
                  ->
                  or_number_to_js
                    (fun
                       (x83 :
                         (untyped_object, any) or_array or_boolean or_string)
                       ->
                       or_string_to_js
                         (fun
                            (x84 : (untyped_object, any) or_array or_boolean)
                            ->
                            or_boolean_to_js
                              (fun (x85 : (untyped_object, any) or_array) ->
                                 or_array_to_js untyped_object_to_js
                                   any_to_js x85) x84) x83) x82) x81)
    let (get_error : t -> any ResponseErrorLiteral.t) =
      fun (x88 : t) ->
        ResponseErrorLiteral.t_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x88) "error")
    let (set_error : t -> any ResponseErrorLiteral.t -> unit) =
      fun (x90 : t) ->
        fun (x91 : any ResponseErrorLiteral.t) ->
          Ojs.set_prop_ascii (t_to_js x90) "error"
            (ResponseErrorLiteral.t_to_js any_to_js x91)
  end
module LSPMessageType =
  struct
    type t =
      [ `L_s0_receive_notification  | `L_s1_receive_request 
      | `L_s2_receive_response  | `L_s3_send_notification 
      | `L_s4_send_request  | `L_s5_send_response ]
    let rec t_of_js : Ojs.t -> t =
      fun (x94 : Ojs.t) ->
        let x95 = x94 in
        match Ojs.string_of_js x95 with
        | "receive-notification" -> `L_s0_receive_notification
        | "receive-request" -> `L_s1_receive_request
        | "receive-response" -> `L_s2_receive_response
        | "send-notification" -> `L_s3_send_notification
        | "send-request" -> `L_s4_send_request
        | "send-response" -> `L_s5_send_response
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x93 :
          [ `L_s0_receive_notification  | `L_s1_receive_request 
          | `L_s2_receive_response  | `L_s3_send_notification 
          | `L_s4_send_request  | `L_s5_send_response ])
        ->
        match x93 with
        | `L_s0_receive_notification ->
            Ojs.string_to_js "receive-notification"
        | `L_s1_receive_request -> Ojs.string_to_js "receive-request"
        | `L_s2_receive_response -> Ojs.string_to_js "receive-response"
        | `L_s3_send_notification -> Ojs.string_to_js "send-notification"
        | `L_s4_send_request -> Ojs.string_to_js "send-request"
        | `L_s5_send_response -> Ojs.string_to_js "send-response"
  end
module NotificationMessage =
  struct
    include struct include Message end
    let (get_method : t -> string) =
      fun (x96 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x96) "method")
    let (set_method : t -> string -> unit) =
      fun (x97 : t) ->
        fun (x98 : string) ->
          Ojs.set_prop_ascii (t_to_js x97) "method" (Ojs.string_to_js x98)
    let (get_params : t -> (untyped_object, unit) union2) =
      fun (x99 : t) ->
        union2_of_js untyped_object_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x99) "params")
    let (set_params : t -> (untyped_object, unit) union2 -> unit) =
      fun (x102 : t) ->
        fun (x103 : (untyped_object, unit) union2) ->
          Ojs.set_prop_ascii (t_to_js x102) "params"
            (union2_to_js untyped_object_to_js Ojs.unit_to_js x103)
  end
module LSPLogMessage =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x107 : Ojs.t) -> x107
    and t_to_js : t -> Ojs.t = fun (x106 : Ojs.t) -> x106
    let (get_type : t -> LSPMessageType.t) =
      fun (x108 : t) ->
        LSPMessageType.t_of_js (Ojs.get_prop_ascii (t_to_js x108) "type")
    let (set_type : t -> LSPMessageType.t -> unit) =
      fun (x109 : t) ->
        fun (x110 : LSPMessageType.t) ->
          Ojs.set_prop_ascii (t_to_js x109) "type"
            (LSPMessageType.t_to_js x110)
    let (get_message :
      t ->
        (NotificationMessage.t, RequestMessage.t, ResponseMessage.t) union3)
      =
      fun (x111 : t) ->
        union3_of_js NotificationMessage.t_of_js RequestMessage.t_of_js
          ResponseMessage.t_of_js
          (Ojs.get_prop_ascii (t_to_js x111) "message")
    let (set_message :
      t ->
        (NotificationMessage.t, RequestMessage.t, ResponseMessage.t) union3
          -> unit)
      =
      fun (x115 : t) ->
        fun
          (x116 :
            (NotificationMessage.t, RequestMessage.t, ResponseMessage.t)
              union3)
          ->
          Ojs.set_prop_ascii (t_to_js x115) "message"
            (union3_to_js NotificationMessage.t_to_js RequestMessage.t_to_js
               ResponseMessage.t_to_js x116)
    let (get_timestamp : t -> int) =
      fun (x120 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x120) "timestamp")
    let (set_timestamp : t -> int -> unit) =
      fun (x121 : t) ->
        fun (x122 : int) ->
          Ojs.set_prop_ascii (t_to_js x121) "timestamp" (Ojs.int_to_js x122)
  end
module ParameterStructures =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x124 : Ojs.t) -> x124
    and t_to_js : t -> Ojs.t = fun (x123 : Ojs.t) -> x123
    let (get_kind : t -> any) =
      fun (x125 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x125) "kind")
    let (get_auto : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "ParameterStructures")
             "auto")
    let (get_by_position : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "ParameterStructures")
             "byPosition")
    let (get_by_name : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "ParameterStructures")
             "byName")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "ParameterStructures")
             [||])
    let (is : value:any -> bool) =
      fun ~value:(x126 : any) ->
        Ojs.bool_of_js
          (Ojs.call
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "ParameterStructures")
             "is" [|(any_to_js x126)|])
    let (to_string : t -> string) =
      fun (x127 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x127) "toString" [||])
  end
module MessageSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x129 : Ojs.t) -> x129
    and t_to_js : t -> Ojs.t = fun (x128 : Ojs.t) -> x128
    let (get_method : t -> string) =
      fun (x130 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x130) "method")
    let (get_number_of_params : t -> int) =
      fun (x131 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x131) "numberOfParams")
    let (get_parameter_structures : t -> ParameterStructures.t) =
      fun (x132 : t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js x132) "parameterStructures")
  end
module AbstractMessageSignature =
  struct
    include struct include MessageSignature end
    let (get_method : t -> string) =
      fun (x133 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x133) "method")
    let (get_number_of_params : t -> int) =
      fun (x134 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x134) "numberOfParams")
    let (create : method_:string -> number_of_params:int -> t) =
      fun ~method_:(x135 : string) ->
        fun ~number_of_params:(x136 : int) ->
          t_of_js
            (Ojs.new_obj
               (Ojs.get_prop_ascii
                  (Ojs.get_prop_ascii Ojs.global
                     "__LIB__VSCODE_JSONRPC__IMPORTS")
                  "AbstractMessageSignature")
               [|(Ojs.string_to_js x135);(Ojs.int_to_js x136)|])
    let (get_parameter_structures : t -> ParameterStructures.t) =
      fun (x137 : t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js x137) "parameterStructures")
  end
module EM =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x139 : Ojs.t) -> x139
    and t_to_js : t -> Ojs.t = fun (x138 : Ojs.t) -> x138
    let (get_end_marker : t -> int) =
      fun (x140 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x140) "_$endMarker$_")
    let (set_end_marker : t -> int -> unit) =
      fun (x141 : t) ->
        fun (x142 : int) ->
          Ojs.set_prop_ascii (t_to_js x141) "_$endMarker$_"
            (Ojs.int_to_js x142)
  end
module RequestType0 =
  struct
    type ('R, 'E) t = Ojs.t
    let rec t_of_js :
      'R 'E . (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('R, 'E) t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__E_of_js : Ojs.t -> __E) -> fun (x144 : Ojs.t) -> x144
    and t_to_js :
      'R 'E . ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('R, 'E) t -> Ojs.t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__E_to_js : __E -> Ojs.t) -> fun (x143 : Ojs.t) -> x143
    let (get__ : ('R, 'E) t -> ('R * 'E * EM.t) or_undefined) =
      fun (x145 : ('R, 'E) t) ->
        or_undefined_of_js
          (fun (x148 : Ojs.t) ->
             let x149 = x148 in
             ((Obj.magic (Ojs.array_get x149 0)),
               (Obj.magic (Ojs.array_get x149 1)),
               (EM.t_of_js (Ojs.array_get x149 2))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x145) "_")
    let (create : method_:string -> ('R, 'E) t) =
      fun ~method_:(x150 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType0")
             [|(Ojs.string_to_js x150)|])
    let (cast : ('R, 'E) t -> AbstractMessageSignature.t) =
      fun (x153 : ('R, 'E) t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic Obj.magic x153)
  end
module RequestType =
  struct
    type ('P, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P 'R 'E .
        (Ojs.t -> 'P) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P, 'R, 'E) t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) -> fun (x157 : Ojs.t) -> x157
    and t_to_js :
      'P 'R 'E .
        ('P -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P, 'R, 'E) t -> Ojs.t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) -> fun (x156 : Ojs.t) -> x156
    let (get_parameter_structures : ('P, 'R, 'E) t -> any) =
      fun (x158 : ('P, 'R, 'E) t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x158)
             "_parameterStructures")
    let (set_parameter_structures : ('P, 'R, 'E) t -> any -> unit) =
      fun (x162 : ('P, 'R, 'E) t) ->
        fun (x163 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x162)
            "_parameterStructures" (any_to_js x163)
    let (get__ : ('P, 'R, 'E) t -> ('P * 'R * 'E * EM.t) or_undefined) =
      fun (x167 : ('P, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x171 : Ojs.t) ->
             let x172 = x171 in
             ((Obj.magic (Ojs.array_get x172 0)),
               (Obj.magic (Ojs.array_get x172 1)),
               (Obj.magic (Ojs.array_get x172 2)),
               (EM.t_of_js (Ojs.array_get x172 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x167)
             "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t -> unit -> ('P, 'R, 'E) t)
      =
      fun ~method_:(x173 : string) ->
        fun ?_parameterStructures:(x174 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global
                       "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType")
                 (let x175 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x175 "push" [|(Ojs.string_to_js x173)|]);
                  (match x174 with
                   | Some x176 ->
                       ignore
                         (Ojs.call x175 "push"
                            [|(ParameterStructures.t_to_js x176)|])
                   | None -> ());
                  x175))
    let (get_parameter_structures : ('P, 'R, 'E) t -> ParameterStructures.t)
      =
      fun (x180 : ('P, 'R, 'E) t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x180)
             "parameterStructures")
    let (cast : ('P, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x184 : ('P, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x184)
  end
module RequestType1 =
  struct
    type ('P1, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'R, 'E) t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) -> fun (x189 : Ojs.t) -> x189
    and t_to_js :
      'P1 'R 'E .
        ('P1 -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) -> fun (x188 : Ojs.t) -> x188
    let (get_parameter_structures : ('P1, 'R, 'E) t -> any) =
      fun (x190 : ('P1, 'R, 'E) t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x190)
             "_parameterStructures")
    let (set_parameter_structures : ('P1, 'R, 'E) t -> any -> unit) =
      fun (x194 : ('P1, 'R, 'E) t) ->
        fun (x195 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x194)
            "_parameterStructures" (any_to_js x195)
    let (get__ : ('P1, 'R, 'E) t -> ('P1 * 'R * 'E * EM.t) or_undefined) =
      fun (x199 : ('P1, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x203 : Ojs.t) ->
             let x204 = x203 in
             ((Obj.magic (Ojs.array_get x204 0)),
               (Obj.magic (Ojs.array_get x204 1)),
               (Obj.magic (Ojs.array_get x204 2)),
               (EM.t_of_js (Ojs.array_get x204 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x199)
             "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t ->
          unit -> ('P1, 'R, 'E) t)
      =
      fun ~method_:(x205 : string) ->
        fun ?_parameterStructures:(x206 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global
                       "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType1")
                 (let x207 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x207 "push" [|(Ojs.string_to_js x205)|]);
                  (match x206 with
                   | Some x208 ->
                       ignore
                         (Ojs.call x207 "push"
                            [|(ParameterStructures.t_to_js x208)|])
                   | None -> ());
                  x207))
    let (get_parameter_structures : ('P1, 'R, 'E) t -> ParameterStructures.t)
      =
      fun (x212 : ('P1, 'R, 'E) t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x212)
             "parameterStructures")
    let (cast : ('P1, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x216 : ('P1, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x216)
  end
module RequestType2 =
  struct
    type ('P1, 'P2, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__R_of_js : Ojs.t -> __R) ->
            fun (__E_of_js : Ojs.t -> __E) -> fun (x221 : Ojs.t) -> x221
    and t_to_js :
      'P1 'P2 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'P2, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__R_to_js : __R -> Ojs.t) ->
            fun (__E_to_js : __E -> Ojs.t) -> fun (x220 : Ojs.t) -> x220
    let (get__ :
      ('P1, 'P2, 'R, 'E) t -> ('P1 * 'P2 * 'R * 'E * EM.t) or_undefined) =
      fun (x222 : ('P1, 'P2, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x227 : Ojs.t) ->
             let x228 = x227 in
             ((Obj.magic (Ojs.array_get x228 0)),
               (Obj.magic (Ojs.array_get x228 1)),
               (Obj.magic (Ojs.array_get x228 2)),
               (Obj.magic (Ojs.array_get x228 3)),
               (EM.t_of_js (Ojs.array_get x228 4))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x222) "_")
    let (create : method_:string -> ('P1, 'P2, 'R, 'E) t) =
      fun ~method_:(x229 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType2")
             [|(Ojs.string_to_js x229)|])
    let (cast : ('P1, 'P2, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x234 : ('P1, 'P2, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x234)
  end
module RequestType3 =
  struct
    type ('P1, 'P2, 'P3, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'R) ->
                (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__R_of_js : Ojs.t -> __R) ->
              fun (__E_of_js : Ojs.t -> __E) -> fun (x240 : Ojs.t) -> x240
    and t_to_js :
      'P1 'P2 'P3 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('R -> Ojs.t) ->
                ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) ->
              fun (__E_to_js : __E -> Ojs.t) -> fun (x239 : Ojs.t) -> x239
    let (get__ :
      ('P1, 'P2, 'P3, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x241 : ('P1, 'P2, 'P3, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x247 : Ojs.t) ->
             let x248 = x247 in
             ((Obj.magic (Ojs.array_get x248 0)),
               (Obj.magic (Ojs.array_get x248 1)),
               (Obj.magic (Ojs.array_get x248 2)),
               (Obj.magic (Ojs.array_get x248 3)),
               (Obj.magic (Ojs.array_get x248 4)),
               (EM.t_of_js (Ojs.array_get x248 5))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x241)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'R, 'E) t) =
      fun ~method_:(x249 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType3")
             [|(Ojs.string_to_js x249)|])
    let (cast : ('P1, 'P2, 'P3, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x255 : ('P1, 'P2, 'P3, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x255)
  end
module RequestType4 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'R) ->
                  (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__R_of_js : Ojs.t -> __R) ->
                fun (__E_of_js : Ojs.t -> __E) -> fun (x262 : Ojs.t) -> x262
    and t_to_js :
      'P1 'P2 'P3 'P4 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('R -> Ojs.t) ->
                  ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) ->
                fun (__E_to_js : __E -> Ojs.t) -> fun (x261 : Ojs.t) -> x261
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x263 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x270 : Ojs.t) ->
             let x271 = x270 in
             ((Obj.magic (Ojs.array_get x271 0)),
               (Obj.magic (Ojs.array_get x271 1)),
               (Obj.magic (Ojs.array_get x271 2)),
               (Obj.magic (Ojs.array_get x271 3)),
               (Obj.magic (Ojs.array_get x271 4)),
               (Obj.magic (Ojs.array_get x271 5)),
               (EM.t_of_js (Ojs.array_get x271 6))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic x263) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) =
      fun ~method_:(x272 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType4")
             [|(Ojs.string_to_js x272)|])
    let (cast : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t -> AbstractMessageSignature.t)
      =
      fun (x279 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic x279)
  end
module RequestType5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'R) ->
                    (Ojs.t -> 'E) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (__E_of_js : Ojs.t -> __E) ->
                    fun (x287 : Ojs.t) -> x287
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('E -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (__E_to_js : __E -> Ojs.t) ->
                    fun (x286 : Ojs.t) -> x286
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x288 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x296 : Ojs.t) ->
             let x297 = x296 in
             ((Obj.magic (Ojs.array_get x297 0)),
               (Obj.magic (Ojs.array_get x297 1)),
               (Obj.magic (Ojs.array_get x297 2)),
               (Obj.magic (Ojs.array_get x297 3)),
               (Obj.magic (Ojs.array_get x297 4)),
               (Obj.magic (Ojs.array_get x297 5)),
               (Obj.magic (Ojs.array_get x297 6)),
               (EM.t_of_js (Ojs.array_get x297 7))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic x288) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) =
      fun ~method_:(x298 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType5")
             [|(Ojs.string_to_js x298)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t -> AbstractMessageSignature.t) =
      fun (x306 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic x306)
  end
module RequestType6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'R) ->
                      (Ojs.t -> 'E) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (__E_of_js : Ojs.t -> __E) ->
                      fun (x315 : Ojs.t) -> x315
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('E -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (__E_to_js : __E -> Ojs.t) ->
                      fun (x314 : Ojs.t) -> x314
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'R * 'E * EM.t) or_undefined)
      =
      fun (x316 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x325 : Ojs.t) ->
             let x326 = x325 in
             ((Obj.magic (Ojs.array_get x326 0)),
               (Obj.magic (Ojs.array_get x326 1)),
               (Obj.magic (Ojs.array_get x326 2)),
               (Obj.magic (Ojs.array_get x326 3)),
               (Obj.magic (Ojs.array_get x326 4)),
               (Obj.magic (Ojs.array_get x326 5)),
               (Obj.magic (Ojs.array_get x326 6)),
               (Obj.magic (Ojs.array_get x326 7)),
               (EM.t_of_js (Ojs.array_get x326 8))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic x316) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t)
      =
      fun ~method_:(x327 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType6")
             [|(Ojs.string_to_js x327)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t -> AbstractMessageSignature.t)
      =
      fun (x336 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic x336)
  end
module RequestType7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'R) ->
                        (Ojs.t -> 'E) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (__E_of_js : Ojs.t -> __E) ->
                        fun (x346 : Ojs.t) -> x346
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('E -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (__E_to_js : __E -> Ojs.t) ->
                        fun (x345 : Ojs.t) -> x345
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'R * 'E * EM.t)
          or_undefined)
      =
      fun (x347 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x357 : Ojs.t) ->
             let x358 = x357 in
             ((Obj.magic (Ojs.array_get x358 0)),
               (Obj.magic (Ojs.array_get x358 1)),
               (Obj.magic (Ojs.array_get x358 2)),
               (Obj.magic (Ojs.array_get x358 3)),
               (Obj.magic (Ojs.array_get x358 4)),
               (Obj.magic (Ojs.array_get x358 5)),
               (Obj.magic (Ojs.array_get x358 6)),
               (Obj.magic (Ojs.array_get x358 7)),
               (Obj.magic (Ojs.array_get x358 8)),
               (EM.t_of_js (Ojs.array_get x358 9))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic x347) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) =
      fun ~method_:(x359 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType7")
             [|(Ojs.string_to_js x359)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
        AbstractMessageSignature.t)
      =
      fun (x369 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic x369)
  end
module RequestType8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'R) ->
                          (Ojs.t -> 'E) ->
                            Ojs.t ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__R_of_js : Ojs.t -> __R) ->
                        fun (__E_of_js : Ojs.t -> __E) ->
                          fun (x380 : Ojs.t) -> x380
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('E -> Ojs.t) ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                              'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__R_to_js : __R -> Ojs.t) ->
                        fun (__E_to_js : __E -> Ojs.t) ->
                          fun (x379 : Ojs.t) -> x379
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'R * 'E * EM.t)
          or_undefined)
      =
      fun (x381 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x392 : Ojs.t) ->
             let x393 = x392 in
             ((Obj.magic (Ojs.array_get x393 0)),
               (Obj.magic (Ojs.array_get x393 1)),
               (Obj.magic (Ojs.array_get x393 2)),
               (Obj.magic (Ojs.array_get x393 3)),
               (Obj.magic (Ojs.array_get x393 4)),
               (Obj.magic (Ojs.array_get x393 5)),
               (Obj.magic (Ojs.array_get x393 6)),
               (Obj.magic (Ojs.array_get x393 7)),
               (Obj.magic (Ojs.array_get x393 8)),
               (Obj.magic (Ojs.array_get x393 9)),
               (EM.t_of_js (Ojs.array_get x393 10))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x381) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) =
      fun ~method_:(x394 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "RequestType8")
             [|(Ojs.string_to_js x394)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t ->
        AbstractMessageSignature.t)
      =
      fun (x405 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x405)
  end
module RequestType9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          (Ojs.t -> 'R) ->
                            (Ojs.t -> 'E) ->
                              Ojs.t ->
                                ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                  'P9, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (__E_of_js : Ojs.t -> __E) ->
                            fun (x417 : Ojs.t) -> x417
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('E -> Ojs.t) ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'P9, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (__E_to_js : __E -> Ojs.t) ->
                            fun (x416 : Ojs.t) -> x416
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'P9 * 'R * 'E *
          EM.t) or_undefined)
      =
      fun (x418 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x430 : Ojs.t) ->
             let x431 = x430 in
             ((Obj.magic (Ojs.array_get x431 0)),
               (Obj.magic (Ojs.array_get x431 1)),
               (Obj.magic (Ojs.array_get x431 2)),
               (Obj.magic (Ojs.array_get x431 3)),
               (Obj.magic (Ojs.array_get x431 4)),
               (Obj.magic (Ojs.array_get x431 5)),
               (Obj.magic (Ojs.array_get x431 6)),
               (Obj.magic (Ojs.array_get x431 7)),
               (Obj.magic (Ojs.array_get x431 8)),
               (Obj.magic (Ojs.array_get x431 9)),
               (Obj.magic (Ojs.array_get x431 10)),
               (EM.t_of_js (Ojs.array_get x431 11))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                x418) "_")
    let (create :
      method_:string ->
        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t)
      =
      fun ~method_:(x432 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii Ojs.global
                      "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationMessage")
                "RequestType9") [|(Ojs.string_to_js x432)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t ->
        AbstractMessageSignature.t)
      =
      fun (x444 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x444)
  end
module NotificationType =
  struct
    type 'P t = Ojs.t
    let rec t_of_js : 'P . (Ojs.t -> 'P) -> Ojs.t -> 'P t = fun (type __P) ->
      fun (__P_of_js : Ojs.t -> __P) -> fun (x457 : Ojs.t) -> x457
    and t_to_js : 'P . ('P -> Ojs.t) -> 'P t -> Ojs.t = fun (type __P) ->
      fun (__P_to_js : __P -> Ojs.t) -> fun (x456 : Ojs.t) -> x456
    let (get_parameter_structures : 'P t -> any) =
      fun (x458 : 'P t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x458) "_parameterStructures")
    let (set_parameter_structures : 'P t -> any -> unit) =
      fun (x460 : 'P t) ->
        fun (x461 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x460) "_parameterStructures"
            (any_to_js x461)
    let (get__ : 'P t -> ('P * EM.t) or_undefined) =
      fun (x463 : 'P t) ->
        or_undefined_of_js
          (fun (x465 : Ojs.t) ->
             let x466 = x465 in
             ((Obj.magic (Ojs.array_get x466 0)),
               (EM.t_of_js (Ojs.array_get x466 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x463) "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t -> unit -> 'P t)
      =
      fun ~method_:(x467 : string) ->
        fun ?_parameterStructures:(x468 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global
                       "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType")
                 (let x469 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x469 "push" [|(Ojs.string_to_js x467)|]);
                  (match x468 with
                   | Some x470 ->
                       ignore
                         (Ojs.call x469 "push"
                            [|(ParameterStructures.t_to_js x470)|])
                   | None -> ());
                  x469))
    let (get_parameter_structures : 'P t -> ParameterStructures.t) =
      fun (x472 : 'P t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x472) "parameterStructures")
    let (cast : 'P t -> AbstractMessageSignature.t) =
      fun (x474 : 'P t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic x474)
  end
module NotificationType0 =
  struct
    include struct include AbstractMessageSignature end
    let (get__ : t -> EM.t or_undefined) =
      fun (x476 : t) ->
        or_undefined_of_js EM.t_of_js (Ojs.get_prop_ascii (t_to_js x476) "_")
    let (create : method_:string -> t) =
      fun ~method_:(x478 : string) ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType0")
             [|(Ojs.string_to_js x478)|])
  end
module NotificationType1 =
  struct
    type 'P1 t = Ojs.t
    let rec t_of_js : 'P1 . (Ojs.t -> 'P1) -> Ojs.t -> 'P1 t = fun (type
      __P1) -> fun (__P1_of_js : Ojs.t -> __P1) -> fun (x480 : Ojs.t) -> x480
    and t_to_js : 'P1 . ('P1 -> Ojs.t) -> 'P1 t -> Ojs.t = fun (type __P1) ->
      fun (__P1_to_js : __P1 -> Ojs.t) -> fun (x479 : Ojs.t) -> x479
    let (get_parameter_structures : 'P1 t -> any) =
      fun (x481 : 'P1 t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x481) "_parameterStructures")
    let (set_parameter_structures : 'P1 t -> any -> unit) =
      fun (x483 : 'P1 t) ->
        fun (x484 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x483) "_parameterStructures"
            (any_to_js x484)
    let (get__ : 'P1 t -> ('P1 * EM.t) or_undefined) =
      fun (x486 : 'P1 t) ->
        or_undefined_of_js
          (fun (x488 : Ojs.t) ->
             let x489 = x488 in
             ((Obj.magic (Ojs.array_get x489 0)),
               (EM.t_of_js (Ojs.array_get x489 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x486) "_")
    let (create :
      method_:string ->
        ?_parameterStructures:ParameterStructures.t -> unit -> 'P1 t)
      =
      fun ~method_:(x490 : string) ->
        fun ?_parameterStructures:(x491 : ParameterStructures.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global
                       "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType1")
                 (let x492 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x492 "push" [|(Ojs.string_to_js x490)|]);
                  (match x491 with
                   | Some x493 ->
                       ignore
                         (Ojs.call x492 "push"
                            [|(ParameterStructures.t_to_js x493)|])
                   | None -> ());
                  x492))
    let (get_parameter_structures : 'P1 t -> ParameterStructures.t) =
      fun (x495 : 'P1 t) ->
        ParameterStructures.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x495) "parameterStructures")
    let (cast : 'P1 t -> AbstractMessageSignature.t) =
      fun (x497 : 'P1 t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic x497)
  end
module NotificationType2 =
  struct
    type ('P1, 'P2) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 . (Ojs.t -> 'P1) -> (Ojs.t -> 'P2) -> Ojs.t -> ('P1, 'P2) t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) -> fun (x500 : Ojs.t) -> x500
    and t_to_js :
      'P1 'P2 . ('P1 -> Ojs.t) -> ('P2 -> Ojs.t) -> ('P1, 'P2) t -> Ojs.t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) -> fun (x499 : Ojs.t) -> x499
    let (get__ : ('P1, 'P2) t -> ('P1 * 'P2 * EM.t) or_undefined) =
      fun (x501 : ('P1, 'P2) t) ->
        or_undefined_of_js
          (fun (x504 : Ojs.t) ->
             let x505 = x504 in
             ((Obj.magic (Ojs.array_get x505 0)),
               (Obj.magic (Ojs.array_get x505 1)),
               (EM.t_of_js (Ojs.array_get x505 2))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x501) "_")
    let (create : method_:string -> ('P1, 'P2) t) =
      fun ~method_:(x506 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType2")
             [|(Ojs.string_to_js x506)|])
    let (cast : ('P1, 'P2) t -> AbstractMessageSignature.t) =
      fun (x509 : ('P1, 'P2) t) ->
        AbstractMessageSignature.t_of_js (t_to_js Obj.magic Obj.magic x509)
  end
module NotificationType3 =
  struct
    type ('P1, 'P2, 'P3) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) -> (Ojs.t -> 'P3) -> Ojs.t -> ('P1, 'P2, 'P3) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) -> fun (x513 : Ojs.t) -> x513
    and t_to_js :
      'P1 'P2 'P3 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) -> ('P3 -> Ojs.t) -> ('P1, 'P2, 'P3) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) -> fun (x512 : Ojs.t) -> x512
    let (get__ : ('P1, 'P2, 'P3) t -> ('P1 * 'P2 * 'P3 * EM.t) or_undefined)
      =
      fun (x514 : ('P1, 'P2, 'P3) t) ->
        or_undefined_of_js
          (fun (x518 : Ojs.t) ->
             let x519 = x518 in
             ((Obj.magic (Ojs.array_get x519 0)),
               (Obj.magic (Ojs.array_get x519 1)),
               (Obj.magic (Ojs.array_get x519 2)),
               (EM.t_of_js (Ojs.array_get x519 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x514)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3) t) =
      fun ~method_:(x520 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType3")
             [|(Ojs.string_to_js x520)|])
    let (cast : ('P1, 'P2, 'P3) t -> AbstractMessageSignature.t) =
      fun (x524 : ('P1, 'P2, 'P3) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x524)
  end
module NotificationType4 =
  struct
    type ('P1, 'P2, 'P3, 'P4) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) -> fun (x529 : Ojs.t) -> x529
    and t_to_js :
      'P1 'P2 'P3 'P4 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) -> fun (x528 : Ojs.t) -> x528
    let (get__ :
      ('P1, 'P2, 'P3, 'P4) t -> ('P1 * 'P2 * 'P3 * 'P4 * EM.t) or_undefined)
      =
      fun (x530 : ('P1, 'P2, 'P3, 'P4) t) ->
        or_undefined_of_js
          (fun (x535 : Ojs.t) ->
             let x536 = x535 in
             ((Obj.magic (Ojs.array_get x536 0)),
               (Obj.magic (Ojs.array_get x536 1)),
               (Obj.magic (Ojs.array_get x536 2)),
               (Obj.magic (Ojs.array_get x536 3)),
               (EM.t_of_js (Ojs.array_get x536 4))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x530) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4) t) =
      fun ~method_:(x537 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType4")
             [|(Ojs.string_to_js x537)|])
    let (cast : ('P1, 'P2, 'P3, 'P4) t -> AbstractMessageSignature.t) =
      fun (x542 : ('P1, 'P2, 'P3, 'P4) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x542)
  end
module NotificationType5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) -> fun (x548 : Ojs.t) -> x548
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) -> fun (x547 : Ojs.t) -> x547
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * EM.t) or_undefined)
      =
      fun (x549 : ('P1, 'P2, 'P3, 'P4, 'P5) t) ->
        or_undefined_of_js
          (fun (x555 : Ojs.t) ->
             let x556 = x555 in
             ((Obj.magic (Ojs.array_get x556 0)),
               (Obj.magic (Ojs.array_get x556 1)),
               (Obj.magic (Ojs.array_get x556 2)),
               (Obj.magic (Ojs.array_get x556 3)),
               (Obj.magic (Ojs.array_get x556 4)),
               (EM.t_of_js (Ojs.array_get x556 5))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x549)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5) t) =
      fun ~method_:(x557 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType5")
             [|(Ojs.string_to_js x557)|])
    let (cast : ('P1, 'P2, 'P3, 'P4, 'P5) t -> AbstractMessageSignature.t) =
      fun (x563 : ('P1, 'P2, 'P3, 'P4, 'P5) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x563)
  end
module NotificationType6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (x570 : Ojs.t) -> x570
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (x569 : Ojs.t) -> x569
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * EM.t) or_undefined)
      =
      fun (x571 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) ->
        or_undefined_of_js
          (fun (x578 : Ojs.t) ->
             let x579 = x578 in
             ((Obj.magic (Ojs.array_get x579 0)),
               (Obj.magic (Ojs.array_get x579 1)),
               (Obj.magic (Ojs.array_get x579 2)),
               (Obj.magic (Ojs.array_get x579 3)),
               (Obj.magic (Ojs.array_get x579 4)),
               (Obj.magic (Ojs.array_get x579 5)),
               (EM.t_of_js (Ojs.array_get x579 6))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic x571) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) =
      fun ~method_:(x580 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType6")
             [|(Ojs.string_to_js x580)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t -> AbstractMessageSignature.t) =
      fun (x587 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic x587)
  end
module NotificationType7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (x595 : Ojs.t) -> x595
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (x594 : Ojs.t) -> x594
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * EM.t) or_undefined)
      =
      fun (x596 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) ->
        or_undefined_of_js
          (fun (x604 : Ojs.t) ->
             let x605 = x604 in
             ((Obj.magic (Ojs.array_get x605 0)),
               (Obj.magic (Ojs.array_get x605 1)),
               (Obj.magic (Ojs.array_get x605 2)),
               (Obj.magic (Ojs.array_get x605 3)),
               (Obj.magic (Ojs.array_get x605 4)),
               (Obj.magic (Ojs.array_get x605 5)),
               (Obj.magic (Ojs.array_get x605 6)),
               (EM.t_of_js (Ojs.array_get x605 7))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic x596) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) =
      fun ~method_:(x606 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType7")
             [|(Ojs.string_to_js x606)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t -> AbstractMessageSignature.t) =
      fun (x614 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic x614)
  end
module NotificationType8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (x623 : Ojs.t) -> x623
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (x622 : Ojs.t) -> x622
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * EM.t) or_undefined)
      =
      fun (x624 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) ->
        or_undefined_of_js
          (fun (x633 : Ojs.t) ->
             let x634 = x633 in
             ((Obj.magic (Ojs.array_get x634 0)),
               (Obj.magic (Ojs.array_get x634 1)),
               (Obj.magic (Ojs.array_get x634 2)),
               (Obj.magic (Ojs.array_get x634 3)),
               (Obj.magic (Ojs.array_get x634 4)),
               (Obj.magic (Ojs.array_get x634 5)),
               (Obj.magic (Ojs.array_get x634 6)),
               (Obj.magic (Ojs.array_get x634 7)),
               (EM.t_of_js (Ojs.array_get x634 8))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic x624) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) =
      fun ~method_:(x635 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType8")
             [|(Ojs.string_to_js x635)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t ->
        AbstractMessageSignature.t)
      =
      fun (x644 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic x644)
  end
module NotificationType9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (x654 : Ojs.t) -> x654
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun (x653 : Ojs.t) -> x653
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'P9 * EM.t)
          or_undefined)
      =
      fun (x655 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) ->
        or_undefined_of_js
          (fun (x665 : Ojs.t) ->
             let x666 = x665 in
             ((Obj.magic (Ojs.array_get x666 0)),
               (Obj.magic (Ojs.array_get x666 1)),
               (Obj.magic (Ojs.array_get x666 2)),
               (Obj.magic (Ojs.array_get x666 3)),
               (Obj.magic (Ojs.array_get x666 4)),
               (Obj.magic (Ojs.array_get x666 5)),
               (Obj.magic (Ojs.array_get x666 6)),
               (Obj.magic (Ojs.array_get x666 7)),
               (Obj.magic (Ojs.array_get x666 8)),
               (EM.t_of_js (Ojs.array_get x666 9))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic x655) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) =
      fun ~method_:(x667 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "NotificationType9")
             [|(Ojs.string_to_js x667)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
        AbstractMessageSignature.t)
      =
      fun (x677 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) ->
        AbstractMessageSignature.t_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic x677)
  end
let (is_request_message : message:Message.t or_undefined -> bool) =
  fun ~message:(x687 : Message.t or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call
         (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
         "isRequestMessage" [|(or_undefined_to_js Message.t_to_js x687)|])
let (is_notification_message : message:Message.t or_undefined -> bool) =
  fun ~message:(x689 : Message.t or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call
         (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
         "isNotificationMessage"
         [|(or_undefined_to_js Message.t_to_js x689)|])
let (is_response_message : message:Message.t or_undefined -> bool) =
  fun ~message:(x691 : Message.t or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call
         (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
         "isResponseMessage" [|(or_undefined_to_js Message.t_to_js x691)|])
