[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Message =
  struct
    type t = _Message
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> _Message_of_js x2
    and t_to_js : t -> Ojs.t = fun (x1 : _Message) -> _Message_to_js x1
    let (get_jsonrpc : t -> string) =
      fun (x3 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3) "jsonrpc")
    let (set_jsonrpc : t -> string -> unit) =
      fun (x4 : t) ->
        fun (x5 : string) ->
          Ojs.set_prop_ascii (t_to_js x4) "jsonrpc" (Ojs.string_to_js x5)
  end
module RequestMessage =
  struct
    type t = _RequestMessage
    let rec t_of_js : Ojs.t -> t =
      fun (x7 : Ojs.t) -> _RequestMessage_of_js x7
    and t_to_js : t -> Ojs.t =
      fun (x6 : _RequestMessage) -> _RequestMessage_to_js x6
    let (get_id : t -> string or_number or_null) =
      fun (x8 : t) ->
        or_null_of_js
          (fun (x9 : Ojs.t) -> or_number_of_js Ojs.string_of_js x9)
          (Ojs.get_prop_ascii (t_to_js x8) "id")
    let (set_id : t -> string or_number or_null -> unit) =
      fun (x11 : t) ->
        fun (x12 : string or_number or_null) ->
          Ojs.set_prop_ascii (t_to_js x11) "id"
            (or_null_to_js
               (fun (x13 : string or_number) ->
                  or_number_to_js Ojs.string_to_js x13) x12)
    let (get_method : t -> string) =
      fun (x15 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x15) "method")
    let (set_method : t -> string -> unit) =
      fun (x16 : t) ->
        fun (x17 : string) ->
          Ojs.set_prop_ascii (t_to_js x16) "method" (Ojs.string_to_js x17)
    let (get_params : t -> (untyped_object, any) or_array) =
      fun (x18 : t) ->
        or_array_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x18) "params")
    let (set_params : t -> (untyped_object, any) or_array -> unit) =
      fun (x21 : t) ->
        fun (x22 : (untyped_object, any) or_array) ->
          Ojs.set_prop_ascii (t_to_js x21) "params"
            (or_array_to_js untyped_object_to_js any_to_js x22)
    let (cast : t -> _Message) =
      fun (x25 : t) -> _Message_of_js (t_to_js x25)
  end
module ErrorCodes =
  struct
    let (parseError : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "ParseError")
    let (invalidRequest : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "InvalidRequest")
    let (methodNotFound : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "MethodNotFound")
    let (invalidParams : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "InvalidParams")
    let (internalError : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "InternalError")
    let (jsonrpcReservedErrorRangeStart : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "jsonrpcReservedErrorRangeStart")
    let (serverErrorStart : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "serverErrorStart")
    let (messageWriteError : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "MessageWriteError")
    let (messageReadError : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "MessageReadError")
    let (serverNotInitialized : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "ServerNotInitialized")
    let (unknownErrorCode : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "UnknownErrorCode")
    let (jsonrpcReservedErrorRangeEnd : any) =
      any_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "jsonrpcReservedErrorRangeEnd")
    let (serverErrorEnd : int) =
      Ojs.int_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorCodes")
           "serverErrorEnd")
  end
module ResponseErrorLiteral =
  struct
    type 'D t = 'D _ResponseErrorLiteral
    let rec t_of_js : 'D . (Ojs.t -> 'D) -> Ojs.t -> 'D t = fun (type __D) ->
      fun (__D_of_js : Ojs.t -> __D) ->
        fun (x28 : Ojs.t) -> _ResponseErrorLiteral_of_js __D_of_js x28
    and t_to_js : 'D . ('D -> Ojs.t) -> 'D t -> Ojs.t = fun (type __D) ->
      fun (__D_to_js : __D -> Ojs.t) ->
        fun (x26 : __D _ResponseErrorLiteral) ->
          _ResponseErrorLiteral_to_js __D_to_js x26
    type t_0 = unit t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x32 : Ojs.t) -> t_of_js Ojs.unit_of_js x32
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x30 : unit t) -> t_to_js Ojs.unit_to_js x30
    let (get_code : 'D t -> int) =
      fun (x34 : 'D t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x34) "code")
    let (set_code : 'D t -> int -> unit) =
      fun (x36 : 'D t) ->
        fun (x37 : int) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x36) "code"
            (Ojs.int_to_js x37)
    let (get_message : 'D t -> string) =
      fun (x39 : 'D t) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x39) "message")
    let (set_message : 'D t -> string -> unit) =
      fun (x41 : 'D t) ->
        fun (x42 : string) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x41) "message"
            (Ojs.string_to_js x42)
    let (get_data : 'D t -> 'D) =
      fun (x44 : 'D t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x44) "data")
    let (set_data : 'D t -> 'D -> unit) =
      fun (x46 : 'D t) ->
        fun (x47 : 'D) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x46) "data" (Obj.magic x47)
  end
module ResponseError =
  struct
    type 'D t = 'D _ResponseError
    let rec t_of_js : 'D . (Ojs.t -> 'D) -> Ojs.t -> 'D t = fun (type __D) ->
      fun (__D_of_js : Ojs.t -> __D) ->
        fun (x51 : Ojs.t) -> _ResponseError_of_js __D_of_js x51
    and t_to_js : 'D . ('D -> Ojs.t) -> 'D t -> Ojs.t = fun (type __D) ->
      fun (__D_to_js : __D -> Ojs.t) ->
        fun (x49 : __D _ResponseError) -> _ResponseError_to_js __D_to_js x49
    type t_0 = unit t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x55 : Ojs.t) -> t_of_js Ojs.unit_of_js x55
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x53 : unit t) -> t_to_js Ojs.unit_to_js x53
    let (get_code : 'D t -> int) =
      fun (x57 : 'D t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x57) "code")
    let (get_data : 'D t -> 'D or_undefined) =
      fun (x59 : 'D t) ->
        or_undefined_of_js Obj.magic
          (Ojs.get_prop_ascii (t_to_js Obj.magic x59) "data")
    let (create : code:int -> message:string -> ?data:'D -> unit -> 'D t) =
      fun ~code:(x62 : int) ->
        fun ~message:(x63 : string) ->
          fun ?data:(x64 : 'D option) ->
            fun () ->
              t_of_js Obj.magic
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "ResponseError")
                   (let x65 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore (Ojs.call x65 "push" [|(Ojs.int_to_js x62)|]);
                    ignore (Ojs.call x65 "push" [|(Ojs.string_to_js x63)|]);
                    (match x64 with
                     | Some x66 ->
                         ignore (Ojs.call x65 "push" [|(Obj.magic x66)|])
                     | None -> ());
                    x65))
    let (toJson : 'D t -> 'D _ResponseErrorLiteral) =
      fun (x68 : 'D t) ->
        _ResponseErrorLiteral_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x68) "toJson" [||])
    let (cast : 'D t -> Error.t) =
      fun (x71 : 'D t) -> Error.t_of_js (t_to_js Obj.magic x71)
  end
module ResponseMessage =
  struct
    type t = _ResponseMessage
    let rec t_of_js : Ojs.t -> t =
      fun (x74 : Ojs.t) -> _ResponseMessage_of_js x74
    and t_to_js : t -> Ojs.t =
      fun (x73 : _ResponseMessage) -> _ResponseMessage_to_js x73
    let (get_id : t -> string or_number or_null) =
      fun (x75 : t) ->
        or_null_of_js
          (fun (x76 : Ojs.t) -> or_number_of_js Ojs.string_of_js x76)
          (Ojs.get_prop_ascii (t_to_js x75) "id")
    let (set_id : t -> string or_number or_null -> unit) =
      fun (x78 : t) ->
        fun (x79 : string or_number or_null) ->
          Ojs.set_prop_ascii (t_to_js x78) "id"
            (or_null_to_js
               (fun (x80 : string or_number) ->
                  or_number_to_js Ojs.string_to_js x80) x79)
    let (get_result :
      t ->
        (untyped_object, any) or_array or_boolean or_string or_number or_null)
      =
      fun (x82 : t) ->
        or_null_of_js
          (fun (x83 : Ojs.t) ->
             or_number_of_js
               (fun (x84 : Ojs.t) ->
                  or_string_of_js
                    (fun (x85 : Ojs.t) ->
                       or_boolean_of_js
                         (fun (x86 : Ojs.t) ->
                            or_array_of_js untyped_object_of_js any_of_js x86)
                         x85) x84) x83)
          (Ojs.get_prop_ascii (t_to_js x82) "result")
    let (set_result :
      t ->
        (untyped_object, any) or_array or_boolean or_string or_number or_null
          -> unit)
      =
      fun (x89 : t) ->
        fun
          (x90 :
            (untyped_object, any) or_array or_boolean or_string or_number
              or_null)
          ->
          Ojs.set_prop_ascii (t_to_js x89) "result"
            (or_null_to_js
               (fun
                  (x91 :
                    (untyped_object, any) or_array or_boolean or_string
                      or_number)
                  ->
                  or_number_to_js
                    (fun
                       (x92 :
                         (untyped_object, any) or_array or_boolean or_string)
                       ->
                       or_string_to_js
                         (fun
                            (x93 : (untyped_object, any) or_array or_boolean)
                            ->
                            or_boolean_to_js
                              (fun (x94 : (untyped_object, any) or_array) ->
                                 or_array_to_js untyped_object_to_js
                                   any_to_js x94) x93) x92) x91) x90)
    let (get_error : t -> any _ResponseErrorLiteral) =
      fun (x97 : t) ->
        _ResponseErrorLiteral_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x97) "error")
    let (set_error : t -> any _ResponseErrorLiteral -> unit) =
      fun (x99 : t) ->
        fun (x100 : any _ResponseErrorLiteral) ->
          Ojs.set_prop_ascii (t_to_js x99) "error"
            (_ResponseErrorLiteral_to_js any_to_js x100)
    let (cast : t -> _Message) =
      fun (x102 : t) -> _Message_of_js (t_to_js x102)
  end
module LSPMessageType =
  struct
    type t =
      [ `L_s0_receive_notification  | `L_s1_receive_request 
      | `L_s2_receive_response  | `L_s3_send_notification 
      | `L_s4_send_request  | `L_s5_send_response ]
    let rec t_of_js : Ojs.t -> t =
      fun (x104 : Ojs.t) ->
        let x105 = x104 in
        match Ojs.string_of_js x105 with
        | "receive-notification" -> `L_s0_receive_notification
        | "receive-request" -> `L_s1_receive_request
        | "receive-response" -> `L_s2_receive_response
        | "send-notification" -> `L_s3_send_notification
        | "send-request" -> `L_s4_send_request
        | "send-response" -> `L_s5_send_response
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x103 :
          [ `L_s0_receive_notification  | `L_s1_receive_request 
          | `L_s2_receive_response  | `L_s3_send_notification 
          | `L_s4_send_request  | `L_s5_send_response ])
        ->
        match x103 with
        | `L_s0_receive_notification ->
            Ojs.string_to_js "receive-notification"
        | `L_s1_receive_request -> Ojs.string_to_js "receive-request"
        | `L_s2_receive_response -> Ojs.string_to_js "receive-response"
        | `L_s3_send_notification -> Ojs.string_to_js "send-notification"
        | `L_s4_send_request -> Ojs.string_to_js "send-request"
        | `L_s5_send_response -> Ojs.string_to_js "send-response"
  end
module LSPLogMessage =
  struct
    type t = _LSPLogMessage
    let rec t_of_js : Ojs.t -> t =
      fun (x107 : Ojs.t) -> _LSPLogMessage_of_js x107
    and t_to_js : t -> Ojs.t =
      fun (x106 : _LSPLogMessage) -> _LSPLogMessage_to_js x106
    let (get_type : t -> _LSPMessageType) =
      fun (x108 : t) ->
        _LSPMessageType_of_js (Ojs.get_prop_ascii (t_to_js x108) "type")
    let (set_type : t -> _LSPMessageType -> unit) =
      fun (x109 : t) ->
        fun (x110 : _LSPMessageType) ->
          Ojs.set_prop_ascii (t_to_js x109) "type"
            (_LSPMessageType_to_js x110)
    let (get_message :
      t -> (_NotificationMessage, _RequestMessage, _ResponseMessage) union3)
      =
      fun (x111 : t) ->
        union3_of_js _NotificationMessage_of_js _RequestMessage_of_js
          _ResponseMessage_of_js
          (Ojs.get_prop_ascii (t_to_js x111) "message")
    let (set_message :
      t ->
        (_NotificationMessage, _RequestMessage, _ResponseMessage) union3 ->
          unit)
      =
      fun (x115 : t) ->
        fun
          (x116 :
            (_NotificationMessage, _RequestMessage, _ResponseMessage) union3)
          ->
          Ojs.set_prop_ascii (t_to_js x115) "message"
            (union3_to_js _NotificationMessage_to_js _RequestMessage_to_js
               _ResponseMessage_to_js x116)
    let (get_timestamp : t -> int) =
      fun (x120 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x120) "timestamp")
    let (set_timestamp : t -> int -> unit) =
      fun (x121 : t) ->
        fun (x122 : int) ->
          Ojs.set_prop_ascii (t_to_js x121) "timestamp" (Ojs.int_to_js x122)
  end
module ParameterStructures =
  struct
    type t = _ParameterStructures
    let rec t_of_js : Ojs.t -> t =
      fun (x124 : Ojs.t) -> _ParameterStructures_of_js x124
    and t_to_js : t -> Ojs.t =
      fun (x123 : _ParameterStructures) -> _ParameterStructures_to_js x123
    let (get_kind : t -> any) =
      fun (x125 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x125) "kind")
    let (get_auto : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ParameterStructures") "auto")
    let (get_byPosition : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ParameterStructures")
             "byPosition")
    let (get_byName : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ParameterStructures") "byName")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ParameterStructures")
             [||])
    let (is : value:any -> bool) =
      fun ~value:(x126 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ParameterStructures")
             "is" [|(any_to_js x126)|])
    let (toString : t -> string) =
      fun (x127 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x127) "toString" [||])
  end
module MessageSignature =
  struct
    type t = _MessageSignature
    let rec t_of_js : Ojs.t -> t =
      fun (x129 : Ojs.t) -> _MessageSignature_of_js x129
    and t_to_js : t -> Ojs.t =
      fun (x128 : _MessageSignature) -> _MessageSignature_to_js x128
    let (get_method : t -> string) =
      fun (x130 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x130) "method")
    let (get_numberOfParams : t -> int) =
      fun (x131 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x131) "numberOfParams")
    let (get_parameterStructures : t -> _ParameterStructures) =
      fun (x132 : t) ->
        _ParameterStructures_of_js
          (Ojs.get_prop_ascii (t_to_js x132) "parameterStructures")
  end
module AbstractMessageSignature =
  struct
    type t = _AbstractMessageSignature
    let rec t_of_js : Ojs.t -> t =
      fun (x134 : Ojs.t) -> _AbstractMessageSignature_of_js x134
    and t_to_js : t -> Ojs.t =
      fun (x133 : _AbstractMessageSignature) ->
        _AbstractMessageSignature_to_js x133
    let (get_method : t -> string) =
      fun (x135 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x135) "method")
    let (get_numberOfParams : t -> int) =
      fun (x136 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x136) "numberOfParams")
    let (create : method_:string -> numberOfParams:int -> t) =
      fun ~method_:(x137 : string) ->
        fun ~numberOfParams:(x138 : int) ->
          t_of_js
            (Ojs.new_obj
               (Ojs.get_prop_ascii Ojs.global "AbstractMessageSignature")
               [|(Ojs.string_to_js x137);(Ojs.int_to_js x138)|])
    let (get_parameterStructures : t -> _ParameterStructures) =
      fun (x139 : t) ->
        _ParameterStructures_of_js
          (Ojs.get_prop_ascii (t_to_js x139) "parameterStructures")
    let (cast : t -> _MessageSignature) =
      fun (x140 : t) -> _MessageSignature_of_js (t_to_js x140)
  end
module EM =
  struct
    type t = _EM
    let rec t_of_js : Ojs.t -> t = fun (x142 : Ojs.t) -> _EM_of_js x142
    and t_to_js : t -> Ojs.t = fun (x141 : _EM) -> _EM_to_js x141
    let (get___endMarker__ : t -> int) =
      fun (x143 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x143) "_$endMarker$_")
    let (set___endMarker__ : t -> int -> unit) =
      fun (x144 : t) ->
        fun (x145 : int) ->
          Ojs.set_prop_ascii (t_to_js x144) "_$endMarker$_"
            (Ojs.int_to_js x145)
  end
module RequestType0 =
  struct
    type ('R, 'E) t = ('R, 'E) _RequestType0
    let rec t_of_js :
      'R 'E . (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('R, 'E) t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__E_of_js : Ojs.t -> __E) ->
          fun (x149 : Ojs.t) -> _RequestType0_of_js __R_of_js __E_of_js x149
    and t_to_js :
      'R 'E . ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('R, 'E) t -> Ojs.t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__E_to_js : __E -> Ojs.t) ->
          fun (x146 : (__R, __E) _RequestType0) ->
            _RequestType0_to_js __R_to_js __E_to_js x146
    let (get__ : ('R, 'E) t -> ('R * 'E * _EM) or_undefined) =
      fun (x152 : ('R, 'E) t) ->
        or_undefined_of_js
          (fun (x155 : Ojs.t) ->
             let x156 = x155 in
             ((Obj.magic (Ojs.array_get x156 0)),
               (Obj.magic (Ojs.array_get x156 1)),
               (_EM_of_js (Ojs.array_get x156 2))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x152) "_")
    let (create : method_:string -> ('R, 'E) t) =
      fun ~method_:(x157 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType0")
             [|(Ojs.string_to_js x157)|])
    let (cast : ('R, 'E) t -> _AbstractMessageSignature) =
      fun (x160 : ('R, 'E) t) ->
        _AbstractMessageSignature_of_js (t_to_js Obj.magic Obj.magic x160)
  end
module RequestType =
  struct
    type ('P, 'R, 'E) t = ('P, 'R, 'E) _RequestType
    let rec t_of_js :
      'P 'R 'E .
        (Ojs.t -> 'P) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P, 'R, 'E) t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) ->
            fun (x167 : Ojs.t) ->
              _RequestType_of_js __P_of_js __R_of_js __E_of_js x167
    and t_to_js :
      'P 'R 'E .
        ('P -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P, 'R, 'E) t -> Ojs.t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) ->
            fun (x163 : (__P, __R, __E) _RequestType) ->
              _RequestType_to_js __P_to_js __R_to_js __E_to_js x163
    let (get__parameterStructures : ('P, 'R, 'E) t -> any) =
      fun (x171 : ('P, 'R, 'E) t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x171)
             "_parameterStructures")
    let (set__parameterStructures : ('P, 'R, 'E) t -> any -> unit) =
      fun (x175 : ('P, 'R, 'E) t) ->
        fun (x176 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x175)
            "_parameterStructures" (any_to_js x176)
    let (get__ : ('P, 'R, 'E) t -> ('P * 'R * 'E * _EM) or_undefined) =
      fun (x180 : ('P, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x184 : Ojs.t) ->
             let x185 = x184 in
             ((Obj.magic (Ojs.array_get x185 0)),
               (Obj.magic (Ojs.array_get x185 1)),
               (Obj.magic (Ojs.array_get x185 2)),
               (_EM_of_js (Ojs.array_get x185 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x180)
             "_")
    let (create :
      method_:string ->
        ?_parameterStructures:_ParameterStructures -> unit -> ('P, 'R, 'E) t)
      =
      fun ~method_:(x186 : string) ->
        fun ?_parameterStructures:(x187 : _ParameterStructures option) ->
          fun () ->
            t_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RequestType")
                 (let x188 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x188 "push" [|(Ojs.string_to_js x186)|]);
                  (match x187 with
                   | Some x189 ->
                       ignore
                         (Ojs.call x188 "push"
                            [|(_ParameterStructures_to_js x189)|])
                   | None -> ());
                  x188))
    let (get_parameterStructures : ('P, 'R, 'E) t -> _ParameterStructures) =
      fun (x193 : ('P, 'R, 'E) t) ->
        _ParameterStructures_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x193)
             "parameterStructures")
    let (cast : ('P, 'R, 'E) t -> _AbstractMessageSignature) =
      fun (x197 : ('P, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x197)
  end
module RequestType1 =
  struct
    type ('P1, 'R, 'E) t = ('P1, 'R, 'E) _RequestType1
    let rec t_of_js :
      'P1 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'R, 'E) t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) ->
            fun (x205 : Ojs.t) ->
              _RequestType1_of_js __P1_of_js __R_of_js __E_of_js x205
    and t_to_js :
      'P1 'R 'E .
        ('P1 -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) ->
            fun (x201 : (__P1, __R, __E) _RequestType1) ->
              _RequestType1_to_js __P1_to_js __R_to_js __E_to_js x201
    let (get__parameterStructures : ('P1, 'R, 'E) t -> any) =
      fun (x209 : ('P1, 'R, 'E) t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x209)
             "_parameterStructures")
    let (set__parameterStructures : ('P1, 'R, 'E) t -> any -> unit) =
      fun (x213 : ('P1, 'R, 'E) t) ->
        fun (x214 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x213)
            "_parameterStructures" (any_to_js x214)
    let (get__ : ('P1, 'R, 'E) t -> ('P1 * 'R * 'E * _EM) or_undefined) =
      fun (x218 : ('P1, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x222 : Ojs.t) ->
             let x223 = x222 in
             ((Obj.magic (Ojs.array_get x223 0)),
               (Obj.magic (Ojs.array_get x223 1)),
               (Obj.magic (Ojs.array_get x223 2)),
               (_EM_of_js (Ojs.array_get x223 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x218)
             "_")
    let (create :
      method_:string ->
        ?_parameterStructures:_ParameterStructures -> unit -> ('P1, 'R, 'E) t)
      =
      fun ~method_:(x224 : string) ->
        fun ?_parameterStructures:(x225 : _ParameterStructures option) ->
          fun () ->
            t_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RequestType1")
                 (let x226 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x226 "push" [|(Ojs.string_to_js x224)|]);
                  (match x225 with
                   | Some x227 ->
                       ignore
                         (Ojs.call x226 "push"
                            [|(_ParameterStructures_to_js x227)|])
                   | None -> ());
                  x226))
    let (get_parameterStructures : ('P1, 'R, 'E) t -> _ParameterStructures) =
      fun (x231 : ('P1, 'R, 'E) t) ->
        _ParameterStructures_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x231)
             "parameterStructures")
    let (cast : ('P1, 'R, 'E) t -> _AbstractMessageSignature) =
      fun (x235 : ('P1, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x235)
  end
module RequestType2 =
  struct
    type ('P1, 'P2, 'R, 'E) t = ('P1, 'P2, 'R, 'E) _RequestType2
    let rec t_of_js :
      'P1 'P2 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__R_of_js : Ojs.t -> __R) ->
            fun (__E_of_js : Ojs.t -> __E) ->
              fun (x244 : Ojs.t) ->
                _RequestType2_of_js __P1_of_js __P2_of_js __R_of_js __E_of_js
                  x244
    and t_to_js :
      'P1 'P2 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'P2, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__R_to_js : __R -> Ojs.t) ->
            fun (__E_to_js : __E -> Ojs.t) ->
              fun (x239 : (__P1, __P2, __R, __E) _RequestType2) ->
                _RequestType2_to_js __P1_to_js __P2_to_js __R_to_js __E_to_js
                  x239
    let (get__ :
      ('P1, 'P2, 'R, 'E) t -> ('P1 * 'P2 * 'R * 'E * _EM) or_undefined) =
      fun (x249 : ('P1, 'P2, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x254 : Ojs.t) ->
             let x255 = x254 in
             ((Obj.magic (Ojs.array_get x255 0)),
               (Obj.magic (Ojs.array_get x255 1)),
               (Obj.magic (Ojs.array_get x255 2)),
               (Obj.magic (Ojs.array_get x255 3)),
               (_EM_of_js (Ojs.array_get x255 4))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x249) "_")
    let (create : method_:string -> ('P1, 'P2, 'R, 'E) t) =
      fun ~method_:(x256 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType2")
             [|(Ojs.string_to_js x256)|])
    let (cast : ('P1, 'P2, 'R, 'E) t -> _AbstractMessageSignature) =
      fun (x261 : ('P1, 'P2, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x261)
  end
module RequestType3 =
  struct
    type ('P1, 'P2, 'P3, 'R, 'E) t = ('P1, 'P2, 'P3, 'R, 'E) _RequestType3
    let rec t_of_js :
      'P1 'P2 'P3 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'R) ->
                (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__R_of_js : Ojs.t -> __R) ->
              fun (__E_of_js : Ojs.t -> __E) ->
                fun (x272 : Ojs.t) ->
                  _RequestType3_of_js __P1_of_js __P2_of_js __P3_of_js
                    __R_of_js __E_of_js x272
    and t_to_js :
      'P1 'P2 'P3 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('R -> Ojs.t) ->
                ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) ->
              fun (__E_to_js : __E -> Ojs.t) ->
                fun (x266 : (__P1, __P2, __P3, __R, __E) _RequestType3) ->
                  _RequestType3_to_js __P1_to_js __P2_to_js __P3_to_js
                    __R_to_js __E_to_js x266
    let (get__ :
      ('P1, 'P2, 'P3, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'R * 'E * _EM) or_undefined)
      =
      fun (x278 : ('P1, 'P2, 'P3, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x284 : Ojs.t) ->
             let x285 = x284 in
             ((Obj.magic (Ojs.array_get x285 0)),
               (Obj.magic (Ojs.array_get x285 1)),
               (Obj.magic (Ojs.array_get x285 2)),
               (Obj.magic (Ojs.array_get x285 3)),
               (Obj.magic (Ojs.array_get x285 4)),
               (_EM_of_js (Ojs.array_get x285 5))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x278)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'R, 'E) t) =
      fun ~method_:(x286 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType3")
             [|(Ojs.string_to_js x286)|])
    let (cast : ('P1, 'P2, 'P3, 'R, 'E) t -> _AbstractMessageSignature) =
      fun (x292 : ('P1, 'P2, 'P3, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x292)
  end
module RequestType4 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'R, 'E) _RequestType4
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'R) ->
                  (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__R_of_js : Ojs.t -> __R) ->
                fun (__E_of_js : Ojs.t -> __E) ->
                  fun (x305 : Ojs.t) ->
                    _RequestType4_of_js __P1_of_js __P2_of_js __P3_of_js
                      __P4_of_js __R_of_js __E_of_js x305
    and t_to_js :
      'P1 'P2 'P3 'P4 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('R -> Ojs.t) ->
                  ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) ->
                fun (__E_to_js : __E -> Ojs.t) ->
                  fun
                    (x298 : (__P1, __P2, __P3, __P4, __R, __E) _RequestType4)
                    ->
                    _RequestType4_to_js __P1_to_js __P2_to_js __P3_to_js
                      __P4_to_js __R_to_js __E_to_js x298
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'R * 'E * _EM) or_undefined)
      =
      fun (x312 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x319 : Ojs.t) ->
             let x320 = x319 in
             ((Obj.magic (Ojs.array_get x320 0)),
               (Obj.magic (Ojs.array_get x320 1)),
               (Obj.magic (Ojs.array_get x320 2)),
               (Obj.magic (Ojs.array_get x320 3)),
               (Obj.magic (Ojs.array_get x320 4)),
               (Obj.magic (Ojs.array_get x320 5)),
               (_EM_of_js (Ojs.array_get x320 6))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic x312) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) =
      fun ~method_:(x321 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType4")
             [|(Ojs.string_to_js x321)|])
    let (cast : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t -> _AbstractMessageSignature)
      =
      fun (x328 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic x328)
  end
module RequestType5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) _RequestType5
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'R) ->
                    (Ojs.t -> 'E) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (__E_of_js : Ojs.t -> __E) ->
                    fun (x343 : Ojs.t) ->
                      _RequestType5_of_js __P1_of_js __P2_of_js __P3_of_js
                        __P4_of_js __P5_of_js __R_of_js __E_of_js x343
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('E -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (__E_to_js : __E -> Ojs.t) ->
                    fun
                      (x335 :
                        (__P1, __P2, __P3, __P4, __P5, __R, __E)
                          _RequestType5)
                      ->
                      _RequestType5_to_js __P1_to_js __P2_to_js __P3_to_js
                        __P4_to_js __P5_to_js __R_to_js __E_to_js x335
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'R * 'E * _EM) or_undefined)
      =
      fun (x351 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x359 : Ojs.t) ->
             let x360 = x359 in
             ((Obj.magic (Ojs.array_get x360 0)),
               (Obj.magic (Ojs.array_get x360 1)),
               (Obj.magic (Ojs.array_get x360 2)),
               (Obj.magic (Ojs.array_get x360 3)),
               (Obj.magic (Ojs.array_get x360 4)),
               (Obj.magic (Ojs.array_get x360 5)),
               (Obj.magic (Ojs.array_get x360 6)),
               (_EM_of_js (Ojs.array_get x360 7))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic x351) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) =
      fun ~method_:(x361 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType5")
             [|(Ojs.string_to_js x361)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t -> _AbstractMessageSignature) =
      fun (x369 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic x369)
  end
module RequestType6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) _RequestType6
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'R) ->
                      (Ojs.t -> 'E) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (__E_of_js : Ojs.t -> __E) ->
                      fun (x386 : Ojs.t) ->
                        _RequestType6_of_js __P1_of_js __P2_of_js __P3_of_js
                          __P4_of_js __P5_of_js __P6_of_js __R_of_js
                          __E_of_js x386
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('E -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (__E_to_js : __E -> Ojs.t) ->
                      fun
                        (x377 :
                          (__P1, __P2, __P3, __P4, __P5, __P6, __R, __E)
                            _RequestType6)
                        ->
                        _RequestType6_to_js __P1_to_js __P2_to_js __P3_to_js
                          __P4_to_js __P5_to_js __P6_to_js __R_to_js
                          __E_to_js x377
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'R * 'E * _EM) or_undefined)
      =
      fun (x395 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x404 : Ojs.t) ->
             let x405 = x404 in
             ((Obj.magic (Ojs.array_get x405 0)),
               (Obj.magic (Ojs.array_get x405 1)),
               (Obj.magic (Ojs.array_get x405 2)),
               (Obj.magic (Ojs.array_get x405 3)),
               (Obj.magic (Ojs.array_get x405 4)),
               (Obj.magic (Ojs.array_get x405 5)),
               (Obj.magic (Ojs.array_get x405 6)),
               (Obj.magic (Ojs.array_get x405 7)),
               (_EM_of_js (Ojs.array_get x405 8))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic x395) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t)
      =
      fun ~method_:(x406 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType6")
             [|(Ojs.string_to_js x406)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t -> _AbstractMessageSignature)
      =
      fun (x415 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic x415)
  end
module RequestType7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) _RequestType7
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'R) ->
                        (Ojs.t -> 'E) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (__E_of_js : Ojs.t -> __E) ->
                        fun (x434 : Ojs.t) ->
                          _RequestType7_of_js __P1_of_js __P2_of_js
                            __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                            __P7_of_js __R_of_js __E_of_js x434
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('E -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (__E_to_js : __E -> Ojs.t) ->
                        fun
                          (x424 :
                            (__P1, __P2, __P3, __P4, __P5, __P6, __P7, 
                              __R, __E) _RequestType7)
                          ->
                          _RequestType7_to_js __P1_to_js __P2_to_js
                            __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                            __P7_to_js __R_to_js __E_to_js x424
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'R * 'E * _EM)
          or_undefined)
      =
      fun (x444 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x454 : Ojs.t) ->
             let x455 = x454 in
             ((Obj.magic (Ojs.array_get x455 0)),
               (Obj.magic (Ojs.array_get x455 1)),
               (Obj.magic (Ojs.array_get x455 2)),
               (Obj.magic (Ojs.array_get x455 3)),
               (Obj.magic (Ojs.array_get x455 4)),
               (Obj.magic (Ojs.array_get x455 5)),
               (Obj.magic (Ojs.array_get x455 6)),
               (Obj.magic (Ojs.array_get x455 7)),
               (Obj.magic (Ojs.array_get x455 8)),
               (_EM_of_js (Ojs.array_get x455 9))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic x444) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) =
      fun ~method_:(x456 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType7")
             [|(Ojs.string_to_js x456)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
        _AbstractMessageSignature)
      =
      fun (x466 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic x466)
  end
module RequestType8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) _RequestType8
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'R) ->
                          (Ojs.t -> 'E) ->
                            Ojs.t ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__R_of_js : Ojs.t -> __R) ->
                        fun (__E_of_js : Ojs.t -> __E) ->
                          fun (x487 : Ojs.t) ->
                            _RequestType8_of_js __P1_of_js __P2_of_js
                              __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                              __P7_of_js __P8_of_js __R_of_js __E_of_js x487
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('E -> Ojs.t) ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                              'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__R_to_js : __R -> Ojs.t) ->
                        fun (__E_to_js : __E -> Ojs.t) ->
                          fun
                            (x476 :
                              (__P1, __P2, __P3, __P4, __P5, __P6, __P7,
                                __P8, __R, __E) _RequestType8)
                            ->
                            _RequestType8_to_js __P1_to_js __P2_to_js
                              __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                              __P7_to_js __P8_to_js __R_to_js __E_to_js x476
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'R * 'E * _EM)
          or_undefined)
      =
      fun (x498 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x509 : Ojs.t) ->
             let x510 = x509 in
             ((Obj.magic (Ojs.array_get x510 0)),
               (Obj.magic (Ojs.array_get x510 1)),
               (Obj.magic (Ojs.array_get x510 2)),
               (Obj.magic (Ojs.array_get x510 3)),
               (Obj.magic (Ojs.array_get x510 4)),
               (Obj.magic (Ojs.array_get x510 5)),
               (Obj.magic (Ojs.array_get x510 6)),
               (Obj.magic (Ojs.array_get x510 7)),
               (Obj.magic (Ojs.array_get x510 8)),
               (Obj.magic (Ojs.array_get x510 9)),
               (_EM_of_js (Ojs.array_get x510 10))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x498) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) =
      fun ~method_:(x511 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType8")
             [|(Ojs.string_to_js x511)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t ->
        _AbstractMessageSignature)
      =
      fun (x522 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x522)
  end
module RequestType9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) _RequestType9
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          (Ojs.t -> 'R) ->
                            (Ojs.t -> 'E) ->
                              Ojs.t ->
                                ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                  'P9, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (__E_of_js : Ojs.t -> __E) ->
                            fun (x545 : Ojs.t) ->
                              _RequestType9_of_js __P1_of_js __P2_of_js
                                __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                                __P7_of_js __P8_of_js __P9_of_js __R_of_js
                                __E_of_js x545
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('E -> Ojs.t) ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'P9, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (__E_to_js : __E -> Ojs.t) ->
                            fun
                              (x533 :
                                (__P1, __P2, __P3, __P4, __P5, __P6, 
                                  __P7, __P8, __P9, __R, __E) _RequestType9)
                              ->
                              _RequestType9_to_js __P1_to_js __P2_to_js
                                __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                                __P7_to_js __P8_to_js __P9_to_js __R_to_js
                                __E_to_js x533
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'P9 * 'R * 'E * _EM)
          or_undefined)
      =
      fun (x557 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t) ->
        or_undefined_of_js
          (fun (x569 : Ojs.t) ->
             let x570 = x569 in
             ((Obj.magic (Ojs.array_get x570 0)),
               (Obj.magic (Ojs.array_get x570 1)),
               (Obj.magic (Ojs.array_get x570 2)),
               (Obj.magic (Ojs.array_get x570 3)),
               (Obj.magic (Ojs.array_get x570 4)),
               (Obj.magic (Ojs.array_get x570 5)),
               (Obj.magic (Ojs.array_get x570 6)),
               (Obj.magic (Ojs.array_get x570 7)),
               (Obj.magic (Ojs.array_get x570 8)),
               (Obj.magic (Ojs.array_get x570 9)),
               (Obj.magic (Ojs.array_get x570 10)),
               (_EM_of_js (Ojs.array_get x570 11))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                x557) "_")
    let (create :
      method_:string ->
        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t)
      =
      fun ~method_:(x571 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RequestType9")
             [|(Ojs.string_to_js x571)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t ->
        _AbstractMessageSignature)
      =
      fun (x583 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x583)
  end
module NotificationMessage =
  struct
    type t = _NotificationMessage
    let rec t_of_js : Ojs.t -> t =
      fun (x596 : Ojs.t) -> _NotificationMessage_of_js x596
    and t_to_js : t -> Ojs.t =
      fun (x595 : _NotificationMessage) -> _NotificationMessage_to_js x595
    let (get_method : t -> string) =
      fun (x597 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x597) "method")
    let (set_method : t -> string -> unit) =
      fun (x598 : t) ->
        fun (x599 : string) ->
          Ojs.set_prop_ascii (t_to_js x598) "method" (Ojs.string_to_js x599)
    let (get_params : t -> (untyped_object, unit) union2) =
      fun (x600 : t) ->
        union2_of_js untyped_object_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x600) "params")
    let (set_params : t -> (untyped_object, unit) union2 -> unit) =
      fun (x603 : t) ->
        fun (x604 : (untyped_object, unit) union2) ->
          Ojs.set_prop_ascii (t_to_js x603) "params"
            (union2_to_js untyped_object_to_js Ojs.unit_to_js x604)
    let (cast : t -> _Message) =
      fun (x607 : t) -> _Message_of_js (t_to_js x607)
  end
module NotificationType =
  struct
    type 'P t = 'P _NotificationType
    let rec t_of_js : 'P . (Ojs.t -> 'P) -> Ojs.t -> 'P t = fun (type __P) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (x610 : Ojs.t) -> _NotificationType_of_js __P_of_js x610
    and t_to_js : 'P . ('P -> Ojs.t) -> 'P t -> Ojs.t = fun (type __P) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (x608 : __P _NotificationType) ->
          _NotificationType_to_js __P_to_js x608
    let (get__parameterStructures : 'P t -> any) =
      fun (x612 : 'P t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x612) "_parameterStructures")
    let (set__parameterStructures : 'P t -> any -> unit) =
      fun (x614 : 'P t) ->
        fun (x615 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x614) "_parameterStructures"
            (any_to_js x615)
    let (get__ : 'P t -> ('P * _EM) or_undefined) =
      fun (x617 : 'P t) ->
        or_undefined_of_js
          (fun (x619 : Ojs.t) ->
             let x620 = x619 in
             ((Obj.magic (Ojs.array_get x620 0)),
               (_EM_of_js (Ojs.array_get x620 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x617) "_")
    let (create :
      method_:string ->
        ?_parameterStructures:_ParameterStructures -> unit -> 'P t)
      =
      fun ~method_:(x621 : string) ->
        fun ?_parameterStructures:(x622 : _ParameterStructures option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "NotificationType")
                 (let x623 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x623 "push" [|(Ojs.string_to_js x621)|]);
                  (match x622 with
                   | Some x624 ->
                       ignore
                         (Ojs.call x623 "push"
                            [|(_ParameterStructures_to_js x624)|])
                   | None -> ());
                  x623))
    let (get_parameterStructures : 'P t -> _ParameterStructures) =
      fun (x626 : 'P t) ->
        _ParameterStructures_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x626) "parameterStructures")
    let (cast : 'P t -> _AbstractMessageSignature) =
      fun (x628 : 'P t) ->
        _AbstractMessageSignature_of_js (t_to_js Obj.magic x628)
  end
module NotificationType0 =
  struct
    type t = _NotificationType0
    let rec t_of_js : Ojs.t -> t =
      fun (x631 : Ojs.t) -> _NotificationType0_of_js x631
    and t_to_js : t -> Ojs.t =
      fun (x630 : _NotificationType0) -> _NotificationType0_to_js x630
    let (get__ : t -> _EM or_undefined) =
      fun (x632 : t) ->
        or_undefined_of_js _EM_of_js (Ojs.get_prop_ascii (t_to_js x632) "_")
    let (create : method_:string -> t) =
      fun ~method_:(x634 : string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType0")
             [|(Ojs.string_to_js x634)|])
    let (cast : t -> _AbstractMessageSignature) =
      fun (x635 : t) -> _AbstractMessageSignature_of_js (t_to_js x635)
  end
module NotificationType1 =
  struct
    type 'P1 t = 'P1 _NotificationType1
    let rec t_of_js : 'P1 . (Ojs.t -> 'P1) -> Ojs.t -> 'P1 t = fun (type
      __P1) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (x638 : Ojs.t) -> _NotificationType1_of_js __P1_of_js x638
    and t_to_js : 'P1 . ('P1 -> Ojs.t) -> 'P1 t -> Ojs.t = fun (type __P1) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (x636 : __P1 _NotificationType1) ->
          _NotificationType1_to_js __P1_to_js x636
    let (get__parameterStructures : 'P1 t -> any) =
      fun (x640 : 'P1 t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x640) "_parameterStructures")
    let (set__parameterStructures : 'P1 t -> any -> unit) =
      fun (x642 : 'P1 t) ->
        fun (x643 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x642) "_parameterStructures"
            (any_to_js x643)
    let (get__ : 'P1 t -> ('P1 * _EM) or_undefined) =
      fun (x645 : 'P1 t) ->
        or_undefined_of_js
          (fun (x647 : Ojs.t) ->
             let x648 = x647 in
             ((Obj.magic (Ojs.array_get x648 0)),
               (_EM_of_js (Ojs.array_get x648 1))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic x645) "_")
    let (create :
      method_:string ->
        ?_parameterStructures:_ParameterStructures -> unit -> 'P1 t)
      =
      fun ~method_:(x649 : string) ->
        fun ?_parameterStructures:(x650 : _ParameterStructures option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "NotificationType1")
                 (let x651 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x651 "push" [|(Ojs.string_to_js x649)|]);
                  (match x650 with
                   | Some x652 ->
                       ignore
                         (Ojs.call x651 "push"
                            [|(_ParameterStructures_to_js x652)|])
                   | None -> ());
                  x651))
    let (get_parameterStructures : 'P1 t -> _ParameterStructures) =
      fun (x654 : 'P1 t) ->
        _ParameterStructures_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x654) "parameterStructures")
    let (cast : 'P1 t -> _AbstractMessageSignature) =
      fun (x656 : 'P1 t) ->
        _AbstractMessageSignature_of_js (t_to_js Obj.magic x656)
  end
module NotificationType2 =
  struct
    type ('P1, 'P2) t = ('P1, 'P2) _NotificationType2
    let rec t_of_js :
      'P1 'P2 . (Ojs.t -> 'P1) -> (Ojs.t -> 'P2) -> Ojs.t -> ('P1, 'P2) t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (x661 : Ojs.t) ->
            _NotificationType2_of_js __P1_of_js __P2_of_js x661
    and t_to_js :
      'P1 'P2 . ('P1 -> Ojs.t) -> ('P2 -> Ojs.t) -> ('P1, 'P2) t -> Ojs.t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (x658 : (__P1, __P2) _NotificationType2) ->
            _NotificationType2_to_js __P1_to_js __P2_to_js x658
    let (get__ : ('P1, 'P2) t -> ('P1 * 'P2 * _EM) or_undefined) =
      fun (x664 : ('P1, 'P2) t) ->
        or_undefined_of_js
          (fun (x667 : Ojs.t) ->
             let x668 = x667 in
             ((Obj.magic (Ojs.array_get x668 0)),
               (Obj.magic (Ojs.array_get x668 1)),
               (_EM_of_js (Ojs.array_get x668 2))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic x664) "_")
    let (create : method_:string -> ('P1, 'P2) t) =
      fun ~method_:(x669 : string) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType2")
             [|(Ojs.string_to_js x669)|])
    let (cast : ('P1, 'P2) t -> _AbstractMessageSignature) =
      fun (x672 : ('P1, 'P2) t) ->
        _AbstractMessageSignature_of_js (t_to_js Obj.magic Obj.magic x672)
  end
module NotificationType3 =
  struct
    type ('P1, 'P2, 'P3) t = ('P1, 'P2, 'P3) _NotificationType3
    let rec t_of_js :
      'P1 'P2 'P3 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) -> (Ojs.t -> 'P3) -> Ojs.t -> ('P1, 'P2, 'P3) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (x679 : Ojs.t) ->
              _NotificationType3_of_js __P1_of_js __P2_of_js __P3_of_js x679
    and t_to_js :
      'P1 'P2 'P3 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) -> ('P3 -> Ojs.t) -> ('P1, 'P2, 'P3) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (x675 : (__P1, __P2, __P3) _NotificationType3) ->
              _NotificationType3_to_js __P1_to_js __P2_to_js __P3_to_js x675
    let (get__ : ('P1, 'P2, 'P3) t -> ('P1 * 'P2 * 'P3 * _EM) or_undefined) =
      fun (x683 : ('P1, 'P2, 'P3) t) ->
        or_undefined_of_js
          (fun (x687 : Ojs.t) ->
             let x688 = x687 in
             ((Obj.magic (Ojs.array_get x688 0)),
               (Obj.magic (Ojs.array_get x688 1)),
               (Obj.magic (Ojs.array_get x688 2)),
               (_EM_of_js (Ojs.array_get x688 3))))
          (Ojs.get_prop_ascii (t_to_js Obj.magic Obj.magic Obj.magic x683)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3) t) =
      fun ~method_:(x689 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType3")
             [|(Ojs.string_to_js x689)|])
    let (cast : ('P1, 'P2, 'P3) t -> _AbstractMessageSignature) =
      fun (x693 : ('P1, 'P2, 'P3) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic x693)
  end
module NotificationType4 =
  struct
    type ('P1, 'P2, 'P3, 'P4) t = ('P1, 'P2, 'P3, 'P4) _NotificationType4
    let rec t_of_js :
      'P1 'P2 'P3 'P4 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (x702 : Ojs.t) ->
                _NotificationType4_of_js __P1_of_js __P2_of_js __P3_of_js
                  __P4_of_js x702
    and t_to_js :
      'P1 'P2 'P3 'P4 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (x697 : (__P1, __P2, __P3, __P4) _NotificationType4) ->
                _NotificationType4_to_js __P1_to_js __P2_to_js __P3_to_js
                  __P4_to_js x697
    let (get__ :
      ('P1, 'P2, 'P3, 'P4) t -> ('P1 * 'P2 * 'P3 * 'P4 * _EM) or_undefined) =
      fun (x707 : ('P1, 'P2, 'P3, 'P4) t) ->
        or_undefined_of_js
          (fun (x712 : Ojs.t) ->
             let x713 = x712 in
             ((Obj.magic (Ojs.array_get x713 0)),
               (Obj.magic (Ojs.array_get x713 1)),
               (Obj.magic (Ojs.array_get x713 2)),
               (Obj.magic (Ojs.array_get x713 3)),
               (_EM_of_js (Ojs.array_get x713 4))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x707) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4) t) =
      fun ~method_:(x714 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType4")
             [|(Ojs.string_to_js x714)|])
    let (cast : ('P1, 'P2, 'P3, 'P4) t -> _AbstractMessageSignature) =
      fun (x719 : ('P1, 'P2, 'P3, 'P4) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x719)
  end
module NotificationType5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5) t =
      ('P1, 'P2, 'P3, 'P4, 'P5) _NotificationType5
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (x730 : Ojs.t) ->
                  _NotificationType5_of_js __P1_of_js __P2_of_js __P3_of_js
                    __P4_of_js __P5_of_js x730
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun
                  (x724 : (__P1, __P2, __P3, __P4, __P5) _NotificationType5)
                  ->
                  _NotificationType5_to_js __P1_to_js __P2_to_js __P3_to_js
                    __P4_to_js __P5_to_js x724
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * _EM) or_undefined)
      =
      fun (x736 : ('P1, 'P2, 'P3, 'P4, 'P5) t) ->
        or_undefined_of_js
          (fun (x742 : Ojs.t) ->
             let x743 = x742 in
             ((Obj.magic (Ojs.array_get x743 0)),
               (Obj.magic (Ojs.array_get x743 1)),
               (Obj.magic (Ojs.array_get x743 2)),
               (Obj.magic (Ojs.array_get x743 3)),
               (Obj.magic (Ojs.array_get x743 4)),
               (_EM_of_js (Ojs.array_get x743 5))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x736)
             "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5) t) =
      fun ~method_:(x744 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType5")
             [|(Ojs.string_to_js x744)|])
    let (cast : ('P1, 'P2, 'P3, 'P4, 'P5) t -> _AbstractMessageSignature) =
      fun (x750 : ('P1, 'P2, 'P3, 'P4, 'P5) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x750)
  end
module NotificationType6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) _NotificationType6
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (x763 : Ojs.t) ->
                    _NotificationType6_of_js __P1_of_js __P2_of_js __P3_of_js
                      __P4_of_js __P5_of_js __P6_of_js x763
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun
                    (x756 :
                      (__P1, __P2, __P3, __P4, __P5, __P6) _NotificationType6)
                    ->
                    _NotificationType6_to_js __P1_to_js __P2_to_js __P3_to_js
                      __P4_to_js __P5_to_js __P6_to_js x756
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * _EM) or_undefined)
      =
      fun (x770 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) ->
        or_undefined_of_js
          (fun (x777 : Ojs.t) ->
             let x778 = x777 in
             ((Obj.magic (Ojs.array_get x778 0)),
               (Obj.magic (Ojs.array_get x778 1)),
               (Obj.magic (Ojs.array_get x778 2)),
               (Obj.magic (Ojs.array_get x778 3)),
               (Obj.magic (Ojs.array_get x778 4)),
               (Obj.magic (Ojs.array_get x778 5)),
               (_EM_of_js (Ojs.array_get x778 6))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic x770) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) =
      fun ~method_:(x779 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType6")
             [|(Ojs.string_to_js x779)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t -> _AbstractMessageSignature) =
      fun (x786 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic x786)
  end
module NotificationType7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) _NotificationType7
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (x801 : Ojs.t) ->
                      _NotificationType7_of_js __P1_of_js __P2_of_js
                        __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                        __P7_of_js x801
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun
                      (x793 :
                        (__P1, __P2, __P3, __P4, __P5, __P6, __P7)
                          _NotificationType7)
                      ->
                      _NotificationType7_to_js __P1_to_js __P2_to_js
                        __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                        __P7_to_js x793
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * _EM) or_undefined)
      =
      fun (x809 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) ->
        or_undefined_of_js
          (fun (x817 : Ojs.t) ->
             let x818 = x817 in
             ((Obj.magic (Ojs.array_get x818 0)),
               (Obj.magic (Ojs.array_get x818 1)),
               (Obj.magic (Ojs.array_get x818 2)),
               (Obj.magic (Ojs.array_get x818 3)),
               (Obj.magic (Ojs.array_get x818 4)),
               (Obj.magic (Ojs.array_get x818 5)),
               (Obj.magic (Ojs.array_get x818 6)),
               (_EM_of_js (Ojs.array_get x818 7))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic x809) "_")
    let (create : method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) =
      fun ~method_:(x819 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType7")
             [|(Ojs.string_to_js x819)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t -> _AbstractMessageSignature) =
      fun (x827 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic x827)
  end
module NotificationType8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) _NotificationType8
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (x844 : Ojs.t) ->
                        _NotificationType8_of_js __P1_of_js __P2_of_js
                          __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                          __P7_of_js __P8_of_js x844
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun
                        (x835 :
                          (__P1, __P2, __P3, __P4, __P5, __P6, __P7, 
                            __P8) _NotificationType8)
                        ->
                        _NotificationType8_to_js __P1_to_js __P2_to_js
                          __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                          __P7_to_js __P8_to_js x835
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * _EM) or_undefined)
      =
      fun (x853 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) ->
        or_undefined_of_js
          (fun (x862 : Ojs.t) ->
             let x863 = x862 in
             ((Obj.magic (Ojs.array_get x863 0)),
               (Obj.magic (Ojs.array_get x863 1)),
               (Obj.magic (Ojs.array_get x863 2)),
               (Obj.magic (Ojs.array_get x863 3)),
               (Obj.magic (Ojs.array_get x863 4)),
               (Obj.magic (Ojs.array_get x863 5)),
               (Obj.magic (Ojs.array_get x863 6)),
               (Obj.magic (Ojs.array_get x863 7)),
               (_EM_of_js (Ojs.array_get x863 8))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic x853) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) =
      fun ~method_:(x864 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType8")
             [|(Ojs.string_to_js x864)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t -> _AbstractMessageSignature)
      =
      fun (x873 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic x873)
  end
module NotificationType9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t =
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) _NotificationType9
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (x892 : Ojs.t) ->
                          _NotificationType9_of_js __P1_of_js __P2_of_js
                            __P3_of_js __P4_of_js __P5_of_js __P6_of_js
                            __P7_of_js __P8_of_js __P9_of_js x892
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun
                          (x882 :
                            (__P1, __P2, __P3, __P4, __P5, __P6, __P7, 
                              __P8, __P9) _NotificationType9)
                          ->
                          _NotificationType9_to_js __P1_to_js __P2_to_js
                            __P3_to_js __P4_to_js __P5_to_js __P6_to_js
                            __P7_to_js __P8_to_js __P9_to_js x882
    let (get__ :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
        ('P1 * 'P2 * 'P3 * 'P4 * 'P5 * 'P6 * 'P7 * 'P8 * 'P9 * _EM)
          or_undefined)
      =
      fun (x902 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) ->
        or_undefined_of_js
          (fun (x912 : Ojs.t) ->
             let x913 = x912 in
             ((Obj.magic (Ojs.array_get x913 0)),
               (Obj.magic (Ojs.array_get x913 1)),
               (Obj.magic (Ojs.array_get x913 2)),
               (Obj.magic (Ojs.array_get x913 3)),
               (Obj.magic (Ojs.array_get x913 4)),
               (Obj.magic (Ojs.array_get x913 5)),
               (Obj.magic (Ojs.array_get x913 6)),
               (Obj.magic (Ojs.array_get x913 7)),
               (Obj.magic (Ojs.array_get x913 8)),
               (_EM_of_js (Ojs.array_get x913 9))))
          (Ojs.get_prop_ascii
             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                Obj.magic Obj.magic Obj.magic Obj.magic x902) "_")
    let (create :
      method_:string -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) =
      fun ~method_:(x914 : string) ->
        t_of_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
          Obj.magic Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationType9")
             [|(Ojs.string_to_js x914)|])
    let (cast :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
        _AbstractMessageSignature)
      =
      fun (x924 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) ->
        _AbstractMessageSignature_of_js
          (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
             Obj.magic Obj.magic Obj.magic Obj.magic x924)
  end
let (isRequestMessage : message:_Message or_undefined -> bool) =
  fun ~message:(x934 : _Message or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isRequestMessage"
         [|(or_undefined_to_js _Message_to_js x934)|])
let (isNotificationMessage : message:_Message or_undefined -> bool) =
  fun ~message:(x936 : _Message or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isNotificationMessage"
         [|(or_undefined_to_js _Message_to_js x936)|])
let (isResponseMessage : message:_Message or_undefined -> bool) =
  fun ~message:(x938 : _Message or_undefined) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isResponseMessage"
         [|(or_undefined_to_js _Message_to_js x938)|])
