[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
module Internal =
  struct module Types = struct open AnonymousInterfaces end end
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (asReadableStream :
      t ->
        stream:Node.ReadableStream.t ->
          Vscode_jsonrpc_ral.RAL.ReadableStream.t)
      =
      fun (x4 : t) ->
        fun ~stream:(x3 : Node.ReadableStream.t) ->
          Vscode_jsonrpc_ral.RAL.ReadableStream.t_of_js
            (Ojs.call (t_to_js x4) "asReadableStream"
               [|(Node.ReadableStream.t_to_js x3)|])
    let (asWritableStream :
      t ->
        stream:Node.WritableStream.t ->
          Vscode_jsonrpc_ral.RAL.WritableStream.t)
      =
      fun (x6 : t) ->
        fun ~stream:(x5 : Node.WritableStream.t) ->
          Vscode_jsonrpc_ral.RAL.WritableStream.t_of_js
            (Ojs.call (t_to_js x6) "asWritableStream"
               [|(Node.WritableStream.t_to_js x5)|])
  end
module RIL =
  struct
    type t = _RIL
    let rec t_of_js : Ojs.t -> t = fun (x8 : Ojs.t) -> _RIL_of_js x8
    and t_to_js : t -> Ojs.t = fun (x7 : _RIL) -> _RIL_to_js x7
    let (get_stream : t -> AnonymousInterface0.t) =
      fun (x9 : t) ->
        AnonymousInterface0.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9) "stream")
    let (cast : t -> Vscode_jsonrpc_ral.RAL.t) =
      fun (x10 : t) -> Vscode_jsonrpc_ral.RAL.t_of_js (t_to_js x10)
    let (install : unit -> unit) =
      fun () ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RIL") "install" [||])
  end
let (ril : unit -> _RIL) =
  fun () -> _RIL_of_js (Ojs.call Ojs.global "RIL" [||])
