[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Vscode_jsonrpc_messages
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (cancel_undispatched :
      t ->
        message:Message.t ->
          next:(message:Message.t -> ResponseMessage.t or_undefined) ->
            ResponseMessage.t or_undefined)
      =
      fun (x7 : t) ->
        fun ~message:(x3 : Message.t) ->
          fun
            ~next:(x4 : message:Message.t -> ResponseMessage.t or_undefined)
            ->
            or_undefined_of_js ResponseMessage.t_of_js
              (Ojs.call (t_to_js x7) "cancelUndispatched"
                 [|(Message.t_to_js x3);(Ojs.fun_to_js 1
                                           (fun (x5 : Ojs.t) ->
                                              or_undefined_to_js
                                                ResponseMessage.t_to_js
                                                (x4
                                                   ~message:(Message.t_of_js
                                                               x5))))|])
  end
module ProgressToken =
  struct
    type t = string or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x11 : Ojs.t) -> or_number_of_js Ojs.string_of_js x11
    and t_to_js : t -> Ojs.t =
      fun (x9 : string or_number) -> or_number_to_js Ojs.string_to_js x9
  end
module ProgressParams =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x14 : Ojs.t) -> x14
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x13 : Ojs.t) -> x13
    let (get_token : 'T t -> ProgressToken.t) =
      fun (x15 : 'T t) ->
        ProgressToken.t_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x15) "token")
    let (set_token : 'T t -> ProgressToken.t -> unit) =
      fun (x17 : 'T t) ->
        fun (x18 : ProgressToken.t) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x17) "token"
            (ProgressToken.t_to_js x18)
    let (get_value : 'T t -> 'T) =
      fun (x20 : 'T t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x20) "value")
    let (set_value : 'T t -> 'T -> unit) =
      fun (x22 : 'T t) ->
        fun (x23 : 'T) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x22) "value" (Obj.magic x23)
  end
module ProgressType =
  struct
    type 'PR t = Ojs.t
    let rec t_of_js : 'PR . (Ojs.t -> 'PR) -> Ojs.t -> 'PR t = fun (type
      __PR) -> fun (__PR_of_js : Ojs.t -> __PR) -> fun (x26 : Ojs.t) -> x26
    and t_to_js : 'PR . ('PR -> Ojs.t) -> 'PR t -> Ojs.t = fun (type __PR) ->
      fun (__PR_to_js : __PR -> Ojs.t) -> fun (x25 : Ojs.t) -> x25
    let (get___ : 'PR t -> ('PR * EM.t)) =
      fun (x27 : 'PR t) ->
        let x29 = Ojs.get_prop_ascii (t_to_js Obj.magic x27) "__" in
        ((Obj.magic (Ojs.array_get x29 0)),
          (EM.t_of_js (Ojs.array_get x29 1)))
    let (get__pr : 'PR t -> 'PR) =
      fun (x30 : 'PR t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x30) "_pr")
    let (create : unit -> 'PR t) =
      fun () ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ProgressType") [||])
  end
module HandlerResult =
  struct
    type ('R, 'E) t =
      ('R, 'E ResponseError.t, 'R Promise.t,
        ('R, 'E ResponseError.t) union2 Promise.t,
        'E ResponseError.t Promise.t) union5
    let rec t_of_js :
      'R 'E . (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('R, 'E) t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__E_of_js : Ojs.t -> __E) ->
          fun (x47 : Ojs.t) ->
            union5_of_js __R_of_js
              (fun (x49 : Ojs.t) -> ResponseError.t_of_js __E_of_js x49)
              (fun (x51 : Ojs.t) -> Promise.t_of_js __R_of_js x51)
              (fun (x53 : Ojs.t) ->
                 Promise.t_of_js
                   (fun (x54 : Ojs.t) ->
                      union2_of_js __R_of_js
                        (fun (x56 : Ojs.t) ->
                           ResponseError.t_of_js __E_of_js x56) x54) x53)
              (fun (x58 : Ojs.t) ->
                 Promise.t_of_js
                   (fun (x59 : Ojs.t) -> ResponseError.t_of_js __E_of_js x59)
                   x58) x47
    and t_to_js :
      'R 'E . ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('R, 'E) t -> Ojs.t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__E_to_js : __E -> Ojs.t) ->
          fun
            (x33 :
              (__R, __E ResponseError.t, __R Promise.t,
                (__R, __E ResponseError.t) union2 Promise.t,
                __E ResponseError.t Promise.t) union5)
            ->
            union5_to_js __R_to_js
              (fun (x35 : __E ResponseError.t) ->
                 ResponseError.t_to_js __E_to_js x35)
              (fun (x37 : __R Promise.t) -> Promise.t_to_js __R_to_js x37)
              (fun (x39 : (__R, __E ResponseError.t) union2 Promise.t) ->
                 Promise.t_to_js
                   (fun (x40 : (__R, __E ResponseError.t) union2) ->
                      union2_to_js __R_to_js
                        (fun (x42 : __E ResponseError.t) ->
                           ResponseError.t_to_js __E_to_js x42) x40) x39)
              (fun (x44 : __E ResponseError.t Promise.t) ->
                 Promise.t_to_js
                   (fun (x45 : __E ResponseError.t) ->
                      ResponseError.t_to_js __E_to_js x45) x44) x33
  end
module StarRequestHandler =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x62 : Ojs.t) -> x62
    and t_to_js : t -> Ojs.t = fun (x61 : Ojs.t) -> x61
    let (apply :
      t ->
        method_:string ->
          params:(untyped_object, any) or_array or_undefined ->
            token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
              (any, any) HandlerResult.t)
      =
      fun (x69 : t) ->
        fun ~method_:(x63 : string) ->
          fun ~params:(x64 : (untyped_object, any) or_array or_undefined) ->
            fun
              ~token:(x68 : Vscode_jsonrpc_cancellation.CancellationToken.t)
              ->
              HandlerResult.t_of_js any_of_js any_of_js
                (Ojs.apply (t_to_js x69)
                   [|(Ojs.string_to_js x63);(or_undefined_to_js
                                               (fun
                                                  (x65 :
                                                    (untyped_object, 
                                                      any) or_array)
                                                  ->
                                                  or_array_to_js
                                                    untyped_object_to_js
                                                    any_to_js x65) x64);(
                     Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                       x68)|])
  end
module GenericRequestHandler =
  struct
    type ('R, 'E) t = Ojs.t
    let rec t_of_js :
      'R 'E . (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('R, 'E) t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__E_of_js : Ojs.t -> __E) -> fun (x73 : Ojs.t) -> x73
    and t_to_js :
      'R 'E . ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('R, 'E) t -> Ojs.t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__E_to_js : __E -> Ojs.t) -> fun (x72 : Ojs.t) -> x72
    let (apply : ('R, 'E) t -> params:any list -> ('R, 'E) HandlerResult.t) =
      fun (x77 : ('R, 'E) t) ->
        fun ~params:(x74 : any list) ->
          HandlerResult.t_of_js Obj.magic Obj.magic
            (Ojs.call (t_to_js Obj.magic Obj.magic x77) "apply"
               [|Ojs.null;((let x75 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x76 : any) ->
                                 ignore
                                   (Ojs.call x75 "push" [|(any_to_js x76)|]))
                              x74;
                            x75))|])
  end
module RequestHandler0 =
  struct
    type ('R, 'E) t = Ojs.t
    let rec t_of_js :
      'R 'E . (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('R, 'E) t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (__E_of_js : Ojs.t -> __E) -> fun (x83 : Ojs.t) -> x83
    and t_to_js :
      'R 'E . ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('R, 'E) t -> Ojs.t = fun
      (type __R) -> fun (type __E) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (__E_to_js : __E -> Ojs.t) -> fun (x82 : Ojs.t) -> x82
    let (apply :
      ('R, 'E) t ->
        token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
          ('R, 'E) HandlerResult.t)
      =
      fun (x85 : ('R, 'E) t) ->
        fun ~token:(x84 : Vscode_jsonrpc_cancellation.CancellationToken.t) ->
          HandlerResult.t_of_js Obj.magic Obj.magic
            (Ojs.apply (t_to_js Obj.magic Obj.magic x85)
               [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js x84)|])
  end
module RequestHandler =
  struct
    type ('P, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P 'R 'E .
        (Ojs.t -> 'P) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P, 'R, 'E) t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_of_js : Ojs.t -> __P) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) -> fun (x91 : Ojs.t) -> x91
    and t_to_js :
      'P 'R 'E .
        ('P -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P, 'R, 'E) t -> Ojs.t
      = fun (type __P) -> fun (type __R) -> fun (type __E) ->
      fun (__P_to_js : __P -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) -> fun (x90 : Ojs.t) -> x90
    let (apply :
      ('P, 'R, 'E) t ->
        params:'P ->
          token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
            ('R, 'E) HandlerResult.t)
      =
      fun (x94 : ('P, 'R, 'E) t) ->
        fun ~params:(x92 : 'P) ->
          fun ~token:(x93 : Vscode_jsonrpc_cancellation.CancellationToken.t)
            ->
            HandlerResult.t_of_js Obj.magic Obj.magic
              (Ojs.apply (t_to_js Obj.magic Obj.magic Obj.magic x94)
                 [|(Obj.magic x92);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                      x93)|])
  end
module RequestHandler1 =
  struct
    type ('P1, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'R, 'E) t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (__E_of_js : Ojs.t -> __E) -> fun (x101 : Ojs.t) -> x101
    and t_to_js :
      'P1 'R 'E .
        ('P1 -> Ojs.t) ->
          ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (__E_to_js : __E -> Ojs.t) -> fun (x100 : Ojs.t) -> x100
    let (apply :
      ('P1, 'R, 'E) t ->
        p1:'P1 ->
          token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
            ('R, 'E) HandlerResult.t)
      =
      fun (x104 : ('P1, 'R, 'E) t) ->
        fun ~p1:(x102 : 'P1) ->
          fun ~token:(x103 : Vscode_jsonrpc_cancellation.CancellationToken.t)
            ->
            HandlerResult.t_of_js Obj.magic Obj.magic
              (Ojs.apply (t_to_js Obj.magic Obj.magic Obj.magic x104)
                 [|(Obj.magic x102);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                       x103)|])
  end
module RequestHandler2 =
  struct
    type ('P1, 'P2, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'R) -> (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__R_of_js : Ojs.t -> __R) ->
            fun (__E_of_js : Ojs.t -> __E) -> fun (x111 : Ojs.t) -> x111
    and t_to_js :
      'P1 'P2 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('R -> Ojs.t) -> ('E -> Ojs.t) -> ('P1, 'P2, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __R) -> fun (type
      __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__R_to_js : __R -> Ojs.t) ->
            fun (__E_to_js : __E -> Ojs.t) -> fun (x110 : Ojs.t) -> x110
    let (apply :
      ('P1, 'P2, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
              ('R, 'E) HandlerResult.t)
      =
      fun (x115 : ('P1, 'P2, 'R, 'E) t) ->
        fun ~p1:(x112 : 'P1) ->
          fun ~p2:(x113 : 'P2) ->
            fun
              ~token:(x114 : Vscode_jsonrpc_cancellation.CancellationToken.t)
              ->
              HandlerResult.t_of_js Obj.magic Obj.magic
                (Ojs.apply
                   (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x115)
                   [|(Obj.magic x112);(Obj.magic x113);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                          x114)|])
  end
module RequestHandler3 =
  struct
    type ('P1, 'P2, 'P3, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'R) ->
                (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__R_of_js : Ojs.t -> __R) ->
              fun (__E_of_js : Ojs.t -> __E) -> fun (x123 : Ojs.t) -> x123
    and t_to_js :
      'P1 'P2 'P3 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('R -> Ojs.t) ->
                ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) ->
              fun (__E_to_js : __E -> Ojs.t) -> fun (x122 : Ojs.t) -> x122
    let (apply :
      ('P1, 'P2, 'P3, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                ('R, 'E) HandlerResult.t)
      =
      fun (x128 : ('P1, 'P2, 'P3, 'R, 'E) t) ->
        fun ~p1:(x124 : 'P1) ->
          fun ~p2:(x125 : 'P2) ->
            fun ~p3:(x126 : 'P3) ->
              fun
                ~token:(x127 :
                         Vscode_jsonrpc_cancellation.CancellationToken.t)
                ->
                HandlerResult.t_of_js Obj.magic Obj.magic
                  (Ojs.apply
                     (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                        Obj.magic x128)
                     [|(Obj.magic x124);(Obj.magic x125);(Obj.magic x126);(
                       Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                         x127)|])
  end
module RequestHandler4 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'R) ->
                  (Ojs.t -> 'E) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__R_of_js : Ojs.t -> __R) ->
                fun (__E_of_js : Ojs.t -> __E) -> fun (x137 : Ojs.t) -> x137
    and t_to_js :
      'P1 'P2 'P3 'P4 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('R -> Ojs.t) ->
                  ('E -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) ->
                fun (__E_to_js : __E -> Ojs.t) -> fun (x136 : Ojs.t) -> x136
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              p4:'P4 ->
                token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                  ('R, 'E) HandlerResult.t)
      =
      fun (x143 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) t) ->
        fun ~p1:(x138 : 'P1) ->
          fun ~p2:(x139 : 'P2) ->
            fun ~p3:(x140 : 'P3) ->
              fun ~p4:(x141 : 'P4) ->
                fun
                  ~token:(x142 :
                           Vscode_jsonrpc_cancellation.CancellationToken.t)
                  ->
                  HandlerResult.t_of_js Obj.magic Obj.magic
                    (Ojs.apply
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                          Obj.magic Obj.magic x143)
                       [|(Obj.magic x138);(Obj.magic x139);(Obj.magic x140);(
                         Obj.magic x141);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                            x142)|])
  end
module RequestHandler5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'R) ->
                    (Ojs.t -> 'E) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (__E_of_js : Ojs.t -> __E) ->
                    fun (x153 : Ojs.t) -> x153
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('E -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (__E_to_js : __E -> Ojs.t) ->
                    fun (x152 : Ojs.t) -> x152
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              p4:'P4 ->
                p5:'P5 ->
                  token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                    ('R, 'E) HandlerResult.t)
      =
      fun (x160 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) t) ->
        fun ~p1:(x154 : 'P1) ->
          fun ~p2:(x155 : 'P2) ->
            fun ~p3:(x156 : 'P3) ->
              fun ~p4:(x157 : 'P4) ->
                fun ~p5:(x158 : 'P5) ->
                  fun
                    ~token:(x159 :
                             Vscode_jsonrpc_cancellation.CancellationToken.t)
                    ->
                    HandlerResult.t_of_js Obj.magic Obj.magic
                      (Ojs.apply
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x160)
                         [|(Obj.magic x154);(Obj.magic x155);(Obj.magic x156);(
                           Obj.magic x157);(Obj.magic x158);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                               x159)|])
  end
module RequestHandler6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'R) ->
                      (Ojs.t -> 'E) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (__E_of_js : Ojs.t -> __E) ->
                      fun (x171 : Ojs.t) -> x171
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('E -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __R) -> fun
      (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (__E_to_js : __E -> Ojs.t) ->
                      fun (x170 : Ojs.t) -> x170
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              p4:'P4 ->
                p5:'P5 ->
                  p6:'P6 ->
                    token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                      ('R, 'E) HandlerResult.t)
      =
      fun (x179 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) t) ->
        fun ~p1:(x172 : 'P1) ->
          fun ~p2:(x173 : 'P2) ->
            fun ~p3:(x174 : 'P3) ->
              fun ~p4:(x175 : 'P4) ->
                fun ~p5:(x176 : 'P5) ->
                  fun ~p6:(x177 : 'P6) ->
                    fun
                      ~token:(x178 :
                               Vscode_jsonrpc_cancellation.CancellationToken.t)
                      ->
                      HandlerResult.t_of_js Obj.magic Obj.magic
                        (Ojs.apply
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x179)
                           [|(Obj.magic x172);(Obj.magic x173);(Obj.magic
                                                                  x174);(
                             Obj.magic x175);(Obj.magic x176);(Obj.magic x177);(
                             Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                               x178)|])
  end
module RequestHandler7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'R) ->
                        (Ojs.t -> 'E) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (__E_of_js : Ojs.t -> __E) ->
                        fun (x191 : Ojs.t) -> x191
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('E -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (__E_to_js : __E -> Ojs.t) ->
                        fun (x190 : Ojs.t) -> x190
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              p4:'P4 ->
                p5:'P5 ->
                  p6:'P6 ->
                    p7:'P7 ->
                      token:Vscode_jsonrpc_cancellation.CancellationToken.t
                        -> ('R, 'E) HandlerResult.t)
      =
      fun (x200 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) t) ->
        fun ~p1:(x192 : 'P1) ->
          fun ~p2:(x193 : 'P2) ->
            fun ~p3:(x194 : 'P3) ->
              fun ~p4:(x195 : 'P4) ->
                fun ~p5:(x196 : 'P5) ->
                  fun ~p6:(x197 : 'P6) ->
                    fun ~p7:(x198 : 'P7) ->
                      fun
                        ~token:(x199 :
                                 Vscode_jsonrpc_cancellation.CancellationToken.t)
                        ->
                        HandlerResult.t_of_js Obj.magic Obj.magic
                          (Ojs.apply
                             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                                Obj.magic Obj.magic Obj.magic Obj.magic
                                Obj.magic x200)
                             [|(Obj.magic x192);(Obj.magic x193);(Obj.magic
                                                                    x194);(
                               Obj.magic x195);(Obj.magic x196);(Obj.magic
                                                                   x197);(
                               Obj.magic x198);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                  x199)|])
  end
module RequestHandler8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'R) ->
                          (Ojs.t -> 'E) ->
                            Ojs.t ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__R_of_js : Ojs.t -> __R) ->
                        fun (__E_of_js : Ojs.t -> __E) ->
                          fun (x213 : Ojs.t) -> x213
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('E -> Ojs.t) ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                              'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__R_to_js : __R -> Ojs.t) ->
                        fun (__E_to_js : __E -> Ojs.t) ->
                          fun (x212 : Ojs.t) -> x212
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              p4:'P4 ->
                p5:'P5 ->
                  p6:'P6 ->
                    p7:'P7 ->
                      p8:'P8 ->
                        token:Vscode_jsonrpc_cancellation.CancellationToken.t
                          -> ('R, 'E) HandlerResult.t)
      =
      fun (x223 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) t) ->
        fun ~p1:(x214 : 'P1) ->
          fun ~p2:(x215 : 'P2) ->
            fun ~p3:(x216 : 'P3) ->
              fun ~p4:(x217 : 'P4) ->
                fun ~p5:(x218 : 'P5) ->
                  fun ~p6:(x219 : 'P6) ->
                    fun ~p7:(x220 : 'P7) ->
                      fun ~p8:(x221 : 'P8) ->
                        fun
                          ~token:(x222 :
                                   Vscode_jsonrpc_cancellation.CancellationToken.t)
                          ->
                          HandlerResult.t_of_js Obj.magic Obj.magic
                            (Ojs.apply
                               (t_to_js Obj.magic Obj.magic Obj.magic
                                  Obj.magic Obj.magic Obj.magic Obj.magic
                                  Obj.magic Obj.magic Obj.magic x223)
                               [|(Obj.magic x214);(Obj.magic x215);(Obj.magic
                                                                    x216);(
                                 Obj.magic x217);(Obj.magic x218);(Obj.magic
                                                                    x219);(
                                 Obj.magic x220);(Obj.magic x221);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                                    x222)|])
  end
module RequestHandler9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          (Ojs.t -> 'R) ->
                            (Ojs.t -> 'E) ->
                              Ojs.t ->
                                ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                  'P9, 'R, 'E) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (__E_of_js : Ojs.t -> __E) ->
                            fun (x237 : Ojs.t) -> x237
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 'R 'E .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('E -> Ojs.t) ->
                              ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 
                                'P9, 'R, 'E) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) -> fun (type __R) -> fun (type __E) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (__E_to_js : __E -> Ojs.t) ->
                            fun (x236 : Ojs.t) -> x236
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              p4:'P4 ->
                p5:'P5 ->
                  p6:'P6 ->
                    p7:'P7 ->
                      p8:'P8 ->
                        p9:'P9 ->
                          token:Vscode_jsonrpc_cancellation.CancellationToken.t
                            -> ('R, 'E) HandlerResult.t)
      =
      fun (x248 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E) t) ->
        fun ~p1:(x238 : 'P1) ->
          fun ~p2:(x239 : 'P2) ->
            fun ~p3:(x240 : 'P3) ->
              fun ~p4:(x241 : 'P4) ->
                fun ~p5:(x242 : 'P5) ->
                  fun ~p6:(x243 : 'P6) ->
                    fun ~p7:(x244 : 'P7) ->
                      fun ~p8:(x245 : 'P8) ->
                        fun ~p9:(x246 : 'P9) ->
                          fun
                            ~token:(x247 :
                                     Vscode_jsonrpc_cancellation.CancellationToken.t)
                            ->
                            HandlerResult.t_of_js Obj.magic Obj.magic
                              (Ojs.apply
                                 (t_to_js Obj.magic Obj.magic Obj.magic
                                    Obj.magic Obj.magic Obj.magic Obj.magic
                                    Obj.magic Obj.magic Obj.magic Obj.magic
                                    x248)
                                 [|(Obj.magic x238);(Obj.magic x239);(
                                   Obj.magic x240);(Obj.magic x241);(
                                   Obj.magic x242);(Obj.magic x243);(
                                   Obj.magic x244);(Obj.magic x245);(
                                   Obj.magic x246);(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                      x247)|])
  end
module StarNotificationHandler =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x263 : Ojs.t) -> x263
    and t_to_js : t -> Ojs.t = fun (x262 : Ojs.t) -> x262
    let (apply :
      t ->
        method_:string ->
          params:(untyped_object, any) or_array or_undefined -> unit)
      =
      fun (x269 : t) ->
        fun ~method_:(x264 : string) ->
          fun ~params:(x265 : (untyped_object, any) or_array or_undefined) ->
            ignore
              (Ojs.apply (t_to_js x269)
                 [|(Ojs.string_to_js x264);(or_undefined_to_js
                                              (fun
                                                 (x266 :
                                                   (untyped_object, any)
                                                     or_array)
                                                 ->
                                                 or_array_to_js
                                                   untyped_object_to_js
                                                   any_to_js x266) x265)|])
  end
module GenericNotificationHandler =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x271 : Ojs.t) -> x271
    and t_to_js : t -> Ojs.t = fun (x270 : Ojs.t) -> x270
    let (apply : t -> params:any list -> unit) =
      fun (x275 : t) ->
        fun ~params:(x272 : any list) ->
          ignore
            (Ojs.call (t_to_js x275) "apply"
               [|Ojs.null;((let x273 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x274 : any) ->
                                 ignore
                                   (Ojs.call x273 "push" [|(any_to_js x274)|]))
                              x272;
                            x273))|])
  end
module NotificationHandler0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x277 : Ojs.t) -> x277
    and t_to_js : t -> Ojs.t = fun (x276 : Ojs.t) -> x276
    let (apply : t -> unit) =
      fun (x278 : t) -> ignore (Ojs.apply (t_to_js x278) [||])
  end
module NotificationHandler =
  struct
    type 'P t = Ojs.t
    let rec t_of_js : 'P . (Ojs.t -> 'P) -> Ojs.t -> 'P t = fun (type __P) ->
      fun (__P_of_js : Ojs.t -> __P) -> fun (x280 : Ojs.t) -> x280
    and t_to_js : 'P . ('P -> Ojs.t) -> 'P t -> Ojs.t = fun (type __P) ->
      fun (__P_to_js : __P -> Ojs.t) -> fun (x279 : Ojs.t) -> x279
    let (apply : 'P t -> params:'P -> unit) =
      fun (x282 : 'P t) ->
        fun ~params:(x281 : 'P) ->
          ignore (Ojs.apply (t_to_js Obj.magic x282) [|(Obj.magic x281)|])
  end
module NotificationHandler1 =
  struct
    type 'P1 t = Ojs.t
    let rec t_of_js : 'P1 . (Ojs.t -> 'P1) -> Ojs.t -> 'P1 t = fun (type
      __P1) -> fun (__P1_of_js : Ojs.t -> __P1) -> fun (x285 : Ojs.t) -> x285
    and t_to_js : 'P1 . ('P1 -> Ojs.t) -> 'P1 t -> Ojs.t = fun (type __P1) ->
      fun (__P1_to_js : __P1 -> Ojs.t) -> fun (x284 : Ojs.t) -> x284
    let (apply : 'P1 t -> p1:'P1 -> unit) =
      fun (x287 : 'P1 t) ->
        fun ~p1:(x286 : 'P1) ->
          ignore (Ojs.apply (t_to_js Obj.magic x287) [|(Obj.magic x286)|])
  end
module NotificationHandler2 =
  struct
    type ('P1, 'P2) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 . (Ojs.t -> 'P1) -> (Ojs.t -> 'P2) -> Ojs.t -> ('P1, 'P2) t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) -> fun (x290 : Ojs.t) -> x290
    and t_to_js :
      'P1 'P2 . ('P1 -> Ojs.t) -> ('P2 -> Ojs.t) -> ('P1, 'P2) t -> Ojs.t =
      fun (type __P1) -> fun (type __P2) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) -> fun (x289 : Ojs.t) -> x289
    let (apply : ('P1, 'P2) t -> p1:'P1 -> p2:'P2 -> unit) =
      fun (x293 : ('P1, 'P2) t) ->
        fun ~p1:(x291 : 'P1) ->
          fun ~p2:(x292 : 'P2) ->
            ignore
              (Ojs.apply (t_to_js Obj.magic Obj.magic x293)
                 [|(Obj.magic x291);(Obj.magic x292)|])
  end
module NotificationHandler3 =
  struct
    type ('P1, 'P2, 'P3) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) -> (Ojs.t -> 'P3) -> Ojs.t -> ('P1, 'P2, 'P3) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) -> fun (x297 : Ojs.t) -> x297
    and t_to_js :
      'P1 'P2 'P3 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) -> ('P3 -> Ojs.t) -> ('P1, 'P2, 'P3) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) -> fun (x296 : Ojs.t) -> x296
    let (apply : ('P1, 'P2, 'P3) t -> p1:'P1 -> p2:'P2 -> p3:'P3 -> unit) =
      fun (x301 : ('P1, 'P2, 'P3) t) ->
        fun ~p1:(x298 : 'P1) ->
          fun ~p2:(x299 : 'P2) ->
            fun ~p3:(x300 : 'P3) ->
              ignore
                (Ojs.apply (t_to_js Obj.magic Obj.magic Obj.magic x301)
                   [|(Obj.magic x298);(Obj.magic x299);(Obj.magic x300)|])
  end
module NotificationHandler4 =
  struct
    type ('P1, 'P2, 'P3, 'P4) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) -> fun (x306 : Ojs.t) -> x306
    and t_to_js :
      'P1 'P2 'P3 'P4 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) -> fun (x305 : Ojs.t) -> x305
    let (apply :
      ('P1, 'P2, 'P3, 'P4) t -> p1:'P1 -> p2:'P2 -> p3:'P3 -> p4:'P4 -> unit)
      =
      fun (x311 : ('P1, 'P2, 'P3, 'P4) t) ->
        fun ~p1:(x307 : 'P1) ->
          fun ~p2:(x308 : 'P2) ->
            fun ~p3:(x309 : 'P3) ->
              fun ~p4:(x310 : 'P4) ->
                ignore
                  (Ojs.apply
                     (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x311)
                     [|(Obj.magic x307);(Obj.magic x308);(Obj.magic x309);(
                       Obj.magic x310)|])
  end
module NotificationHandler5 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) -> fun (x317 : Ojs.t) -> x317
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) -> fun (x316 : Ojs.t) -> x316
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5) t ->
        p1:'P1 -> p2:'P2 -> p3:'P3 -> p4:'P4 -> p5:'P5 -> unit)
      =
      fun (x323 : ('P1, 'P2, 'P3, 'P4, 'P5) t) ->
        fun ~p1:(x318 : 'P1) ->
          fun ~p2:(x319 : 'P2) ->
            fun ~p3:(x320 : 'P3) ->
              fun ~p4:(x321 : 'P4) ->
                fun ~p5:(x322 : 'P5) ->
                  ignore
                    (Ojs.apply
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                          Obj.magic x323)
                       [|(Obj.magic x318);(Obj.magic x319);(Obj.magic x320);(
                         Obj.magic x321);(Obj.magic x322)|])
  end
module NotificationHandler6 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) -> Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (x330 : Ojs.t) -> x330
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (x329 : Ojs.t) -> x329
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t ->
        p1:'P1 -> p2:'P2 -> p3:'P3 -> p4:'P4 -> p5:'P5 -> p6:'P6 -> unit)
      =
      fun (x337 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) t) ->
        fun ~p1:(x331 : 'P1) ->
          fun ~p2:(x332 : 'P2) ->
            fun ~p3:(x333 : 'P3) ->
              fun ~p4:(x334 : 'P4) ->
                fun ~p5:(x335 : 'P5) ->
                  fun ~p6:(x336 : 'P6) ->
                    ignore
                      (Ojs.apply
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic Obj.magic x337)
                         [|(Obj.magic x331);(Obj.magic x332);(Obj.magic x333);(
                           Obj.magic x334);(Obj.magic x335);(Obj.magic x336)|])
  end
module NotificationHandler7 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (x345 : Ojs.t) -> x345
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (x344 : Ojs.t) -> x344
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t ->
        p1:'P1 ->
          p2:'P2 -> p3:'P3 -> p4:'P4 -> p5:'P5 -> p6:'P6 -> p7:'P7 -> unit)
      =
      fun (x353 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) t) ->
        fun ~p1:(x346 : 'P1) ->
          fun ~p2:(x347 : 'P2) ->
            fun ~p3:(x348 : 'P3) ->
              fun ~p4:(x349 : 'P4) ->
                fun ~p5:(x350 : 'P5) ->
                  fun ~p6:(x351 : 'P6) ->
                    fun ~p7:(x352 : 'P7) ->
                      ignore
                        (Ojs.apply
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic x353)
                           [|(Obj.magic x346);(Obj.magic x347);(Obj.magic
                                                                  x348);(
                             Obj.magic x349);(Obj.magic x350);(Obj.magic x351);(
                             Obj.magic x352)|])
  end
module NotificationHandler8 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        Ojs.t -> ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (x362 : Ojs.t) -> x362
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t -> Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (x361 : Ojs.t) -> x361
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 -> p4:'P4 -> p5:'P5 -> p6:'P6 -> p7:'P7 -> p8:'P8 -> unit)
      =
      fun (x371 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) t) ->
        fun ~p1:(x363 : 'P1) ->
          fun ~p2:(x364 : 'P2) ->
            fun ~p3:(x365 : 'P3) ->
              fun ~p4:(x366 : 'P4) ->
                fun ~p5:(x367 : 'P5) ->
                  fun ~p6:(x368 : 'P6) ->
                    fun ~p7:(x369 : 'P7) ->
                      fun ~p8:(x370 : 'P8) ->
                        ignore
                          (Ojs.apply
                             (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                                Obj.magic Obj.magic Obj.magic Obj.magic x371)
                             [|(Obj.magic x363);(Obj.magic x364);(Obj.magic
                                                                    x365);(
                               Obj.magic x366);(Obj.magic x367);(Obj.magic
                                                                   x368);(
                               Obj.magic x369);(Obj.magic x370)|])
  end
module NotificationHandler9 =
  struct
    type ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t = Ojs.t
    let rec t_of_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        (Ojs.t -> 'P1) ->
          (Ojs.t -> 'P2) ->
            (Ojs.t -> 'P3) ->
              (Ojs.t -> 'P4) ->
                (Ojs.t -> 'P5) ->
                  (Ojs.t -> 'P6) ->
                    (Ojs.t -> 'P7) ->
                      (Ojs.t -> 'P8) ->
                        (Ojs.t -> 'P9) ->
                          Ojs.t ->
                            ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_of_js : Ojs.t -> __P1) ->
        fun (__P2_of_js : Ojs.t -> __P2) ->
          fun (__P3_of_js : Ojs.t -> __P3) ->
            fun (__P4_of_js : Ojs.t -> __P4) ->
              fun (__P5_of_js : Ojs.t -> __P5) ->
                fun (__P6_of_js : Ojs.t -> __P6) ->
                  fun (__P7_of_js : Ojs.t -> __P7) ->
                    fun (__P8_of_js : Ojs.t -> __P8) ->
                      fun (__P9_of_js : Ojs.t -> __P9) ->
                        fun (x381 : Ojs.t) -> x381
    and t_to_js :
      'P1 'P2 'P3 'P4 'P5 'P6 'P7 'P8 'P9 .
        ('P1 -> Ojs.t) ->
          ('P2 -> Ojs.t) ->
            ('P3 -> Ojs.t) ->
              ('P4 -> Ojs.t) ->
                ('P5 -> Ojs.t) ->
                  ('P6 -> Ojs.t) ->
                    ('P7 -> Ojs.t) ->
                      ('P8 -> Ojs.t) ->
                        ('P9 -> Ojs.t) ->
                          ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
                            Ojs.t
      = fun (type __P1) -> fun (type __P2) -> fun (type __P3) -> fun (type
      __P4) -> fun (type __P5) -> fun (type __P6) -> fun (type __P7) -> fun
      (type __P8) -> fun (type __P9) ->
      fun (__P1_to_js : __P1 -> Ojs.t) ->
        fun (__P2_to_js : __P2 -> Ojs.t) ->
          fun (__P3_to_js : __P3 -> Ojs.t) ->
            fun (__P4_to_js : __P4 -> Ojs.t) ->
              fun (__P5_to_js : __P5 -> Ojs.t) ->
                fun (__P6_to_js : __P6 -> Ojs.t) ->
                  fun (__P7_to_js : __P7 -> Ojs.t) ->
                    fun (__P8_to_js : __P8 -> Ojs.t) ->
                      fun (__P9_to_js : __P9 -> Ojs.t) ->
                        fun (x380 : Ojs.t) -> x380
    let (apply :
      ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t ->
        p1:'P1 ->
          p2:'P2 ->
            p3:'P3 ->
              p4:'P4 ->
                p5:'P5 -> p6:'P6 -> p7:'P7 -> p8:'P8 -> p9:'P9 -> unit)
      =
      fun (x391 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9) t) ->
        fun ~p1:(x382 : 'P1) ->
          fun ~p2:(x383 : 'P2) ->
            fun ~p3:(x384 : 'P3) ->
              fun ~p4:(x385 : 'P4) ->
                fun ~p5:(x386 : 'P5) ->
                  fun ~p6:(x387 : 'P6) ->
                    fun ~p7:(x388 : 'P7) ->
                      fun ~p8:(x389 : 'P8) ->
                        fun ~p9:(x390 : 'P9) ->
                          ignore
                            (Ojs.apply
                               (t_to_js Obj.magic Obj.magic Obj.magic
                                  Obj.magic Obj.magic Obj.magic Obj.magic
                                  Obj.magic Obj.magic x391)
                               [|(Obj.magic x382);(Obj.magic x383);(Obj.magic
                                                                    x384);(
                                 Obj.magic x385);(Obj.magic x386);(Obj.magic
                                                                    x387);(
                                 Obj.magic x388);(Obj.magic x389);(Obj.magic
                                                                    x390)|])
  end
module Logger =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x402 : Ojs.t) -> x402
    and t_to_js : t -> Ojs.t = fun (x401 : Ojs.t) -> x401
    let (error : t -> message:string -> unit) =
      fun (x404 : t) ->
        fun ~message:(x403 : string) ->
          ignore
            (Ojs.call (t_to_js x404) "error" [|(Ojs.string_to_js x403)|])
    let (warn : t -> message:string -> unit) =
      fun (x406 : t) ->
        fun ~message:(x405 : string) ->
          ignore (Ojs.call (t_to_js x406) "warn" [|(Ojs.string_to_js x405)|])
    let (info : t -> message:string -> unit) =
      fun (x408 : t) ->
        fun ~message:(x407 : string) ->
          ignore (Ojs.call (t_to_js x408) "info" [|(Ojs.string_to_js x407)|])
    let (log : t -> message:string -> unit) =
      fun (x410 : t) ->
        fun ~message:(x409 : string) ->
          ignore (Ojs.call (t_to_js x410) "log" [|(Ojs.string_to_js x409)|])
  end
let (null_logger : Logger.t) =
  Logger.t_of_js (Ojs.get_prop_ascii Ojs.global "NullLogger")
module TraceValues =
  struct
    type t = [ `L_s1_messages  | `L_s2_off  | `L_s4_verbose ]
    let rec t_of_js : Ojs.t -> t =
      fun (x412 : Ojs.t) ->
        let x413 = x412 in
        match Ojs.string_of_js x413 with
        | "messages" -> `L_s1_messages
        | "off" -> `L_s2_off
        | "verbose" -> `L_s4_verbose
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x411 : [ `L_s1_messages  | `L_s2_off  | `L_s4_verbose ]) ->
        match x411 with
        | `L_s1_messages -> Ojs.string_to_js "messages"
        | `L_s2_off -> Ojs.string_to_js "off"
        | `L_s4_verbose -> Ojs.string_to_js "verbose"
  end
module Trace =
  struct
    type t = [ `Off  | `Messages  | `Verbose ]
    let rec t_of_js : Ojs.t -> t =
      fun (x415 : Ojs.t) ->
        let x416 = x415 in
        match Ojs.int_of_js x416 with
        | 0 -> `Off
        | 1 -> `Messages
        | 2 -> `Verbose
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x414 : [ `Off  | `Messages  | `Verbose ]) ->
        match x414 with
        | `Off -> Ojs.int_to_js 0
        | `Messages -> Ojs.int_to_js 1
        | `Verbose -> Ojs.int_to_js 2
    let (from_string : value:string -> t) =
      fun ~value:(x417 : string) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Trace") "fromString"
             [|(Ojs.string_to_js x417)|])
    let (to_string : value:t -> TraceValues.t) =
      fun ~value:(x418 : t) ->
        TraceValues.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Trace") "toString"
             [|(t_to_js x418)|])
  end
module TraceFormat =
  struct
    type t = [ `Text  | `JSON ]
    let rec t_of_js : Ojs.t -> t =
      fun (x420 : Ojs.t) ->
        let x421 = x420 in
        match Ojs.string_of_js x421 with
        | "text" -> `Text
        | "json" -> `JSON
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x419 : [ `Text  | `JSON ]) ->
        match x419 with
        | `Text -> Ojs.string_to_js "text"
        | `JSON -> Ojs.string_to_js "json"
    let (from_string : value:string -> t) =
      fun ~value:(x422 : string) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "TraceFormat")
             "fromString" [|(Ojs.string_to_js x422)|])
  end
module TraceOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x424 : Ojs.t) -> x424
    and t_to_js : t -> Ojs.t = fun (x423 : Ojs.t) -> x423
    let (get_send_notification : t -> bool) =
      fun (x425 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x425) "sendNotification")
    let (set_send_notification : t -> bool -> unit) =
      fun (x426 : t) ->
        fun (x427 : bool) ->
          Ojs.set_prop_ascii (t_to_js x426) "sendNotification"
            (Ojs.bool_to_js x427)
    let (get_trace_format : t -> TraceFormat.t) =
      fun (x428 : t) ->
        TraceFormat.t_of_js (Ojs.get_prop_ascii (t_to_js x428) "traceFormat")
    let (set_trace_format : t -> TraceFormat.t -> unit) =
      fun (x429 : t) ->
        fun (x430 : TraceFormat.t) ->
          Ojs.set_prop_ascii (t_to_js x429) "traceFormat"
            (TraceFormat.t_to_js x430)
  end
module SetTraceParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x432 : Ojs.t) -> x432
    and t_to_js : t -> Ojs.t = fun (x431 : Ojs.t) -> x431
    let (get_value : t -> TraceValues.t) =
      fun (x433 : t) ->
        TraceValues.t_of_js (Ojs.get_prop_ascii (t_to_js x433) "value")
    let (set_value : t -> TraceValues.t -> unit) =
      fun (x434 : t) ->
        fun (x435 : TraceValues.t) ->
          Ojs.set_prop_ascii (t_to_js x434) "value"
            (TraceValues.t_to_js x435)
  end
module SetTraceNotification =
  struct
    let (type_ : SetTraceParams.t NotificationType.t) =
      NotificationType.t_of_js SetTraceParams.t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "SetTraceNotification") "type")
  end
module LogTraceParams =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x438 : Ojs.t) -> x438
    and t_to_js : t -> Ojs.t = fun (x437 : Ojs.t) -> x437
    let (get_message : t -> string) =
      fun (x439 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x439) "message")
    let (set_message : t -> string -> unit) =
      fun (x440 : t) ->
        fun (x441 : string) ->
          Ojs.set_prop_ascii (t_to_js x440) "message" (Ojs.string_to_js x441)
    let (get_verbose : t -> string) =
      fun (x442 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x442) "verbose")
    let (set_verbose : t -> string -> unit) =
      fun (x443 : t) ->
        fun (x444 : string) ->
          Ojs.set_prop_ascii (t_to_js x443) "verbose" (Ojs.string_to_js x444)
  end
module LogTraceNotification =
  struct
    let (type_ : LogTraceParams.t NotificationType.t) =
      NotificationType.t_of_js LogTraceParams.t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "LogTraceNotification") "type")
  end
module Tracer =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x447 : Ojs.t) -> x447
    and t_to_js : t -> Ojs.t = fun (x446 : Ojs.t) -> x446
    let (log : t -> data_object:any -> unit) =
      fun (x449 : t) ->
        fun ~data_object:(x448 : any) ->
          ignore (Ojs.call (t_to_js x449) "log" [|(any_to_js x448)|])
    let (log' : t -> message:string -> ?data:string -> unit -> unit) =
      fun (x454 : t) ->
        fun ~message:(x450 : string) ->
          fun ?data:(x451 : string option) ->
            fun () ->
              ignore
                (let x455 = t_to_js x454 in
                 Ojs.call (Ojs.get_prop_ascii x455 "log") "apply"
                   [|x455;((let x452 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x452 "push"
                                 [|(Ojs.string_to_js x450)|]);
                            (match x451 with
                             | Some x453 ->
                                 ignore
                                   (Ojs.call x452 "push"
                                      [|(Ojs.string_to_js x453)|])
                             | None -> ());
                            x452))|])
  end
module ConnectionErrors =
  struct
    type t = [ `Closed  | `Disposed  | `AlreadyListening ]
    let rec t_of_js : Ojs.t -> t =
      fun (x457 : Ojs.t) ->
        let x458 = x457 in
        match Ojs.int_of_js x458 with
        | 1 -> `Closed
        | 2 -> `Disposed
        | 3 -> `AlreadyListening
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x456 : [ `Closed  | `Disposed  | `AlreadyListening ]) ->
        match x456 with
        | `Closed -> Ojs.int_to_js 1
        | `Disposed -> Ojs.int_to_js 2
        | `AlreadyListening -> Ojs.int_to_js 3
  end
module ConnectionError =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x460 : Ojs.t) -> x460
    and t_to_js : t -> Ojs.t = fun (x459 : Ojs.t) -> x459
    let (get_code : t -> ConnectionErrors.t) =
      fun (x461 : t) ->
        ConnectionErrors.t_of_js (Ojs.get_prop_ascii (t_to_js x461) "code")
    let (create : code:ConnectionErrors.t -> message:string -> t) =
      fun ~code:(x462 : ConnectionErrors.t) ->
        fun ~message:(x463 : string) ->
          t_of_js
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ConnectionError")
               [|(ConnectionErrors.t_to_js x462);(Ojs.string_to_js x463)|])
    let (cast : t -> Error.t) =
      fun (x464 : t) -> Error.t_of_js (t_to_js x464)
  end
module MessageConnection =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x466 : Ojs.t) -> x466
    and t_to_js : t -> Ojs.t = fun (x465 : Ojs.t) -> x465
    let (send_request :
      t ->
        type_:('R, 'E) RequestType0.t ->
          ?token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
            unit -> 'R Promise.t)
      =
      fun (x473 : t) ->
        fun ~type_:(x467 : ('R, 'E) RequestType0.t) ->
          fun
            ?token:(x468 :
                     Vscode_jsonrpc_cancellation.CancellationToken.t option)
            ->
            fun () ->
              Promise.t_of_js Obj.magic
                (let x474 = t_to_js x473 in
                 Ojs.call (Ojs.get_prop_ascii x474 "sendRequest") "apply"
                   [|x474;((let x469 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x469 "push"
                                 [|(RequestType0.t_to_js Obj.magic Obj.magic
                                      x467)|]);
                            (match x468 with
                             | Some x470 ->
                                 ignore
                                   (Ojs.call x469 "push"
                                      [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                           x470)|])
                             | None -> ());
                            x469))|])
    let (send_request' :
      t ->
        type_:('P, 'R, 'E) RequestType.t ->
          params:'P ->
            ?token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
              unit -> 'R Promise.t)
      =
      fun (x484 : t) ->
        fun ~type_:(x476 : ('P, 'R, 'E) RequestType.t) ->
          fun ~params:(x477 : 'P) ->
            fun
              ?token:(x478 :
                       Vscode_jsonrpc_cancellation.CancellationToken.t option)
              ->
              fun () ->
                Promise.t_of_js Obj.magic
                  (let x485 = t_to_js x484 in
                   Ojs.call (Ojs.get_prop_ascii x485 "sendRequest") "apply"
                     [|x485;((let x479 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x479 "push"
                                   [|(RequestType.t_to_js Obj.magic Obj.magic
                                        Obj.magic x476)|]);
                              ignore
                                (Ojs.call x479 "push" [|(Obj.magic x477)|]);
                              (match x478 with
                               | Some x480 ->
                                   ignore
                                     (Ojs.call x479 "push"
                                        [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                             x480)|])
                               | None -> ());
                              x479))|])
    let (send_request'' :
      t ->
        type_:('P1, 'R, 'E) RequestType1.t ->
          p1:'P1 ->
            ?token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
              unit -> 'R Promise.t)
      =
      fun (x495 : t) ->
        fun ~type_:(x487 : ('P1, 'R, 'E) RequestType1.t) ->
          fun ~p1:(x488 : 'P1) ->
            fun
              ?token:(x489 :
                       Vscode_jsonrpc_cancellation.CancellationToken.t option)
              ->
              fun () ->
                Promise.t_of_js Obj.magic
                  (let x496 = t_to_js x495 in
                   Ojs.call (Ojs.get_prop_ascii x496 "sendRequest") "apply"
                     [|x496;((let x490 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x490 "push"
                                   [|(RequestType1.t_to_js Obj.magic
                                        Obj.magic Obj.magic x487)|]);
                              ignore
                                (Ojs.call x490 "push" [|(Obj.magic x488)|]);
                              (match x489 with
                               | Some x491 ->
                                   ignore
                                     (Ojs.call x490 "push"
                                        [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                             x491)|])
                               | None -> ());
                              x490))|])
    let (send_request''' :
      t ->
        type_:('P1, 'P2, 'R, 'E) RequestType2.t ->
          p1:'P1 ->
            p2:'P2 ->
              ?token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                unit -> 'R Promise.t)
      =
      fun (x508 : t) ->
        fun ~type_:(x498 : ('P1, 'P2, 'R, 'E) RequestType2.t) ->
          fun ~p1:(x499 : 'P1) ->
            fun ~p2:(x500 : 'P2) ->
              fun
                ?token:(x501 :
                         Vscode_jsonrpc_cancellation.CancellationToken.t
                           option)
                ->
                fun () ->
                  Promise.t_of_js Obj.magic
                    (let x509 = t_to_js x508 in
                     Ojs.call (Ojs.get_prop_ascii x509 "sendRequest") "apply"
                       [|x509;((let x502 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x502 "push"
                                     [|(RequestType2.t_to_js Obj.magic
                                          Obj.magic Obj.magic Obj.magic x498)|]);
                                ignore
                                  (Ojs.call x502 "push" [|(Obj.magic x499)|]);
                                ignore
                                  (Ojs.call x502 "push" [|(Obj.magic x500)|]);
                                (match x501 with
                                 | Some x503 ->
                                     ignore
                                       (Ojs.call x502 "push"
                                          [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                               x503)|])
                                 | None -> ());
                                x502))|])
    let (send_request'''' :
      t ->
        type_:('P1, 'P2, 'P3, 'R, 'E) RequestType3.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                ?token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                  unit -> 'R Promise.t)
      =
      fun (x523 : t) ->
        fun ~type_:(x511 : ('P1, 'P2, 'P3, 'R, 'E) RequestType3.t) ->
          fun ~p1:(x512 : 'P1) ->
            fun ~p2:(x513 : 'P2) ->
              fun ~p3:(x514 : 'P3) ->
                fun
                  ?token:(x515 :
                           Vscode_jsonrpc_cancellation.CancellationToken.t
                             option)
                  ->
                  fun () ->
                    Promise.t_of_js Obj.magic
                      (let x524 = t_to_js x523 in
                       Ojs.call (Ojs.get_prop_ascii x524 "sendRequest")
                         "apply"
                         [|x524;((let x516 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x516 "push"
                                       [|(RequestType3.t_to_js Obj.magic
                                            Obj.magic Obj.magic Obj.magic
                                            Obj.magic x511)|]);
                                  ignore
                                    (Ojs.call x516 "push"
                                       [|(Obj.magic x512)|]);
                                  ignore
                                    (Ojs.call x516 "push"
                                       [|(Obj.magic x513)|]);
                                  ignore
                                    (Ojs.call x516 "push"
                                       [|(Obj.magic x514)|]);
                                  (match x515 with
                                   | Some x517 ->
                                       ignore
                                         (Ojs.call x516 "push"
                                            [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                 x517)|])
                                   | None -> ());
                                  x516))|])
    let (send_request''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'R, 'E) RequestType4.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 ->
                  ?token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                    unit -> 'R Promise.t)
      =
      fun (x540 : t) ->
        fun ~type_:(x526 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) RequestType4.t) ->
          fun ~p1:(x527 : 'P1) ->
            fun ~p2:(x528 : 'P2) ->
              fun ~p3:(x529 : 'P3) ->
                fun ~p4:(x530 : 'P4) ->
                  fun
                    ?token:(x531 :
                             Vscode_jsonrpc_cancellation.CancellationToken.t
                               option)
                    ->
                    fun () ->
                      Promise.t_of_js Obj.magic
                        (let x541 = t_to_js x540 in
                         Ojs.call (Ojs.get_prop_ascii x541 "sendRequest")
                           "apply"
                           [|x541;((let x532 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x532 "push"
                                         [|(RequestType4.t_to_js Obj.magic
                                              Obj.magic Obj.magic Obj.magic
                                              Obj.magic Obj.magic x526)|]);
                                    ignore
                                      (Ojs.call x532 "push"
                                         [|(Obj.magic x527)|]);
                                    ignore
                                      (Ojs.call x532 "push"
                                         [|(Obj.magic x528)|]);
                                    ignore
                                      (Ojs.call x532 "push"
                                         [|(Obj.magic x529)|]);
                                    ignore
                                      (Ojs.call x532 "push"
                                         [|(Obj.magic x530)|]);
                                    (match x531 with
                                     | Some x533 ->
                                         ignore
                                           (Ojs.call x532 "push"
                                              [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                   x533)|])
                                     | None -> ());
                                    x532))|])
    let (send_request'''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) RequestType5.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 ->
                  p5:'P5 ->
                    ?token:Vscode_jsonrpc_cancellation.CancellationToken.t ->
                      unit -> 'R Promise.t)
      =
      fun (x559 : t) ->
        fun ~type_:(x543 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) RequestType5.t)
          ->
          fun ~p1:(x544 : 'P1) ->
            fun ~p2:(x545 : 'P2) ->
              fun ~p3:(x546 : 'P3) ->
                fun ~p4:(x547 : 'P4) ->
                  fun ~p5:(x548 : 'P5) ->
                    fun
                      ?token:(x549 :
                               Vscode_jsonrpc_cancellation.CancellationToken.t
                                 option)
                      ->
                      fun () ->
                        Promise.t_of_js Obj.magic
                          (let x560 = t_to_js x559 in
                           Ojs.call (Ojs.get_prop_ascii x560 "sendRequest")
                             "apply"
                             [|x560;((let x550 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      ignore
                                        (Ojs.call x550 "push"
                                           [|(RequestType5.t_to_js Obj.magic
                                                Obj.magic Obj.magic Obj.magic
                                                Obj.magic Obj.magic Obj.magic
                                                x543)|]);
                                      ignore
                                        (Ojs.call x550 "push"
                                           [|(Obj.magic x544)|]);
                                      ignore
                                        (Ojs.call x550 "push"
                                           [|(Obj.magic x545)|]);
                                      ignore
                                        (Ojs.call x550 "push"
                                           [|(Obj.magic x546)|]);
                                      ignore
                                        (Ojs.call x550 "push"
                                           [|(Obj.magic x547)|]);
                                      ignore
                                        (Ojs.call x550 "push"
                                           [|(Obj.magic x548)|]);
                                      (match x549 with
                                       | Some x551 ->
                                           ignore
                                             (Ojs.call x550 "push"
                                                [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                     x551)|])
                                       | None -> ());
                                      x550))|])
    let (send_request''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) RequestType6.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 ->
                  p5:'P5 ->
                    p6:'P6 ->
                      ?token:Vscode_jsonrpc_cancellation.CancellationToken.t
                        -> unit -> 'R Promise.t)
      =
      fun (x580 : t) ->
        fun
          ~type_:(x562 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) RequestType6.t)
          ->
          fun ~p1:(x563 : 'P1) ->
            fun ~p2:(x564 : 'P2) ->
              fun ~p3:(x565 : 'P3) ->
                fun ~p4:(x566 : 'P4) ->
                  fun ~p5:(x567 : 'P5) ->
                    fun ~p6:(x568 : 'P6) ->
                      fun
                        ?token:(x569 :
                                 Vscode_jsonrpc_cancellation.CancellationToken.t
                                   option)
                        ->
                        fun () ->
                          Promise.t_of_js Obj.magic
                            (let x581 = t_to_js x580 in
                             Ojs.call (Ojs.get_prop_ascii x581 "sendRequest")
                               "apply"
                               [|x581;((let x570 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        ignore
                                          (Ojs.call x570 "push"
                                             [|(RequestType6.t_to_js
                                                  Obj.magic Obj.magic
                                                  Obj.magic Obj.magic
                                                  Obj.magic Obj.magic
                                                  Obj.magic Obj.magic x562)|]);
                                        ignore
                                          (Ojs.call x570 "push"
                                             [|(Obj.magic x563)|]);
                                        ignore
                                          (Ojs.call x570 "push"
                                             [|(Obj.magic x564)|]);
                                        ignore
                                          (Ojs.call x570 "push"
                                             [|(Obj.magic x565)|]);
                                        ignore
                                          (Ojs.call x570 "push"
                                             [|(Obj.magic x566)|]);
                                        ignore
                                          (Ojs.call x570 "push"
                                             [|(Obj.magic x567)|]);
                                        ignore
                                          (Ojs.call x570 "push"
                                             [|(Obj.magic x568)|]);
                                        (match x569 with
                                         | Some x571 ->
                                             ignore
                                               (Ojs.call x570 "push"
                                                  [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                       x571)|])
                                         | None -> ());
                                        x570))|])
    let (send_request'''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) RequestType7.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 ->
                  p5:'P5 ->
                    p6:'P6 ->
                      p7:'P7 ->
                        ?token:Vscode_jsonrpc_cancellation.CancellationToken.t
                          -> unit -> 'R Promise.t)
      =
      fun (x603 : t) ->
        fun
          ~type_:(x583 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) RequestType7.t)
          ->
          fun ~p1:(x584 : 'P1) ->
            fun ~p2:(x585 : 'P2) ->
              fun ~p3:(x586 : 'P3) ->
                fun ~p4:(x587 : 'P4) ->
                  fun ~p5:(x588 : 'P5) ->
                    fun ~p6:(x589 : 'P6) ->
                      fun ~p7:(x590 : 'P7) ->
                        fun
                          ?token:(x591 :
                                   Vscode_jsonrpc_cancellation.CancellationToken.t
                                     option)
                          ->
                          fun () ->
                            Promise.t_of_js Obj.magic
                              (let x604 = t_to_js x603 in
                               Ojs.call
                                 (Ojs.get_prop_ascii x604 "sendRequest")
                                 "apply"
                                 [|x604;((let x592 =
                                            Ojs.new_obj
                                              (Ojs.get_prop_ascii Ojs.global
                                                 "Array") [||] in
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(RequestType7.t_to_js
                                                    Obj.magic Obj.magic
                                                    Obj.magic Obj.magic
                                                    Obj.magic Obj.magic
                                                    Obj.magic Obj.magic
                                                    Obj.magic x583)|]);
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(Obj.magic x584)|]);
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(Obj.magic x585)|]);
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(Obj.magic x586)|]);
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(Obj.magic x587)|]);
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(Obj.magic x588)|]);
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(Obj.magic x589)|]);
                                          ignore
                                            (Ojs.call x592 "push"
                                               [|(Obj.magic x590)|]);
                                          (match x591 with
                                           | Some x593 ->
                                               ignore
                                                 (Ojs.call x592 "push"
                                                    [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                         x593)|])
                                           | None -> ());
                                          x592))|])
    let (send_request''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) RequestType8.t
          ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 ->
                  p5:'P5 ->
                    p6:'P6 ->
                      p7:'P7 ->
                        p8:'P8 ->
                          ?token:Vscode_jsonrpc_cancellation.CancellationToken.t
                            -> unit -> 'R Promise.t)
      =
      fun (x628 : t) ->
        fun
          ~type_:(x606 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E)
                     RequestType8.t)
          ->
          fun ~p1:(x607 : 'P1) ->
            fun ~p2:(x608 : 'P2) ->
              fun ~p3:(x609 : 'P3) ->
                fun ~p4:(x610 : 'P4) ->
                  fun ~p5:(x611 : 'P5) ->
                    fun ~p6:(x612 : 'P6) ->
                      fun ~p7:(x613 : 'P7) ->
                        fun ~p8:(x614 : 'P8) ->
                          fun
                            ?token:(x615 :
                                     Vscode_jsonrpc_cancellation.CancellationToken.t
                                       option)
                            ->
                            fun () ->
                              Promise.t_of_js Obj.magic
                                (let x629 = t_to_js x628 in
                                 Ojs.call
                                   (Ojs.get_prop_ascii x629 "sendRequest")
                                   "apply"
                                   [|x629;((let x616 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(RequestType8.t_to_js
                                                      Obj.magic Obj.magic
                                                      Obj.magic Obj.magic
                                                      Obj.magic Obj.magic
                                                      Obj.magic Obj.magic
                                                      Obj.magic Obj.magic
                                                      x606)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x607)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x608)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x609)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x610)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x611)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x612)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x613)|]);
                                            ignore
                                              (Ojs.call x616 "push"
                                                 [|(Obj.magic x614)|]);
                                            (match x615 with
                                             | Some x617 ->
                                                 ignore
                                                   (Ojs.call x616 "push"
                                                      [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                           x617)|])
                                             | None -> ());
                                            x616))|])
    let (send_request'''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E)
          RequestType9.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 ->
                  p5:'P5 ->
                    p6:'P6 ->
                      p7:'P7 ->
                        p8:'P8 ->
                          p9:'P9 ->
                            ?token:Vscode_jsonrpc_cancellation.CancellationToken.t
                              -> unit -> 'R Promise.t)
      =
      fun (x655 : t) ->
        fun
          ~type_:(x631 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 
                     'E) RequestType9.t)
          ->
          fun ~p1:(x632 : 'P1) ->
            fun ~p2:(x633 : 'P2) ->
              fun ~p3:(x634 : 'P3) ->
                fun ~p4:(x635 : 'P4) ->
                  fun ~p5:(x636 : 'P5) ->
                    fun ~p6:(x637 : 'P6) ->
                      fun ~p7:(x638 : 'P7) ->
                        fun ~p8:(x639 : 'P8) ->
                          fun ~p9:(x640 : 'P9) ->
                            fun
                              ?token:(x641 :
                                       Vscode_jsonrpc_cancellation.CancellationToken.t
                                         option)
                              ->
                              fun () ->
                                Promise.t_of_js Obj.magic
                                  (let x656 = t_to_js x655 in
                                   Ojs.call
                                     (Ojs.get_prop_ascii x656 "sendRequest")
                                     "apply"
                                     [|x656;((let x642 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(RequestType9.t_to_js
                                                        Obj.magic Obj.magic
                                                        Obj.magic Obj.magic
                                                        Obj.magic Obj.magic
                                                        Obj.magic Obj.magic
                                                        Obj.magic Obj.magic
                                                        Obj.magic x631)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x632)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x633)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x634)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x635)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x636)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x637)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x638)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x639)|]);
                                              ignore
                                                (Ojs.call x642 "push"
                                                   [|(Obj.magic x640)|]);
                                              (match x641 with
                                               | Some x643 ->
                                                   ignore
                                                     (Ojs.call x642 "push"
                                                        [|(Vscode_jsonrpc_cancellation.CancellationToken.t_to_js
                                                             x643)|])
                                               | None -> ());
                                              x642))|])
    let (send_request''''''''''' :
      t ->
        method_:string ->
          ?r0:(ParameterStructures.t, any) union2 ->
            rest:any list -> 'R Promise.t)
      =
      fun (x666 : t) ->
        fun ~method_:(x658 : string) ->
          fun ?r0:(x659 : (ParameterStructures.t, any) union2 option) ->
            fun ~rest:(x660 : any list) ->
              Promise.t_of_js Obj.magic
                (let x667 = t_to_js x666 in
                 Ojs.call (Ojs.get_prop_ascii x667 "sendRequest") "apply"
                   [|x667;((let x661 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x661 "push"
                                 [|(Ojs.string_to_js x658)|]);
                            (match x659 with
                             | Some x663 ->
                                 ignore
                                   (Ojs.call x661 "push"
                                      [|(union2_to_js
                                           ParameterStructures.t_to_js
                                           any_to_js x663)|])
                             | None -> ());
                            List.iter
                              (fun (x662 : any) ->
                                 ignore
                                   (Ojs.call x661 "push" [|(any_to_js x662)|]))
                              x660;
                            x661))|])
    let (on_request :
      t ->
        type_:('R, 'E) RequestType0.t ->
          handler:('R, 'E) RequestHandler0.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x675 : t) ->
        fun ~type_:(x669 : ('R, 'E) RequestType0.t) ->
          fun ~handler:(x672 : ('R, 'E) RequestHandler0.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x675) "onRequest"
                 [|(RequestType0.t_to_js Obj.magic Obj.magic x669);(RequestHandler0.t_to_js
                                                                    Obj.magic
                                                                    Obj.magic
                                                                    x672)|])
    let (on_request' :
      t ->
        type_:('P, 'R, 'E) RequestType.t ->
          handler:('P, 'R, 'E) RequestHandler.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x684 : t) ->
        fun ~type_:(x676 : ('P, 'R, 'E) RequestType.t) ->
          fun ~handler:(x680 : ('P, 'R, 'E) RequestHandler.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x684) "onRequest"
                 [|(RequestType.t_to_js Obj.magic Obj.magic Obj.magic x676);(
                   RequestHandler.t_to_js Obj.magic Obj.magic Obj.magic x680)|])
    let (on_request'' :
      t ->
        type_:('P1, 'R, 'E) RequestType1.t ->
          handler:('P1, 'R, 'E) RequestHandler1.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x693 : t) ->
        fun ~type_:(x685 : ('P1, 'R, 'E) RequestType1.t) ->
          fun ~handler:(x689 : ('P1, 'R, 'E) RequestHandler1.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x693) "onRequest"
                 [|(RequestType1.t_to_js Obj.magic Obj.magic Obj.magic x685);(
                   RequestHandler1.t_to_js Obj.magic Obj.magic Obj.magic x689)|])
    let (on_request''' :
      t ->
        type_:('P1, 'P2, 'R, 'E) RequestType2.t ->
          handler:('P1, 'P2, 'R, 'E) RequestHandler2.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x704 : t) ->
        fun ~type_:(x694 : ('P1, 'P2, 'R, 'E) RequestType2.t) ->
          fun ~handler:(x699 : ('P1, 'P2, 'R, 'E) RequestHandler2.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x704) "onRequest"
                 [|(RequestType2.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic x694);(RequestHandler2.t_to_js Obj.magic
                                         Obj.magic Obj.magic Obj.magic x699)|])
    let (on_request'''' :
      t ->
        type_:('P1, 'P2, 'P3, 'R, 'E) RequestType3.t ->
          handler:('P1, 'P2, 'P3, 'R, 'E) RequestHandler3.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x717 : t) ->
        fun ~type_:(x705 : ('P1, 'P2, 'P3, 'R, 'E) RequestType3.t) ->
          fun ~handler:(x711 : ('P1, 'P2, 'P3, 'R, 'E) RequestHandler3.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x717) "onRequest"
                 [|(RequestType3.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic x705);(RequestHandler3.t_to_js
                                                   Obj.magic Obj.magic
                                                   Obj.magic Obj.magic
                                                   Obj.magic x711)|])
    let (on_request''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'R, 'E) RequestType4.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'R, 'E) RequestHandler4.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x732 : t) ->
        fun ~type_:(x718 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) RequestType4.t) ->
          fun
            ~handler:(x725 : ('P1, 'P2, 'P3, 'P4, 'R, 'E) RequestHandler4.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x732) "onRequest"
                 [|(RequestType4.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic x718);(RequestHandler4.t_to_js
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic x725)|])
    let (on_request'''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) RequestType5.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) RequestHandler5.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x749 : t) ->
        fun ~type_:(x733 : ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) RequestType5.t)
          ->
          fun
            ~handler:(x741 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'R, 'E) RequestHandler5.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x749) "onRequest"
                 [|(RequestType5.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic x733);(
                   RequestHandler5.t_to_js Obj.magic Obj.magic Obj.magic
                     Obj.magic Obj.magic Obj.magic Obj.magic x741)|])
    let (on_request''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) RequestType6.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) RequestHandler6.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x768 : t) ->
        fun
          ~type_:(x750 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E) RequestType6.t)
          ->
          fun
            ~handler:(x759 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'R, 'E)
                         RequestHandler6.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x768) "onRequest"
                 [|(RequestType6.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x750);(
                   RequestHandler6.t_to_js Obj.magic Obj.magic Obj.magic
                     Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x759)|])
    let (on_request'''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) RequestType7.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E)
            RequestHandler7.t -> Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x789 : t) ->
        fun
          ~type_:(x769 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E) RequestType7.t)
          ->
          fun
            ~handler:(x779 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'R, 'E)
                         RequestHandler7.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x789) "onRequest"
                 [|(RequestType7.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                      Obj.magic x769);(RequestHandler7.t_to_js Obj.magic
                                         Obj.magic Obj.magic Obj.magic
                                         Obj.magic Obj.magic Obj.magic
                                         Obj.magic Obj.magic x779)|])
    let (on_request''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E) RequestType8.t
          ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E)
            RequestHandler8.t -> Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x812 : t) ->
        fun
          ~type_:(x790 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E)
                     RequestType8.t)
          ->
          fun
            ~handler:(x801 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'R, 'E)
                         RequestHandler8.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x812) "onRequest"
                 [|(RequestType8.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic x790);(RequestHandler8.t_to_js
                                                   Obj.magic Obj.magic
                                                   Obj.magic Obj.magic
                                                   Obj.magic Obj.magic
                                                   Obj.magic Obj.magic
                                                   Obj.magic Obj.magic x801)|])
    let (on_request'''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E)
          RequestType9.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 'E)
            RequestHandler9.t -> Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x837 : t) ->
        fun
          ~type_:(x813 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 'R, 
                     'E) RequestType9.t)
          ->
          fun
            ~handler:(x825 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9, 
                         'R, 'E) RequestHandler9.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x837) "onRequest"
                 [|(RequestType9.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic x813);(RequestHandler9.t_to_js
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic
                                                             Obj.magic x825)|])
    let (on_request''''''''''' :
      t ->
        method_:string ->
          handler:('R, 'E) GenericRequestHandler.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x842 : t) ->
        fun ~method_:(x838 : string) ->
          fun ~handler:(x839 : ('R, 'E) GenericRequestHandler.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x842) "onRequest"
                 [|(Ojs.string_to_js x838);(GenericRequestHandler.t_to_js
                                              Obj.magic Obj.magic x839)|])
    let (on_request'''''''''''' :
      t ->
        handler:StarRequestHandler.t ->
          Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x844 : t) ->
        fun ~handler:(x843 : StarRequestHandler.t) ->
          Vscode_jsonrpc_disposable.Disposable.t_of_js
            (Ojs.call (t_to_js x844) "onRequest"
               [|(StarRequestHandler.t_to_js x843)|])
    let (send_notification : t -> type_:NotificationType0.t -> unit) =
      fun (x846 : t) ->
        fun ~type_:(x845 : NotificationType0.t) ->
          ignore
            (Ojs.call (t_to_js x846) "sendNotification"
               [|(NotificationType0.t_to_js x845)|])
    let (send_notification' :
      t -> type_:'P NotificationType.t -> ?params:'P -> unit -> unit) =
      fun (x852 : t) ->
        fun ~type_:(x847 : 'P NotificationType.t) ->
          fun ?params:(x848 : 'P option) ->
            fun () ->
              ignore
                (let x853 = t_to_js x852 in
                 Ojs.call (Ojs.get_prop_ascii x853 "sendNotification")
                   "apply"
                   [|x853;((let x849 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x849 "push"
                                 [|(NotificationType.t_to_js Obj.magic x847)|]);
                            (match x848 with
                             | Some x850 ->
                                 ignore
                                   (Ojs.call x849 "push" [|(Obj.magic x850)|])
                             | None -> ());
                            x849))|])
    let (send_notification'' :
      t -> type_:'P1 NotificationType1.t -> p1:'P1 -> unit) =
      fun (x857 : t) ->
        fun ~type_:(x854 : 'P1 NotificationType1.t) ->
          fun ~p1:(x856 : 'P1) ->
            ignore
              (Ojs.call (t_to_js x857) "sendNotification"
                 [|(NotificationType1.t_to_js Obj.magic x854);(Obj.magic x856)|])
    let (send_notification''' :
      t -> type_:('P1, 'P2) NotificationType2.t -> p1:'P1 -> p2:'P2 -> unit)
      =
      fun (x863 : t) ->
        fun ~type_:(x858 : ('P1, 'P2) NotificationType2.t) ->
          fun ~p1:(x861 : 'P1) ->
            fun ~p2:(x862 : 'P2) ->
              ignore
                (Ojs.call (t_to_js x863) "sendNotification"
                   [|(NotificationType2.t_to_js Obj.magic Obj.magic x858);(
                     Obj.magic x861);(Obj.magic x862)|])
    let (send_notification'''' :
      t ->
        type_:('P1, 'P2, 'P3) NotificationType3.t ->
          p1:'P1 -> p2:'P2 -> p3:'P3 -> unit)
      =
      fun (x871 : t) ->
        fun ~type_:(x864 : ('P1, 'P2, 'P3) NotificationType3.t) ->
          fun ~p1:(x868 : 'P1) ->
            fun ~p2:(x869 : 'P2) ->
              fun ~p3:(x870 : 'P3) ->
                ignore
                  (Ojs.call (t_to_js x871) "sendNotification"
                     [|(NotificationType3.t_to_js Obj.magic Obj.magic
                          Obj.magic x864);(Obj.magic x868);(Obj.magic x869);(
                       Obj.magic x870)|])
    let (send_notification''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4) NotificationType4.t ->
          p1:'P1 -> p2:'P2 -> p3:'P3 -> p4:'P4 -> unit)
      =
      fun (x881 : t) ->
        fun ~type_:(x872 : ('P1, 'P2, 'P3, 'P4) NotificationType4.t) ->
          fun ~p1:(x877 : 'P1) ->
            fun ~p2:(x878 : 'P2) ->
              fun ~p3:(x879 : 'P3) ->
                fun ~p4:(x880 : 'P4) ->
                  ignore
                    (Ojs.call (t_to_js x881) "sendNotification"
                       [|(NotificationType4.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic x872);(Obj.magic x877);(
                         Obj.magic x878);(Obj.magic x879);(Obj.magic x880)|])
    let (send_notification'''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5) NotificationType5.t ->
          p1:'P1 -> p2:'P2 -> p3:'P3 -> p4:'P4 -> p5:'P5 -> unit)
      =
      fun (x893 : t) ->
        fun ~type_:(x882 : ('P1, 'P2, 'P3, 'P4, 'P5) NotificationType5.t) ->
          fun ~p1:(x888 : 'P1) ->
            fun ~p2:(x889 : 'P2) ->
              fun ~p3:(x890 : 'P3) ->
                fun ~p4:(x891 : 'P4) ->
                  fun ~p5:(x892 : 'P5) ->
                    ignore
                      (Ojs.call (t_to_js x893) "sendNotification"
                         [|(NotificationType5.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic x882);(Obj.magic
                                                                    x888);(
                           Obj.magic x889);(Obj.magic x890);(Obj.magic x891);(
                           Obj.magic x892)|])
    let (send_notification''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6) NotificationType6.t ->
          p1:'P1 -> p2:'P2 -> p3:'P3 -> p4:'P4 -> p5:'P5 -> p6:'P6 -> unit)
      =
      fun (x907 : t) ->
        fun
          ~type_:(x894 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) NotificationType6.t)
          ->
          fun ~p1:(x901 : 'P1) ->
            fun ~p2:(x902 : 'P2) ->
              fun ~p3:(x903 : 'P3) ->
                fun ~p4:(x904 : 'P4) ->
                  fun ~p5:(x905 : 'P5) ->
                    fun ~p6:(x906 : 'P6) ->
                      ignore
                        (Ojs.call (t_to_js x907) "sendNotification"
                           [|(NotificationType6.t_to_js Obj.magic Obj.magic
                                Obj.magic Obj.magic Obj.magic Obj.magic x894);(
                             Obj.magic x901);(Obj.magic x902);(Obj.magic x903);(
                             Obj.magic x904);(Obj.magic x905);(Obj.magic x906)|])
    let (send_notification'''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) NotificationType7.t ->
          p1:'P1 ->
            p2:'P2 -> p3:'P3 -> p4:'P4 -> p5:'P5 -> p6:'P6 -> p7:'P7 -> unit)
      =
      fun (x923 : t) ->
        fun
          ~type_:(x908 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) NotificationType7.t)
          ->
          fun ~p1:(x916 : 'P1) ->
            fun ~p2:(x917 : 'P2) ->
              fun ~p3:(x918 : 'P3) ->
                fun ~p4:(x919 : 'P4) ->
                  fun ~p5:(x920 : 'P5) ->
                    fun ~p6:(x921 : 'P6) ->
                      fun ~p7:(x922 : 'P7) ->
                        ignore
                          (Ojs.call (t_to_js x923) "sendNotification"
                             [|(NotificationType7.t_to_js Obj.magic Obj.magic
                                  Obj.magic Obj.magic Obj.magic Obj.magic
                                  Obj.magic x908);(Obj.magic x916);(Obj.magic
                                                                    x917);(
                               Obj.magic x918);(Obj.magic x919);(Obj.magic
                                                                   x920);(
                               Obj.magic x921);(Obj.magic x922)|])
    let (send_notification''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) NotificationType8.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 -> p5:'P5 -> p6:'P6 -> p7:'P7 -> p8:'P8 -> unit)
      =
      fun (x941 : t) ->
        fun
          ~type_:(x924 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8)
                     NotificationType8.t)
          ->
          fun ~p1:(x933 : 'P1) ->
            fun ~p2:(x934 : 'P2) ->
              fun ~p3:(x935 : 'P3) ->
                fun ~p4:(x936 : 'P4) ->
                  fun ~p5:(x937 : 'P5) ->
                    fun ~p6:(x938 : 'P6) ->
                      fun ~p7:(x939 : 'P7) ->
                        fun ~p8:(x940 : 'P8) ->
                          ignore
                            (Ojs.call (t_to_js x941) "sendNotification"
                               [|(NotificationType8.t_to_js Obj.magic
                                    Obj.magic Obj.magic Obj.magic Obj.magic
                                    Obj.magic Obj.magic Obj.magic x924);(
                                 Obj.magic x933);(Obj.magic x934);(Obj.magic
                                                                    x935);(
                                 Obj.magic x936);(Obj.magic x937);(Obj.magic
                                                                    x938);(
                                 Obj.magic x939);(Obj.magic x940)|])
    let (send_notification'''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9)
          NotificationType9.t ->
          p1:'P1 ->
            p2:'P2 ->
              p3:'P3 ->
                p4:'P4 ->
                  p5:'P5 -> p6:'P6 -> p7:'P7 -> p8:'P8 -> p9:'P9 -> unit)
      =
      fun (x961 : t) ->
        fun
          ~type_:(x942 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9)
                     NotificationType9.t)
          ->
          fun ~p1:(x952 : 'P1) ->
            fun ~p2:(x953 : 'P2) ->
              fun ~p3:(x954 : 'P3) ->
                fun ~p4:(x955 : 'P4) ->
                  fun ~p5:(x956 : 'P5) ->
                    fun ~p6:(x957 : 'P6) ->
                      fun ~p7:(x958 : 'P7) ->
                        fun ~p8:(x959 : 'P8) ->
                          fun ~p9:(x960 : 'P9) ->
                            ignore
                              (Ojs.call (t_to_js x961) "sendNotification"
                                 [|(NotificationType9.t_to_js Obj.magic
                                      Obj.magic Obj.magic Obj.magic Obj.magic
                                      Obj.magic Obj.magic Obj.magic Obj.magic
                                      x942);(Obj.magic x952);(Obj.magic x953);(
                                   Obj.magic x954);(Obj.magic x955);(
                                   Obj.magic x956);(Obj.magic x957);(
                                   Obj.magic x958);(Obj.magic x959);(
                                   Obj.magic x960)|])
    let (send_notification''''''''''' :
      t ->
        method_:string ->
          ?r0:(ParameterStructures.t, any) union2 -> rest:any list -> unit)
      =
      fun (x970 : t) ->
        fun ~method_:(x962 : string) ->
          fun ?r0:(x963 : (ParameterStructures.t, any) union2 option) ->
            fun ~rest:(x964 : any list) ->
              ignore
                (let x971 = t_to_js x970 in
                 Ojs.call (Ojs.get_prop_ascii x971 "sendNotification")
                   "apply"
                   [|x971;((let x965 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x965 "push"
                                 [|(Ojs.string_to_js x962)|]);
                            (match x963 with
                             | Some x967 ->
                                 ignore
                                   (Ojs.call x965 "push"
                                      [|(union2_to_js
                                           ParameterStructures.t_to_js
                                           any_to_js x967)|])
                             | None -> ());
                            List.iter
                              (fun (x966 : any) ->
                                 ignore
                                   (Ojs.call x965 "push" [|(any_to_js x966)|]))
                              x964;
                            x965))|])
    let (on_notification :
      t ->
        type_:NotificationType0.t ->
          handler:NotificationHandler0.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x974 : t) ->
        fun ~type_:(x972 : NotificationType0.t) ->
          fun ~handler:(x973 : NotificationHandler0.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x974) "onNotification"
                 [|(NotificationType0.t_to_js x972);(NotificationHandler0.t_to_js
                                                       x973)|])
    let (on_notification' :
      t ->
        type_:'P NotificationType.t ->
          handler:'P NotificationHandler.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x979 : t) ->
        fun ~type_:(x975 : 'P NotificationType.t) ->
          fun ~handler:(x977 : 'P NotificationHandler.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x979) "onNotification"
                 [|(NotificationType.t_to_js Obj.magic x975);(NotificationHandler.t_to_js
                                                                Obj.magic
                                                                x977)|])
    let (on_notification'' :
      t ->
        type_:'P1 NotificationType1.t ->
          handler:'P1 NotificationHandler1.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x984 : t) ->
        fun ~type_:(x980 : 'P1 NotificationType1.t) ->
          fun ~handler:(x982 : 'P1 NotificationHandler1.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x984) "onNotification"
                 [|(NotificationType1.t_to_js Obj.magic x980);(NotificationHandler1.t_to_js
                                                                 Obj.magic
                                                                 x982)|])
    let (on_notification''' :
      t ->
        type_:('P1, 'P2) NotificationType2.t ->
          handler:('P1, 'P2) NotificationHandler2.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x991 : t) ->
        fun ~type_:(x985 : ('P1, 'P2) NotificationType2.t) ->
          fun ~handler:(x988 : ('P1, 'P2) NotificationHandler2.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x991) "onNotification"
                 [|(NotificationType2.t_to_js Obj.magic Obj.magic x985);(
                   NotificationHandler2.t_to_js Obj.magic Obj.magic x988)|])
    let (on_notification'''' :
      t ->
        type_:('P1, 'P2, 'P3) NotificationType3.t ->
          handler:('P1, 'P2, 'P3) NotificationHandler3.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1000 : t) ->
        fun ~type_:(x992 : ('P1, 'P2, 'P3) NotificationType3.t) ->
          fun ~handler:(x996 : ('P1, 'P2, 'P3) NotificationHandler3.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1000) "onNotification"
                 [|(NotificationType3.t_to_js Obj.magic Obj.magic Obj.magic
                      x992);(NotificationHandler3.t_to_js Obj.magic Obj.magic
                               Obj.magic x996)|])
    let (on_notification''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4) NotificationType4.t ->
          handler:('P1, 'P2, 'P3, 'P4) NotificationHandler4.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1011 : t) ->
        fun ~type_:(x1001 : ('P1, 'P2, 'P3, 'P4) NotificationType4.t) ->
          fun ~handler:(x1006 : ('P1, 'P2, 'P3, 'P4) NotificationHandler4.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1011) "onNotification"
                 [|(NotificationType4.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic x1001);(NotificationHandler4.t_to_js
                                          Obj.magic Obj.magic Obj.magic
                                          Obj.magic x1006)|])
    let (on_notification'''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5) NotificationType5.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5) NotificationHandler5.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1024 : t) ->
        fun ~type_:(x1012 : ('P1, 'P2, 'P3, 'P4, 'P5) NotificationType5.t) ->
          fun
            ~handler:(x1018 :
                       ('P1, 'P2, 'P3, 'P4, 'P5) NotificationHandler5.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1024) "onNotification"
                 [|(NotificationType5.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic x1012);(NotificationHandler5.t_to_js
                                                    Obj.magic Obj.magic
                                                    Obj.magic Obj.magic
                                                    Obj.magic x1018)|])
    let (on_notification''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6) NotificationType6.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6) NotificationHandler6.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1039 : t) ->
        fun
          ~type_:(x1025 : ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) NotificationType6.t)
          ->
          fun
            ~handler:(x1032 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6) NotificationHandler6.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1039) "onNotification"
                 [|(NotificationType6.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic x1025);(NotificationHandler6.t_to_js
                                                              Obj.magic
                                                              Obj.magic
                                                              Obj.magic
                                                              Obj.magic
                                                              Obj.magic
                                                              Obj.magic x1032)|])
    let (on_notification'''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) NotificationType7.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) NotificationHandler7.t
            -> Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1056 : t) ->
        fun
          ~type_:(x1040 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7) NotificationType7.t)
          ->
          fun
            ~handler:(x1048 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7)
                         NotificationHandler7.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1056) "onNotification"
                 [|(NotificationType7.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic x1040);(
                   NotificationHandler7.t_to_js Obj.magic Obj.magic Obj.magic
                     Obj.magic Obj.magic Obj.magic Obj.magic x1048)|])
    let (on_notification''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8) NotificationType8.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8)
            NotificationHandler8.t -> Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1075 : t) ->
        fun
          ~type_:(x1057 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8)
                     NotificationType8.t)
          ->
          fun
            ~handler:(x1066 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8)
                         NotificationHandler8.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1075) "onNotification"
                 [|(NotificationType8.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x1057);(
                   NotificationHandler8.t_to_js Obj.magic Obj.magic Obj.magic
                     Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic x1066)|])
    let (on_notification'''''''''' :
      t ->
        type_:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9)
          NotificationType9.t ->
          handler:('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9)
            NotificationHandler9.t -> Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1096 : t) ->
        fun
          ~type_:(x1076 :
                   ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9)
                     NotificationType9.t)
          ->
          fun
            ~handler:(x1086 :
                       ('P1, 'P2, 'P3, 'P4, 'P5, 'P6, 'P7, 'P8, 'P9)
                         NotificationHandler9.t)
            ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1096) "onNotification"
                 [|(NotificationType9.t_to_js Obj.magic Obj.magic Obj.magic
                      Obj.magic Obj.magic Obj.magic Obj.magic Obj.magic
                      Obj.magic x1076);(NotificationHandler9.t_to_js
                                          Obj.magic Obj.magic Obj.magic
                                          Obj.magic Obj.magic Obj.magic
                                          Obj.magic Obj.magic Obj.magic x1086)|])
    let (on_notification''''''''''' :
      t ->
        method_:string ->
          handler:GenericNotificationHandler.t ->
            Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1099 : t) ->
        fun ~method_:(x1097 : string) ->
          fun ~handler:(x1098 : GenericNotificationHandler.t) ->
            Vscode_jsonrpc_disposable.Disposable.t_of_js
              (Ojs.call (t_to_js x1099) "onNotification"
                 [|(Ojs.string_to_js x1097);(GenericNotificationHandler.t_to_js
                                               x1098)|])
    let (on_notification'''''''''''' :
      t ->
        handler:StarNotificationHandler.t ->
          Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1101 : t) ->
        fun ~handler:(x1100 : StarNotificationHandler.t) ->
          Vscode_jsonrpc_disposable.Disposable.t_of_js
            (Ojs.call (t_to_js x1101) "onNotification"
               [|(StarNotificationHandler.t_to_js x1100)|])
    let (get_on_unhandled_notification :
      t -> NotificationMessage.t Vscode_jsonrpc_events.Event.t) =
      fun (x1102 : t) ->
        Vscode_jsonrpc_events.Event.t_of_js NotificationMessage.t_of_js
          (Ojs.get_prop_ascii (t_to_js x1102) "onUnhandledNotification")
    let (set_on_unhandled_notification :
      t -> NotificationMessage.t Vscode_jsonrpc_events.Event.t -> unit) =
      fun (x1104 : t) ->
        fun (x1105 : NotificationMessage.t Vscode_jsonrpc_events.Event.t) ->
          Ojs.set_prop_ascii (t_to_js x1104) "onUnhandledNotification"
            (Vscode_jsonrpc_events.Event.t_to_js NotificationMessage.t_to_js
               x1105)
    let (on_progress :
      t ->
        type_:'P ProgressType.t ->
          token:string or_number ->
            handler:'P NotificationHandler.t ->
              Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x1113 : t) ->
        fun ~type_:(x1107 : 'P ProgressType.t) ->
          fun ~token:(x1109 : string or_number) ->
            fun ~handler:(x1111 : 'P NotificationHandler.t) ->
              Vscode_jsonrpc_disposable.Disposable.t_of_js
                (Ojs.call (t_to_js x1113) "onProgress"
                   [|(ProgressType.t_to_js Obj.magic x1107);(or_number_to_js
                                                               Ojs.string_to_js
                                                               x1109);(
                     NotificationHandler.t_to_js Obj.magic x1111)|])
    let (send_progress :
      t ->
        type_:'P ProgressType.t -> token:string or_number -> value:'P -> unit)
      =
      fun (x1119 : t) ->
        fun ~type_:(x1114 : 'P ProgressType.t) ->
          fun ~token:(x1116 : string or_number) ->
            fun ~value:(x1118 : 'P) ->
              ignore
                (Ojs.call (t_to_js x1119) "sendProgress"
                   [|(ProgressType.t_to_js Obj.magic x1114);(or_number_to_js
                                                               Ojs.string_to_js
                                                               x1116);(
                     Obj.magic x1118)|])
    let (get_on_unhandled_progress :
      t -> any ProgressParams.t Vscode_jsonrpc_events.Event.t) =
      fun (x1120 : t) ->
        Vscode_jsonrpc_events.Event.t_of_js
          (fun (x1121 : Ojs.t) -> ProgressParams.t_of_js any_of_js x1121)
          (Ojs.get_prop_ascii (t_to_js x1120) "onUnhandledProgress")
    let (set_on_unhandled_progress :
      t -> any ProgressParams.t Vscode_jsonrpc_events.Event.t -> unit) =
      fun (x1123 : t) ->
        fun (x1124 : any ProgressParams.t Vscode_jsonrpc_events.Event.t) ->
          Ojs.set_prop_ascii (t_to_js x1123) "onUnhandledProgress"
            (Vscode_jsonrpc_events.Event.t_to_js
               (fun (x1125 : any ProgressParams.t) ->
                  ProgressParams.t_to_js any_to_js x1125) x1124)
    let (trace :
      t ->
        value:Trace.t ->
          tracer:Tracer.t -> ?send_notification:bool -> unit -> unit)
      =
      fun (x1132 : t) ->
        fun ~value:(x1127 : Trace.t) ->
          fun ~tracer:(x1128 : Tracer.t) ->
            fun ?send_notification:(x1129 : bool option) ->
              fun () ->
                ignore
                  (let x1133 = t_to_js x1132 in
                   Ojs.call (Ojs.get_prop_ascii x1133 "trace") "apply"
                     [|x1133;((let x1130 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1130 "push"
                                    [|(Trace.t_to_js x1127)|]);
                               ignore
                                 (Ojs.call x1130 "push"
                                    [|(Tracer.t_to_js x1128)|]);
                               (match x1129 with
                                | Some x1131 ->
                                    ignore
                                      (Ojs.call x1130 "push"
                                         [|(Ojs.bool_to_js x1131)|])
                                | None -> ());
                               x1130))|])
    let (trace' :
      t ->
        value:Trace.t ->
          tracer:Tracer.t -> ?trace_options:TraceOptions.t -> unit -> unit)
      =
      fun (x1139 : t) ->
        fun ~value:(x1134 : Trace.t) ->
          fun ~tracer:(x1135 : Tracer.t) ->
            fun ?trace_options:(x1136 : TraceOptions.t option) ->
              fun () ->
                ignore
                  (let x1140 = t_to_js x1139 in
                   Ojs.call (Ojs.get_prop_ascii x1140 "trace") "apply"
                     [|x1140;((let x1137 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1137 "push"
                                    [|(Trace.t_to_js x1134)|]);
                               ignore
                                 (Ojs.call x1137 "push"
                                    [|(Tracer.t_to_js x1135)|]);
                               (match x1136 with
                                | Some x1138 ->
                                    ignore
                                      (Ojs.call x1137 "push"
                                         [|(TraceOptions.t_to_js x1138)|])
                                | None -> ());
                               x1137))|])
    let (get_on_error :
      t ->
        (Error.t * Message.t or_undefined * int or_undefined)
          Vscode_jsonrpc_events.Event.t)
      =
      fun (x1141 : t) ->
        Vscode_jsonrpc_events.Event.t_of_js
          (fun (x1142 : Ojs.t) ->
             let x1143 = x1142 in
             ((Error.t_of_js (Ojs.array_get x1143 0)),
               (or_undefined_of_js Message.t_of_js (Ojs.array_get x1143 1)),
               (or_undefined_of_js Ojs.int_of_js (Ojs.array_get x1143 2))))
          (Ojs.get_prop_ascii (t_to_js x1141) "onError")
    let (set_on_error :
      t ->
        (Error.t * Message.t or_undefined * int or_undefined)
          Vscode_jsonrpc_events.Event.t -> unit)
      =
      fun (x1146 : t) ->
        fun
          (x1147 :
            (Error.t * Message.t or_undefined * int or_undefined)
              Vscode_jsonrpc_events.Event.t)
          ->
          Ojs.set_prop_ascii (t_to_js x1146) "onError"
            (Vscode_jsonrpc_events.Event.t_to_js
               (fun
                  (x1148 :
                    (Error.t * Message.t or_undefined * int or_undefined))
                  ->
                  let (x1149, x1150, x1151) = x1148 in
                  let x1152 = Ojs.array_make 3 in
                  Ojs.array_set x1152 0 (Error.t_to_js x1149);
                  Ojs.array_set x1152 1
                    (or_undefined_to_js Message.t_to_js x1150);
                  Ojs.array_set x1152 2
                    (or_undefined_to_js Ojs.int_to_js x1151);
                  x1152) x1147)
    let (get_on_close : t -> unit Vscode_jsonrpc_events.Event.t) =
      fun (x1155 : t) ->
        Vscode_jsonrpc_events.Event.t_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x1155) "onClose")
    let (set_on_close : t -> unit Vscode_jsonrpc_events.Event.t -> unit) =
      fun (x1157 : t) ->
        fun (x1158 : unit Vscode_jsonrpc_events.Event.t) ->
          Ojs.set_prop_ascii (t_to_js x1157) "onClose"
            (Vscode_jsonrpc_events.Event.t_to_js Ojs.unit_to_js x1158)
    let (listen : t -> unit) =
      fun (x1160 : t) -> ignore (Ojs.call (t_to_js x1160) "listen" [||])
    let (end_ : t -> unit) =
      fun (x1161 : t) -> ignore (Ojs.call (t_to_js x1161) "end" [||])
    let (get_on_dispose : t -> unit Vscode_jsonrpc_events.Event.t) =
      fun (x1162 : t) ->
        Vscode_jsonrpc_events.Event.t_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x1162) "onDispose")
    let (set_on_dispose : t -> unit Vscode_jsonrpc_events.Event.t -> unit) =
      fun (x1164 : t) ->
        fun (x1165 : unit Vscode_jsonrpc_events.Event.t) ->
          Ojs.set_prop_ascii (t_to_js x1164) "onDispose"
            (Vscode_jsonrpc_events.Event.t_to_js Ojs.unit_to_js x1165)
    let (dispose : t -> unit) =
      fun (x1167 : t) -> ignore (Ojs.call (t_to_js x1167) "dispose" [||])
    let (inspect : t -> unit) =
      fun (x1168 : t) -> ignore (Ojs.call (t_to_js x1168) "inspect" [||])
  end
module ConnectionStrategy =
  struct
    type t = AnonymousInterface0.t
    let rec t_of_js : Ojs.t -> t =
      fun (x1170 : Ojs.t) -> AnonymousInterface0.t_of_js x1170
    and t_to_js : t -> Ojs.t =
      fun (x1169 : AnonymousInterface0.t) ->
        AnonymousInterface0.t_to_js x1169
    let (is : value:any -> bool) =
      fun ~value:(x1171 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ConnectionStrategy") "is"
             [|(any_to_js x1171)|])
  end
module CancellationId =
  struct
    type t = string or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x1174 : Ojs.t) -> or_number_of_js Ojs.string_of_js x1174
    and t_to_js : t -> Ojs.t =
      fun (x1172 : string or_number) ->
        or_number_to_js Ojs.string_to_js x1172
  end
module CancellationReceiverStrategy =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1177 : Ojs.t) -> x1177
    and t_to_js : t -> Ojs.t = fun (x1176 : Ojs.t) -> x1176
    let (create_cancellation_token_source :
      t ->
        id:CancellationId.t ->
          Vscode_jsonrpc_cancellation.AbstractCancellationTokenSource.t)
      =
      fun (x1179 : t) ->
        fun ~id:(x1178 : CancellationId.t) ->
          Vscode_jsonrpc_cancellation.AbstractCancellationTokenSource.t_of_js
            (Ojs.call (t_to_js x1179) "createCancellationTokenSource"
               [|(CancellationId.t_to_js x1178)|])
    let (dispose : t -> unit) =
      fun (x1180 : t) -> ignore (Ojs.call (t_to_js x1180) "dispose" [||])
    let (message : t) =
      t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "CancellationReceiverStrategy")
           "Message")
    let (is : value:any -> bool) =
      fun ~value:(x1181 : any) ->
        Ojs.bool_of_js
          (Ojs.call
             (Ojs.get_prop_ascii Ojs.global "CancellationReceiverStrategy")
             "is" [|(any_to_js x1181)|])
  end
module CancellationSenderStrategy =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1183 : Ojs.t) -> x1183
    and t_to_js : t -> Ojs.t = fun (x1182 : Ojs.t) -> x1182
    let (send_cancellation :
      t -> conn:MessageConnection.t -> id:CancellationId.t -> unit) =
      fun (x1186 : t) ->
        fun ~conn:(x1184 : MessageConnection.t) ->
          fun ~id:(x1185 : CancellationId.t) ->
            ignore
              (Ojs.call (t_to_js x1186) "sendCancellation"
                 [|(MessageConnection.t_to_js x1184);(CancellationId.t_to_js
                                                        x1185)|])
    let (cleanup : t -> id:CancellationId.t -> unit) =
      fun (x1188 : t) ->
        fun ~id:(x1187 : CancellationId.t) ->
          ignore
            (Ojs.call (t_to_js x1188) "cleanup"
               [|(CancellationId.t_to_js x1187)|])
    let (dispose : t -> unit) =
      fun (x1189 : t) -> ignore (Ojs.call (t_to_js x1189) "dispose" [||])
    let (message : t) =
      t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "CancellationSenderStrategy")
           "Message")
    let (is : value:any -> bool) =
      fun ~value:(x1190 : any) ->
        Ojs.bool_of_js
          (Ojs.call
             (Ojs.get_prop_ascii Ojs.global "CancellationSenderStrategy")
             "is" [|(any_to_js x1190)|])
  end
module CancellationStrategy =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1192 : Ojs.t) -> x1192
    and t_to_js : t -> Ojs.t = fun (x1191 : Ojs.t) -> x1191
    let (get_receiver : t -> CancellationReceiverStrategy.t) =
      fun (x1193 : t) ->
        CancellationReceiverStrategy.t_of_js
          (Ojs.get_prop_ascii (t_to_js x1193) "receiver")
    let (set_receiver : t -> CancellationReceiverStrategy.t -> unit) =
      fun (x1194 : t) ->
        fun (x1195 : CancellationReceiverStrategy.t) ->
          Ojs.set_prop_ascii (t_to_js x1194) "receiver"
            (CancellationReceiverStrategy.t_to_js x1195)
    let (get_sender : t -> CancellationSenderStrategy.t) =
      fun (x1196 : t) ->
        CancellationSenderStrategy.t_of_js
          (Ojs.get_prop_ascii (t_to_js x1196) "sender")
    let (set_sender : t -> CancellationSenderStrategy.t -> unit) =
      fun (x1197 : t) ->
        fun (x1198 : CancellationSenderStrategy.t) ->
          Ojs.set_prop_ascii (t_to_js x1197) "sender"
            (CancellationSenderStrategy.t_to_js x1198)
    let (message : t) =
      t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "CancellationStrategy") "Message")
    let (is : value:any -> bool) =
      fun ~value:(x1199 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "CancellationStrategy")
             "is" [|(any_to_js x1199)|])
  end
module ConnectionOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1201 : Ojs.t) -> x1201
    and t_to_js : t -> Ojs.t = fun (x1200 : Ojs.t) -> x1200
    let (get_cancellation_strategy : t -> CancellationStrategy.t) =
      fun (x1202 : t) ->
        CancellationStrategy.t_of_js
          (Ojs.get_prop_ascii (t_to_js x1202) "cancellationStrategy")
    let (set_cancellation_strategy : t -> CancellationStrategy.t -> unit) =
      fun (x1203 : t) ->
        fun (x1204 : CancellationStrategy.t) ->
          Ojs.set_prop_ascii (t_to_js x1203) "cancellationStrategy"
            (CancellationStrategy.t_to_js x1204)
    let (get_connection_strategy : t -> ConnectionStrategy.t) =
      fun (x1205 : t) ->
        ConnectionStrategy.t_of_js
          (Ojs.get_prop_ascii (t_to_js x1205) "connectionStrategy")
    let (set_connection_strategy : t -> ConnectionStrategy.t -> unit) =
      fun (x1206 : t) ->
        fun (x1207 : ConnectionStrategy.t) ->
          Ojs.set_prop_ascii (t_to_js x1206) "connectionStrategy"
            (ConnectionStrategy.t_to_js x1207)
    let (is : value:any -> bool) =
      fun ~value:(x1208 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ConnectionOptions") "is"
             [|(any_to_js x1208)|])
  end
let (create_message_connection :
  message_reader:Vscode_jsonrpc_messageReader.MessageReader.t ->
    message_writer:Vscode_jsonrpc_messageWriter.MessageWriter.t ->
      ?_logger:Logger.t ->
        ?options:ConnectionOptions.t -> unit -> MessageConnection.t)
  =
  fun ~message_reader:(x1209 : Vscode_jsonrpc_messageReader.MessageReader.t)
    ->
    fun
      ~message_writer:(x1210 : Vscode_jsonrpc_messageWriter.MessageWriter.t)
      ->
      fun ?_logger:(x1211 : Logger.t option) ->
        fun ?options:(x1212 : ConnectionOptions.t option) ->
          fun () ->
            MessageConnection.t_of_js
              (let x1216 = Ojs.global in
               Ojs.call (Ojs.get_prop_ascii x1216 "createMessageConnection")
                 "apply"
                 [|x1216;((let x1213 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1213 "push"
                                [|(Vscode_jsonrpc_messageReader.MessageReader.t_to_js
                                     x1209)|]);
                           ignore
                             (Ojs.call x1213 "push"
                                [|(Vscode_jsonrpc_messageWriter.MessageWriter.t_to_js
                                     x1210)|]);
                           (match x1211 with
                            | Some x1215 ->
                                ignore
                                  (Ojs.call x1213 "push"
                                     [|(Logger.t_to_js x1215)|])
                            | None -> ());
                           (match x1212 with
                            | Some x1214 ->
                                ignore
                                  (Ojs.call x1213 "push"
                                     [|(ConnectionOptions.t_to_js x1214)|])
                            | None -> ());
                           x1213))|])
