[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Semaphore =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x2 : Ojs.t) -> x2
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1 : Ojs.t) -> x1
    type t_0 = unit t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5 : Ojs.t) -> t_of_js Ojs.unit_of_js x5
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3 : unit t) -> t_to_js Ojs.unit_to_js x3
    let (get__capacity : 'T t -> any) =
      fun (x7 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x7) "_capacity")
    let (set__capacity : 'T t -> any -> unit) =
      fun (x9 : 'T t) ->
        fun (x10 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x9) "_capacity"
            (any_to_js x10)
    let (get__active : 'T t -> any) =
      fun (x12 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x12) "_active")
    let (set__active : 'T t -> any -> unit) =
      fun (x14 : 'T t) ->
        fun (x15 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x14) "_active"
            (any_to_js x15)
    let (get__waiting : 'T t -> any) =
      fun (x17 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x17) "_waiting")
    let (set__waiting : 'T t -> any -> unit) =
      fun (x19 : 'T t) ->
        fun (x20 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x19) "_waiting"
            (any_to_js x20)
    let (create : ?capacity:int -> unit -> 'T t) =
      fun ?capacity:(x22 : int option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr
               (Ojs.get_prop_ascii
                  (Ojs.get_prop_ascii Ojs.global
                     "__LIB__VSCODE_JSONRPC__IMPORTS") "Semaphore")
               (let x23 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x22 with
                 | Some x24 ->
                     ignore (Ojs.call x23 "push" [|(Ojs.int_to_js x24)|])
                 | None -> ());
                x23))
    let (lock :
      'T t -> thunk:(unit -> ('T, 'T Promise.t) union2) -> 'T Promise.t) =
      fun (x30 : 'T t) ->
        fun ~thunk:(x26 : unit -> ('T, 'T Promise.t) union2) ->
          Promise.t_of_js Obj.magic
            (Ojs.call (t_to_js Obj.magic x30) "lock"
               [|(Ojs.fun_to_js 1
                    (fun _ ->
                       union2_to_js Obj.magic
                         (fun (x28 : 'T Promise.t) ->
                            Promise.t_to_js Obj.magic x28) (x26 ())))|])
    let (get_active : 'T t -> int) =
      fun (x33 : 'T t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x33) "active")
    let (get_run_next : 'T t -> any) =
      fun (x35 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x35) "runNext")
    let (set_run_next : 'T t -> any -> unit) =
      fun (x37 : 'T t) ->
        fun (x38 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x37) "runNext"
            (any_to_js x38)
    let (get_do_run_next : 'T t -> any) =
      fun (x40 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x40) "doRunNext")
    let (set_do_run_next : 'T t -> any -> unit) =
      fun (x42 : 'T t) ->
        fun (x43 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x42) "doRunNext"
            (any_to_js x43)
  end
