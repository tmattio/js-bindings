[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
module Event =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x2 : Ojs.t) -> x2
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1 : Ojs.t) -> x1
    let (apply :
      'T t ->
        listener:(e:'T -> any) ->
          ?this_args:any ->
            ?disposables:Vscode_jsonrpc_disposable.Disposable.t list ->
              unit -> Vscode_jsonrpc_disposable.Disposable.t)
      =
      fun (x11 : 'T t) ->
        fun ~listener:(x3 : e:'T -> any) ->
          fun ?this_args:(x4 : any option) ->
            fun
              ?disposables:(x5 :
                             Vscode_jsonrpc_disposable.Disposable.t list
                               option)
              ->
              fun () ->
                Vscode_jsonrpc_disposable.Disposable.t_of_js
                  (Ojs.call (t_to_js Obj.magic x11) "apply"
                     [|Ojs.null;((let x6 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x6 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x10 : Ojs.t) ->
                                               any_to_js
                                                 (x3 ~e:(Obj.magic x10))))|]);
                                  (match x4 with
                                   | Some x9 ->
                                       ignore
                                         (Ojs.call x6 "push"
                                            [|(any_to_js x9)|])
                                   | None -> ());
                                  (match x5 with
                                   | Some x7 ->
                                       ignore
                                         (Ojs.call x6 "push"
                                            [|(Ojs.list_to_js
                                                 Vscode_jsonrpc_disposable.Disposable.t_to_js
                                                 x7)|])
                                   | None -> ());
                                  x6))|])
    let (none : any t) =
      t_of_js any_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "Event") "None")
  end
module EmitterOptions =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15 : Ojs.t) -> x15
    and t_to_js : t -> Ojs.t = fun (x14 : Ojs.t) -> x14
    let (get_on_first_listener_add : t -> untyped_function) =
      fun (x16 : t) ->
        untyped_function_of_js
          (Ojs.get_prop_ascii (t_to_js x16) "onFirstListenerAdd")
    let (set_on_first_listener_add : t -> untyped_function -> unit) =
      fun (x17 : t) ->
        fun (x18 : untyped_function) ->
          Ojs.set_prop_ascii (t_to_js x17) "onFirstListenerAdd"
            (untyped_function_to_js x18)
    let (get_on_last_listener_remove : t -> untyped_function) =
      fun (x19 : t) ->
        untyped_function_of_js
          (Ojs.get_prop_ascii (t_to_js x19) "onLastListenerRemove")
    let (set_on_last_listener_remove : t -> untyped_function -> unit) =
      fun (x20 : t) ->
        fun (x21 : untyped_function) ->
          Ojs.set_prop_ascii (t_to_js x20) "onLastListenerRemove"
            (untyped_function_to_js x21)
  end
module Emitter =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x23 : Ojs.t) -> x23
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x22 : Ojs.t) -> x22
    let (get__options : 'T t -> any) =
      fun (x24 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x24) "_options")
    let (set__options : 'T t -> any -> unit) =
      fun (x26 : 'T t) ->
        fun (x27 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x26) "_options"
            (any_to_js x27)
    let (get__noop : unit -> any) =
      fun () ->
        any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "Emitter") "_noop")
    let (set__noop : any -> unit) =
      fun (x29 : any) ->
        Ojs.set_prop_ascii
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
             "Emitter") "_noop" (any_to_js x29)
    let (get__event : 'T t -> any) =
      fun (x30 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x30) "_event")
    let (set__event : 'T t -> any -> unit) =
      fun (x32 : 'T t) ->
        fun (x33 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x32) "_event" (any_to_js x33)
    let (get__callbacks : 'T t -> any) =
      fun (x35 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x35) "_callbacks")
    let (set__callbacks : 'T t -> any -> unit) =
      fun (x37 : 'T t) ->
        fun (x38 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x37) "_callbacks"
            (any_to_js x38)
    let (create : ?_options:EmitterOptions.t or_undefined -> unit -> 'T t) =
      fun ?_options:(x40 : EmitterOptions.t or_undefined option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr
               (Ojs.get_prop_ascii
                  (Ojs.get_prop_ascii Ojs.global
                     "__LIB__VSCODE_JSONRPC__IMPORTS") "Emitter")
               (let x41 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x40 with
                 | Some x42 ->
                     ignore
                       (Ojs.call x41 "push"
                          [|(or_undefined_to_js EmitterOptions.t_to_js x42)|])
                 | None -> ());
                x41))
    let (get_event : 'T t -> 'T Event.t) =
      fun (x45 : 'T t) ->
        Event.t_of_js Obj.magic
          (Ojs.get_prop_ascii (t_to_js Obj.magic x45) "event")
    let (fire : 'T t -> event:'T -> any) =
      fun (x49 : 'T t) ->
        fun ~event:(x48 : 'T) ->
          any_of_js
            (Ojs.call (t_to_js Obj.magic x49) "fire" [|(Obj.magic x48)|])
    let (dispose : 'T t -> unit) =
      fun (x51 : 'T t) ->
        ignore (Ojs.call (t_to_js Obj.magic x51) "dispose" [||])
  end
