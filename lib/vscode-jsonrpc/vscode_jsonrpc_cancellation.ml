[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
module CancellationToken =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get_is_cancellation_requested : t -> bool) =
      fun (x3 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x3) "isCancellationRequested")
    let (get_on_cancellation_requested :
      t -> any Vscode_jsonrpc_events.Event.t) =
      fun (x4 : t) ->
        Vscode_jsonrpc_events.Event.t_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x4) "onCancellationRequested")
    let (none : t) =
      t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "CancellationToken") "None")
    let (cancelled : t) =
      t_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii
              (Ojs.get_prop_ascii Ojs.global "__LIB__VSCODE_JSONRPC__IMPORTS")
              "CancellationToken") "Cancelled")
    let (is : value:any -> bool) =
      fun ~value:(x6 : any) ->
        Ojs.bool_of_js
          (Ojs.call
             (Ojs.get_prop_ascii
                (Ojs.get_prop_ascii Ojs.global
                   "__LIB__VSCODE_JSONRPC__IMPORTS") "CancellationToken")
             "is" [|(any_to_js x6)|])
  end
module AbstractCancellationTokenSource =
  struct
    include struct include Vscode_jsonrpc_disposable.Disposable end
    let (get_token : t -> CancellationToken.t) =
      fun (x7 : t) ->
        CancellationToken.t_of_js (Ojs.get_prop_ascii (t_to_js x7) "token")
    let (set_token : t -> CancellationToken.t -> unit) =
      fun (x8 : t) ->
        fun (x9 : CancellationToken.t) ->
          Ojs.set_prop_ascii (t_to_js x8) "token"
            (CancellationToken.t_to_js x9)
    let (cancel : t -> unit) =
      fun (x10 : t) -> ignore (Ojs.call (t_to_js x10) "cancel" [||])
  end
module CancellationTokenSource =
  struct
    include struct include AbstractCancellationTokenSource end
    let (get__token : t -> any) =
      fun (x11 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x11) "_token")
    let (set__token : t -> any -> unit) =
      fun (x12 : t) ->
        fun (x13 : any) ->
          Ojs.set_prop_ascii (t_to_js x12) "_token" (any_to_js x13)
    let (get_token : t -> CancellationToken.t) =
      fun (x14 : t) ->
        CancellationToken.t_of_js (Ojs.get_prop_ascii (t_to_js x14) "token")
    let (cancel : t -> unit) =
      fun (x15 : t) -> ignore (Ojs.call (t_to_js x15) "cancel" [||])
    let (dispose : t -> unit) =
      fun (x16 : t) -> ignore (Ojs.call (t_to_js x16) "dispose" [||])
  end
