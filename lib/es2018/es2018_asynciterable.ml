[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2017
module SymbolConstructor =
  struct
    include struct include SymbolConstructor end
    let (get_async_iterator : t -> symbol) =
      fun (x1 : t) ->
        symbol_of_js (Ojs.get_prop_ascii (t_to_js x1) "asyncIterator")
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t = Ojs.t
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) -> fun (x3 : Ojs.t) -> x3
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) -> fun (x2 : Ojs.t) -> x2
    let (next :
      ('T, 'TReturn, 'TNext) t ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x7 : ('T, 'TReturn, 'TNext) t) ->
        fun ~args:(x4 : any list) ->
          Promise.t_of_js
            (fun (x12 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x12)
            (let x11 = t_to_js Obj.magic Obj.magic Obj.magic x7 in
             Ojs.call (Ojs.get_prop_ascii x11 "next") "apply"
               [|x11;((let x5 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6 : any) ->
                            ignore (Ojs.call x5 "push" [|(any_to_js x6)|]))
                         x4;
                       x5))|])
    let (return :
      ('T, 'TReturn, 'TNext) t ->
        ?value:('TReturn, 'TReturn Promise.t) union2 ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x21 : ('T, 'TReturn, 'TNext) t) ->
        fun ?value:(x15 : ('TReturn, 'TReturn Promise.t) union2 option) ->
          fun () ->
            Promise.t_of_js
              (fun (x26 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x26)
              (let x25 = t_to_js Obj.magic Obj.magic Obj.magic x21 in
               Ojs.call (Ojs.get_prop_ascii x25 "return") "apply"
                 [|x25;((let x16 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x15 with
                          | Some x17 ->
                              ignore
                                (Ojs.call x16 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x19 : 'TReturn Promise.t) ->
                                           Promise.t_to_js Obj.magic x19) x17)|])
                          | None -> ());
                         x16))|])
    let (throw :
      ('T, 'TReturn, 'TNext) t ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x32 : ('T, 'TReturn, 'TNext) t) ->
        fun ?e:(x29 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x37 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x37)
              (let x36 = t_to_js Obj.magic Obj.magic Obj.magic x32 in
               Ojs.call (Ojs.get_prop_ascii x36 "throw") "apply"
                 [|x36;((let x30 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x29 with
                          | Some x31 ->
                              ignore
                                (Ojs.call x30 "push" [|(any_to_js x31)|])
                          | None -> ());
                         x30))|])
  end
module AsyncIterable =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x41 : Ojs.t) -> x41
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x40 : Ojs.t) -> x40
  end
module AsyncIterableIterator =
  struct
    type 'T t = ('T, any, never or_undefined) AsyncIterator.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x47 : Ojs.t) ->
          AsyncIterator.t_of_js __T_of_js any_of_js
            (fun (x50 : Ojs.t) -> or_undefined_of_js never_of_js x50) x47
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x42 : (__T, any, never or_undefined) AsyncIterator.t) ->
          AsyncIterator.t_to_js __T_to_js any_to_js
            (fun (x45 : never or_undefined) ->
               or_undefined_to_js never_to_js x45) x42
  end
