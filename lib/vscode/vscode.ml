[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2015
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type anonymous_interface_5 = [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js : Ojs.t -> anonymous_interface_5
          = Obj.magic
        and anonymous_interface_5_to_js : anonymous_interface_5 -> Ojs.t =
          Obj.magic
        type anonymous_interface_6 = [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js : Ojs.t -> anonymous_interface_6
          = Obj.magic
        and anonymous_interface_6_to_js : anonymous_interface_6 -> Ojs.t =
          Obj.magic
        type anonymous_interface_7 = [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js : Ojs.t -> anonymous_interface_7
          = Obj.magic
        and anonymous_interface_7_to_js : anonymous_interface_7 -> Ojs.t =
          Obj.magic
        type anonymous_interface_8 = [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js : Ojs.t -> anonymous_interface_8
          = Obj.magic
        and anonymous_interface_8_to_js : anonymous_interface_8 -> Ojs.t =
          Obj.magic
        type anonymous_interface_9 = [ `anonymous_interface_9 ] intf
        let rec anonymous_interface_9_of_js : Ojs.t -> anonymous_interface_9
          = Obj.magic
        and anonymous_interface_9_to_js : anonymous_interface_9 -> Ojs.t =
          Obj.magic
        type anonymous_interface_10 = [ `anonymous_interface_10 ] intf
        let rec anonymous_interface_10_of_js :
          Ojs.t -> anonymous_interface_10 = Obj.magic
        and anonymous_interface_10_to_js : anonymous_interface_10 -> Ojs.t =
          Obj.magic
        type anonymous_interface_11 = [ `anonymous_interface_11 ] intf
        let rec anonymous_interface_11_of_js :
          Ojs.t -> anonymous_interface_11 = Obj.magic
        and anonymous_interface_11_to_js : anonymous_interface_11 -> Ojs.t =
          Obj.magic
        type anonymous_interface_12 = [ `anonymous_interface_12 ] intf
        let rec anonymous_interface_12_of_js :
          Ojs.t -> anonymous_interface_12 = Obj.magic
        and anonymous_interface_12_to_js : anonymous_interface_12 -> Ojs.t =
          Obj.magic
        type anonymous_interface_13 = [ `anonymous_interface_13 ] intf
        let rec anonymous_interface_13_of_js :
          Ojs.t -> anonymous_interface_13 = Obj.magic
        and anonymous_interface_13_to_js : anonymous_interface_13 -> Ojs.t =
          Obj.magic
        type anonymous_interface_14 = [ `anonymous_interface_14 ] intf
        let rec anonymous_interface_14_of_js :
          Ojs.t -> anonymous_interface_14 = Obj.magic
        and anonymous_interface_14_to_js : anonymous_interface_14 -> Ojs.t =
          Obj.magic
        type anonymous_interface_15 = [ `anonymous_interface_15 ] intf
        let rec anonymous_interface_15_of_js :
          Ojs.t -> anonymous_interface_15 = Obj.magic
        and anonymous_interface_15_to_js : anonymous_interface_15 -> Ojs.t =
          Obj.magic
        type anonymous_interface_16 = [ `anonymous_interface_16 ] intf
        let rec anonymous_interface_16_of_js :
          Ojs.t -> anonymous_interface_16 = Obj.magic
        and anonymous_interface_16_to_js : anonymous_interface_16 -> Ojs.t =
          Obj.magic
        type anonymous_interface_17 = [ `anonymous_interface_17 ] intf
        let rec anonymous_interface_17_of_js :
          Ojs.t -> anonymous_interface_17 = Obj.magic
        and anonymous_interface_17_to_js : anonymous_interface_17 -> Ojs.t =
          Obj.magic
        type anonymous_interface_18 = [ `anonymous_interface_18 ] intf
        let rec anonymous_interface_18_of_js :
          Ojs.t -> anonymous_interface_18 = Obj.magic
        and anonymous_interface_18_to_js : anonymous_interface_18 -> Ojs.t =
          Obj.magic
        type anonymous_interface_19 = [ `anonymous_interface_19 ] intf
        let rec anonymous_interface_19_of_js :
          Ojs.t -> anonymous_interface_19 = Obj.magic
        and anonymous_interface_19_to_js : anonymous_interface_19 -> Ojs.t =
          Obj.magic
        type anonymous_interface_20 = [ `anonymous_interface_20 ] intf
        let rec anonymous_interface_20_of_js :
          Ojs.t -> anonymous_interface_20 = Obj.magic
        and anonymous_interface_20_to_js : anonymous_interface_20 -> Ojs.t =
          Obj.magic
        type anonymous_interface_21 = [ `anonymous_interface_21 ] intf
        let rec anonymous_interface_21_of_js :
          Ojs.t -> anonymous_interface_21 = Obj.magic
        and anonymous_interface_21_to_js : anonymous_interface_21 -> Ojs.t =
          Obj.magic
        type anonymous_interface_22 = [ `anonymous_interface_22 ] intf
        let rec anonymous_interface_22_of_js :
          Ojs.t -> anonymous_interface_22 = Obj.magic
        and anonymous_interface_22_to_js : anonymous_interface_22 -> Ojs.t =
          Obj.magic
        type anonymous_interface_23 = [ `anonymous_interface_23 ] intf
        let rec anonymous_interface_23_of_js :
          Ojs.t -> anonymous_interface_23 = Obj.magic
        and anonymous_interface_23_to_js : anonymous_interface_23 -> Ojs.t =
          Obj.magic
        type anonymous_interface_24 = [ `anonymous_interface_24 ] intf
        let rec anonymous_interface_24_of_js :
          Ojs.t -> anonymous_interface_24 = Obj.magic
        and anonymous_interface_24_to_js : anonymous_interface_24 -> Ojs.t =
          Obj.magic
        type anonymous_interface_25 = [ `anonymous_interface_25 ] intf
        let rec anonymous_interface_25_of_js :
          Ojs.t -> anonymous_interface_25 = Obj.magic
        and anonymous_interface_25_to_js : anonymous_interface_25 -> Ojs.t =
          Obj.magic
        type anonymous_interface_26 = [ `anonymous_interface_26 ] intf
        let rec anonymous_interface_26_of_js :
          Ojs.t -> anonymous_interface_26 = Obj.magic
        and anonymous_interface_26_to_js : anonymous_interface_26 -> Ojs.t =
          Obj.magic
        type anonymous_interface_27 = [ `anonymous_interface_27 ] intf
        let rec anonymous_interface_27_of_js :
          Ojs.t -> anonymous_interface_27 = Obj.magic
        and anonymous_interface_27_to_js : anonymous_interface_27 -> Ojs.t =
          Obj.magic
        type anonymous_interface_28 = [ `anonymous_interface_28 ] intf
        let rec anonymous_interface_28_of_js :
          Ojs.t -> anonymous_interface_28 = Obj.magic
        and anonymous_interface_28_to_js : anonymous_interface_28 -> Ojs.t =
          Obj.magic
        type anonymous_interface_29 = [ `anonymous_interface_29 ] intf
        let rec anonymous_interface_29_of_js :
          Ojs.t -> anonymous_interface_29 = Obj.magic
        and anonymous_interface_29_to_js : anonymous_interface_29 -> Ojs.t =
          Obj.magic
        type anonymous_interface_30 = [ `anonymous_interface_30 ] intf
        let rec anonymous_interface_30_of_js :
          Ojs.t -> anonymous_interface_30 = Obj.magic
        and anonymous_interface_30_to_js : anonymous_interface_30 -> Ojs.t =
          Obj.magic
        type anonymous_interface_31 = [ `anonymous_interface_31 ] intf
        let rec anonymous_interface_31_of_js :
          Ojs.t -> anonymous_interface_31 = Obj.magic
        and anonymous_interface_31_to_js : anonymous_interface_31 -> Ojs.t =
          Obj.magic
        type anonymous_interface_32 = [ `anonymous_interface_32 ] intf
        let rec anonymous_interface_32_of_js :
          Ojs.t -> anonymous_interface_32 = Obj.magic
        and anonymous_interface_32_to_js : anonymous_interface_32 -> Ojs.t =
          Obj.magic
        type anonymous_interface_33 = [ `anonymous_interface_33 ] intf
        let rec anonymous_interface_33_of_js :
          Ojs.t -> anonymous_interface_33 = Obj.magic
        and anonymous_interface_33_to_js : anonymous_interface_33 -> Ojs.t =
          Obj.magic
        type anonymous_interface_34 = [ `anonymous_interface_34 ] intf
        let rec anonymous_interface_34_of_js :
          Ojs.t -> anonymous_interface_34 = Obj.magic
        and anonymous_interface_34_to_js : anonymous_interface_34 -> Ojs.t =
          Obj.magic
        type anonymous_interface_35 = [ `anonymous_interface_35 ] intf
        let rec anonymous_interface_35_of_js :
          Ojs.t -> anonymous_interface_35 = Obj.magic
        and anonymous_interface_35_to_js : anonymous_interface_35 -> Ojs.t =
          Obj.magic
        type anonymous_interface_36 = [ `anonymous_interface_36 ] intf
        let rec anonymous_interface_36_of_js :
          Ojs.t -> anonymous_interface_36 = Obj.magic
        and anonymous_interface_36_to_js : anonymous_interface_36 -> Ojs.t =
          Obj.magic
        type anonymous_interface_37 = [ `anonymous_interface_37 ] intf
        let rec anonymous_interface_37_of_js :
          Ojs.t -> anonymous_interface_37 = Obj.magic
        and anonymous_interface_37_to_js : anonymous_interface_37 -> Ojs.t =
          Obj.magic
        type anonymous_interface_38 = [ `anonymous_interface_38 ] intf
        let rec anonymous_interface_38_of_js :
          Ojs.t -> anonymous_interface_38 = Obj.magic
        and anonymous_interface_38_to_js : anonymous_interface_38 -> Ojs.t =
          Obj.magic
        type anonymous_interface_39 = [ `anonymous_interface_39 ] intf
        let rec anonymous_interface_39_of_js :
          Ojs.t -> anonymous_interface_39 = Obj.magic
        and anonymous_interface_39_to_js : anonymous_interface_39 -> Ojs.t =
          Obj.magic
        type anonymous_interface_40 = [ `anonymous_interface_40 ] intf
        let rec anonymous_interface_40_of_js :
          Ojs.t -> anonymous_interface_40 = Obj.magic
        and anonymous_interface_40_to_js : anonymous_interface_40 -> Ojs.t =
          Obj.magic
        type anonymous_interface_41 = [ `anonymous_interface_41 ] intf
        let rec anonymous_interface_41_of_js :
          Ojs.t -> anonymous_interface_41 = Obj.magic
        and anonymous_interface_41_to_js : anonymous_interface_41 -> Ojs.t =
          Obj.magic
        type anonymous_interface_42 = [ `anonymous_interface_42 ] intf
        let rec anonymous_interface_42_of_js :
          Ojs.t -> anonymous_interface_42 = Obj.magic
        and anonymous_interface_42_to_js : anonymous_interface_42 -> Ojs.t =
          Obj.magic
        type anonymous_interface_43 = [ `anonymous_interface_43 ] intf
        let rec anonymous_interface_43_of_js :
          Ojs.t -> anonymous_interface_43 = Obj.magic
        and anonymous_interface_43_to_js : anonymous_interface_43 -> Ojs.t =
          Obj.magic
        type anonymous_interface_44 = [ `anonymous_interface_44 ] intf
        let rec anonymous_interface_44_of_js :
          Ojs.t -> anonymous_interface_44 = Obj.magic
        and anonymous_interface_44_to_js : anonymous_interface_44 -> Ojs.t =
          Obj.magic
        type anonymous_interface_45 = [ `anonymous_interface_45 ] intf
        let rec anonymous_interface_45_of_js :
          Ojs.t -> anonymous_interface_45 = Obj.magic
        and anonymous_interface_45_to_js : anonymous_interface_45 -> Ojs.t =
          Obj.magic
        type anonymous_interface_46 = [ `anonymous_interface_46 ] intf
        let rec anonymous_interface_46_of_js :
          Ojs.t -> anonymous_interface_46 = Obj.magic
        and anonymous_interface_46_to_js : anonymous_interface_46 -> Ojs.t =
          Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type 'T _Thenable = [ `Thenable of 'T ] intf
        and vscode_AccessibilityInformation =
          [ `Vscode_AccessibilityInformation ] intf
        and vscode_AuthenticationGetSessionOptions =
          [ `Vscode_AuthenticationGetSessionOptions ] intf
        and vscode_AuthenticationProvider =
          [ `Vscode_AuthenticationProvider ] intf
        and vscode_AuthenticationProviderAuthenticationSessionsChangeEvent =
          [ `Vscode_AuthenticationProviderAuthenticationSessionsChangeEvent ]
            intf
        and vscode_AuthenticationProviderInformation =
          [ `Vscode_AuthenticationProviderInformation ] intf
        and vscode_AuthenticationProviderOptions =
          [ `Vscode_AuthenticationProviderOptions ] intf
        and vscode_AuthenticationSession =
          [ `Vscode_AuthenticationSession ] intf
        and vscode_AuthenticationSessionAccountInformation =
          [ `Vscode_AuthenticationSessionAccountInformation ] intf
        and vscode_AuthenticationSessionsChangeEvent =
          [ `Vscode_AuthenticationSessionsChangeEvent ] intf
        and vscode_Breakpoint = [ `Vscode_Breakpoint ] intf
        and vscode_BreakpointsChangeEvent =
          [ `Vscode_BreakpointsChangeEvent ] intf
        and vscode_CallHierarchyIncomingCall =
          [ `Vscode_CallHierarchyIncomingCall ] intf
        and vscode_CallHierarchyItem = [ `Vscode_CallHierarchyItem ] intf
        and vscode_CallHierarchyOutgoingCall =
          [ `Vscode_CallHierarchyOutgoingCall ] intf
        and vscode_CallHierarchyProvider =
          [ `Vscode_CallHierarchyProvider ] intf
        and vscode_CancellationError = [ `Vscode_CancellationError ] intf
        and vscode_CancellationToken = [ `Vscode_CancellationToken ] intf
        and vscode_CancellationTokenSource =
          [ `Vscode_CancellationTokenSource ] intf
        and vscode_CharacterPair = (string * string)
        and vscode_Clipboard = [ `Vscode_Clipboard ] intf
        and vscode_CodeAction = [ `Vscode_CodeAction ] intf
        and vscode_CodeActionContext = [ `Vscode_CodeActionContext ] intf
        and vscode_CodeActionKind = [ `Vscode_CodeActionKind ] intf
        and 'T vscode_CodeActionProvider =
          [ `Vscode_CodeActionProvider of 'T ] intf
        and vscode_CodeActionProviderMetadata =
          [ `Vscode_CodeActionProviderMetadata ] intf
        and vscode_CodeActionTriggerKind = [ `Invoke  | `Automatic ]
        and vscode_CodeActionTriggerKind_Invoke = [ `Invoke ]
        and vscode_CodeActionTriggerKind_Automatic = [ `Automatic ]
        and vscode_CodeLens = [ `Vscode_CodeLens ] intf
        and 'T vscode_CodeLensProvider =
          [ `Vscode_CodeLensProvider of 'T ] intf
        and vscode_Color = [ `Vscode_Color ] intf
        and vscode_ColorInformation = [ `Vscode_ColorInformation ] intf
        and vscode_ColorPresentation = [ `Vscode_ColorPresentation ] intf
        and vscode_ColorTheme = [ `Vscode_ColorTheme ] intf
        and vscode_ColorThemeKind = [ `Light  | `Dark  | `HighContrast ]
        and vscode_ColorThemeKind_Light = [ `Light ]
        and vscode_ColorThemeKind_Dark = [ `Dark ]
        and vscode_ColorThemeKind_HighContrast = [ `HighContrast ]
        and vscode_Command = [ `Vscode_Command ] intf
        and vscode_Comment = [ `Vscode_Comment ] intf
        and vscode_CommentAuthorInformation =
          [ `Vscode_CommentAuthorInformation ] intf
        and vscode_CommentController = [ `Vscode_CommentController ] intf
        and vscode_CommentMode = [ `Editing  | `Preview ]
        and vscode_CommentMode_Editing = [ `Editing ]
        and vscode_CommentMode_Preview = [ `Preview ]
        and vscode_CommentOptions = [ `Vscode_CommentOptions ] intf
        and vscode_CommentReaction = [ `Vscode_CommentReaction ] intf
        and vscode_CommentReply = [ `Vscode_CommentReply ] intf
        and vscode_CommentRule = [ `Vscode_CommentRule ] intf
        and vscode_CommentThread = [ `Vscode_CommentThread ] intf
        and vscode_CommentThreadCollapsibleState =
          [ `Collapsed  | `Expanded ]
        and vscode_CommentThreadCollapsibleState_Collapsed = [ `Collapsed ]
        and vscode_CommentThreadCollapsibleState_Expanded = [ `Expanded ]
        and vscode_CommentingRangeProvider =
          [ `Vscode_CommentingRangeProvider ] intf
        and vscode_CompletionContext = [ `Vscode_CompletionContext ] intf
        and vscode_CompletionItem = [ `Vscode_CompletionItem ] intf
        and vscode_CompletionItemKind =
          [ `Text  | `Method  | `Function  | `Constructor  | `Field 
          | `Variable  | `Class  | `Interface  | `Module  | `Property 
          | `Unit  | `Value  | `Enum  | `Keyword  | `Snippet  | `Color 
          | `Reference  | `File  | `Folder  | `EnumMember  | `Constant 
          | `Struct  | `Event  | `Operator  | `TypeParameter  | `User 
          | `Issue ]
        and vscode_CompletionItemKind_Text = [ `Text ]
        and vscode_CompletionItemKind_Method = [ `Method ]
        and vscode_CompletionItemKind_Function = [ `Function ]
        and vscode_CompletionItemKind_Constructor = [ `Constructor ]
        and vscode_CompletionItemKind_Field = [ `Field ]
        and vscode_CompletionItemKind_Variable = [ `Variable ]
        and vscode_CompletionItemKind_Class = [ `Class ]
        and vscode_CompletionItemKind_Interface = [ `Interface ]
        and vscode_CompletionItemKind_Module = [ `Module ]
        and vscode_CompletionItemKind_Property = [ `Property ]
        and vscode_CompletionItemKind_Unit = [ `Unit ]
        and vscode_CompletionItemKind_Value = [ `Value ]
        and vscode_CompletionItemKind_Enum = [ `Enum ]
        and vscode_CompletionItemKind_Keyword = [ `Keyword ]
        and vscode_CompletionItemKind_Snippet = [ `Snippet ]
        and vscode_CompletionItemKind_Color = [ `Color ]
        and vscode_CompletionItemKind_Reference = [ `Reference ]
        and vscode_CompletionItemKind_File = [ `File ]
        and vscode_CompletionItemKind_Folder = [ `Folder ]
        and vscode_CompletionItemKind_EnumMember = [ `EnumMember ]
        and vscode_CompletionItemKind_Constant = [ `Constant ]
        and vscode_CompletionItemKind_Struct = [ `Struct ]
        and vscode_CompletionItemKind_Event = [ `Event ]
        and vscode_CompletionItemKind_Operator = [ `Operator ]
        and vscode_CompletionItemKind_TypeParameter = [ `TypeParameter ]
        and vscode_CompletionItemKind_User = [ `User ]
        and vscode_CompletionItemKind_Issue = [ `Issue ]
        and 'T vscode_CompletionItemProvider =
          [ `Vscode_CompletionItemProvider of 'T ] intf
        and vscode_CompletionItemTag = [ `Deprecated ]
        and vscode_CompletionItemTag_Deprecated = [ `Deprecated ]
        and 'T vscode_CompletionList = [ `Vscode_CompletionList of 'T ] intf
        and vscode_CompletionTriggerKind =
          [ `Invoke  | `TriggerCharacter 
          | `TriggerForIncompleteCompletions ]
        and vscode_CompletionTriggerKind_Invoke = [ `Invoke ]
        and vscode_CompletionTriggerKind_TriggerCharacter =
          [ `TriggerCharacter ]
        and vscode_CompletionTriggerKind_TriggerForIncompleteCompletions =
          [ `TriggerForIncompleteCompletions ]
        and vscode_ConfigurationChangeEvent =
          [ `Vscode_ConfigurationChangeEvent ] intf
        and vscode_ConfigurationScope =
          (vscode_TextDocument, vscode_Uri, vscode_WorkspaceFolder,
            anonymous_interface_35) union4
        and vscode_ConfigurationTarget =
          [ `Global  | `Workspace  | `WorkspaceFolder ]
        and vscode_ConfigurationTarget_Global = [ `Global ]
        and vscode_ConfigurationTarget_Workspace = [ `Workspace ]
        and vscode_ConfigurationTarget_WorkspaceFolder = [ `WorkspaceFolder ]
        and vscode_CustomDocument = [ `Vscode_CustomDocument ] intf
        and vscode_CustomDocumentBackup =
          [ `Vscode_CustomDocumentBackup ] intf
        and vscode_CustomDocumentBackupContext =
          [ `Vscode_CustomDocumentBackupContext ] intf
        and 'T vscode_CustomDocumentContentChangeEvent =
          [ `Vscode_CustomDocumentContentChangeEvent of 'T ] intf
        and 'T vscode_CustomDocumentEditEvent =
          [ `Vscode_CustomDocumentEditEvent of 'T ] intf
        and vscode_CustomDocumentOpenContext =
          [ `Vscode_CustomDocumentOpenContext ] intf
        and 'T vscode_CustomEditorProvider =
          [ `Vscode_CustomEditorProvider of 'T 
          | `Vscode_CustomReadonlyEditorProvider of 'T ] intf
        and vscode_CustomExecution = [ `Vscode_CustomExecution ] intf
        and 'T vscode_CustomReadonlyEditorProvider =
          [ `Vscode_CustomReadonlyEditorProvider of 'T ] intf
        and vscode_CustomTextEditorProvider =
          [ `Vscode_CustomTextEditorProvider ] intf
        and vscode_DebugAdapter =
          [ `Vscode_DebugAdapter  | `Vscode_Disposable ] intf
        and vscode_DebugAdapterDescriptor =
          (vscode_DebugAdapterExecutable,
            vscode_DebugAdapterInlineImplementation,
            vscode_DebugAdapterNamedPipeServer, vscode_DebugAdapterServer)
            union4
        and vscode_DebugAdapterDescriptorFactory =
          [ `Vscode_DebugAdapterDescriptorFactory ] intf
        and vscode_DebugAdapterExecutable =
          [ `Vscode_DebugAdapterExecutable ] intf
        and vscode_DebugAdapterExecutableOptions =
          [ `Vscode_DebugAdapterExecutableOptions ] intf
        and vscode_DebugAdapterInlineImplementation =
          [ `Vscode_DebugAdapterInlineImplementation ] intf
        and vscode_DebugAdapterNamedPipeServer =
          [ `Vscode_DebugAdapterNamedPipeServer ] intf
        and vscode_DebugAdapterServer = [ `Vscode_DebugAdapterServer ] intf
        and vscode_DebugAdapterTracker = [ `Vscode_DebugAdapterTracker ] intf
        and vscode_DebugAdapterTrackerFactory =
          [ `Vscode_DebugAdapterTrackerFactory ] intf
        and vscode_DebugConfiguration = [ `Vscode_DebugConfiguration ] intf
        and vscode_DebugConfigurationProvider =
          [ `Vscode_DebugConfigurationProvider ] intf
        and vscode_DebugConfigurationProviderTriggerKind =
          [ `Initial  | `Dynamic ]
        and vscode_DebugConfigurationProviderTriggerKind_Initial =
          [ `Initial ]
        and vscode_DebugConfigurationProviderTriggerKind_Dynamic =
          [ `Dynamic ]
        and vscode_DebugConsole = [ `Vscode_DebugConsole ] intf
        and vscode_DebugConsoleMode = [ `Separate  | `MergeWithParent ]
        and vscode_DebugConsoleMode_Separate = [ `Separate ]
        and vscode_DebugConsoleMode_MergeWithParent = [ `MergeWithParent ]
        and vscode_DebugProtocolBreakpoint =
          [ `Vscode_DebugProtocolBreakpoint ] intf
        and vscode_DebugProtocolMessage =
          [ `Vscode_DebugProtocolMessage ] intf
        and vscode_DebugProtocolSource = [ `Vscode_DebugProtocolSource ] intf
        and vscode_DebugSession = [ `Vscode_DebugSession ] intf
        and vscode_DebugSessionCustomEvent =
          [ `Vscode_DebugSessionCustomEvent ] intf
        and vscode_DebugSessionOptions = [ `Vscode_DebugSessionOptions ] intf
        and vscode_Declaration =
          (vscode_Location, (vscode_Location, vscode_LocationLink) union2)
            or_array
        and vscode_DeclarationProvider = [ `Vscode_DeclarationProvider ] intf
        and vscode_DecorationInstanceRenderOptions =
          [ `Vscode_DecorationInstanceRenderOptions 
          | `Vscode_ThemableDecorationInstanceRenderOptions ] intf
        and vscode_DecorationOptions = [ `Vscode_DecorationOptions ] intf
        and vscode_DecorationRangeBehavior =
          [ `OpenOpen  | `ClosedClosed  | `OpenClosed  | `ClosedOpen ]
        and vscode_DecorationRangeBehavior_OpenOpen = [ `OpenOpen ]
        and vscode_DecorationRangeBehavior_ClosedClosed = [ `ClosedClosed ]
        and vscode_DecorationRangeBehavior_OpenClosed = [ `OpenClosed ]
        and vscode_DecorationRangeBehavior_ClosedOpen = [ `ClosedOpen ]
        and vscode_DecorationRenderOptions =
          [ `Vscode_DecorationRenderOptions 
          | `Vscode_ThemableDecorationRenderOptions ] intf
        and vscode_Definition = (vscode_Location, vscode_Location) or_array
        and vscode_DefinitionLink = vscode_LocationLink
        and vscode_DefinitionProvider = [ `Vscode_DefinitionProvider ] intf
        and vscode_Diagnostic = [ `Vscode_Diagnostic ] intf
        and vscode_DiagnosticChangeEvent =
          [ `Vscode_DiagnosticChangeEvent ] intf
        and vscode_DiagnosticCollection =
          [ `Vscode_DiagnosticCollection ] intf
        and vscode_DiagnosticRelatedInformation =
          [ `Vscode_DiagnosticRelatedInformation ] intf
        and vscode_DiagnosticSeverity =
          [ `Error  | `Warning  | `Information  | `Hint ]
        and vscode_DiagnosticSeverity_Error = [ `Error ]
        and vscode_DiagnosticSeverity_Warning = [ `Warning ]
        and vscode_DiagnosticSeverity_Information = [ `Information ]
        and vscode_DiagnosticSeverity_Hint = [ `Hint ]
        and vscode_DiagnosticTag = [ `Unnecessary  | `Deprecated ]
        and vscode_DiagnosticTag_Unnecessary = [ `Unnecessary ]
        and vscode_DiagnosticTag_Deprecated = [ `Deprecated ]
        and vscode_Disposable = [ `Vscode_Disposable ] intf
        and vscode_DocumentColorProvider =
          [ `Vscode_DocumentColorProvider ] intf
        and vscode_DocumentFilter = [ `Vscode_DocumentFilter ] intf
        and vscode_DocumentFormattingEditProvider =
          [ `Vscode_DocumentFormattingEditProvider ] intf
        and vscode_DocumentHighlight = [ `Vscode_DocumentHighlight ] intf
        and vscode_DocumentHighlightKind = [ `Text  | `Read  | `Write ]
        and vscode_DocumentHighlightKind_Text = [ `Text ]
        and vscode_DocumentHighlightKind_Read = [ `Read ]
        and vscode_DocumentHighlightKind_Write = [ `Write ]
        and vscode_DocumentHighlightProvider =
          [ `Vscode_DocumentHighlightProvider ] intf
        and vscode_DocumentLink = [ `Vscode_DocumentLink ] intf
        and 'T vscode_DocumentLinkProvider =
          [ `Vscode_DocumentLinkProvider of 'T ] intf
        and vscode_DocumentRangeFormattingEditProvider =
          [ `Vscode_DocumentRangeFormattingEditProvider ] intf
        and vscode_DocumentRangeSemanticTokensProvider =
          [ `Vscode_DocumentRangeSemanticTokensProvider ] intf
        and vscode_DocumentSelector =
          (vscode_DocumentFilter, vscode_DocumentFilter or_string list)
            union2 or_string
        and vscode_DocumentSemanticTokensProvider =
          [ `Vscode_DocumentSemanticTokensProvider ] intf
        and vscode_DocumentSymbol = [ `Vscode_DocumentSymbol ] intf
        and vscode_DocumentSymbolProvider =
          [ `Vscode_DocumentSymbolProvider ] intf
        and vscode_DocumentSymbolProviderMetadata =
          [ `Vscode_DocumentSymbolProviderMetadata ] intf
        and vscode_EndOfLine = [ `LF  | `CRLF ]
        and vscode_EndOfLine_LF = [ `LF ]
        and vscode_EndOfLine_CRLF = [ `CRLF ]
        and vscode_EnterAction = [ `Vscode_EnterAction ] intf
        and vscode_EnvironmentVariableCollection =
          [ `Vscode_EnvironmentVariableCollection ] intf
        and vscode_EnvironmentVariableMutator =
          [ `Vscode_EnvironmentVariableMutator ] intf
        and vscode_EnvironmentVariableMutatorType =
          [ `Replace  | `Append  | `Prepend ]
        and vscode_EnvironmentVariableMutatorType_Replace = [ `Replace ]
        and vscode_EnvironmentVariableMutatorType_Append = [ `Append ]
        and vscode_EnvironmentVariableMutatorType_Prepend = [ `Prepend ]
        and vscode_EvaluatableExpression =
          [ `Vscode_EvaluatableExpression ] intf
        and vscode_EvaluatableExpressionProvider =
          [ `Vscode_EvaluatableExpressionProvider ] intf
        and 'T vscode_Event = [ `Vscode_Event of 'T ] intf
        and 'T vscode_EventEmitter = [ `Vscode_EventEmitter of 'T ] intf
        and 'T vscode_Extension = [ `Vscode_Extension of 'T ] intf
        and vscode_ExtensionContext = [ `Vscode_ExtensionContext ] intf
        and vscode_ExtensionKind = [ `UI  | `Workspace ]
        and vscode_ExtensionKind_UI = [ `UI ]
        and vscode_ExtensionKind_Workspace = [ `Workspace ]
        and vscode_ExtensionMode = [ `Production  | `Development  | `Test ]
        and vscode_ExtensionMode_Production = [ `Production ]
        and vscode_ExtensionMode_Development = [ `Development ]
        and vscode_ExtensionMode_Test = [ `Test ]
        and vscode_ExtensionTerminalOptions =
          [ `Vscode_ExtensionTerminalOptions ] intf
        and vscode_FileChangeEvent = [ `Vscode_FileChangeEvent ] intf
        and vscode_FileChangeType = [ `Changed  | `Created  | `Deleted ]
        and vscode_FileChangeType_Changed = [ `Changed ]
        and vscode_FileChangeType_Created = [ `Created ]
        and vscode_FileChangeType_Deleted = [ `Deleted ]
        and vscode_FileCreateEvent = [ `Vscode_FileCreateEvent ] intf
        and vscode_FileDecoration = [ `Vscode_FileDecoration ] intf
        and vscode_FileDecorationProvider =
          [ `Vscode_FileDecorationProvider ] intf
        and vscode_FileDeleteEvent = [ `Vscode_FileDeleteEvent ] intf
        and vscode_FileRenameEvent = [ `Vscode_FileRenameEvent ] intf
        and vscode_FileStat = [ `Vscode_FileStat ] intf
        and vscode_FileSystem = [ `Vscode_FileSystem ] intf
        and vscode_FileSystemError = [ `Vscode_FileSystemError ] intf
        and vscode_FileSystemProvider = [ `Vscode_FileSystemProvider ] intf
        and vscode_FileSystemWatcher =
          [ `Vscode_FileSystemWatcher  | `Vscode_Disposable ] intf
        and vscode_FileType =
          [ `Unknown  | `File  | `Directory  | `SymbolicLink ]
        and vscode_FileType_Unknown = [ `Unknown ]
        and vscode_FileType_File = [ `File ]
        and vscode_FileType_Directory = [ `Directory ]
        and vscode_FileType_SymbolicLink = [ `SymbolicLink ]
        and vscode_FileWillCreateEvent = [ `Vscode_FileWillCreateEvent ] intf
        and vscode_FileWillDeleteEvent = [ `Vscode_FileWillDeleteEvent ] intf
        and vscode_FileWillRenameEvent = [ `Vscode_FileWillRenameEvent ] intf
        and vscode_FoldingContext = [ `Vscode_FoldingContext ] intf
        and vscode_FoldingRange = [ `Vscode_FoldingRange ] intf
        and vscode_FoldingRangeKind = [ `Comment  | `Imports  | `Region ]
        and vscode_FoldingRangeKind_Comment = [ `Comment ]
        and vscode_FoldingRangeKind_Imports = [ `Imports ]
        and vscode_FoldingRangeKind_Region = [ `Region ]
        and vscode_FoldingRangeProvider =
          [ `Vscode_FoldingRangeProvider ] intf
        and vscode_FormattingOptions = [ `Vscode_FormattingOptions ] intf
        and vscode_FunctionBreakpoint =
          [ `Vscode_FunctionBreakpoint  | `Vscode_Breakpoint ] intf
        and vscode_GlobPattern = vscode_RelativePattern or_string
        and vscode_Hover = [ `Vscode_Hover ] intf
        and vscode_HoverProvider = [ `Vscode_HoverProvider ] intf
        and vscode_ImplementationProvider =
          [ `Vscode_ImplementationProvider ] intf
        and vscode_IndentAction =
          [ `None  | `Indent  | `IndentOutdent  | `Outdent ]
        and vscode_IndentAction_None = [ `None ]
        and vscode_IndentAction_Indent = [ `Indent ]
        and vscode_IndentAction_IndentOutdent = [ `IndentOutdent ]
        and vscode_IndentAction_Outdent = [ `Outdent ]
        and vscode_IndentationRule = [ `Vscode_IndentationRule ] intf
        and vscode_InlineValue =
          (vscode_InlineValueEvaluatableExpression, vscode_InlineValueText,
            vscode_InlineValueVariableLookup) union3
        and vscode_InlineValueContext = [ `Vscode_InlineValueContext ] intf
        and vscode_InlineValueEvaluatableExpression =
          [ `Vscode_InlineValueEvaluatableExpression ] intf
        and vscode_InlineValueText = [ `Vscode_InlineValueText ] intf
        and vscode_InlineValueVariableLookup =
          [ `Vscode_InlineValueVariableLookup ] intf
        and vscode_InlineValuesProvider =
          [ `Vscode_InlineValuesProvider ] intf
        and vscode_InputBox = [ `Vscode_InputBox  | `Vscode_QuickInput ] intf
        and vscode_InputBoxOptions = [ `Vscode_InputBoxOptions ] intf
        and vscode_LanguageConfiguration =
          [ `Vscode_LanguageConfiguration ] intf
        and vscode_LinkedEditingRangeProvider =
          [ `Vscode_LinkedEditingRangeProvider ] intf
        and vscode_LinkedEditingRanges = [ `Vscode_LinkedEditingRanges ] intf
        and vscode_Location = [ `Vscode_Location ] intf
        and vscode_LocationLink = [ `Vscode_LocationLink ] intf
        and vscode_MarkdownString = [ `Vscode_MarkdownString ] intf
        and vscode_MarkedString =
          (vscode_MarkdownString, anonymous_interface_13) union2 or_string
        and vscode_Memento = [ `Vscode_Memento ] intf
        and vscode_MessageItem = [ `Vscode_MessageItem ] intf
        and vscode_MessageOptions = [ `Vscode_MessageOptions ] intf
        and vscode_OnEnterRule = [ `Vscode_OnEnterRule ] intf
        and vscode_OnTypeFormattingEditProvider =
          [ `Vscode_OnTypeFormattingEditProvider ] intf
        and vscode_OpenDialogOptions = [ `Vscode_OpenDialogOptions ] intf
        and vscode_OutputChannel = [ `Vscode_OutputChannel ] intf
        and vscode_OverviewRulerLane =
          [ `Left  | `Center  | `Right  | `Full ]
        and vscode_OverviewRulerLane_Left = [ `Left ]
        and vscode_OverviewRulerLane_Center = [ `Center ]
        and vscode_OverviewRulerLane_Right = [ `Right ]
        and vscode_OverviewRulerLane_Full = [ `Full ]
        and vscode_ParameterInformation =
          [ `Vscode_ParameterInformation ] intf
        and vscode_Position = [ `Vscode_Position ] intf
        and vscode_ProcessExecution = [ `Vscode_ProcessExecution ] intf
        and vscode_ProcessExecutionOptions =
          [ `Vscode_ProcessExecutionOptions ] intf
        and 'T vscode_Progress = [ `Vscode_Progress of 'T ] intf
        and vscode_ProgressLocation =
          [ `SourceControl  | `Window  | `Notification ]
        and vscode_ProgressLocation_SourceControl = [ `SourceControl ]
        and vscode_ProgressLocation_Window = [ `Window ]
        and vscode_ProgressLocation_Notification = [ `Notification ]
        and vscode_ProgressOptions = [ `Vscode_ProgressOptions ] intf
        and 'T vscode_ProviderResult =
          ('T, 'T or_null_or_undefined _Thenable) union2 or_null_or_undefined
        and vscode_Pseudoterminal = [ `Vscode_Pseudoterminal ] intf
        and vscode_QuickDiffProvider = [ `Vscode_QuickDiffProvider ] intf
        and vscode_QuickInput = [ `Vscode_QuickInput ] intf
        and vscode_QuickInputButton = [ `Vscode_QuickInputButton ] intf
        and vscode_QuickInputButtons = [ `Vscode_QuickInputButtons ] intf
        and 'T vscode_QuickPick =
          [ `Vscode_QuickPick of 'T  | `Vscode_QuickInput ] intf
        and vscode_QuickPickItem = [ `Vscode_QuickPickItem ] intf
        and vscode_QuickPickOptions = [ `Vscode_QuickPickOptions ] intf
        and vscode_Range = [ `Vscode_Range ] intf
        and vscode_ReferenceContext = [ `Vscode_ReferenceContext ] intf
        and vscode_ReferenceProvider = [ `Vscode_ReferenceProvider ] intf
        and vscode_RelativePattern = [ `Vscode_RelativePattern ] intf
        and vscode_RenameProvider = [ `Vscode_RenameProvider ] intf
        and vscode_RunOptions = [ `Vscode_RunOptions ] intf
        and vscode_SaveDialogOptions = [ `Vscode_SaveDialogOptions ] intf
        and vscode_SecretStorage = [ `Vscode_SecretStorage ] intf
        and vscode_SecretStorageChangeEvent =
          [ `Vscode_SecretStorageChangeEvent ] intf
        and vscode_Selection = [ `Vscode_Selection  | `Vscode_Range ] intf
        and vscode_SelectionRange = [ `Vscode_SelectionRange ] intf
        and vscode_SelectionRangeProvider =
          [ `Vscode_SelectionRangeProvider ] intf
        and vscode_SemanticTokens = [ `Vscode_SemanticTokens ] intf
        and vscode_SemanticTokensBuilder =
          [ `Vscode_SemanticTokensBuilder ] intf
        and vscode_SemanticTokensEdit = [ `Vscode_SemanticTokensEdit ] intf
        and vscode_SemanticTokensEdits = [ `Vscode_SemanticTokensEdits ] intf
        and vscode_SemanticTokensLegend =
          [ `Vscode_SemanticTokensLegend ] intf
        and vscode_ShellExecution = [ `Vscode_ShellExecution ] intf
        and vscode_ShellExecutionOptions =
          [ `Vscode_ShellExecutionOptions ] intf
        and vscode_ShellQuotedString = [ `Vscode_ShellQuotedString ] intf
        and vscode_ShellQuoting = [ `Escape  | `Strong  | `Weak ]
        and vscode_ShellQuoting_Escape = [ `Escape ]
        and vscode_ShellQuoting_Strong = [ `Strong ]
        and vscode_ShellQuoting_Weak = [ `Weak ]
        and vscode_ShellQuotingOptions = [ `Vscode_ShellQuotingOptions ] intf
        and vscode_SignatureHelp = [ `Vscode_SignatureHelp ] intf
        and vscode_SignatureHelpContext =
          [ `Vscode_SignatureHelpContext ] intf
        and vscode_SignatureHelpProvider =
          [ `Vscode_SignatureHelpProvider ] intf
        and vscode_SignatureHelpProviderMetadata =
          [ `Vscode_SignatureHelpProviderMetadata ] intf
        and vscode_SignatureHelpTriggerKind =
          [ `Invoke  | `TriggerCharacter  | `ContentChange ]
        and vscode_SignatureHelpTriggerKind_Invoke = [ `Invoke ]
        and vscode_SignatureHelpTriggerKind_TriggerCharacter =
          [ `TriggerCharacter ]
        and vscode_SignatureHelpTriggerKind_ContentChange =
          [ `ContentChange ]
        and vscode_SignatureInformation =
          [ `Vscode_SignatureInformation ] intf
        and vscode_SnippetString = [ `Vscode_SnippetString ] intf
        and vscode_SourceBreakpoint =
          [ `Vscode_SourceBreakpoint  | `Vscode_Breakpoint ] intf
        and vscode_SourceControl = [ `Vscode_SourceControl ] intf
        and vscode_SourceControlInputBox =
          [ `Vscode_SourceControlInputBox ] intf
        and vscode_SourceControlResourceDecorations =
          [ `Vscode_SourceControlResourceDecorations 
          | `Vscode_SourceControlResourceThemableDecorations ] intf
        and vscode_SourceControlResourceGroup =
          [ `Vscode_SourceControlResourceGroup ] intf
        and vscode_SourceControlResourceState =
          [ `Vscode_SourceControlResourceState ] intf
        and vscode_SourceControlResourceThemableDecorations =
          [ `Vscode_SourceControlResourceThemableDecorations ] intf
        and vscode_StatusBarAlignment = [ `Left  | `Right ]
        and vscode_StatusBarAlignment_Left = [ `Left ]
        and vscode_StatusBarAlignment_Right = [ `Right ]
        and vscode_StatusBarItem = [ `Vscode_StatusBarItem ] intf
        and vscode_SymbolInformation = [ `Vscode_SymbolInformation ] intf
        and vscode_SymbolKind =
          [ `File  | `Module  | `Namespace  | `Package  | `Class  | `Method 
          | `Property  | `Field  | `Constructor  | `Enum  | `Interface 
          | `Function  | `Variable  | `Constant  | `String  | `Number 
          | `Boolean  | `Array  | `Object  | `Key  | `Null  | `EnumMember 
          | `Struct  | `Event  | `Operator  | `TypeParameter ]
        and vscode_SymbolKind_File = [ `File ]
        and vscode_SymbolKind_Module = [ `Module ]
        and vscode_SymbolKind_Namespace = [ `Namespace ]
        and vscode_SymbolKind_Package = [ `Package ]
        and vscode_SymbolKind_Class = [ `Class ]
        and vscode_SymbolKind_Method = [ `Method ]
        and vscode_SymbolKind_Property = [ `Property ]
        and vscode_SymbolKind_Field = [ `Field ]
        and vscode_SymbolKind_Constructor = [ `Constructor ]
        and vscode_SymbolKind_Enum = [ `Enum ]
        and vscode_SymbolKind_Interface = [ `Interface ]
        and vscode_SymbolKind_Function = [ `Function ]
        and vscode_SymbolKind_Variable = [ `Variable ]
        and vscode_SymbolKind_Constant = [ `Constant ]
        and vscode_SymbolKind_String = [ `String ]
        and vscode_SymbolKind_Number = [ `Number ]
        and vscode_SymbolKind_Boolean = [ `Boolean ]
        and vscode_SymbolKind_Array = [ `Array ]
        and vscode_SymbolKind_Object = [ `Object ]
        and vscode_SymbolKind_Key = [ `Key ]
        and vscode_SymbolKind_Null = [ `Null ]
        and vscode_SymbolKind_EnumMember = [ `EnumMember ]
        and vscode_SymbolKind_Struct = [ `Struct ]
        and vscode_SymbolKind_Event = [ `Event ]
        and vscode_SymbolKind_Operator = [ `Operator ]
        and vscode_SymbolKind_TypeParameter = [ `TypeParameter ]
        and vscode_SymbolTag = [ `Deprecated ]
        and vscode_SymbolTag_Deprecated = [ `Deprecated ]
        and vscode_Task = [ `Vscode_Task ] intf
        and vscode_TaskDefinition = [ `Vscode_TaskDefinition ] intf
        and vscode_TaskEndEvent = [ `Vscode_TaskEndEvent ] intf
        and vscode_TaskExecution = [ `Vscode_TaskExecution ] intf
        and vscode_TaskFilter = [ `Vscode_TaskFilter ] intf
        and vscode_TaskGroup = [ `Vscode_TaskGroup ] intf
        and vscode_TaskPanelKind = [ `Shared  | `Dedicated  | `New ]
        and vscode_TaskPanelKind_Shared = [ `Shared ]
        and vscode_TaskPanelKind_Dedicated = [ `Dedicated ]
        and vscode_TaskPanelKind_New = [ `New ]
        and vscode_TaskPresentationOptions =
          [ `Vscode_TaskPresentationOptions ] intf
        and vscode_TaskProcessEndEvent = [ `Vscode_TaskProcessEndEvent ] intf
        and vscode_TaskProcessStartEvent =
          [ `Vscode_TaskProcessStartEvent ] intf
        and 'T vscode_TaskProvider = [ `Vscode_TaskProvider of 'T ] intf
        and vscode_TaskRevealKind = [ `Always  | `Silent  | `Never ]
        and vscode_TaskRevealKind_Always = [ `Always ]
        and vscode_TaskRevealKind_Silent = [ `Silent ]
        and vscode_TaskRevealKind_Never = [ `Never ]
        and vscode_TaskScope = [ `Global  | `Workspace ]
        and vscode_TaskScope_Global = [ `Global ]
        and vscode_TaskScope_Workspace = [ `Workspace ]
        and vscode_TaskStartEvent = [ `Vscode_TaskStartEvent ] intf
        and vscode_Terminal = [ `Vscode_Terminal ] intf
        and vscode_TerminalDimensions = [ `Vscode_TerminalDimensions ] intf
        and vscode_TerminalExitStatus = [ `Vscode_TerminalExitStatus ] intf
        and vscode_TerminalLink = [ `Vscode_TerminalLink ] intf
        and vscode_TerminalLinkContext = [ `Vscode_TerminalLinkContext ] intf
        and 'T vscode_TerminalLinkProvider =
          [ `Vscode_TerminalLinkProvider of 'T ] intf
        and vscode_TerminalOptions = [ `Vscode_TerminalOptions ] intf
        and vscode_TextDocument = [ `Vscode_TextDocument ] intf
        and vscode_TextDocumentChangeEvent =
          [ `Vscode_TextDocumentChangeEvent ] intf
        and vscode_TextDocumentContentChangeEvent =
          [ `Vscode_TextDocumentContentChangeEvent ] intf
        and vscode_TextDocumentContentProvider =
          [ `Vscode_TextDocumentContentProvider ] intf
        and vscode_TextDocumentSaveReason =
          [ `Manual  | `AfterDelay  | `FocusOut ]
        and vscode_TextDocumentSaveReason_Manual = [ `Manual ]
        and vscode_TextDocumentSaveReason_AfterDelay = [ `AfterDelay ]
        and vscode_TextDocumentSaveReason_FocusOut = [ `FocusOut ]
        and vscode_TextDocumentShowOptions =
          [ `Vscode_TextDocumentShowOptions ] intf
        and vscode_TextDocumentWillSaveEvent =
          [ `Vscode_TextDocumentWillSaveEvent ] intf
        and vscode_TextEdit = [ `Vscode_TextEdit ] intf
        and vscode_TextEditor = [ `Vscode_TextEditor ] intf
        and vscode_TextEditorCursorStyle =
          [ `Line  | `Block  | `Underline  | `LineThin  | `BlockOutline 
          | `UnderlineThin ]
        and vscode_TextEditorCursorStyle_Line = [ `Line ]
        and vscode_TextEditorCursorStyle_Block = [ `Block ]
        and vscode_TextEditorCursorStyle_Underline = [ `Underline ]
        and vscode_TextEditorCursorStyle_LineThin = [ `LineThin ]
        and vscode_TextEditorCursorStyle_BlockOutline = [ `BlockOutline ]
        and vscode_TextEditorCursorStyle_UnderlineThin = [ `UnderlineThin ]
        and vscode_TextEditorDecorationType =
          [ `Vscode_TextEditorDecorationType ] intf
        and vscode_TextEditorEdit = [ `Vscode_TextEditorEdit ] intf
        and vscode_TextEditorLineNumbersStyle = [ `Off  | `On  | `Relative ]
        and vscode_TextEditorLineNumbersStyle_Off = [ `Off ]
        and vscode_TextEditorLineNumbersStyle_On = [ `On ]
        and vscode_TextEditorLineNumbersStyle_Relative = [ `Relative ]
        and vscode_TextEditorOptions = [ `Vscode_TextEditorOptions ] intf
        and vscode_TextEditorOptionsChangeEvent =
          [ `Vscode_TextEditorOptionsChangeEvent ] intf
        and vscode_TextEditorRevealType =
          [ `Default  | `InCenter  | `InCenterIfOutsideViewport  | `AtTop ]
        and vscode_TextEditorRevealType_Default = [ `Default ]
        and vscode_TextEditorRevealType_InCenter = [ `InCenter ]
        and vscode_TextEditorRevealType_InCenterIfOutsideViewport =
          [ `InCenterIfOutsideViewport ]
        and vscode_TextEditorRevealType_AtTop = [ `AtTop ]
        and vscode_TextEditorSelectionChangeEvent =
          [ `Vscode_TextEditorSelectionChangeEvent ] intf
        and vscode_TextEditorSelectionChangeKind =
          [ `Keyboard  | `Mouse  | `Command ]
        and vscode_TextEditorSelectionChangeKind_Keyboard = [ `Keyboard ]
        and vscode_TextEditorSelectionChangeKind_Mouse = [ `Mouse ]
        and vscode_TextEditorSelectionChangeKind_Command = [ `Command ]
        and vscode_TextEditorViewColumnChangeEvent =
          [ `Vscode_TextEditorViewColumnChangeEvent ] intf
        and vscode_TextEditorVisibleRangesChangeEvent =
          [ `Vscode_TextEditorVisibleRangesChangeEvent ] intf
        and vscode_TextLine = [ `Vscode_TextLine ] intf
        and vscode_ThemableDecorationAttachmentRenderOptions =
          [ `Vscode_ThemableDecorationAttachmentRenderOptions ] intf
        and vscode_ThemableDecorationInstanceRenderOptions =
          [ `Vscode_ThemableDecorationInstanceRenderOptions ] intf
        and vscode_ThemableDecorationRenderOptions =
          [ `Vscode_ThemableDecorationRenderOptions ] intf
        and vscode_ThemeColor = [ `Vscode_ThemeColor ] intf
        and vscode_ThemeIcon = [ `Vscode_ThemeIcon ] intf
        and 'T vscode_TreeDataProvider =
          [ `Vscode_TreeDataProvider of 'T ] intf
        and vscode_TreeItem = [ `Vscode_TreeItem ] intf
        and vscode_TreeItemCollapsibleState =
          [ `None  | `Collapsed  | `Expanded ]
        and vscode_TreeItemCollapsibleState_None = [ `None ]
        and vscode_TreeItemCollapsibleState_Collapsed = [ `Collapsed ]
        and vscode_TreeItemCollapsibleState_Expanded = [ `Expanded ]
        and vscode_TreeItemLabel = [ `Vscode_TreeItemLabel ] intf
        and 'T vscode_TreeView =
          [ `Vscode_TreeView of 'T  | `Vscode_Disposable ] intf
        and 'T vscode_TreeViewExpansionEvent =
          [ `Vscode_TreeViewExpansionEvent of 'T ] intf
        and 'T vscode_TreeViewOptions =
          [ `Vscode_TreeViewOptions of 'T ] intf
        and 'T vscode_TreeViewSelectionChangeEvent =
          [ `Vscode_TreeViewSelectionChangeEvent of 'T ] intf
        and vscode_TreeViewVisibilityChangeEvent =
          [ `Vscode_TreeViewVisibilityChangeEvent ] intf
        and vscode_TypeDefinitionProvider =
          [ `Vscode_TypeDefinitionProvider ] intf
        and vscode_UIKind = [ `Desktop  | `Web ]
        and vscode_UIKind_Desktop = [ `Desktop ]
        and vscode_UIKind_Web = [ `Web ]
        and vscode_Uri = [ `Vscode_Uri ] intf
        and vscode_UriHandler = [ `Vscode_UriHandler ] intf
        and vscode_ViewColumn =
          [ `Active  | `Beside  | `One  | `Two  | `Three  | `Four  | 
            `Five 
          | `Six  | `Seven  | `Eight  | `Nine ]
        and vscode_ViewColumn_Active = [ `Active ]
        and vscode_ViewColumn_Beside = [ `Beside ]
        and vscode_ViewColumn_One = [ `One ]
        and vscode_ViewColumn_Two = [ `Two ]
        and vscode_ViewColumn_Three = [ `Three ]
        and vscode_ViewColumn_Four = [ `Four ]
        and vscode_ViewColumn_Five = [ `Five ]
        and vscode_ViewColumn_Six = [ `Six ]
        and vscode_ViewColumn_Seven = [ `Seven ]
        and vscode_ViewColumn_Eight = [ `Eight ]
        and vscode_ViewColumn_Nine = [ `Nine ]
        and vscode_Webview = [ `Vscode_Webview ] intf
        and vscode_WebviewOptions = [ `Vscode_WebviewOptions ] intf
        and vscode_WebviewPanel = [ `Vscode_WebviewPanel ] intf
        and vscode_WebviewPanelOnDidChangeViewStateEvent =
          [ `Vscode_WebviewPanelOnDidChangeViewStateEvent ] intf
        and vscode_WebviewPanelOptions = [ `Vscode_WebviewPanelOptions ] intf
        and 'T vscode_WebviewPanelSerializer =
          [ `Vscode_WebviewPanelSerializer of 'T ] intf
        and vscode_WebviewPortMapping = [ `Vscode_WebviewPortMapping ] intf
        and vscode_WebviewView = [ `Vscode_WebviewView ] intf
        and vscode_WebviewViewProvider = [ `Vscode_WebviewViewProvider ] intf
        and 'T vscode_WebviewViewResolveContext =
          [ `Vscode_WebviewViewResolveContext of 'T ] intf
        and vscode_WindowState = [ `Vscode_WindowState ] intf
        and vscode_WorkspaceConfiguration =
          [ `Vscode_WorkspaceConfiguration ] intf
        and vscode_WorkspaceEdit = [ `Vscode_WorkspaceEdit ] intf
        and vscode_WorkspaceEditEntryMetadata =
          [ `Vscode_WorkspaceEditEntryMetadata ] intf
        and vscode_WorkspaceFolder = [ `Vscode_WorkspaceFolder ] intf
        and vscode_WorkspaceFolderPickOptions =
          [ `Vscode_WorkspaceFolderPickOptions ] intf
        and vscode_WorkspaceFoldersChangeEvent =
          [ `Vscode_WorkspaceFoldersChangeEvent ] intf
        and 'T vscode_WorkspaceSymbolProvider =
          [ `Vscode_WorkspaceSymbolProvider of 'T ] intf
        let rec _Thenable_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Thenable
          = fun _T -> Obj.magic
        and _Thenable_to_js : 'T . ('T -> Ojs.t) -> 'T _Thenable -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_AccessibilityInformation_of_js :
          Ojs.t -> vscode_AccessibilityInformation = Obj.magic
        and vscode_AccessibilityInformation_to_js :
          vscode_AccessibilityInformation -> Ojs.t = Obj.magic
        and vscode_AuthenticationGetSessionOptions_of_js :
          Ojs.t -> vscode_AuthenticationGetSessionOptions = Obj.magic
        and vscode_AuthenticationGetSessionOptions_to_js :
          vscode_AuthenticationGetSessionOptions -> Ojs.t = Obj.magic
        and vscode_AuthenticationProvider_of_js :
          Ojs.t -> vscode_AuthenticationProvider = Obj.magic
        and vscode_AuthenticationProvider_to_js :
          vscode_AuthenticationProvider -> Ojs.t = Obj.magic
        and vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_of_js
          :
          Ojs.t ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent
          = Obj.magic
        and vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_to_js
          :
          vscode_AuthenticationProviderAuthenticationSessionsChangeEvent ->
            Ojs.t
          = Obj.magic
        and vscode_AuthenticationProviderInformation_of_js :
          Ojs.t -> vscode_AuthenticationProviderInformation = Obj.magic
        and vscode_AuthenticationProviderInformation_to_js :
          vscode_AuthenticationProviderInformation -> Ojs.t = Obj.magic
        and vscode_AuthenticationProviderOptions_of_js :
          Ojs.t -> vscode_AuthenticationProviderOptions = Obj.magic
        and vscode_AuthenticationProviderOptions_to_js :
          vscode_AuthenticationProviderOptions -> Ojs.t = Obj.magic
        and vscode_AuthenticationSession_of_js :
          Ojs.t -> vscode_AuthenticationSession = Obj.magic
        and vscode_AuthenticationSession_to_js :
          vscode_AuthenticationSession -> Ojs.t = Obj.magic
        and vscode_AuthenticationSessionAccountInformation_of_js :
          Ojs.t -> vscode_AuthenticationSessionAccountInformation = Obj.magic
        and vscode_AuthenticationSessionAccountInformation_to_js :
          vscode_AuthenticationSessionAccountInformation -> Ojs.t = Obj.magic
        and vscode_AuthenticationSessionsChangeEvent_of_js :
          Ojs.t -> vscode_AuthenticationSessionsChangeEvent = Obj.magic
        and vscode_AuthenticationSessionsChangeEvent_to_js :
          vscode_AuthenticationSessionsChangeEvent -> Ojs.t = Obj.magic
        and vscode_Breakpoint_of_js : Ojs.t -> vscode_Breakpoint = Obj.magic
        and vscode_Breakpoint_to_js : vscode_Breakpoint -> Ojs.t = Obj.magic
        and vscode_BreakpointsChangeEvent_of_js :
          Ojs.t -> vscode_BreakpointsChangeEvent = Obj.magic
        and vscode_BreakpointsChangeEvent_to_js :
          vscode_BreakpointsChangeEvent -> Ojs.t = Obj.magic
        and vscode_CallHierarchyIncomingCall_of_js :
          Ojs.t -> vscode_CallHierarchyIncomingCall = Obj.magic
        and vscode_CallHierarchyIncomingCall_to_js :
          vscode_CallHierarchyIncomingCall -> Ojs.t = Obj.magic
        and vscode_CallHierarchyItem_of_js :
          Ojs.t -> vscode_CallHierarchyItem = Obj.magic
        and vscode_CallHierarchyItem_to_js :
          vscode_CallHierarchyItem -> Ojs.t = Obj.magic
        and vscode_CallHierarchyOutgoingCall_of_js :
          Ojs.t -> vscode_CallHierarchyOutgoingCall = Obj.magic
        and vscode_CallHierarchyOutgoingCall_to_js :
          vscode_CallHierarchyOutgoingCall -> Ojs.t = Obj.magic
        and vscode_CallHierarchyProvider_of_js :
          Ojs.t -> vscode_CallHierarchyProvider = Obj.magic
        and vscode_CallHierarchyProvider_to_js :
          vscode_CallHierarchyProvider -> Ojs.t = Obj.magic
        and vscode_CancellationError_of_js :
          Ojs.t -> vscode_CancellationError = Obj.magic
        and vscode_CancellationError_to_js :
          vscode_CancellationError -> Ojs.t = Obj.magic
        and vscode_CancellationToken_of_js :
          Ojs.t -> vscode_CancellationToken = Obj.magic
        and vscode_CancellationToken_to_js :
          vscode_CancellationToken -> Ojs.t = Obj.magic
        and vscode_CancellationTokenSource_of_js :
          Ojs.t -> vscode_CancellationTokenSource = Obj.magic
        and vscode_CancellationTokenSource_to_js :
          vscode_CancellationTokenSource -> Ojs.t = Obj.magic
        and vscode_CharacterPair_of_js : Ojs.t -> vscode_CharacterPair =
          fun (x5 : Ojs.t) ->
            let x6 = x5 in
            ((Ojs.string_of_js (Ojs.array_get x6 0)),
              (Ojs.string_of_js (Ojs.array_get x6 1)))
        and vscode_CharacterPair_to_js : vscode_CharacterPair -> Ojs.t =
          fun (x1 : (string * string)) ->
            let (x2, x3) = x1 in
            let x4 = Ojs.array_make 2 in
            Ojs.array_set x4 0 (Ojs.string_to_js x2);
            Ojs.array_set x4 1 (Ojs.string_to_js x3);
            x4
        and vscode_Clipboard_of_js : Ojs.t -> vscode_Clipboard = Obj.magic
        and vscode_Clipboard_to_js : vscode_Clipboard -> Ojs.t = Obj.magic
        and vscode_CodeAction_of_js : Ojs.t -> vscode_CodeAction = Obj.magic
        and vscode_CodeAction_to_js : vscode_CodeAction -> Ojs.t = Obj.magic
        and vscode_CodeActionContext_of_js :
          Ojs.t -> vscode_CodeActionContext = Obj.magic
        and vscode_CodeActionContext_to_js :
          vscode_CodeActionContext -> Ojs.t = Obj.magic
        and vscode_CodeActionKind_of_js : Ojs.t -> vscode_CodeActionKind =
          Obj.magic
        and vscode_CodeActionKind_to_js : vscode_CodeActionKind -> Ojs.t =
          Obj.magic
        and vscode_CodeActionProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CodeActionProvider =
          fun _T -> Obj.magic
        and vscode_CodeActionProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CodeActionProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CodeActionProviderMetadata_of_js :
          Ojs.t -> vscode_CodeActionProviderMetadata = Obj.magic
        and vscode_CodeActionProviderMetadata_to_js :
          vscode_CodeActionProviderMetadata -> Ojs.t = Obj.magic
        and vscode_CodeActionTriggerKind_of_js :
          Ojs.t -> vscode_CodeActionTriggerKind =
          fun (x8 : Ojs.t) ->
            let x9 = x8 in
            match Ojs.int_of_js x9 with
            | 1 -> `Invoke
            | 2 -> `Automatic
            | _ -> assert false
        and vscode_CodeActionTriggerKind_to_js :
          vscode_CodeActionTriggerKind -> Ojs.t =
          fun (x7 : [ `Invoke  | `Automatic ]) ->
            match x7 with
            | `Invoke -> Ojs.int_to_js 1
            | `Automatic -> Ojs.int_to_js 2
        and vscode_CodeActionTriggerKind_Invoke_of_js :
          Ojs.t -> vscode_CodeActionTriggerKind_Invoke =
          fun (x11 : Ojs.t) ->
            let x12 = x11 in
            match Ojs.int_of_js x12 with | 1 -> `Invoke | _ -> assert false
        and vscode_CodeActionTriggerKind_Invoke_to_js :
          vscode_CodeActionTriggerKind_Invoke -> Ojs.t =
          fun (x10 : [ `Invoke ]) ->
            match x10 with | `Invoke -> Ojs.int_to_js 1
        and vscode_CodeActionTriggerKind_Automatic_of_js :
          Ojs.t -> vscode_CodeActionTriggerKind_Automatic =
          fun (x14 : Ojs.t) ->
            let x15 = x14 in
            match Ojs.int_of_js x15 with
            | 2 -> `Automatic
            | _ -> assert false
        and vscode_CodeActionTriggerKind_Automatic_to_js :
          vscode_CodeActionTriggerKind_Automatic -> Ojs.t =
          fun (x13 : [ `Automatic ]) ->
            match x13 with | `Automatic -> Ojs.int_to_js 2
        and vscode_CodeLens_of_js : Ojs.t -> vscode_CodeLens = Obj.magic
        and vscode_CodeLens_to_js : vscode_CodeLens -> Ojs.t = Obj.magic
        and vscode_CodeLensProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CodeLensProvider =
          fun _T -> Obj.magic
        and vscode_CodeLensProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CodeLensProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_Color_of_js : Ojs.t -> vscode_Color = Obj.magic
        and vscode_Color_to_js : vscode_Color -> Ojs.t = Obj.magic
        and vscode_ColorInformation_of_js : Ojs.t -> vscode_ColorInformation
          = Obj.magic
        and vscode_ColorInformation_to_js : vscode_ColorInformation -> Ojs.t
          = Obj.magic
        and vscode_ColorPresentation_of_js :
          Ojs.t -> vscode_ColorPresentation = Obj.magic
        and vscode_ColorPresentation_to_js :
          vscode_ColorPresentation -> Ojs.t = Obj.magic
        and vscode_ColorTheme_of_js : Ojs.t -> vscode_ColorTheme = Obj.magic
        and vscode_ColorTheme_to_js : vscode_ColorTheme -> Ojs.t = Obj.magic
        and vscode_ColorThemeKind_of_js : Ojs.t -> vscode_ColorThemeKind =
          fun (x17 : Ojs.t) ->
            let x18 = x17 in
            match Ojs.int_of_js x18 with
            | 1 -> `Light
            | 2 -> `Dark
            | 3 -> `HighContrast
            | _ -> assert false
        and vscode_ColorThemeKind_to_js : vscode_ColorThemeKind -> Ojs.t =
          fun (x16 : [ `Light  | `Dark  | `HighContrast ]) ->
            match x16 with
            | `Light -> Ojs.int_to_js 1
            | `Dark -> Ojs.int_to_js 2
            | `HighContrast -> Ojs.int_to_js 3
        and vscode_ColorThemeKind_Light_of_js :
          Ojs.t -> vscode_ColorThemeKind_Light =
          fun (x20 : Ojs.t) ->
            let x21 = x20 in
            match Ojs.int_of_js x21 with | 1 -> `Light | _ -> assert false
        and vscode_ColorThemeKind_Light_to_js :
          vscode_ColorThemeKind_Light -> Ojs.t =
          fun (x19 : [ `Light ]) ->
            match x19 with | `Light -> Ojs.int_to_js 1
        and vscode_ColorThemeKind_Dark_of_js :
          Ojs.t -> vscode_ColorThemeKind_Dark =
          fun (x23 : Ojs.t) ->
            let x24 = x23 in
            match Ojs.int_of_js x24 with | 2 -> `Dark | _ -> assert false
        and vscode_ColorThemeKind_Dark_to_js :
          vscode_ColorThemeKind_Dark -> Ojs.t =
          fun (x22 : [ `Dark ]) -> match x22 with | `Dark -> Ojs.int_to_js 2
        and vscode_ColorThemeKind_HighContrast_of_js :
          Ojs.t -> vscode_ColorThemeKind_HighContrast =
          fun (x26 : Ojs.t) ->
            let x27 = x26 in
            match Ojs.int_of_js x27 with
            | 3 -> `HighContrast
            | _ -> assert false
        and vscode_ColorThemeKind_HighContrast_to_js :
          vscode_ColorThemeKind_HighContrast -> Ojs.t =
          fun (x25 : [ `HighContrast ]) ->
            match x25 with | `HighContrast -> Ojs.int_to_js 3
        and vscode_Command_of_js : Ojs.t -> vscode_Command = Obj.magic
        and vscode_Command_to_js : vscode_Command -> Ojs.t = Obj.magic
        and vscode_Comment_of_js : Ojs.t -> vscode_Comment = Obj.magic
        and vscode_Comment_to_js : vscode_Comment -> Ojs.t = Obj.magic
        and vscode_CommentAuthorInformation_of_js :
          Ojs.t -> vscode_CommentAuthorInformation = Obj.magic
        and vscode_CommentAuthorInformation_to_js :
          vscode_CommentAuthorInformation -> Ojs.t = Obj.magic
        and vscode_CommentController_of_js :
          Ojs.t -> vscode_CommentController = Obj.magic
        and vscode_CommentController_to_js :
          vscode_CommentController -> Ojs.t = Obj.magic
        and vscode_CommentMode_of_js : Ojs.t -> vscode_CommentMode =
          fun (x29 : Ojs.t) ->
            let x30 = x29 in
            match Ojs.int_of_js x30 with
            | 0 -> `Editing
            | 1 -> `Preview
            | _ -> assert false
        and vscode_CommentMode_to_js : vscode_CommentMode -> Ojs.t =
          fun (x28 : [ `Editing  | `Preview ]) ->
            match x28 with
            | `Editing -> Ojs.int_to_js 0
            | `Preview -> Ojs.int_to_js 1
        and vscode_CommentMode_Editing_of_js :
          Ojs.t -> vscode_CommentMode_Editing =
          fun (x32 : Ojs.t) ->
            let x33 = x32 in
            match Ojs.int_of_js x33 with | 0 -> `Editing | _ -> assert false
        and vscode_CommentMode_Editing_to_js :
          vscode_CommentMode_Editing -> Ojs.t =
          fun (x31 : [ `Editing ]) ->
            match x31 with | `Editing -> Ojs.int_to_js 0
        and vscode_CommentMode_Preview_of_js :
          Ojs.t -> vscode_CommentMode_Preview =
          fun (x35 : Ojs.t) ->
            let x36 = x35 in
            match Ojs.int_of_js x36 with | 1 -> `Preview | _ -> assert false
        and vscode_CommentMode_Preview_to_js :
          vscode_CommentMode_Preview -> Ojs.t =
          fun (x34 : [ `Preview ]) ->
            match x34 with | `Preview -> Ojs.int_to_js 1
        and vscode_CommentOptions_of_js : Ojs.t -> vscode_CommentOptions =
          Obj.magic
        and vscode_CommentOptions_to_js : vscode_CommentOptions -> Ojs.t =
          Obj.magic
        and vscode_CommentReaction_of_js : Ojs.t -> vscode_CommentReaction =
          Obj.magic
        and vscode_CommentReaction_to_js : vscode_CommentReaction -> Ojs.t =
          Obj.magic
        and vscode_CommentReply_of_js : Ojs.t -> vscode_CommentReply =
          Obj.magic
        and vscode_CommentReply_to_js : vscode_CommentReply -> Ojs.t =
          Obj.magic
        and vscode_CommentRule_of_js : Ojs.t -> vscode_CommentRule =
          Obj.magic
        and vscode_CommentRule_to_js : vscode_CommentRule -> Ojs.t =
          Obj.magic
        and vscode_CommentThread_of_js : Ojs.t -> vscode_CommentThread =
          Obj.magic
        and vscode_CommentThread_to_js : vscode_CommentThread -> Ojs.t =
          Obj.magic
        and vscode_CommentThreadCollapsibleState_of_js :
          Ojs.t -> vscode_CommentThreadCollapsibleState =
          fun (x38 : Ojs.t) ->
            let x39 = x38 in
            match Ojs.int_of_js x39 with
            | 0 -> `Collapsed
            | 1 -> `Expanded
            | _ -> assert false
        and vscode_CommentThreadCollapsibleState_to_js :
          vscode_CommentThreadCollapsibleState -> Ojs.t =
          fun (x37 : [ `Collapsed  | `Expanded ]) ->
            match x37 with
            | `Collapsed -> Ojs.int_to_js 0
            | `Expanded -> Ojs.int_to_js 1
        and vscode_CommentThreadCollapsibleState_Collapsed_of_js :
          Ojs.t -> vscode_CommentThreadCollapsibleState_Collapsed =
          fun (x41 : Ojs.t) ->
            let x42 = x41 in
            match Ojs.int_of_js x42 with
            | 0 -> `Collapsed
            | _ -> assert false
        and vscode_CommentThreadCollapsibleState_Collapsed_to_js :
          vscode_CommentThreadCollapsibleState_Collapsed -> Ojs.t =
          fun (x40 : [ `Collapsed ]) ->
            match x40 with | `Collapsed -> Ojs.int_to_js 0
        and vscode_CommentThreadCollapsibleState_Expanded_of_js :
          Ojs.t -> vscode_CommentThreadCollapsibleState_Expanded =
          fun (x44 : Ojs.t) ->
            let x45 = x44 in
            match Ojs.int_of_js x45 with | 1 -> `Expanded | _ -> assert false
        and vscode_CommentThreadCollapsibleState_Expanded_to_js :
          vscode_CommentThreadCollapsibleState_Expanded -> Ojs.t =
          fun (x43 : [ `Expanded ]) ->
            match x43 with | `Expanded -> Ojs.int_to_js 1
        and vscode_CommentingRangeProvider_of_js :
          Ojs.t -> vscode_CommentingRangeProvider = Obj.magic
        and vscode_CommentingRangeProvider_to_js :
          vscode_CommentingRangeProvider -> Ojs.t = Obj.magic
        and vscode_CompletionContext_of_js :
          Ojs.t -> vscode_CompletionContext = Obj.magic
        and vscode_CompletionContext_to_js :
          vscode_CompletionContext -> Ojs.t = Obj.magic
        and vscode_CompletionItem_of_js : Ojs.t -> vscode_CompletionItem =
          Obj.magic
        and vscode_CompletionItem_to_js : vscode_CompletionItem -> Ojs.t =
          Obj.magic
        and vscode_CompletionItemKind_of_js :
          Ojs.t -> vscode_CompletionItemKind =
          fun (x47 : Ojs.t) ->
            let x48 = x47 in
            match Ojs.int_of_js x48 with
            | 0 -> `Text
            | 1 -> `Method
            | 2 -> `Function
            | 3 -> `Constructor
            | 4 -> `Field
            | 5 -> `Variable
            | 6 -> `Class
            | 7 -> `Interface
            | 8 -> `Module
            | 9 -> `Property
            | 10 -> `Unit
            | 11 -> `Value
            | 12 -> `Enum
            | 13 -> `Keyword
            | 14 -> `Snippet
            | 15 -> `Color
            | 17 -> `Reference
            | 16 -> `File
            | 18 -> `Folder
            | 19 -> `EnumMember
            | 20 -> `Constant
            | 21 -> `Struct
            | 22 -> `Event
            | 23 -> `Operator
            | 24 -> `TypeParameter
            | 25 -> `User
            | 26 -> `Issue
            | _ -> assert false
        and vscode_CompletionItemKind_to_js :
          vscode_CompletionItemKind -> Ojs.t =
          fun
            (x46 :
              [ `Text  | `Method  | `Function  | `Constructor  | `Field 
              | `Variable  | `Class  | `Interface  | `Module  | `Property 
              | `Unit  | `Value  | `Enum  | `Keyword  | `Snippet  | `Color 
              | `Reference  | `File  | `Folder  | `EnumMember  | `Constant 
              | `Struct  | `Event  | `Operator  | `TypeParameter  | `User 
              | `Issue ])
            ->
            match x46 with
            | `Text -> Ojs.int_to_js 0
            | `Method -> Ojs.int_to_js 1
            | `Function -> Ojs.int_to_js 2
            | `Constructor -> Ojs.int_to_js 3
            | `Field -> Ojs.int_to_js 4
            | `Variable -> Ojs.int_to_js 5
            | `Class -> Ojs.int_to_js 6
            | `Interface -> Ojs.int_to_js 7
            | `Module -> Ojs.int_to_js 8
            | `Property -> Ojs.int_to_js 9
            | `Unit -> Ojs.int_to_js 10
            | `Value -> Ojs.int_to_js 11
            | `Enum -> Ojs.int_to_js 12
            | `Keyword -> Ojs.int_to_js 13
            | `Snippet -> Ojs.int_to_js 14
            | `Color -> Ojs.int_to_js 15
            | `Reference -> Ojs.int_to_js 17
            | `File -> Ojs.int_to_js 16
            | `Folder -> Ojs.int_to_js 18
            | `EnumMember -> Ojs.int_to_js 19
            | `Constant -> Ojs.int_to_js 20
            | `Struct -> Ojs.int_to_js 21
            | `Event -> Ojs.int_to_js 22
            | `Operator -> Ojs.int_to_js 23
            | `TypeParameter -> Ojs.int_to_js 24
            | `User -> Ojs.int_to_js 25
            | `Issue -> Ojs.int_to_js 26
        and vscode_CompletionItemKind_Text_of_js :
          Ojs.t -> vscode_CompletionItemKind_Text =
          fun (x50 : Ojs.t) ->
            let x51 = x50 in
            match Ojs.int_of_js x51 with | 0 -> `Text | _ -> assert false
        and vscode_CompletionItemKind_Text_to_js :
          vscode_CompletionItemKind_Text -> Ojs.t =
          fun (x49 : [ `Text ]) -> match x49 with | `Text -> Ojs.int_to_js 0
        and vscode_CompletionItemKind_Method_of_js :
          Ojs.t -> vscode_CompletionItemKind_Method =
          fun (x53 : Ojs.t) ->
            let x54 = x53 in
            match Ojs.int_of_js x54 with | 1 -> `Method | _ -> assert false
        and vscode_CompletionItemKind_Method_to_js :
          vscode_CompletionItemKind_Method -> Ojs.t =
          fun (x52 : [ `Method ]) ->
            match x52 with | `Method -> Ojs.int_to_js 1
        and vscode_CompletionItemKind_Function_of_js :
          Ojs.t -> vscode_CompletionItemKind_Function =
          fun (x56 : Ojs.t) ->
            let x57 = x56 in
            match Ojs.int_of_js x57 with | 2 -> `Function | _ -> assert false
        and vscode_CompletionItemKind_Function_to_js :
          vscode_CompletionItemKind_Function -> Ojs.t =
          fun (x55 : [ `Function ]) ->
            match x55 with | `Function -> Ojs.int_to_js 2
        and vscode_CompletionItemKind_Constructor_of_js :
          Ojs.t -> vscode_CompletionItemKind_Constructor =
          fun (x59 : Ojs.t) ->
            let x60 = x59 in
            match Ojs.int_of_js x60 with
            | 3 -> `Constructor
            | _ -> assert false
        and vscode_CompletionItemKind_Constructor_to_js :
          vscode_CompletionItemKind_Constructor -> Ojs.t =
          fun (x58 : [ `Constructor ]) ->
            match x58 with | `Constructor -> Ojs.int_to_js 3
        and vscode_CompletionItemKind_Field_of_js :
          Ojs.t -> vscode_CompletionItemKind_Field =
          fun (x62 : Ojs.t) ->
            let x63 = x62 in
            match Ojs.int_of_js x63 with | 4 -> `Field | _ -> assert false
        and vscode_CompletionItemKind_Field_to_js :
          vscode_CompletionItemKind_Field -> Ojs.t =
          fun (x61 : [ `Field ]) ->
            match x61 with | `Field -> Ojs.int_to_js 4
        and vscode_CompletionItemKind_Variable_of_js :
          Ojs.t -> vscode_CompletionItemKind_Variable =
          fun (x65 : Ojs.t) ->
            let x66 = x65 in
            match Ojs.int_of_js x66 with | 5 -> `Variable | _ -> assert false
        and vscode_CompletionItemKind_Variable_to_js :
          vscode_CompletionItemKind_Variable -> Ojs.t =
          fun (x64 : [ `Variable ]) ->
            match x64 with | `Variable -> Ojs.int_to_js 5
        and vscode_CompletionItemKind_Class_of_js :
          Ojs.t -> vscode_CompletionItemKind_Class =
          fun (x68 : Ojs.t) ->
            let x69 = x68 in
            match Ojs.int_of_js x69 with | 6 -> `Class | _ -> assert false
        and vscode_CompletionItemKind_Class_to_js :
          vscode_CompletionItemKind_Class -> Ojs.t =
          fun (x67 : [ `Class ]) ->
            match x67 with | `Class -> Ojs.int_to_js 6
        and vscode_CompletionItemKind_Interface_of_js :
          Ojs.t -> vscode_CompletionItemKind_Interface =
          fun (x71 : Ojs.t) ->
            let x72 = x71 in
            match Ojs.int_of_js x72 with
            | 7 -> `Interface
            | _ -> assert false
        and vscode_CompletionItemKind_Interface_to_js :
          vscode_CompletionItemKind_Interface -> Ojs.t =
          fun (x70 : [ `Interface ]) ->
            match x70 with | `Interface -> Ojs.int_to_js 7
        and vscode_CompletionItemKind_Module_of_js :
          Ojs.t -> vscode_CompletionItemKind_Module =
          fun (x74 : Ojs.t) ->
            let x75 = x74 in
            match Ojs.int_of_js x75 with | 8 -> `Module | _ -> assert false
        and vscode_CompletionItemKind_Module_to_js :
          vscode_CompletionItemKind_Module -> Ojs.t =
          fun (x73 : [ `Module ]) ->
            match x73 with | `Module -> Ojs.int_to_js 8
        and vscode_CompletionItemKind_Property_of_js :
          Ojs.t -> vscode_CompletionItemKind_Property =
          fun (x77 : Ojs.t) ->
            let x78 = x77 in
            match Ojs.int_of_js x78 with | 9 -> `Property | _ -> assert false
        and vscode_CompletionItemKind_Property_to_js :
          vscode_CompletionItemKind_Property -> Ojs.t =
          fun (x76 : [ `Property ]) ->
            match x76 with | `Property -> Ojs.int_to_js 9
        and vscode_CompletionItemKind_Unit_of_js :
          Ojs.t -> vscode_CompletionItemKind_Unit =
          fun (x80 : Ojs.t) ->
            let x81 = x80 in
            match Ojs.int_of_js x81 with | 10 -> `Unit | _ -> assert false
        and vscode_CompletionItemKind_Unit_to_js :
          vscode_CompletionItemKind_Unit -> Ojs.t =
          fun (x79 : [ `Unit ]) -> match x79 with | `Unit -> Ojs.int_to_js 10
        and vscode_CompletionItemKind_Value_of_js :
          Ojs.t -> vscode_CompletionItemKind_Value =
          fun (x83 : Ojs.t) ->
            let x84 = x83 in
            match Ojs.int_of_js x84 with | 11 -> `Value | _ -> assert false
        and vscode_CompletionItemKind_Value_to_js :
          vscode_CompletionItemKind_Value -> Ojs.t =
          fun (x82 : [ `Value ]) ->
            match x82 with | `Value -> Ojs.int_to_js 11
        and vscode_CompletionItemKind_Enum_of_js :
          Ojs.t -> vscode_CompletionItemKind_Enum =
          fun (x86 : Ojs.t) ->
            let x87 = x86 in
            match Ojs.int_of_js x87 with | 12 -> `Enum | _ -> assert false
        and vscode_CompletionItemKind_Enum_to_js :
          vscode_CompletionItemKind_Enum -> Ojs.t =
          fun (x85 : [ `Enum ]) -> match x85 with | `Enum -> Ojs.int_to_js 12
        and vscode_CompletionItemKind_Keyword_of_js :
          Ojs.t -> vscode_CompletionItemKind_Keyword =
          fun (x89 : Ojs.t) ->
            let x90 = x89 in
            match Ojs.int_of_js x90 with | 13 -> `Keyword | _ -> assert false
        and vscode_CompletionItemKind_Keyword_to_js :
          vscode_CompletionItemKind_Keyword -> Ojs.t =
          fun (x88 : [ `Keyword ]) ->
            match x88 with | `Keyword -> Ojs.int_to_js 13
        and vscode_CompletionItemKind_Snippet_of_js :
          Ojs.t -> vscode_CompletionItemKind_Snippet =
          fun (x92 : Ojs.t) ->
            let x93 = x92 in
            match Ojs.int_of_js x93 with | 14 -> `Snippet | _ -> assert false
        and vscode_CompletionItemKind_Snippet_to_js :
          vscode_CompletionItemKind_Snippet -> Ojs.t =
          fun (x91 : [ `Snippet ]) ->
            match x91 with | `Snippet -> Ojs.int_to_js 14
        and vscode_CompletionItemKind_Color_of_js :
          Ojs.t -> vscode_CompletionItemKind_Color =
          fun (x95 : Ojs.t) ->
            let x96 = x95 in
            match Ojs.int_of_js x96 with | 15 -> `Color | _ -> assert false
        and vscode_CompletionItemKind_Color_to_js :
          vscode_CompletionItemKind_Color -> Ojs.t =
          fun (x94 : [ `Color ]) ->
            match x94 with | `Color -> Ojs.int_to_js 15
        and vscode_CompletionItemKind_Reference_of_js :
          Ojs.t -> vscode_CompletionItemKind_Reference =
          fun (x98 : Ojs.t) ->
            let x99 = x98 in
            match Ojs.int_of_js x99 with
            | 17 -> `Reference
            | _ -> assert false
        and vscode_CompletionItemKind_Reference_to_js :
          vscode_CompletionItemKind_Reference -> Ojs.t =
          fun (x97 : [ `Reference ]) ->
            match x97 with | `Reference -> Ojs.int_to_js 17
        and vscode_CompletionItemKind_File_of_js :
          Ojs.t -> vscode_CompletionItemKind_File =
          fun (x101 : Ojs.t) ->
            let x102 = x101 in
            match Ojs.int_of_js x102 with | 16 -> `File | _ -> assert false
        and vscode_CompletionItemKind_File_to_js :
          vscode_CompletionItemKind_File -> Ojs.t =
          fun (x100 : [ `File ]) ->
            match x100 with | `File -> Ojs.int_to_js 16
        and vscode_CompletionItemKind_Folder_of_js :
          Ojs.t -> vscode_CompletionItemKind_Folder =
          fun (x104 : Ojs.t) ->
            let x105 = x104 in
            match Ojs.int_of_js x105 with | 18 -> `Folder | _ -> assert false
        and vscode_CompletionItemKind_Folder_to_js :
          vscode_CompletionItemKind_Folder -> Ojs.t =
          fun (x103 : [ `Folder ]) ->
            match x103 with | `Folder -> Ojs.int_to_js 18
        and vscode_CompletionItemKind_EnumMember_of_js :
          Ojs.t -> vscode_CompletionItemKind_EnumMember =
          fun (x107 : Ojs.t) ->
            let x108 = x107 in
            match Ojs.int_of_js x108 with
            | 19 -> `EnumMember
            | _ -> assert false
        and vscode_CompletionItemKind_EnumMember_to_js :
          vscode_CompletionItemKind_EnumMember -> Ojs.t =
          fun (x106 : [ `EnumMember ]) ->
            match x106 with | `EnumMember -> Ojs.int_to_js 19
        and vscode_CompletionItemKind_Constant_of_js :
          Ojs.t -> vscode_CompletionItemKind_Constant =
          fun (x110 : Ojs.t) ->
            let x111 = x110 in
            match Ojs.int_of_js x111 with
            | 20 -> `Constant
            | _ -> assert false
        and vscode_CompletionItemKind_Constant_to_js :
          vscode_CompletionItemKind_Constant -> Ojs.t =
          fun (x109 : [ `Constant ]) ->
            match x109 with | `Constant -> Ojs.int_to_js 20
        and vscode_CompletionItemKind_Struct_of_js :
          Ojs.t -> vscode_CompletionItemKind_Struct =
          fun (x113 : Ojs.t) ->
            let x114 = x113 in
            match Ojs.int_of_js x114 with | 21 -> `Struct | _ -> assert false
        and vscode_CompletionItemKind_Struct_to_js :
          vscode_CompletionItemKind_Struct -> Ojs.t =
          fun (x112 : [ `Struct ]) ->
            match x112 with | `Struct -> Ojs.int_to_js 21
        and vscode_CompletionItemKind_Event_of_js :
          Ojs.t -> vscode_CompletionItemKind_Event =
          fun (x116 : Ojs.t) ->
            let x117 = x116 in
            match Ojs.int_of_js x117 with | 22 -> `Event | _ -> assert false
        and vscode_CompletionItemKind_Event_to_js :
          vscode_CompletionItemKind_Event -> Ojs.t =
          fun (x115 : [ `Event ]) ->
            match x115 with | `Event -> Ojs.int_to_js 22
        and vscode_CompletionItemKind_Operator_of_js :
          Ojs.t -> vscode_CompletionItemKind_Operator =
          fun (x119 : Ojs.t) ->
            let x120 = x119 in
            match Ojs.int_of_js x120 with
            | 23 -> `Operator
            | _ -> assert false
        and vscode_CompletionItemKind_Operator_to_js :
          vscode_CompletionItemKind_Operator -> Ojs.t =
          fun (x118 : [ `Operator ]) ->
            match x118 with | `Operator -> Ojs.int_to_js 23
        and vscode_CompletionItemKind_TypeParameter_of_js :
          Ojs.t -> vscode_CompletionItemKind_TypeParameter =
          fun (x122 : Ojs.t) ->
            let x123 = x122 in
            match Ojs.int_of_js x123 with
            | 24 -> `TypeParameter
            | _ -> assert false
        and vscode_CompletionItemKind_TypeParameter_to_js :
          vscode_CompletionItemKind_TypeParameter -> Ojs.t =
          fun (x121 : [ `TypeParameter ]) ->
            match x121 with | `TypeParameter -> Ojs.int_to_js 24
        and vscode_CompletionItemKind_User_of_js :
          Ojs.t -> vscode_CompletionItemKind_User =
          fun (x125 : Ojs.t) ->
            let x126 = x125 in
            match Ojs.int_of_js x126 with | 25 -> `User | _ -> assert false
        and vscode_CompletionItemKind_User_to_js :
          vscode_CompletionItemKind_User -> Ojs.t =
          fun (x124 : [ `User ]) ->
            match x124 with | `User -> Ojs.int_to_js 25
        and vscode_CompletionItemKind_Issue_of_js :
          Ojs.t -> vscode_CompletionItemKind_Issue =
          fun (x128 : Ojs.t) ->
            let x129 = x128 in
            match Ojs.int_of_js x129 with | 26 -> `Issue | _ -> assert false
        and vscode_CompletionItemKind_Issue_to_js :
          vscode_CompletionItemKind_Issue -> Ojs.t =
          fun (x127 : [ `Issue ]) ->
            match x127 with | `Issue -> Ojs.int_to_js 26
        and vscode_CompletionItemProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CompletionItemProvider =
          fun _T -> Obj.magic
        and vscode_CompletionItemProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CompletionItemProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CompletionItemTag_of_js :
          Ojs.t -> vscode_CompletionItemTag =
          fun (x131 : Ojs.t) ->
            let x132 = x131 in
            match Ojs.int_of_js x132 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_CompletionItemTag_to_js :
          vscode_CompletionItemTag -> Ojs.t =
          fun (x130 : [ `Deprecated ]) ->
            match x130 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_CompletionItemTag_Deprecated_of_js :
          Ojs.t -> vscode_CompletionItemTag_Deprecated =
          fun (x134 : Ojs.t) ->
            let x135 = x134 in
            match Ojs.int_of_js x135 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_CompletionItemTag_Deprecated_to_js :
          vscode_CompletionItemTag_Deprecated -> Ojs.t =
          fun (x133 : [ `Deprecated ]) ->
            match x133 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_CompletionList_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CompletionList =
          fun _T -> Obj.magic
        and vscode_CompletionList_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CompletionList -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CompletionTriggerKind_of_js :
          Ojs.t -> vscode_CompletionTriggerKind =
          fun (x137 : Ojs.t) ->
            let x138 = x137 in
            match Ojs.int_of_js x138 with
            | 0 -> `Invoke
            | 1 -> `TriggerCharacter
            | 2 -> `TriggerForIncompleteCompletions
            | _ -> assert false
        and vscode_CompletionTriggerKind_to_js :
          vscode_CompletionTriggerKind -> Ojs.t =
          fun
            (x136 :
              [ `Invoke  | `TriggerCharacter 
              | `TriggerForIncompleteCompletions ])
            ->
            match x136 with
            | `Invoke -> Ojs.int_to_js 0
            | `TriggerCharacter -> Ojs.int_to_js 1
            | `TriggerForIncompleteCompletions -> Ojs.int_to_js 2
        and vscode_CompletionTriggerKind_Invoke_of_js :
          Ojs.t -> vscode_CompletionTriggerKind_Invoke =
          fun (x140 : Ojs.t) ->
            let x141 = x140 in
            match Ojs.int_of_js x141 with | 0 -> `Invoke | _ -> assert false
        and vscode_CompletionTriggerKind_Invoke_to_js :
          vscode_CompletionTriggerKind_Invoke -> Ojs.t =
          fun (x139 : [ `Invoke ]) ->
            match x139 with | `Invoke -> Ojs.int_to_js 0
        and vscode_CompletionTriggerKind_TriggerCharacter_of_js :
          Ojs.t -> vscode_CompletionTriggerKind_TriggerCharacter =
          fun (x143 : Ojs.t) ->
            let x144 = x143 in
            match Ojs.int_of_js x144 with
            | 1 -> `TriggerCharacter
            | _ -> assert false
        and vscode_CompletionTriggerKind_TriggerCharacter_to_js :
          vscode_CompletionTriggerKind_TriggerCharacter -> Ojs.t =
          fun (x142 : [ `TriggerCharacter ]) ->
            match x142 with | `TriggerCharacter -> Ojs.int_to_js 1
        and vscode_CompletionTriggerKind_TriggerForIncompleteCompletions_of_js
          :
          Ojs.t ->
            vscode_CompletionTriggerKind_TriggerForIncompleteCompletions
          =
          fun (x146 : Ojs.t) ->
            let x147 = x146 in
            match Ojs.int_of_js x147 with
            | 2 -> `TriggerForIncompleteCompletions
            | _ -> assert false
        and vscode_CompletionTriggerKind_TriggerForIncompleteCompletions_to_js
          :
          vscode_CompletionTriggerKind_TriggerForIncompleteCompletions ->
            Ojs.t
          =
          fun (x145 : [ `TriggerForIncompleteCompletions ]) ->
            match x145 with
            | `TriggerForIncompleteCompletions -> Ojs.int_to_js 2
        and vscode_ConfigurationChangeEvent_of_js :
          Ojs.t -> vscode_ConfigurationChangeEvent = Obj.magic
        and vscode_ConfigurationChangeEvent_to_js :
          vscode_ConfigurationChangeEvent -> Ojs.t = Obj.magic
        and vscode_ConfigurationScope_of_js :
          Ojs.t -> vscode_ConfigurationScope =
          fun (x153 : Ojs.t) ->
            union4_of_js vscode_TextDocument_of_js vscode_Uri_of_js
              vscode_WorkspaceFolder_of_js anonymous_interface_35_of_js x153
        and vscode_ConfigurationScope_to_js :
          vscode_ConfigurationScope -> Ojs.t =
          fun
            (x148 :
              (vscode_TextDocument, vscode_Uri, vscode_WorkspaceFolder,
                anonymous_interface_35) union4)
            ->
            union4_to_js vscode_TextDocument_to_js vscode_Uri_to_js
              vscode_WorkspaceFolder_to_js anonymous_interface_35_to_js x148
        and vscode_ConfigurationTarget_of_js :
          Ojs.t -> vscode_ConfigurationTarget =
          fun (x159 : Ojs.t) ->
            let x160 = x159 in
            match Ojs.int_of_js x160 with
            | 1 -> `Global
            | 2 -> `Workspace
            | 3 -> `WorkspaceFolder
            | _ -> assert false
        and vscode_ConfigurationTarget_to_js :
          vscode_ConfigurationTarget -> Ojs.t =
          fun (x158 : [ `Global  | `Workspace  | `WorkspaceFolder ]) ->
            match x158 with
            | `Global -> Ojs.int_to_js 1
            | `Workspace -> Ojs.int_to_js 2
            | `WorkspaceFolder -> Ojs.int_to_js 3
        and vscode_ConfigurationTarget_Global_of_js :
          Ojs.t -> vscode_ConfigurationTarget_Global =
          fun (x162 : Ojs.t) ->
            let x163 = x162 in
            match Ojs.int_of_js x163 with | 1 -> `Global | _ -> assert false
        and vscode_ConfigurationTarget_Global_to_js :
          vscode_ConfigurationTarget_Global -> Ojs.t =
          fun (x161 : [ `Global ]) ->
            match x161 with | `Global -> Ojs.int_to_js 1
        and vscode_ConfigurationTarget_Workspace_of_js :
          Ojs.t -> vscode_ConfigurationTarget_Workspace =
          fun (x165 : Ojs.t) ->
            let x166 = x165 in
            match Ojs.int_of_js x166 with
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_ConfigurationTarget_Workspace_to_js :
          vscode_ConfigurationTarget_Workspace -> Ojs.t =
          fun (x164 : [ `Workspace ]) ->
            match x164 with | `Workspace -> Ojs.int_to_js 2
        and vscode_ConfigurationTarget_WorkspaceFolder_of_js :
          Ojs.t -> vscode_ConfigurationTarget_WorkspaceFolder =
          fun (x168 : Ojs.t) ->
            let x169 = x168 in
            match Ojs.int_of_js x169 with
            | 3 -> `WorkspaceFolder
            | _ -> assert false
        and vscode_ConfigurationTarget_WorkspaceFolder_to_js :
          vscode_ConfigurationTarget_WorkspaceFolder -> Ojs.t =
          fun (x167 : [ `WorkspaceFolder ]) ->
            match x167 with | `WorkspaceFolder -> Ojs.int_to_js 3
        and vscode_CustomDocument_of_js : Ojs.t -> vscode_CustomDocument =
          Obj.magic
        and vscode_CustomDocument_to_js : vscode_CustomDocument -> Ojs.t =
          Obj.magic
        and vscode_CustomDocumentBackup_of_js :
          Ojs.t -> vscode_CustomDocumentBackup = Obj.magic
        and vscode_CustomDocumentBackup_to_js :
          vscode_CustomDocumentBackup -> Ojs.t = Obj.magic
        and vscode_CustomDocumentBackupContext_of_js :
          Ojs.t -> vscode_CustomDocumentBackupContext = Obj.magic
        and vscode_CustomDocumentBackupContext_to_js :
          vscode_CustomDocumentBackupContext -> Ojs.t = Obj.magic
        and vscode_CustomDocumentContentChangeEvent_of_js :
          'T .
            (Ojs.t -> 'T) ->
              Ojs.t -> 'T vscode_CustomDocumentContentChangeEvent
          = fun _T -> Obj.magic
        and vscode_CustomDocumentContentChangeEvent_to_js :
          'T .
            ('T -> Ojs.t) ->
              'T vscode_CustomDocumentContentChangeEvent -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_CustomDocumentEditEvent_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CustomDocumentEditEvent =
          fun _T -> Obj.magic
        and vscode_CustomDocumentEditEvent_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CustomDocumentEditEvent -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CustomDocumentOpenContext_of_js :
          Ojs.t -> vscode_CustomDocumentOpenContext = Obj.magic
        and vscode_CustomDocumentOpenContext_to_js :
          vscode_CustomDocumentOpenContext -> Ojs.t = Obj.magic
        and vscode_CustomEditorProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CustomEditorProvider =
          fun _T -> Obj.magic
        and vscode_CustomEditorProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CustomEditorProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CustomExecution_of_js : Ojs.t -> vscode_CustomExecution =
          Obj.magic
        and vscode_CustomExecution_to_js : vscode_CustomExecution -> Ojs.t =
          Obj.magic
        and vscode_CustomReadonlyEditorProvider_of_js :
          'T .
            (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CustomReadonlyEditorProvider
          = fun _T -> Obj.magic
        and vscode_CustomReadonlyEditorProvider_to_js :
          'T .
            ('T -> Ojs.t) -> 'T vscode_CustomReadonlyEditorProvider -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_CustomTextEditorProvider_of_js :
          Ojs.t -> vscode_CustomTextEditorProvider = Obj.magic
        and vscode_CustomTextEditorProvider_to_js :
          vscode_CustomTextEditorProvider -> Ojs.t = Obj.magic
        and vscode_DebugAdapter_of_js : Ojs.t -> vscode_DebugAdapter =
          Obj.magic
        and vscode_DebugAdapter_to_js : vscode_DebugAdapter -> Ojs.t =
          Obj.magic
        and vscode_DebugAdapterDescriptor_of_js :
          Ojs.t -> vscode_DebugAdapterDescriptor =
          fun (x175 : Ojs.t) ->
            union4_of_js vscode_DebugAdapterExecutable_of_js
              vscode_DebugAdapterInlineImplementation_of_js
              vscode_DebugAdapterNamedPipeServer_of_js
              vscode_DebugAdapterServer_of_js x175
        and vscode_DebugAdapterDescriptor_to_js :
          vscode_DebugAdapterDescriptor -> Ojs.t =
          fun
            (x170 :
              (vscode_DebugAdapterExecutable,
                vscode_DebugAdapterInlineImplementation,
                vscode_DebugAdapterNamedPipeServer,
                vscode_DebugAdapterServer) union4)
            ->
            union4_to_js vscode_DebugAdapterExecutable_to_js
              vscode_DebugAdapterInlineImplementation_to_js
              vscode_DebugAdapterNamedPipeServer_to_js
              vscode_DebugAdapterServer_to_js x170
        and vscode_DebugAdapterDescriptorFactory_of_js :
          Ojs.t -> vscode_DebugAdapterDescriptorFactory = Obj.magic
        and vscode_DebugAdapterDescriptorFactory_to_js :
          vscode_DebugAdapterDescriptorFactory -> Ojs.t = Obj.magic
        and vscode_DebugAdapterExecutable_of_js :
          Ojs.t -> vscode_DebugAdapterExecutable = Obj.magic
        and vscode_DebugAdapterExecutable_to_js :
          vscode_DebugAdapterExecutable -> Ojs.t = Obj.magic
        and vscode_DebugAdapterExecutableOptions_of_js :
          Ojs.t -> vscode_DebugAdapterExecutableOptions = Obj.magic
        and vscode_DebugAdapterExecutableOptions_to_js :
          vscode_DebugAdapterExecutableOptions -> Ojs.t = Obj.magic
        and vscode_DebugAdapterInlineImplementation_of_js :
          Ojs.t -> vscode_DebugAdapterInlineImplementation = Obj.magic
        and vscode_DebugAdapterInlineImplementation_to_js :
          vscode_DebugAdapterInlineImplementation -> Ojs.t = Obj.magic
        and vscode_DebugAdapterNamedPipeServer_of_js :
          Ojs.t -> vscode_DebugAdapterNamedPipeServer = Obj.magic
        and vscode_DebugAdapterNamedPipeServer_to_js :
          vscode_DebugAdapterNamedPipeServer -> Ojs.t = Obj.magic
        and vscode_DebugAdapterServer_of_js :
          Ojs.t -> vscode_DebugAdapterServer = Obj.magic
        and vscode_DebugAdapterServer_to_js :
          vscode_DebugAdapterServer -> Ojs.t = Obj.magic
        and vscode_DebugAdapterTracker_of_js :
          Ojs.t -> vscode_DebugAdapterTracker = Obj.magic
        and vscode_DebugAdapterTracker_to_js :
          vscode_DebugAdapterTracker -> Ojs.t = Obj.magic
        and vscode_DebugAdapterTrackerFactory_of_js :
          Ojs.t -> vscode_DebugAdapterTrackerFactory = Obj.magic
        and vscode_DebugAdapterTrackerFactory_to_js :
          vscode_DebugAdapterTrackerFactory -> Ojs.t = Obj.magic
        and vscode_DebugConfiguration_of_js :
          Ojs.t -> vscode_DebugConfiguration = Obj.magic
        and vscode_DebugConfiguration_to_js :
          vscode_DebugConfiguration -> Ojs.t = Obj.magic
        and vscode_DebugConfigurationProvider_of_js :
          Ojs.t -> vscode_DebugConfigurationProvider = Obj.magic
        and vscode_DebugConfigurationProvider_to_js :
          vscode_DebugConfigurationProvider -> Ojs.t = Obj.magic
        and vscode_DebugConfigurationProviderTriggerKind_of_js :
          Ojs.t -> vscode_DebugConfigurationProviderTriggerKind =
          fun (x181 : Ojs.t) ->
            let x182 = x181 in
            match Ojs.int_of_js x182 with
            | 1 -> `Initial
            | 2 -> `Dynamic
            | _ -> assert false
        and vscode_DebugConfigurationProviderTriggerKind_to_js :
          vscode_DebugConfigurationProviderTriggerKind -> Ojs.t =
          fun (x180 : [ `Initial  | `Dynamic ]) ->
            match x180 with
            | `Initial -> Ojs.int_to_js 1
            | `Dynamic -> Ojs.int_to_js 2
        and vscode_DebugConfigurationProviderTriggerKind_Initial_of_js :
          Ojs.t -> vscode_DebugConfigurationProviderTriggerKind_Initial =
          fun (x184 : Ojs.t) ->
            let x185 = x184 in
            match Ojs.int_of_js x185 with | 1 -> `Initial | _ -> assert false
        and vscode_DebugConfigurationProviderTriggerKind_Initial_to_js :
          vscode_DebugConfigurationProviderTriggerKind_Initial -> Ojs.t =
          fun (x183 : [ `Initial ]) ->
            match x183 with | `Initial -> Ojs.int_to_js 1
        and vscode_DebugConfigurationProviderTriggerKind_Dynamic_of_js :
          Ojs.t -> vscode_DebugConfigurationProviderTriggerKind_Dynamic =
          fun (x187 : Ojs.t) ->
            let x188 = x187 in
            match Ojs.int_of_js x188 with | 2 -> `Dynamic | _ -> assert false
        and vscode_DebugConfigurationProviderTriggerKind_Dynamic_to_js :
          vscode_DebugConfigurationProviderTriggerKind_Dynamic -> Ojs.t =
          fun (x186 : [ `Dynamic ]) ->
            match x186 with | `Dynamic -> Ojs.int_to_js 2
        and vscode_DebugConsole_of_js : Ojs.t -> vscode_DebugConsole =
          Obj.magic
        and vscode_DebugConsole_to_js : vscode_DebugConsole -> Ojs.t =
          Obj.magic
        and vscode_DebugConsoleMode_of_js : Ojs.t -> vscode_DebugConsoleMode
          =
          fun (x190 : Ojs.t) ->
            let x191 = x190 in
            match Ojs.int_of_js x191 with
            | 0 -> `Separate
            | 1 -> `MergeWithParent
            | _ -> assert false
        and vscode_DebugConsoleMode_to_js : vscode_DebugConsoleMode -> Ojs.t
          =
          fun (x189 : [ `Separate  | `MergeWithParent ]) ->
            match x189 with
            | `Separate -> Ojs.int_to_js 0
            | `MergeWithParent -> Ojs.int_to_js 1
        and vscode_DebugConsoleMode_Separate_of_js :
          Ojs.t -> vscode_DebugConsoleMode_Separate =
          fun (x193 : Ojs.t) ->
            let x194 = x193 in
            match Ojs.int_of_js x194 with
            | 0 -> `Separate
            | _ -> assert false
        and vscode_DebugConsoleMode_Separate_to_js :
          vscode_DebugConsoleMode_Separate -> Ojs.t =
          fun (x192 : [ `Separate ]) ->
            match x192 with | `Separate -> Ojs.int_to_js 0
        and vscode_DebugConsoleMode_MergeWithParent_of_js :
          Ojs.t -> vscode_DebugConsoleMode_MergeWithParent =
          fun (x196 : Ojs.t) ->
            let x197 = x196 in
            match Ojs.int_of_js x197 with
            | 1 -> `MergeWithParent
            | _ -> assert false
        and vscode_DebugConsoleMode_MergeWithParent_to_js :
          vscode_DebugConsoleMode_MergeWithParent -> Ojs.t =
          fun (x195 : [ `MergeWithParent ]) ->
            match x195 with | `MergeWithParent -> Ojs.int_to_js 1
        and vscode_DebugProtocolBreakpoint_of_js :
          Ojs.t -> vscode_DebugProtocolBreakpoint = Obj.magic
        and vscode_DebugProtocolBreakpoint_to_js :
          vscode_DebugProtocolBreakpoint -> Ojs.t = Obj.magic
        and vscode_DebugProtocolMessage_of_js :
          Ojs.t -> vscode_DebugProtocolMessage = Obj.magic
        and vscode_DebugProtocolMessage_to_js :
          vscode_DebugProtocolMessage -> Ojs.t = Obj.magic
        and vscode_DebugProtocolSource_of_js :
          Ojs.t -> vscode_DebugProtocolSource = Obj.magic
        and vscode_DebugProtocolSource_to_js :
          vscode_DebugProtocolSource -> Ojs.t = Obj.magic
        and vscode_DebugSession_of_js : Ojs.t -> vscode_DebugSession =
          Obj.magic
        and vscode_DebugSession_to_js : vscode_DebugSession -> Ojs.t =
          Obj.magic
        and vscode_DebugSessionCustomEvent_of_js :
          Ojs.t -> vscode_DebugSessionCustomEvent = Obj.magic
        and vscode_DebugSessionCustomEvent_to_js :
          vscode_DebugSessionCustomEvent -> Ojs.t = Obj.magic
        and vscode_DebugSessionOptions_of_js :
          Ojs.t -> vscode_DebugSessionOptions = Obj.magic
        and vscode_DebugSessionOptions_to_js :
          vscode_DebugSessionOptions -> Ojs.t = Obj.magic
        and vscode_Declaration_of_js : Ojs.t -> vscode_Declaration =
          fun (x203 : Ojs.t) ->
            or_array_of_js vscode_Location_of_js
              (fun (x205 : Ojs.t) ->
                 union2_of_js vscode_Location_of_js vscode_LocationLink_of_js
                   x205) x203
        and vscode_Declaration_to_js : vscode_Declaration -> Ojs.t =
          fun
            (x198 :
              (vscode_Location,
                (vscode_Location, vscode_LocationLink) union2) or_array)
            ->
            or_array_to_js vscode_Location_to_js
              (fun (x200 : (vscode_Location, vscode_LocationLink) union2) ->
                 union2_to_js vscode_Location_to_js vscode_LocationLink_to_js
                   x200) x198
        and vscode_DeclarationProvider_of_js :
          Ojs.t -> vscode_DeclarationProvider = Obj.magic
        and vscode_DeclarationProvider_to_js :
          vscode_DeclarationProvider -> Ojs.t = Obj.magic
        and vscode_DecorationInstanceRenderOptions_of_js :
          Ojs.t -> vscode_DecorationInstanceRenderOptions = Obj.magic
        and vscode_DecorationInstanceRenderOptions_to_js :
          vscode_DecorationInstanceRenderOptions -> Ojs.t = Obj.magic
        and vscode_DecorationOptions_of_js :
          Ojs.t -> vscode_DecorationOptions = Obj.magic
        and vscode_DecorationOptions_to_js :
          vscode_DecorationOptions -> Ojs.t = Obj.magic
        and vscode_DecorationRangeBehavior_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior =
          fun (x209 : Ojs.t) ->
            let x210 = x209 in
            match Ojs.int_of_js x210 with
            | 0 -> `OpenOpen
            | 1 -> `ClosedClosed
            | 2 -> `OpenClosed
            | 3 -> `ClosedOpen
            | _ -> assert false
        and vscode_DecorationRangeBehavior_to_js :
          vscode_DecorationRangeBehavior -> Ojs.t =
          fun
            (x208 :
              [ `OpenOpen  | `ClosedClosed  | `OpenClosed  | `ClosedOpen ])
            ->
            match x208 with
            | `OpenOpen -> Ojs.int_to_js 0
            | `ClosedClosed -> Ojs.int_to_js 1
            | `OpenClosed -> Ojs.int_to_js 2
            | `ClosedOpen -> Ojs.int_to_js 3
        and vscode_DecorationRangeBehavior_OpenOpen_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_OpenOpen =
          fun (x212 : Ojs.t) ->
            let x213 = x212 in
            match Ojs.int_of_js x213 with
            | 0 -> `OpenOpen
            | _ -> assert false
        and vscode_DecorationRangeBehavior_OpenOpen_to_js :
          vscode_DecorationRangeBehavior_OpenOpen -> Ojs.t =
          fun (x211 : [ `OpenOpen ]) ->
            match x211 with | `OpenOpen -> Ojs.int_to_js 0
        and vscode_DecorationRangeBehavior_ClosedClosed_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_ClosedClosed =
          fun (x215 : Ojs.t) ->
            let x216 = x215 in
            match Ojs.int_of_js x216 with
            | 1 -> `ClosedClosed
            | _ -> assert false
        and vscode_DecorationRangeBehavior_ClosedClosed_to_js :
          vscode_DecorationRangeBehavior_ClosedClosed -> Ojs.t =
          fun (x214 : [ `ClosedClosed ]) ->
            match x214 with | `ClosedClosed -> Ojs.int_to_js 1
        and vscode_DecorationRangeBehavior_OpenClosed_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_OpenClosed =
          fun (x218 : Ojs.t) ->
            let x219 = x218 in
            match Ojs.int_of_js x219 with
            | 2 -> `OpenClosed
            | _ -> assert false
        and vscode_DecorationRangeBehavior_OpenClosed_to_js :
          vscode_DecorationRangeBehavior_OpenClosed -> Ojs.t =
          fun (x217 : [ `OpenClosed ]) ->
            match x217 with | `OpenClosed -> Ojs.int_to_js 2
        and vscode_DecorationRangeBehavior_ClosedOpen_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_ClosedOpen =
          fun (x221 : Ojs.t) ->
            let x222 = x221 in
            match Ojs.int_of_js x222 with
            | 3 -> `ClosedOpen
            | _ -> assert false
        and vscode_DecorationRangeBehavior_ClosedOpen_to_js :
          vscode_DecorationRangeBehavior_ClosedOpen -> Ojs.t =
          fun (x220 : [ `ClosedOpen ]) ->
            match x220 with | `ClosedOpen -> Ojs.int_to_js 3
        and vscode_DecorationRenderOptions_of_js :
          Ojs.t -> vscode_DecorationRenderOptions = Obj.magic
        and vscode_DecorationRenderOptions_to_js :
          vscode_DecorationRenderOptions -> Ojs.t = Obj.magic
        and vscode_Definition_of_js : Ojs.t -> vscode_Definition =
          fun (x226 : Ojs.t) ->
            or_array_of_js vscode_Location_of_js vscode_Location_of_js x226
        and vscode_Definition_to_js : vscode_Definition -> Ojs.t =
          fun (x223 : (vscode_Location, vscode_Location) or_array) ->
            or_array_to_js vscode_Location_to_js vscode_Location_to_js x223
        and vscode_DefinitionLink_of_js : Ojs.t -> vscode_DefinitionLink =
          fun (x230 : Ojs.t) -> vscode_LocationLink_of_js x230
        and vscode_DefinitionLink_to_js : vscode_DefinitionLink -> Ojs.t =
          fun (x229 : vscode_LocationLink) -> vscode_LocationLink_to_js x229
        and vscode_DefinitionProvider_of_js :
          Ojs.t -> vscode_DefinitionProvider = Obj.magic
        and vscode_DefinitionProvider_to_js :
          vscode_DefinitionProvider -> Ojs.t = Obj.magic
        and vscode_Diagnostic_of_js : Ojs.t -> vscode_Diagnostic = Obj.magic
        and vscode_Diagnostic_to_js : vscode_Diagnostic -> Ojs.t = Obj.magic
        and vscode_DiagnosticChangeEvent_of_js :
          Ojs.t -> vscode_DiagnosticChangeEvent = Obj.magic
        and vscode_DiagnosticChangeEvent_to_js :
          vscode_DiagnosticChangeEvent -> Ojs.t = Obj.magic
        and vscode_DiagnosticCollection_of_js :
          Ojs.t -> vscode_DiagnosticCollection = Obj.magic
        and vscode_DiagnosticCollection_to_js :
          vscode_DiagnosticCollection -> Ojs.t = Obj.magic
        and vscode_DiagnosticRelatedInformation_of_js :
          Ojs.t -> vscode_DiagnosticRelatedInformation = Obj.magic
        and vscode_DiagnosticRelatedInformation_to_js :
          vscode_DiagnosticRelatedInformation -> Ojs.t = Obj.magic
        and vscode_DiagnosticSeverity_of_js :
          Ojs.t -> vscode_DiagnosticSeverity =
          fun (x232 : Ojs.t) ->
            let x233 = x232 in
            match Ojs.int_of_js x233 with
            | 0 -> `Error
            | 1 -> `Warning
            | 2 -> `Information
            | 3 -> `Hint
            | _ -> assert false
        and vscode_DiagnosticSeverity_to_js :
          vscode_DiagnosticSeverity -> Ojs.t =
          fun (x231 : [ `Error  | `Warning  | `Information  | `Hint ]) ->
            match x231 with
            | `Error -> Ojs.int_to_js 0
            | `Warning -> Ojs.int_to_js 1
            | `Information -> Ojs.int_to_js 2
            | `Hint -> Ojs.int_to_js 3
        and vscode_DiagnosticSeverity_Error_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Error =
          fun (x235 : Ojs.t) ->
            let x236 = x235 in
            match Ojs.int_of_js x236 with | 0 -> `Error | _ -> assert false
        and vscode_DiagnosticSeverity_Error_to_js :
          vscode_DiagnosticSeverity_Error -> Ojs.t =
          fun (x234 : [ `Error ]) ->
            match x234 with | `Error -> Ojs.int_to_js 0
        and vscode_DiagnosticSeverity_Warning_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Warning =
          fun (x238 : Ojs.t) ->
            let x239 = x238 in
            match Ojs.int_of_js x239 with | 1 -> `Warning | _ -> assert false
        and vscode_DiagnosticSeverity_Warning_to_js :
          vscode_DiagnosticSeverity_Warning -> Ojs.t =
          fun (x237 : [ `Warning ]) ->
            match x237 with | `Warning -> Ojs.int_to_js 1
        and vscode_DiagnosticSeverity_Information_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Information =
          fun (x241 : Ojs.t) ->
            let x242 = x241 in
            match Ojs.int_of_js x242 with
            | 2 -> `Information
            | _ -> assert false
        and vscode_DiagnosticSeverity_Information_to_js :
          vscode_DiagnosticSeverity_Information -> Ojs.t =
          fun (x240 : [ `Information ]) ->
            match x240 with | `Information -> Ojs.int_to_js 2
        and vscode_DiagnosticSeverity_Hint_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Hint =
          fun (x244 : Ojs.t) ->
            let x245 = x244 in
            match Ojs.int_of_js x245 with | 3 -> `Hint | _ -> assert false
        and vscode_DiagnosticSeverity_Hint_to_js :
          vscode_DiagnosticSeverity_Hint -> Ojs.t =
          fun (x243 : [ `Hint ]) ->
            match x243 with | `Hint -> Ojs.int_to_js 3
        and vscode_DiagnosticTag_of_js : Ojs.t -> vscode_DiagnosticTag =
          fun (x247 : Ojs.t) ->
            let x248 = x247 in
            match Ojs.int_of_js x248 with
            | 1 -> `Unnecessary
            | 2 -> `Deprecated
            | _ -> assert false
        and vscode_DiagnosticTag_to_js : vscode_DiagnosticTag -> Ojs.t =
          fun (x246 : [ `Unnecessary  | `Deprecated ]) ->
            match x246 with
            | `Unnecessary -> Ojs.int_to_js 1
            | `Deprecated -> Ojs.int_to_js 2
        and vscode_DiagnosticTag_Unnecessary_of_js :
          Ojs.t -> vscode_DiagnosticTag_Unnecessary =
          fun (x250 : Ojs.t) ->
            let x251 = x250 in
            match Ojs.int_of_js x251 with
            | 1 -> `Unnecessary
            | _ -> assert false
        and vscode_DiagnosticTag_Unnecessary_to_js :
          vscode_DiagnosticTag_Unnecessary -> Ojs.t =
          fun (x249 : [ `Unnecessary ]) ->
            match x249 with | `Unnecessary -> Ojs.int_to_js 1
        and vscode_DiagnosticTag_Deprecated_of_js :
          Ojs.t -> vscode_DiagnosticTag_Deprecated =
          fun (x253 : Ojs.t) ->
            let x254 = x253 in
            match Ojs.int_of_js x254 with
            | 2 -> `Deprecated
            | _ -> assert false
        and vscode_DiagnosticTag_Deprecated_to_js :
          vscode_DiagnosticTag_Deprecated -> Ojs.t =
          fun (x252 : [ `Deprecated ]) ->
            match x252 with | `Deprecated -> Ojs.int_to_js 2
        and vscode_Disposable_of_js : Ojs.t -> vscode_Disposable = Obj.magic
        and vscode_Disposable_to_js : vscode_Disposable -> Ojs.t = Obj.magic
        and vscode_DocumentColorProvider_of_js :
          Ojs.t -> vscode_DocumentColorProvider = Obj.magic
        and vscode_DocumentColorProvider_to_js :
          vscode_DocumentColorProvider -> Ojs.t = Obj.magic
        and vscode_DocumentFilter_of_js : Ojs.t -> vscode_DocumentFilter =
          Obj.magic
        and vscode_DocumentFilter_to_js : vscode_DocumentFilter -> Ojs.t =
          Obj.magic
        and vscode_DocumentFormattingEditProvider_of_js :
          Ojs.t -> vscode_DocumentFormattingEditProvider = Obj.magic
        and vscode_DocumentFormattingEditProvider_to_js :
          vscode_DocumentFormattingEditProvider -> Ojs.t = Obj.magic
        and vscode_DocumentHighlight_of_js :
          Ojs.t -> vscode_DocumentHighlight = Obj.magic
        and vscode_DocumentHighlight_to_js :
          vscode_DocumentHighlight -> Ojs.t = Obj.magic
        and vscode_DocumentHighlightKind_of_js :
          Ojs.t -> vscode_DocumentHighlightKind =
          fun (x256 : Ojs.t) ->
            let x257 = x256 in
            match Ojs.int_of_js x257 with
            | 0 -> `Text
            | 1 -> `Read
            | 2 -> `Write
            | _ -> assert false
        and vscode_DocumentHighlightKind_to_js :
          vscode_DocumentHighlightKind -> Ojs.t =
          fun (x255 : [ `Text  | `Read  | `Write ]) ->
            match x255 with
            | `Text -> Ojs.int_to_js 0
            | `Read -> Ojs.int_to_js 1
            | `Write -> Ojs.int_to_js 2
        and vscode_DocumentHighlightKind_Text_of_js :
          Ojs.t -> vscode_DocumentHighlightKind_Text =
          fun (x259 : Ojs.t) ->
            let x260 = x259 in
            match Ojs.int_of_js x260 with | 0 -> `Text | _ -> assert false
        and vscode_DocumentHighlightKind_Text_to_js :
          vscode_DocumentHighlightKind_Text -> Ojs.t =
          fun (x258 : [ `Text ]) ->
            match x258 with | `Text -> Ojs.int_to_js 0
        and vscode_DocumentHighlightKind_Read_of_js :
          Ojs.t -> vscode_DocumentHighlightKind_Read =
          fun (x262 : Ojs.t) ->
            let x263 = x262 in
            match Ojs.int_of_js x263 with | 1 -> `Read | _ -> assert false
        and vscode_DocumentHighlightKind_Read_to_js :
          vscode_DocumentHighlightKind_Read -> Ojs.t =
          fun (x261 : [ `Read ]) ->
            match x261 with | `Read -> Ojs.int_to_js 1
        and vscode_DocumentHighlightKind_Write_of_js :
          Ojs.t -> vscode_DocumentHighlightKind_Write =
          fun (x265 : Ojs.t) ->
            let x266 = x265 in
            match Ojs.int_of_js x266 with | 2 -> `Write | _ -> assert false
        and vscode_DocumentHighlightKind_Write_to_js :
          vscode_DocumentHighlightKind_Write -> Ojs.t =
          fun (x264 : [ `Write ]) ->
            match x264 with | `Write -> Ojs.int_to_js 2
        and vscode_DocumentHighlightProvider_of_js :
          Ojs.t -> vscode_DocumentHighlightProvider = Obj.magic
        and vscode_DocumentHighlightProvider_to_js :
          vscode_DocumentHighlightProvider -> Ojs.t = Obj.magic
        and vscode_DocumentLink_of_js : Ojs.t -> vscode_DocumentLink =
          Obj.magic
        and vscode_DocumentLink_to_js : vscode_DocumentLink -> Ojs.t =
          Obj.magic
        and vscode_DocumentLinkProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_DocumentLinkProvider =
          fun _T -> Obj.magic
        and vscode_DocumentLinkProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_DocumentLinkProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_DocumentRangeFormattingEditProvider_of_js :
          Ojs.t -> vscode_DocumentRangeFormattingEditProvider = Obj.magic
        and vscode_DocumentRangeFormattingEditProvider_to_js :
          vscode_DocumentRangeFormattingEditProvider -> Ojs.t = Obj.magic
        and vscode_DocumentRangeSemanticTokensProvider_of_js :
          Ojs.t -> vscode_DocumentRangeSemanticTokensProvider = Obj.magic
        and vscode_DocumentRangeSemanticTokensProvider_to_js :
          vscode_DocumentRangeSemanticTokensProvider -> Ojs.t = Obj.magic
        and vscode_DocumentSelector_of_js : Ojs.t -> vscode_DocumentSelector
          =
          fun (x273 : Ojs.t) ->
            or_string_of_js
              (fun (x274 : Ojs.t) ->
                 union2_of_js vscode_DocumentFilter_of_js
                   (fun (x276 : Ojs.t) ->
                      Ojs.list_of_js
                        (fun (x277 : Ojs.t) ->
                           or_string_of_js vscode_DocumentFilter_of_js x277)
                        x276) x274) x273
        and vscode_DocumentSelector_to_js : vscode_DocumentSelector -> Ojs.t
          =
          fun
            (x267 :
              (vscode_DocumentFilter, vscode_DocumentFilter or_string list)
                union2 or_string)
            ->
            or_string_to_js
              (fun
                 (x268 :
                   (vscode_DocumentFilter,
                     vscode_DocumentFilter or_string list) union2)
                 ->
                 union2_to_js vscode_DocumentFilter_to_js
                   (fun (x270 : vscode_DocumentFilter or_string list) ->
                      Ojs.list_to_js
                        (fun (x271 : vscode_DocumentFilter or_string) ->
                           or_string_to_js vscode_DocumentFilter_to_js x271)
                        x270) x268) x267
        and vscode_DocumentSemanticTokensProvider_of_js :
          Ojs.t -> vscode_DocumentSemanticTokensProvider = Obj.magic
        and vscode_DocumentSemanticTokensProvider_to_js :
          vscode_DocumentSemanticTokensProvider -> Ojs.t = Obj.magic
        and vscode_DocumentSymbol_of_js : Ojs.t -> vscode_DocumentSymbol =
          Obj.magic
        and vscode_DocumentSymbol_to_js : vscode_DocumentSymbol -> Ojs.t =
          Obj.magic
        and vscode_DocumentSymbolProvider_of_js :
          Ojs.t -> vscode_DocumentSymbolProvider = Obj.magic
        and vscode_DocumentSymbolProvider_to_js :
          vscode_DocumentSymbolProvider -> Ojs.t = Obj.magic
        and vscode_DocumentSymbolProviderMetadata_of_js :
          Ojs.t -> vscode_DocumentSymbolProviderMetadata = Obj.magic
        and vscode_DocumentSymbolProviderMetadata_to_js :
          vscode_DocumentSymbolProviderMetadata -> Ojs.t = Obj.magic
        and vscode_EndOfLine_of_js : Ojs.t -> vscode_EndOfLine =
          fun (x280 : Ojs.t) ->
            let x281 = x280 in
            match Ojs.int_of_js x281 with
            | 1 -> `LF
            | 2 -> `CRLF
            | _ -> assert false
        and vscode_EndOfLine_to_js : vscode_EndOfLine -> Ojs.t =
          fun (x279 : [ `LF  | `CRLF ]) ->
            match x279 with
            | `LF -> Ojs.int_to_js 1
            | `CRLF -> Ojs.int_to_js 2
        and vscode_EndOfLine_LF_of_js : Ojs.t -> vscode_EndOfLine_LF =
          fun (x283 : Ojs.t) ->
            let x284 = x283 in
            match Ojs.int_of_js x284 with | 1 -> `LF | _ -> assert false
        and vscode_EndOfLine_LF_to_js : vscode_EndOfLine_LF -> Ojs.t =
          fun (x282 : [ `LF ]) -> match x282 with | `LF -> Ojs.int_to_js 1
        and vscode_EndOfLine_CRLF_of_js : Ojs.t -> vscode_EndOfLine_CRLF =
          fun (x286 : Ojs.t) ->
            let x287 = x286 in
            match Ojs.int_of_js x287 with | 2 -> `CRLF | _ -> assert false
        and vscode_EndOfLine_CRLF_to_js : vscode_EndOfLine_CRLF -> Ojs.t =
          fun (x285 : [ `CRLF ]) ->
            match x285 with | `CRLF -> Ojs.int_to_js 2
        and vscode_EnterAction_of_js : Ojs.t -> vscode_EnterAction =
          Obj.magic
        and vscode_EnterAction_to_js : vscode_EnterAction -> Ojs.t =
          Obj.magic
        and vscode_EnvironmentVariableCollection_of_js :
          Ojs.t -> vscode_EnvironmentVariableCollection = Obj.magic
        and vscode_EnvironmentVariableCollection_to_js :
          vscode_EnvironmentVariableCollection -> Ojs.t = Obj.magic
        and vscode_EnvironmentVariableMutator_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutator = Obj.magic
        and vscode_EnvironmentVariableMutator_to_js :
          vscode_EnvironmentVariableMutator -> Ojs.t = Obj.magic
        and vscode_EnvironmentVariableMutatorType_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType =
          fun (x289 : Ojs.t) ->
            let x290 = x289 in
            match Ojs.int_of_js x290 with
            | 1 -> `Replace
            | 2 -> `Append
            | 3 -> `Prepend
            | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_to_js :
          vscode_EnvironmentVariableMutatorType -> Ojs.t =
          fun (x288 : [ `Replace  | `Append  | `Prepend ]) ->
            match x288 with
            | `Replace -> Ojs.int_to_js 1
            | `Append -> Ojs.int_to_js 2
            | `Prepend -> Ojs.int_to_js 3
        and vscode_EnvironmentVariableMutatorType_Replace_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType_Replace =
          fun (x292 : Ojs.t) ->
            let x293 = x292 in
            match Ojs.int_of_js x293 with | 1 -> `Replace | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_Replace_to_js :
          vscode_EnvironmentVariableMutatorType_Replace -> Ojs.t =
          fun (x291 : [ `Replace ]) ->
            match x291 with | `Replace -> Ojs.int_to_js 1
        and vscode_EnvironmentVariableMutatorType_Append_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType_Append =
          fun (x295 : Ojs.t) ->
            let x296 = x295 in
            match Ojs.int_of_js x296 with | 2 -> `Append | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_Append_to_js :
          vscode_EnvironmentVariableMutatorType_Append -> Ojs.t =
          fun (x294 : [ `Append ]) ->
            match x294 with | `Append -> Ojs.int_to_js 2
        and vscode_EnvironmentVariableMutatorType_Prepend_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType_Prepend =
          fun (x298 : Ojs.t) ->
            let x299 = x298 in
            match Ojs.int_of_js x299 with | 3 -> `Prepend | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_Prepend_to_js :
          vscode_EnvironmentVariableMutatorType_Prepend -> Ojs.t =
          fun (x297 : [ `Prepend ]) ->
            match x297 with | `Prepend -> Ojs.int_to_js 3
        and vscode_EvaluatableExpression_of_js :
          Ojs.t -> vscode_EvaluatableExpression = Obj.magic
        and vscode_EvaluatableExpression_to_js :
          vscode_EvaluatableExpression -> Ojs.t = Obj.magic
        and vscode_EvaluatableExpressionProvider_of_js :
          Ojs.t -> vscode_EvaluatableExpressionProvider = Obj.magic
        and vscode_EvaluatableExpressionProvider_to_js :
          vscode_EvaluatableExpressionProvider -> Ojs.t = Obj.magic
        and vscode_Event_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_Event =
          fun _T -> Obj.magic
        and vscode_Event_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_Event -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_EventEmitter_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_EventEmitter =
          fun _T -> Obj.magic
        and vscode_EventEmitter_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_EventEmitter -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_Extension_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_Extension =
          fun _T -> Obj.magic
        and vscode_Extension_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_Extension -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_ExtensionContext_of_js : Ojs.t -> vscode_ExtensionContext
          = Obj.magic
        and vscode_ExtensionContext_to_js : vscode_ExtensionContext -> Ojs.t
          = Obj.magic
        and vscode_ExtensionKind_of_js : Ojs.t -> vscode_ExtensionKind =
          fun (x301 : Ojs.t) ->
            let x302 = x301 in
            match Ojs.int_of_js x302 with
            | 1 -> `UI
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_ExtensionKind_to_js : vscode_ExtensionKind -> Ojs.t =
          fun (x300 : [ `UI  | `Workspace ]) ->
            match x300 with
            | `UI -> Ojs.int_to_js 1
            | `Workspace -> Ojs.int_to_js 2
        and vscode_ExtensionKind_UI_of_js : Ojs.t -> vscode_ExtensionKind_UI
          =
          fun (x304 : Ojs.t) ->
            let x305 = x304 in
            match Ojs.int_of_js x305 with | 1 -> `UI | _ -> assert false
        and vscode_ExtensionKind_UI_to_js : vscode_ExtensionKind_UI -> Ojs.t
          = fun (x303 : [ `UI ]) -> match x303 with | `UI -> Ojs.int_to_js 1
        and vscode_ExtensionKind_Workspace_of_js :
          Ojs.t -> vscode_ExtensionKind_Workspace =
          fun (x307 : Ojs.t) ->
            let x308 = x307 in
            match Ojs.int_of_js x308 with
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_ExtensionKind_Workspace_to_js :
          vscode_ExtensionKind_Workspace -> Ojs.t =
          fun (x306 : [ `Workspace ]) ->
            match x306 with | `Workspace -> Ojs.int_to_js 2
        and vscode_ExtensionMode_of_js : Ojs.t -> vscode_ExtensionMode =
          fun (x310 : Ojs.t) ->
            let x311 = x310 in
            match Ojs.int_of_js x311 with
            | 1 -> `Production
            | 2 -> `Development
            | 3 -> `Test
            | _ -> assert false
        and vscode_ExtensionMode_to_js : vscode_ExtensionMode -> Ojs.t =
          fun (x309 : [ `Production  | `Development  | `Test ]) ->
            match x309 with
            | `Production -> Ojs.int_to_js 1
            | `Development -> Ojs.int_to_js 2
            | `Test -> Ojs.int_to_js 3
        and vscode_ExtensionMode_Production_of_js :
          Ojs.t -> vscode_ExtensionMode_Production =
          fun (x313 : Ojs.t) ->
            let x314 = x313 in
            match Ojs.int_of_js x314 with
            | 1 -> `Production
            | _ -> assert false
        and vscode_ExtensionMode_Production_to_js :
          vscode_ExtensionMode_Production -> Ojs.t =
          fun (x312 : [ `Production ]) ->
            match x312 with | `Production -> Ojs.int_to_js 1
        and vscode_ExtensionMode_Development_of_js :
          Ojs.t -> vscode_ExtensionMode_Development =
          fun (x316 : Ojs.t) ->
            let x317 = x316 in
            match Ojs.int_of_js x317 with
            | 2 -> `Development
            | _ -> assert false
        and vscode_ExtensionMode_Development_to_js :
          vscode_ExtensionMode_Development -> Ojs.t =
          fun (x315 : [ `Development ]) ->
            match x315 with | `Development -> Ojs.int_to_js 2
        and vscode_ExtensionMode_Test_of_js :
          Ojs.t -> vscode_ExtensionMode_Test =
          fun (x319 : Ojs.t) ->
            let x320 = x319 in
            match Ojs.int_of_js x320 with | 3 -> `Test | _ -> assert false
        and vscode_ExtensionMode_Test_to_js :
          vscode_ExtensionMode_Test -> Ojs.t =
          fun (x318 : [ `Test ]) ->
            match x318 with | `Test -> Ojs.int_to_js 3
        and vscode_ExtensionTerminalOptions_of_js :
          Ojs.t -> vscode_ExtensionTerminalOptions = Obj.magic
        and vscode_ExtensionTerminalOptions_to_js :
          vscode_ExtensionTerminalOptions -> Ojs.t = Obj.magic
        and vscode_FileChangeEvent_of_js : Ojs.t -> vscode_FileChangeEvent =
          Obj.magic
        and vscode_FileChangeEvent_to_js : vscode_FileChangeEvent -> Ojs.t =
          Obj.magic
        and vscode_FileChangeType_of_js : Ojs.t -> vscode_FileChangeType =
          fun (x322 : Ojs.t) ->
            let x323 = x322 in
            match Ojs.int_of_js x323 with
            | 1 -> `Changed
            | 2 -> `Created
            | 3 -> `Deleted
            | _ -> assert false
        and vscode_FileChangeType_to_js : vscode_FileChangeType -> Ojs.t =
          fun (x321 : [ `Changed  | `Created  | `Deleted ]) ->
            match x321 with
            | `Changed -> Ojs.int_to_js 1
            | `Created -> Ojs.int_to_js 2
            | `Deleted -> Ojs.int_to_js 3
        and vscode_FileChangeType_Changed_of_js :
          Ojs.t -> vscode_FileChangeType_Changed =
          fun (x325 : Ojs.t) ->
            let x326 = x325 in
            match Ojs.int_of_js x326 with | 1 -> `Changed | _ -> assert false
        and vscode_FileChangeType_Changed_to_js :
          vscode_FileChangeType_Changed -> Ojs.t =
          fun (x324 : [ `Changed ]) ->
            match x324 with | `Changed -> Ojs.int_to_js 1
        and vscode_FileChangeType_Created_of_js :
          Ojs.t -> vscode_FileChangeType_Created =
          fun (x328 : Ojs.t) ->
            let x329 = x328 in
            match Ojs.int_of_js x329 with | 2 -> `Created | _ -> assert false
        and vscode_FileChangeType_Created_to_js :
          vscode_FileChangeType_Created -> Ojs.t =
          fun (x327 : [ `Created ]) ->
            match x327 with | `Created -> Ojs.int_to_js 2
        and vscode_FileChangeType_Deleted_of_js :
          Ojs.t -> vscode_FileChangeType_Deleted =
          fun (x331 : Ojs.t) ->
            let x332 = x331 in
            match Ojs.int_of_js x332 with | 3 -> `Deleted | _ -> assert false
        and vscode_FileChangeType_Deleted_to_js :
          vscode_FileChangeType_Deleted -> Ojs.t =
          fun (x330 : [ `Deleted ]) ->
            match x330 with | `Deleted -> Ojs.int_to_js 3
        and vscode_FileCreateEvent_of_js : Ojs.t -> vscode_FileCreateEvent =
          Obj.magic
        and vscode_FileCreateEvent_to_js : vscode_FileCreateEvent -> Ojs.t =
          Obj.magic
        and vscode_FileDecoration_of_js : Ojs.t -> vscode_FileDecoration =
          Obj.magic
        and vscode_FileDecoration_to_js : vscode_FileDecoration -> Ojs.t =
          Obj.magic
        and vscode_FileDecorationProvider_of_js :
          Ojs.t -> vscode_FileDecorationProvider = Obj.magic
        and vscode_FileDecorationProvider_to_js :
          vscode_FileDecorationProvider -> Ojs.t = Obj.magic
        and vscode_FileDeleteEvent_of_js : Ojs.t -> vscode_FileDeleteEvent =
          Obj.magic
        and vscode_FileDeleteEvent_to_js : vscode_FileDeleteEvent -> Ojs.t =
          Obj.magic
        and vscode_FileRenameEvent_of_js : Ojs.t -> vscode_FileRenameEvent =
          Obj.magic
        and vscode_FileRenameEvent_to_js : vscode_FileRenameEvent -> Ojs.t =
          Obj.magic
        and vscode_FileStat_of_js : Ojs.t -> vscode_FileStat = Obj.magic
        and vscode_FileStat_to_js : vscode_FileStat -> Ojs.t = Obj.magic
        and vscode_FileSystem_of_js : Ojs.t -> vscode_FileSystem = Obj.magic
        and vscode_FileSystem_to_js : vscode_FileSystem -> Ojs.t = Obj.magic
        and vscode_FileSystemError_of_js : Ojs.t -> vscode_FileSystemError =
          Obj.magic
        and vscode_FileSystemError_to_js : vscode_FileSystemError -> Ojs.t =
          Obj.magic
        and vscode_FileSystemProvider_of_js :
          Ojs.t -> vscode_FileSystemProvider = Obj.magic
        and vscode_FileSystemProvider_to_js :
          vscode_FileSystemProvider -> Ojs.t = Obj.magic
        and vscode_FileSystemWatcher_of_js :
          Ojs.t -> vscode_FileSystemWatcher = Obj.magic
        and vscode_FileSystemWatcher_to_js :
          vscode_FileSystemWatcher -> Ojs.t = Obj.magic
        and vscode_FileType_of_js : Ojs.t -> vscode_FileType =
          fun (x334 : Ojs.t) ->
            let x335 = x334 in
            match Ojs.int_of_js x335 with
            | 0 -> `Unknown
            | 1 -> `File
            | 2 -> `Directory
            | 64 -> `SymbolicLink
            | _ -> assert false
        and vscode_FileType_to_js : vscode_FileType -> Ojs.t =
          fun (x333 : [ `Unknown  | `File  | `Directory  | `SymbolicLink ])
            ->
            match x333 with
            | `Unknown -> Ojs.int_to_js 0
            | `File -> Ojs.int_to_js 1
            | `Directory -> Ojs.int_to_js 2
            | `SymbolicLink -> Ojs.int_to_js 64
        and vscode_FileType_Unknown_of_js : Ojs.t -> vscode_FileType_Unknown
          =
          fun (x337 : Ojs.t) ->
            let x338 = x337 in
            match Ojs.int_of_js x338 with | 0 -> `Unknown | _ -> assert false
        and vscode_FileType_Unknown_to_js : vscode_FileType_Unknown -> Ojs.t
          =
          fun (x336 : [ `Unknown ]) ->
            match x336 with | `Unknown -> Ojs.int_to_js 0
        and vscode_FileType_File_of_js : Ojs.t -> vscode_FileType_File =
          fun (x340 : Ojs.t) ->
            let x341 = x340 in
            match Ojs.int_of_js x341 with | 1 -> `File | _ -> assert false
        and vscode_FileType_File_to_js : vscode_FileType_File -> Ojs.t =
          fun (x339 : [ `File ]) ->
            match x339 with | `File -> Ojs.int_to_js 1
        and vscode_FileType_Directory_of_js :
          Ojs.t -> vscode_FileType_Directory =
          fun (x343 : Ojs.t) ->
            let x344 = x343 in
            match Ojs.int_of_js x344 with
            | 2 -> `Directory
            | _ -> assert false
        and vscode_FileType_Directory_to_js :
          vscode_FileType_Directory -> Ojs.t =
          fun (x342 : [ `Directory ]) ->
            match x342 with | `Directory -> Ojs.int_to_js 2
        and vscode_FileType_SymbolicLink_of_js :
          Ojs.t -> vscode_FileType_SymbolicLink =
          fun (x346 : Ojs.t) ->
            let x347 = x346 in
            match Ojs.int_of_js x347 with
            | 64 -> `SymbolicLink
            | _ -> assert false
        and vscode_FileType_SymbolicLink_to_js :
          vscode_FileType_SymbolicLink -> Ojs.t =
          fun (x345 : [ `SymbolicLink ]) ->
            match x345 with | `SymbolicLink -> Ojs.int_to_js 64
        and vscode_FileWillCreateEvent_of_js :
          Ojs.t -> vscode_FileWillCreateEvent = Obj.magic
        and vscode_FileWillCreateEvent_to_js :
          vscode_FileWillCreateEvent -> Ojs.t = Obj.magic
        and vscode_FileWillDeleteEvent_of_js :
          Ojs.t -> vscode_FileWillDeleteEvent = Obj.magic
        and vscode_FileWillDeleteEvent_to_js :
          vscode_FileWillDeleteEvent -> Ojs.t = Obj.magic
        and vscode_FileWillRenameEvent_of_js :
          Ojs.t -> vscode_FileWillRenameEvent = Obj.magic
        and vscode_FileWillRenameEvent_to_js :
          vscode_FileWillRenameEvent -> Ojs.t = Obj.magic
        and vscode_FoldingContext_of_js : Ojs.t -> vscode_FoldingContext =
          Obj.magic
        and vscode_FoldingContext_to_js : vscode_FoldingContext -> Ojs.t =
          Obj.magic
        and vscode_FoldingRange_of_js : Ojs.t -> vscode_FoldingRange =
          Obj.magic
        and vscode_FoldingRange_to_js : vscode_FoldingRange -> Ojs.t =
          Obj.magic
        and vscode_FoldingRangeKind_of_js : Ojs.t -> vscode_FoldingRangeKind
          =
          fun (x349 : Ojs.t) ->
            let x350 = x349 in
            match Ojs.int_of_js x350 with
            | 1 -> `Comment
            | 2 -> `Imports
            | 3 -> `Region
            | _ -> assert false
        and vscode_FoldingRangeKind_to_js : vscode_FoldingRangeKind -> Ojs.t
          =
          fun (x348 : [ `Comment  | `Imports  | `Region ]) ->
            match x348 with
            | `Comment -> Ojs.int_to_js 1
            | `Imports -> Ojs.int_to_js 2
            | `Region -> Ojs.int_to_js 3
        and vscode_FoldingRangeKind_Comment_of_js :
          Ojs.t -> vscode_FoldingRangeKind_Comment =
          fun (x352 : Ojs.t) ->
            let x353 = x352 in
            match Ojs.int_of_js x353 with | 1 -> `Comment | _ -> assert false
        and vscode_FoldingRangeKind_Comment_to_js :
          vscode_FoldingRangeKind_Comment -> Ojs.t =
          fun (x351 : [ `Comment ]) ->
            match x351 with | `Comment -> Ojs.int_to_js 1
        and vscode_FoldingRangeKind_Imports_of_js :
          Ojs.t -> vscode_FoldingRangeKind_Imports =
          fun (x355 : Ojs.t) ->
            let x356 = x355 in
            match Ojs.int_of_js x356 with | 2 -> `Imports | _ -> assert false
        and vscode_FoldingRangeKind_Imports_to_js :
          vscode_FoldingRangeKind_Imports -> Ojs.t =
          fun (x354 : [ `Imports ]) ->
            match x354 with | `Imports -> Ojs.int_to_js 2
        and vscode_FoldingRangeKind_Region_of_js :
          Ojs.t -> vscode_FoldingRangeKind_Region =
          fun (x358 : Ojs.t) ->
            let x359 = x358 in
            match Ojs.int_of_js x359 with | 3 -> `Region | _ -> assert false
        and vscode_FoldingRangeKind_Region_to_js :
          vscode_FoldingRangeKind_Region -> Ojs.t =
          fun (x357 : [ `Region ]) ->
            match x357 with | `Region -> Ojs.int_to_js 3
        and vscode_FoldingRangeProvider_of_js :
          Ojs.t -> vscode_FoldingRangeProvider = Obj.magic
        and vscode_FoldingRangeProvider_to_js :
          vscode_FoldingRangeProvider -> Ojs.t = Obj.magic
        and vscode_FormattingOptions_of_js :
          Ojs.t -> vscode_FormattingOptions = Obj.magic
        and vscode_FormattingOptions_to_js :
          vscode_FormattingOptions -> Ojs.t = Obj.magic
        and vscode_FunctionBreakpoint_of_js :
          Ojs.t -> vscode_FunctionBreakpoint = Obj.magic
        and vscode_FunctionBreakpoint_to_js :
          vscode_FunctionBreakpoint -> Ojs.t = Obj.magic
        and vscode_GlobPattern_of_js : Ojs.t -> vscode_GlobPattern =
          fun (x362 : Ojs.t) ->
            or_string_of_js vscode_RelativePattern_of_js x362
        and vscode_GlobPattern_to_js : vscode_GlobPattern -> Ojs.t =
          fun (x360 : vscode_RelativePattern or_string) ->
            or_string_to_js vscode_RelativePattern_to_js x360
        and vscode_Hover_of_js : Ojs.t -> vscode_Hover = Obj.magic
        and vscode_Hover_to_js : vscode_Hover -> Ojs.t = Obj.magic
        and vscode_HoverProvider_of_js : Ojs.t -> vscode_HoverProvider =
          Obj.magic
        and vscode_HoverProvider_to_js : vscode_HoverProvider -> Ojs.t =
          Obj.magic
        and vscode_ImplementationProvider_of_js :
          Ojs.t -> vscode_ImplementationProvider = Obj.magic
        and vscode_ImplementationProvider_to_js :
          vscode_ImplementationProvider -> Ojs.t = Obj.magic
        and vscode_IndentAction_of_js : Ojs.t -> vscode_IndentAction =
          fun (x365 : Ojs.t) ->
            let x366 = x365 in
            match Ojs.int_of_js x366 with
            | 0 -> `None
            | 1 -> `Indent
            | 2 -> `IndentOutdent
            | 3 -> `Outdent
            | _ -> assert false
        and vscode_IndentAction_to_js : vscode_IndentAction -> Ojs.t =
          fun (x364 : [ `None  | `Indent  | `IndentOutdent  | `Outdent ]) ->
            match x364 with
            | `None -> Ojs.int_to_js 0
            | `Indent -> Ojs.int_to_js 1
            | `IndentOutdent -> Ojs.int_to_js 2
            | `Outdent -> Ojs.int_to_js 3
        and vscode_IndentAction_None_of_js :
          Ojs.t -> vscode_IndentAction_None =
          fun (x368 : Ojs.t) ->
            let x369 = x368 in
            match Ojs.int_of_js x369 with | 0 -> `None | _ -> assert false
        and vscode_IndentAction_None_to_js :
          vscode_IndentAction_None -> Ojs.t =
          fun (x367 : [ `None ]) ->
            match x367 with | `None -> Ojs.int_to_js 0
        and vscode_IndentAction_Indent_of_js :
          Ojs.t -> vscode_IndentAction_Indent =
          fun (x371 : Ojs.t) ->
            let x372 = x371 in
            match Ojs.int_of_js x372 with | 1 -> `Indent | _ -> assert false
        and vscode_IndentAction_Indent_to_js :
          vscode_IndentAction_Indent -> Ojs.t =
          fun (x370 : [ `Indent ]) ->
            match x370 with | `Indent -> Ojs.int_to_js 1
        and vscode_IndentAction_IndentOutdent_of_js :
          Ojs.t -> vscode_IndentAction_IndentOutdent =
          fun (x374 : Ojs.t) ->
            let x375 = x374 in
            match Ojs.int_of_js x375 with
            | 2 -> `IndentOutdent
            | _ -> assert false
        and vscode_IndentAction_IndentOutdent_to_js :
          vscode_IndentAction_IndentOutdent -> Ojs.t =
          fun (x373 : [ `IndentOutdent ]) ->
            match x373 with | `IndentOutdent -> Ojs.int_to_js 2
        and vscode_IndentAction_Outdent_of_js :
          Ojs.t -> vscode_IndentAction_Outdent =
          fun (x377 : Ojs.t) ->
            let x378 = x377 in
            match Ojs.int_of_js x378 with | 3 -> `Outdent | _ -> assert false
        and vscode_IndentAction_Outdent_to_js :
          vscode_IndentAction_Outdent -> Ojs.t =
          fun (x376 : [ `Outdent ]) ->
            match x376 with | `Outdent -> Ojs.int_to_js 3
        and vscode_IndentationRule_of_js : Ojs.t -> vscode_IndentationRule =
          Obj.magic
        and vscode_IndentationRule_to_js : vscode_IndentationRule -> Ojs.t =
          Obj.magic
        and vscode_InlineValue_of_js : Ojs.t -> vscode_InlineValue =
          fun (x383 : Ojs.t) ->
            union3_of_js vscode_InlineValueEvaluatableExpression_of_js
              vscode_InlineValueText_of_js
              vscode_InlineValueVariableLookup_of_js x383
        and vscode_InlineValue_to_js : vscode_InlineValue -> Ojs.t =
          fun
            (x379 :
              (vscode_InlineValueEvaluatableExpression,
                vscode_InlineValueText, vscode_InlineValueVariableLookup)
                union3)
            ->
            union3_to_js vscode_InlineValueEvaluatableExpression_to_js
              vscode_InlineValueText_to_js
              vscode_InlineValueVariableLookup_to_js x379
        and vscode_InlineValueContext_of_js :
          Ojs.t -> vscode_InlineValueContext = Obj.magic
        and vscode_InlineValueContext_to_js :
          vscode_InlineValueContext -> Ojs.t = Obj.magic
        and vscode_InlineValueEvaluatableExpression_of_js :
          Ojs.t -> vscode_InlineValueEvaluatableExpression = Obj.magic
        and vscode_InlineValueEvaluatableExpression_to_js :
          vscode_InlineValueEvaluatableExpression -> Ojs.t = Obj.magic
        and vscode_InlineValueText_of_js : Ojs.t -> vscode_InlineValueText =
          Obj.magic
        and vscode_InlineValueText_to_js : vscode_InlineValueText -> Ojs.t =
          Obj.magic
        and vscode_InlineValueVariableLookup_of_js :
          Ojs.t -> vscode_InlineValueVariableLookup = Obj.magic
        and vscode_InlineValueVariableLookup_to_js :
          vscode_InlineValueVariableLookup -> Ojs.t = Obj.magic
        and vscode_InlineValuesProvider_of_js :
          Ojs.t -> vscode_InlineValuesProvider = Obj.magic
        and vscode_InlineValuesProvider_to_js :
          vscode_InlineValuesProvider -> Ojs.t = Obj.magic
        and vscode_InputBox_of_js : Ojs.t -> vscode_InputBox = Obj.magic
        and vscode_InputBox_to_js : vscode_InputBox -> Ojs.t = Obj.magic
        and vscode_InputBoxOptions_of_js : Ojs.t -> vscode_InputBoxOptions =
          Obj.magic
        and vscode_InputBoxOptions_to_js : vscode_InputBoxOptions -> Ojs.t =
          Obj.magic
        and vscode_LanguageConfiguration_of_js :
          Ojs.t -> vscode_LanguageConfiguration = Obj.magic
        and vscode_LanguageConfiguration_to_js :
          vscode_LanguageConfiguration -> Ojs.t = Obj.magic
        and vscode_LinkedEditingRangeProvider_of_js :
          Ojs.t -> vscode_LinkedEditingRangeProvider = Obj.magic
        and vscode_LinkedEditingRangeProvider_to_js :
          vscode_LinkedEditingRangeProvider -> Ojs.t = Obj.magic
        and vscode_LinkedEditingRanges_of_js :
          Ojs.t -> vscode_LinkedEditingRanges = Obj.magic
        and vscode_LinkedEditingRanges_to_js :
          vscode_LinkedEditingRanges -> Ojs.t = Obj.magic
        and vscode_Location_of_js : Ojs.t -> vscode_Location = Obj.magic
        and vscode_Location_to_js : vscode_Location -> Ojs.t = Obj.magic
        and vscode_LocationLink_of_js : Ojs.t -> vscode_LocationLink =
          Obj.magic
        and vscode_LocationLink_to_js : vscode_LocationLink -> Ojs.t =
          Obj.magic
        and vscode_MarkdownString_of_js : Ojs.t -> vscode_MarkdownString =
          Obj.magic
        and vscode_MarkdownString_to_js : vscode_MarkdownString -> Ojs.t =
          Obj.magic
        and vscode_MarkedString_of_js : Ojs.t -> vscode_MarkedString =
          fun (x391 : Ojs.t) ->
            or_string_of_js
              (fun (x392 : Ojs.t) ->
                 union2_of_js vscode_MarkdownString_of_js
                   anonymous_interface_13_of_js x392) x391
        and vscode_MarkedString_to_js : vscode_MarkedString -> Ojs.t =
          fun
            (x387 :
              (vscode_MarkdownString, anonymous_interface_13) union2
                or_string)
            ->
            or_string_to_js
              (fun
                 (x388 :
                   (vscode_MarkdownString, anonymous_interface_13) union2)
                 ->
                 union2_to_js vscode_MarkdownString_to_js
                   anonymous_interface_13_to_js x388) x387
        and vscode_Memento_of_js : Ojs.t -> vscode_Memento = Obj.magic
        and vscode_Memento_to_js : vscode_Memento -> Ojs.t = Obj.magic
        and vscode_MessageItem_of_js : Ojs.t -> vscode_MessageItem =
          Obj.magic
        and vscode_MessageItem_to_js : vscode_MessageItem -> Ojs.t =
          Obj.magic
        and vscode_MessageOptions_of_js : Ojs.t -> vscode_MessageOptions =
          Obj.magic
        and vscode_MessageOptions_to_js : vscode_MessageOptions -> Ojs.t =
          Obj.magic
        and vscode_OnEnterRule_of_js : Ojs.t -> vscode_OnEnterRule =
          Obj.magic
        and vscode_OnEnterRule_to_js : vscode_OnEnterRule -> Ojs.t =
          Obj.magic
        and vscode_OnTypeFormattingEditProvider_of_js :
          Ojs.t -> vscode_OnTypeFormattingEditProvider = Obj.magic
        and vscode_OnTypeFormattingEditProvider_to_js :
          vscode_OnTypeFormattingEditProvider -> Ojs.t = Obj.magic
        and vscode_OpenDialogOptions_of_js :
          Ojs.t -> vscode_OpenDialogOptions = Obj.magic
        and vscode_OpenDialogOptions_to_js :
          vscode_OpenDialogOptions -> Ojs.t = Obj.magic
        and vscode_OutputChannel_of_js : Ojs.t -> vscode_OutputChannel =
          Obj.magic
        and vscode_OutputChannel_to_js : vscode_OutputChannel -> Ojs.t =
          Obj.magic
        and vscode_OverviewRulerLane_of_js :
          Ojs.t -> vscode_OverviewRulerLane =
          fun (x396 : Ojs.t) ->
            let x397 = x396 in
            match Ojs.int_of_js x397 with
            | 1 -> `Left
            | 2 -> `Center
            | 4 -> `Right
            | 7 -> `Full
            | _ -> assert false
        and vscode_OverviewRulerLane_to_js :
          vscode_OverviewRulerLane -> Ojs.t =
          fun (x395 : [ `Left  | `Center  | `Right  | `Full ]) ->
            match x395 with
            | `Left -> Ojs.int_to_js 1
            | `Center -> Ojs.int_to_js 2
            | `Right -> Ojs.int_to_js 4
            | `Full -> Ojs.int_to_js 7
        and vscode_OverviewRulerLane_Left_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Left =
          fun (x399 : Ojs.t) ->
            let x400 = x399 in
            match Ojs.int_of_js x400 with | 1 -> `Left | _ -> assert false
        and vscode_OverviewRulerLane_Left_to_js :
          vscode_OverviewRulerLane_Left -> Ojs.t =
          fun (x398 : [ `Left ]) ->
            match x398 with | `Left -> Ojs.int_to_js 1
        and vscode_OverviewRulerLane_Center_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Center =
          fun (x402 : Ojs.t) ->
            let x403 = x402 in
            match Ojs.int_of_js x403 with | 2 -> `Center | _ -> assert false
        and vscode_OverviewRulerLane_Center_to_js :
          vscode_OverviewRulerLane_Center -> Ojs.t =
          fun (x401 : [ `Center ]) ->
            match x401 with | `Center -> Ojs.int_to_js 2
        and vscode_OverviewRulerLane_Right_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Right =
          fun (x405 : Ojs.t) ->
            let x406 = x405 in
            match Ojs.int_of_js x406 with | 4 -> `Right | _ -> assert false
        and vscode_OverviewRulerLane_Right_to_js :
          vscode_OverviewRulerLane_Right -> Ojs.t =
          fun (x404 : [ `Right ]) ->
            match x404 with | `Right -> Ojs.int_to_js 4
        and vscode_OverviewRulerLane_Full_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Full =
          fun (x408 : Ojs.t) ->
            let x409 = x408 in
            match Ojs.int_of_js x409 with | 7 -> `Full | _ -> assert false
        and vscode_OverviewRulerLane_Full_to_js :
          vscode_OverviewRulerLane_Full -> Ojs.t =
          fun (x407 : [ `Full ]) ->
            match x407 with | `Full -> Ojs.int_to_js 7
        and vscode_ParameterInformation_of_js :
          Ojs.t -> vscode_ParameterInformation = Obj.magic
        and vscode_ParameterInformation_to_js :
          vscode_ParameterInformation -> Ojs.t = Obj.magic
        and vscode_Position_of_js : Ojs.t -> vscode_Position = Obj.magic
        and vscode_Position_to_js : vscode_Position -> Ojs.t = Obj.magic
        and vscode_ProcessExecution_of_js : Ojs.t -> vscode_ProcessExecution
          = Obj.magic
        and vscode_ProcessExecution_to_js : vscode_ProcessExecution -> Ojs.t
          = Obj.magic
        and vscode_ProcessExecutionOptions_of_js :
          Ojs.t -> vscode_ProcessExecutionOptions = Obj.magic
        and vscode_ProcessExecutionOptions_to_js :
          vscode_ProcessExecutionOptions -> Ojs.t = Obj.magic
        and vscode_Progress_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_Progress =
          fun _T -> Obj.magic
        and vscode_Progress_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_Progress -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_ProgressLocation_of_js : Ojs.t -> vscode_ProgressLocation
          =
          fun (x411 : Ojs.t) ->
            let x412 = x411 in
            match Ojs.int_of_js x412 with
            | 1 -> `SourceControl
            | 10 -> `Window
            | 15 -> `Notification
            | _ -> assert false
        and vscode_ProgressLocation_to_js : vscode_ProgressLocation -> Ojs.t
          =
          fun (x410 : [ `SourceControl  | `Window  | `Notification ]) ->
            match x410 with
            | `SourceControl -> Ojs.int_to_js 1
            | `Window -> Ojs.int_to_js 10
            | `Notification -> Ojs.int_to_js 15
        and vscode_ProgressLocation_SourceControl_of_js :
          Ojs.t -> vscode_ProgressLocation_SourceControl =
          fun (x414 : Ojs.t) ->
            let x415 = x414 in
            match Ojs.int_of_js x415 with
            | 1 -> `SourceControl
            | _ -> assert false
        and vscode_ProgressLocation_SourceControl_to_js :
          vscode_ProgressLocation_SourceControl -> Ojs.t =
          fun (x413 : [ `SourceControl ]) ->
            match x413 with | `SourceControl -> Ojs.int_to_js 1
        and vscode_ProgressLocation_Window_of_js :
          Ojs.t -> vscode_ProgressLocation_Window =
          fun (x417 : Ojs.t) ->
            let x418 = x417 in
            match Ojs.int_of_js x418 with | 10 -> `Window | _ -> assert false
        and vscode_ProgressLocation_Window_to_js :
          vscode_ProgressLocation_Window -> Ojs.t =
          fun (x416 : [ `Window ]) ->
            match x416 with | `Window -> Ojs.int_to_js 10
        and vscode_ProgressLocation_Notification_of_js :
          Ojs.t -> vscode_ProgressLocation_Notification =
          fun (x420 : Ojs.t) ->
            let x421 = x420 in
            match Ojs.int_of_js x421 with
            | 15 -> `Notification
            | _ -> assert false
        and vscode_ProgressLocation_Notification_to_js :
          vscode_ProgressLocation_Notification -> Ojs.t =
          fun (x419 : [ `Notification ]) ->
            match x419 with | `Notification -> Ojs.int_to_js 15
        and vscode_ProgressOptions_of_js : Ojs.t -> vscode_ProgressOptions =
          Obj.magic
        and vscode_ProgressOptions_to_js : vscode_ProgressOptions -> Ojs.t =
          Obj.magic
        and vscode_ProviderResult_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_ProviderResult = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x428 : Ojs.t) ->
              or_null_or_undefined_of_js
                (fun (x429 : Ojs.t) ->
                   union2_of_js __T_of_js
                     (fun (x431 : Ojs.t) ->
                        _Thenable_of_js
                          (fun (x432 : Ojs.t) ->
                             or_null_or_undefined_of_js __T_of_js x432) x431)
                     x429) x428
        and vscode_ProviderResult_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_ProviderResult -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun
              (x422 :
                (__T, __T or_null_or_undefined _Thenable) union2
                  or_null_or_undefined)
              ->
              or_null_or_undefined_to_js
                (fun
                   (x423 : (__T, __T or_null_or_undefined _Thenable) union2)
                   ->
                   union2_to_js __T_to_js
                     (fun (x425 : __T or_null_or_undefined _Thenable) ->
                        _Thenable_to_js
                          (fun (x426 : __T or_null_or_undefined) ->
                             or_null_or_undefined_to_js __T_to_js x426) x425)
                     x423) x422
        and vscode_Pseudoterminal_of_js : Ojs.t -> vscode_Pseudoterminal =
          Obj.magic
        and vscode_Pseudoterminal_to_js : vscode_Pseudoterminal -> Ojs.t =
          Obj.magic
        and vscode_QuickDiffProvider_of_js :
          Ojs.t -> vscode_QuickDiffProvider = Obj.magic
        and vscode_QuickDiffProvider_to_js :
          vscode_QuickDiffProvider -> Ojs.t = Obj.magic
        and vscode_QuickInput_of_js : Ojs.t -> vscode_QuickInput = Obj.magic
        and vscode_QuickInput_to_js : vscode_QuickInput -> Ojs.t = Obj.magic
        and vscode_QuickInputButton_of_js : Ojs.t -> vscode_QuickInputButton
          = Obj.magic
        and vscode_QuickInputButton_to_js : vscode_QuickInputButton -> Ojs.t
          = Obj.magic
        and vscode_QuickInputButtons_of_js :
          Ojs.t -> vscode_QuickInputButtons = Obj.magic
        and vscode_QuickInputButtons_to_js :
          vscode_QuickInputButtons -> Ojs.t = Obj.magic
        and vscode_QuickPick_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_QuickPick =
          fun _T -> Obj.magic
        and vscode_QuickPick_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_QuickPick -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_QuickPickItem_of_js : Ojs.t -> vscode_QuickPickItem =
          Obj.magic
        and vscode_QuickPickItem_to_js : vscode_QuickPickItem -> Ojs.t =
          Obj.magic
        and vscode_QuickPickOptions_of_js : Ojs.t -> vscode_QuickPickOptions
          = Obj.magic
        and vscode_QuickPickOptions_to_js : vscode_QuickPickOptions -> Ojs.t
          = Obj.magic
        and vscode_Range_of_js : Ojs.t -> vscode_Range = Obj.magic
        and vscode_Range_to_js : vscode_Range -> Ojs.t = Obj.magic
        and vscode_ReferenceContext_of_js : Ojs.t -> vscode_ReferenceContext
          = Obj.magic
        and vscode_ReferenceContext_to_js : vscode_ReferenceContext -> Ojs.t
          = Obj.magic
        and vscode_ReferenceProvider_of_js :
          Ojs.t -> vscode_ReferenceProvider = Obj.magic
        and vscode_ReferenceProvider_to_js :
          vscode_ReferenceProvider -> Ojs.t = Obj.magic
        and vscode_RelativePattern_of_js : Ojs.t -> vscode_RelativePattern =
          Obj.magic
        and vscode_RelativePattern_to_js : vscode_RelativePattern -> Ojs.t =
          Obj.magic
        and vscode_RenameProvider_of_js : Ojs.t -> vscode_RenameProvider =
          Obj.magic
        and vscode_RenameProvider_to_js : vscode_RenameProvider -> Ojs.t =
          Obj.magic
        and vscode_RunOptions_of_js : Ojs.t -> vscode_RunOptions = Obj.magic
        and vscode_RunOptions_to_js : vscode_RunOptions -> Ojs.t = Obj.magic
        and vscode_SaveDialogOptions_of_js :
          Ojs.t -> vscode_SaveDialogOptions = Obj.magic
        and vscode_SaveDialogOptions_to_js :
          vscode_SaveDialogOptions -> Ojs.t = Obj.magic
        and vscode_SecretStorage_of_js : Ojs.t -> vscode_SecretStorage =
          Obj.magic
        and vscode_SecretStorage_to_js : vscode_SecretStorage -> Ojs.t =
          Obj.magic
        and vscode_SecretStorageChangeEvent_of_js :
          Ojs.t -> vscode_SecretStorageChangeEvent = Obj.magic
        and vscode_SecretStorageChangeEvent_to_js :
          vscode_SecretStorageChangeEvent -> Ojs.t = Obj.magic
        and vscode_Selection_of_js : Ojs.t -> vscode_Selection = Obj.magic
        and vscode_Selection_to_js : vscode_Selection -> Ojs.t = Obj.magic
        and vscode_SelectionRange_of_js : Ojs.t -> vscode_SelectionRange =
          Obj.magic
        and vscode_SelectionRange_to_js : vscode_SelectionRange -> Ojs.t =
          Obj.magic
        and vscode_SelectionRangeProvider_of_js :
          Ojs.t -> vscode_SelectionRangeProvider = Obj.magic
        and vscode_SelectionRangeProvider_to_js :
          vscode_SelectionRangeProvider -> Ojs.t = Obj.magic
        and vscode_SemanticTokens_of_js : Ojs.t -> vscode_SemanticTokens =
          Obj.magic
        and vscode_SemanticTokens_to_js : vscode_SemanticTokens -> Ojs.t =
          Obj.magic
        and vscode_SemanticTokensBuilder_of_js :
          Ojs.t -> vscode_SemanticTokensBuilder = Obj.magic
        and vscode_SemanticTokensBuilder_to_js :
          vscode_SemanticTokensBuilder -> Ojs.t = Obj.magic
        and vscode_SemanticTokensEdit_of_js :
          Ojs.t -> vscode_SemanticTokensEdit = Obj.magic
        and vscode_SemanticTokensEdit_to_js :
          vscode_SemanticTokensEdit -> Ojs.t = Obj.magic
        and vscode_SemanticTokensEdits_of_js :
          Ojs.t -> vscode_SemanticTokensEdits = Obj.magic
        and vscode_SemanticTokensEdits_to_js :
          vscode_SemanticTokensEdits -> Ojs.t = Obj.magic
        and vscode_SemanticTokensLegend_of_js :
          Ojs.t -> vscode_SemanticTokensLegend = Obj.magic
        and vscode_SemanticTokensLegend_to_js :
          vscode_SemanticTokensLegend -> Ojs.t = Obj.magic
        and vscode_ShellExecution_of_js : Ojs.t -> vscode_ShellExecution =
          Obj.magic
        and vscode_ShellExecution_to_js : vscode_ShellExecution -> Ojs.t =
          Obj.magic
        and vscode_ShellExecutionOptions_of_js :
          Ojs.t -> vscode_ShellExecutionOptions = Obj.magic
        and vscode_ShellExecutionOptions_to_js :
          vscode_ShellExecutionOptions -> Ojs.t = Obj.magic
        and vscode_ShellQuotedString_of_js :
          Ojs.t -> vscode_ShellQuotedString = Obj.magic
        and vscode_ShellQuotedString_to_js :
          vscode_ShellQuotedString -> Ojs.t = Obj.magic
        and vscode_ShellQuoting_of_js : Ojs.t -> vscode_ShellQuoting =
          fun (x435 : Ojs.t) ->
            let x436 = x435 in
            match Ojs.int_of_js x436 with
            | 1 -> `Escape
            | 2 -> `Strong
            | 3 -> `Weak
            | _ -> assert false
        and vscode_ShellQuoting_to_js : vscode_ShellQuoting -> Ojs.t =
          fun (x434 : [ `Escape  | `Strong  | `Weak ]) ->
            match x434 with
            | `Escape -> Ojs.int_to_js 1
            | `Strong -> Ojs.int_to_js 2
            | `Weak -> Ojs.int_to_js 3
        and vscode_ShellQuoting_Escape_of_js :
          Ojs.t -> vscode_ShellQuoting_Escape =
          fun (x438 : Ojs.t) ->
            let x439 = x438 in
            match Ojs.int_of_js x439 with | 1 -> `Escape | _ -> assert false
        and vscode_ShellQuoting_Escape_to_js :
          vscode_ShellQuoting_Escape -> Ojs.t =
          fun (x437 : [ `Escape ]) ->
            match x437 with | `Escape -> Ojs.int_to_js 1
        and vscode_ShellQuoting_Strong_of_js :
          Ojs.t -> vscode_ShellQuoting_Strong =
          fun (x441 : Ojs.t) ->
            let x442 = x441 in
            match Ojs.int_of_js x442 with | 2 -> `Strong | _ -> assert false
        and vscode_ShellQuoting_Strong_to_js :
          vscode_ShellQuoting_Strong -> Ojs.t =
          fun (x440 : [ `Strong ]) ->
            match x440 with | `Strong -> Ojs.int_to_js 2
        and vscode_ShellQuoting_Weak_of_js :
          Ojs.t -> vscode_ShellQuoting_Weak =
          fun (x444 : Ojs.t) ->
            let x445 = x444 in
            match Ojs.int_of_js x445 with | 3 -> `Weak | _ -> assert false
        and vscode_ShellQuoting_Weak_to_js :
          vscode_ShellQuoting_Weak -> Ojs.t =
          fun (x443 : [ `Weak ]) ->
            match x443 with | `Weak -> Ojs.int_to_js 3
        and vscode_ShellQuotingOptions_of_js :
          Ojs.t -> vscode_ShellQuotingOptions = Obj.magic
        and vscode_ShellQuotingOptions_to_js :
          vscode_ShellQuotingOptions -> Ojs.t = Obj.magic
        and vscode_SignatureHelp_of_js : Ojs.t -> vscode_SignatureHelp =
          Obj.magic
        and vscode_SignatureHelp_to_js : vscode_SignatureHelp -> Ojs.t =
          Obj.magic
        and vscode_SignatureHelpContext_of_js :
          Ojs.t -> vscode_SignatureHelpContext = Obj.magic
        and vscode_SignatureHelpContext_to_js :
          vscode_SignatureHelpContext -> Ojs.t = Obj.magic
        and vscode_SignatureHelpProvider_of_js :
          Ojs.t -> vscode_SignatureHelpProvider = Obj.magic
        and vscode_SignatureHelpProvider_to_js :
          vscode_SignatureHelpProvider -> Ojs.t = Obj.magic
        and vscode_SignatureHelpProviderMetadata_of_js :
          Ojs.t -> vscode_SignatureHelpProviderMetadata = Obj.magic
        and vscode_SignatureHelpProviderMetadata_to_js :
          vscode_SignatureHelpProviderMetadata -> Ojs.t = Obj.magic
        and vscode_SignatureHelpTriggerKind_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind =
          fun (x447 : Ojs.t) ->
            let x448 = x447 in
            match Ojs.int_of_js x448 with
            | 1 -> `Invoke
            | 2 -> `TriggerCharacter
            | 3 -> `ContentChange
            | _ -> assert false
        and vscode_SignatureHelpTriggerKind_to_js :
          vscode_SignatureHelpTriggerKind -> Ojs.t =
          fun (x446 : [ `Invoke  | `TriggerCharacter  | `ContentChange ]) ->
            match x446 with
            | `Invoke -> Ojs.int_to_js 1
            | `TriggerCharacter -> Ojs.int_to_js 2
            | `ContentChange -> Ojs.int_to_js 3
        and vscode_SignatureHelpTriggerKind_Invoke_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind_Invoke =
          fun (x450 : Ojs.t) ->
            let x451 = x450 in
            match Ojs.int_of_js x451 with | 1 -> `Invoke | _ -> assert false
        and vscode_SignatureHelpTriggerKind_Invoke_to_js :
          vscode_SignatureHelpTriggerKind_Invoke -> Ojs.t =
          fun (x449 : [ `Invoke ]) ->
            match x449 with | `Invoke -> Ojs.int_to_js 1
        and vscode_SignatureHelpTriggerKind_TriggerCharacter_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind_TriggerCharacter =
          fun (x453 : Ojs.t) ->
            let x454 = x453 in
            match Ojs.int_of_js x454 with
            | 2 -> `TriggerCharacter
            | _ -> assert false
        and vscode_SignatureHelpTriggerKind_TriggerCharacter_to_js :
          vscode_SignatureHelpTriggerKind_TriggerCharacter -> Ojs.t =
          fun (x452 : [ `TriggerCharacter ]) ->
            match x452 with | `TriggerCharacter -> Ojs.int_to_js 2
        and vscode_SignatureHelpTriggerKind_ContentChange_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind_ContentChange =
          fun (x456 : Ojs.t) ->
            let x457 = x456 in
            match Ojs.int_of_js x457 with
            | 3 -> `ContentChange
            | _ -> assert false
        and vscode_SignatureHelpTriggerKind_ContentChange_to_js :
          vscode_SignatureHelpTriggerKind_ContentChange -> Ojs.t =
          fun (x455 : [ `ContentChange ]) ->
            match x455 with | `ContentChange -> Ojs.int_to_js 3
        and vscode_SignatureInformation_of_js :
          Ojs.t -> vscode_SignatureInformation = Obj.magic
        and vscode_SignatureInformation_to_js :
          vscode_SignatureInformation -> Ojs.t = Obj.magic
        and vscode_SnippetString_of_js : Ojs.t -> vscode_SnippetString =
          Obj.magic
        and vscode_SnippetString_to_js : vscode_SnippetString -> Ojs.t =
          Obj.magic
        and vscode_SourceBreakpoint_of_js : Ojs.t -> vscode_SourceBreakpoint
          = Obj.magic
        and vscode_SourceBreakpoint_to_js : vscode_SourceBreakpoint -> Ojs.t
          = Obj.magic
        and vscode_SourceControl_of_js : Ojs.t -> vscode_SourceControl =
          Obj.magic
        and vscode_SourceControl_to_js : vscode_SourceControl -> Ojs.t =
          Obj.magic
        and vscode_SourceControlInputBox_of_js :
          Ojs.t -> vscode_SourceControlInputBox = Obj.magic
        and vscode_SourceControlInputBox_to_js :
          vscode_SourceControlInputBox -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceDecorations_of_js :
          Ojs.t -> vscode_SourceControlResourceDecorations = Obj.magic
        and vscode_SourceControlResourceDecorations_to_js :
          vscode_SourceControlResourceDecorations -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceGroup_of_js :
          Ojs.t -> vscode_SourceControlResourceGroup = Obj.magic
        and vscode_SourceControlResourceGroup_to_js :
          vscode_SourceControlResourceGroup -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceState_of_js :
          Ojs.t -> vscode_SourceControlResourceState = Obj.magic
        and vscode_SourceControlResourceState_to_js :
          vscode_SourceControlResourceState -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceThemableDecorations_of_js :
          Ojs.t -> vscode_SourceControlResourceThemableDecorations =
          Obj.magic
        and vscode_SourceControlResourceThemableDecorations_to_js :
          vscode_SourceControlResourceThemableDecorations -> Ojs.t =
          Obj.magic
        and vscode_StatusBarAlignment_of_js :
          Ojs.t -> vscode_StatusBarAlignment =
          fun (x459 : Ojs.t) ->
            let x460 = x459 in
            match Ojs.int_of_js x460 with
            | 1 -> `Left
            | 2 -> `Right
            | _ -> assert false
        and vscode_StatusBarAlignment_to_js :
          vscode_StatusBarAlignment -> Ojs.t =
          fun (x458 : [ `Left  | `Right ]) ->
            match x458 with
            | `Left -> Ojs.int_to_js 1
            | `Right -> Ojs.int_to_js 2
        and vscode_StatusBarAlignment_Left_of_js :
          Ojs.t -> vscode_StatusBarAlignment_Left =
          fun (x462 : Ojs.t) ->
            let x463 = x462 in
            match Ojs.int_of_js x463 with | 1 -> `Left | _ -> assert false
        and vscode_StatusBarAlignment_Left_to_js :
          vscode_StatusBarAlignment_Left -> Ojs.t =
          fun (x461 : [ `Left ]) ->
            match x461 with | `Left -> Ojs.int_to_js 1
        and vscode_StatusBarAlignment_Right_of_js :
          Ojs.t -> vscode_StatusBarAlignment_Right =
          fun (x465 : Ojs.t) ->
            let x466 = x465 in
            match Ojs.int_of_js x466 with | 2 -> `Right | _ -> assert false
        and vscode_StatusBarAlignment_Right_to_js :
          vscode_StatusBarAlignment_Right -> Ojs.t =
          fun (x464 : [ `Right ]) ->
            match x464 with | `Right -> Ojs.int_to_js 2
        and vscode_StatusBarItem_of_js : Ojs.t -> vscode_StatusBarItem =
          Obj.magic
        and vscode_StatusBarItem_to_js : vscode_StatusBarItem -> Ojs.t =
          Obj.magic
        and vscode_SymbolInformation_of_js :
          Ojs.t -> vscode_SymbolInformation = Obj.magic
        and vscode_SymbolInformation_to_js :
          vscode_SymbolInformation -> Ojs.t = Obj.magic
        and vscode_SymbolKind_of_js : Ojs.t -> vscode_SymbolKind =
          fun (x468 : Ojs.t) ->
            let x469 = x468 in
            match Ojs.int_of_js x469 with
            | 0 -> `File
            | 1 -> `Module
            | 2 -> `Namespace
            | 3 -> `Package
            | 4 -> `Class
            | 5 -> `Method
            | 6 -> `Property
            | 7 -> `Field
            | 8 -> `Constructor
            | 9 -> `Enum
            | 10 -> `Interface
            | 11 -> `Function
            | 12 -> `Variable
            | 13 -> `Constant
            | 14 -> `String
            | 15 -> `Number
            | 16 -> `Boolean
            | 17 -> `Array
            | 18 -> `Object
            | 19 -> `Key
            | 20 -> `Null
            | 21 -> `EnumMember
            | 22 -> `Struct
            | 23 -> `Event
            | 24 -> `Operator
            | 25 -> `TypeParameter
            | _ -> assert false
        and vscode_SymbolKind_to_js : vscode_SymbolKind -> Ojs.t =
          fun
            (x467 :
              [ `File  | `Module  | `Namespace  | `Package  | `Class 
              | `Method  | `Property  | `Field  | `Constructor  | `Enum 
              | `Interface  | `Function  | `Variable  | `Constant  | 
                `String 
              | `Number  | `Boolean  | `Array  | `Object  | `Key  | `Null 
              | `EnumMember  | `Struct  | `Event  | `Operator 
              | `TypeParameter ])
            ->
            match x467 with
            | `File -> Ojs.int_to_js 0
            | `Module -> Ojs.int_to_js 1
            | `Namespace -> Ojs.int_to_js 2
            | `Package -> Ojs.int_to_js 3
            | `Class -> Ojs.int_to_js 4
            | `Method -> Ojs.int_to_js 5
            | `Property -> Ojs.int_to_js 6
            | `Field -> Ojs.int_to_js 7
            | `Constructor -> Ojs.int_to_js 8
            | `Enum -> Ojs.int_to_js 9
            | `Interface -> Ojs.int_to_js 10
            | `Function -> Ojs.int_to_js 11
            | `Variable -> Ojs.int_to_js 12
            | `Constant -> Ojs.int_to_js 13
            | `String -> Ojs.int_to_js 14
            | `Number -> Ojs.int_to_js 15
            | `Boolean -> Ojs.int_to_js 16
            | `Array -> Ojs.int_to_js 17
            | `Object -> Ojs.int_to_js 18
            | `Key -> Ojs.int_to_js 19
            | `Null -> Ojs.int_to_js 20
            | `EnumMember -> Ojs.int_to_js 21
            | `Struct -> Ojs.int_to_js 22
            | `Event -> Ojs.int_to_js 23
            | `Operator -> Ojs.int_to_js 24
            | `TypeParameter -> Ojs.int_to_js 25
        and vscode_SymbolKind_File_of_js : Ojs.t -> vscode_SymbolKind_File =
          fun (x471 : Ojs.t) ->
            let x472 = x471 in
            match Ojs.int_of_js x472 with | 0 -> `File | _ -> assert false
        and vscode_SymbolKind_File_to_js : vscode_SymbolKind_File -> Ojs.t =
          fun (x470 : [ `File ]) ->
            match x470 with | `File -> Ojs.int_to_js 0
        and vscode_SymbolKind_Module_of_js :
          Ojs.t -> vscode_SymbolKind_Module =
          fun (x474 : Ojs.t) ->
            let x475 = x474 in
            match Ojs.int_of_js x475 with | 1 -> `Module | _ -> assert false
        and vscode_SymbolKind_Module_to_js :
          vscode_SymbolKind_Module -> Ojs.t =
          fun (x473 : [ `Module ]) ->
            match x473 with | `Module -> Ojs.int_to_js 1
        and vscode_SymbolKind_Namespace_of_js :
          Ojs.t -> vscode_SymbolKind_Namespace =
          fun (x477 : Ojs.t) ->
            let x478 = x477 in
            match Ojs.int_of_js x478 with
            | 2 -> `Namespace
            | _ -> assert false
        and vscode_SymbolKind_Namespace_to_js :
          vscode_SymbolKind_Namespace -> Ojs.t =
          fun (x476 : [ `Namespace ]) ->
            match x476 with | `Namespace -> Ojs.int_to_js 2
        and vscode_SymbolKind_Package_of_js :
          Ojs.t -> vscode_SymbolKind_Package =
          fun (x480 : Ojs.t) ->
            let x481 = x480 in
            match Ojs.int_of_js x481 with | 3 -> `Package | _ -> assert false
        and vscode_SymbolKind_Package_to_js :
          vscode_SymbolKind_Package -> Ojs.t =
          fun (x479 : [ `Package ]) ->
            match x479 with | `Package -> Ojs.int_to_js 3
        and vscode_SymbolKind_Class_of_js : Ojs.t -> vscode_SymbolKind_Class
          =
          fun (x483 : Ojs.t) ->
            let x484 = x483 in
            match Ojs.int_of_js x484 with | 4 -> `Class | _ -> assert false
        and vscode_SymbolKind_Class_to_js : vscode_SymbolKind_Class -> Ojs.t
          =
          fun (x482 : [ `Class ]) ->
            match x482 with | `Class -> Ojs.int_to_js 4
        and vscode_SymbolKind_Method_of_js :
          Ojs.t -> vscode_SymbolKind_Method =
          fun (x486 : Ojs.t) ->
            let x487 = x486 in
            match Ojs.int_of_js x487 with | 5 -> `Method | _ -> assert false
        and vscode_SymbolKind_Method_to_js :
          vscode_SymbolKind_Method -> Ojs.t =
          fun (x485 : [ `Method ]) ->
            match x485 with | `Method -> Ojs.int_to_js 5
        and vscode_SymbolKind_Property_of_js :
          Ojs.t -> vscode_SymbolKind_Property =
          fun (x489 : Ojs.t) ->
            let x490 = x489 in
            match Ojs.int_of_js x490 with
            | 6 -> `Property
            | _ -> assert false
        and vscode_SymbolKind_Property_to_js :
          vscode_SymbolKind_Property -> Ojs.t =
          fun (x488 : [ `Property ]) ->
            match x488 with | `Property -> Ojs.int_to_js 6
        and vscode_SymbolKind_Field_of_js : Ojs.t -> vscode_SymbolKind_Field
          =
          fun (x492 : Ojs.t) ->
            let x493 = x492 in
            match Ojs.int_of_js x493 with | 7 -> `Field | _ -> assert false
        and vscode_SymbolKind_Field_to_js : vscode_SymbolKind_Field -> Ojs.t
          =
          fun (x491 : [ `Field ]) ->
            match x491 with | `Field -> Ojs.int_to_js 7
        and vscode_SymbolKind_Constructor_of_js :
          Ojs.t -> vscode_SymbolKind_Constructor =
          fun (x495 : Ojs.t) ->
            let x496 = x495 in
            match Ojs.int_of_js x496 with
            | 8 -> `Constructor
            | _ -> assert false
        and vscode_SymbolKind_Constructor_to_js :
          vscode_SymbolKind_Constructor -> Ojs.t =
          fun (x494 : [ `Constructor ]) ->
            match x494 with | `Constructor -> Ojs.int_to_js 8
        and vscode_SymbolKind_Enum_of_js : Ojs.t -> vscode_SymbolKind_Enum =
          fun (x498 : Ojs.t) ->
            let x499 = x498 in
            match Ojs.int_of_js x499 with | 9 -> `Enum | _ -> assert false
        and vscode_SymbolKind_Enum_to_js : vscode_SymbolKind_Enum -> Ojs.t =
          fun (x497 : [ `Enum ]) ->
            match x497 with | `Enum -> Ojs.int_to_js 9
        and vscode_SymbolKind_Interface_of_js :
          Ojs.t -> vscode_SymbolKind_Interface =
          fun (x501 : Ojs.t) ->
            let x502 = x501 in
            match Ojs.int_of_js x502 with
            | 10 -> `Interface
            | _ -> assert false
        and vscode_SymbolKind_Interface_to_js :
          vscode_SymbolKind_Interface -> Ojs.t =
          fun (x500 : [ `Interface ]) ->
            match x500 with | `Interface -> Ojs.int_to_js 10
        and vscode_SymbolKind_Function_of_js :
          Ojs.t -> vscode_SymbolKind_Function =
          fun (x504 : Ojs.t) ->
            let x505 = x504 in
            match Ojs.int_of_js x505 with
            | 11 -> `Function
            | _ -> assert false
        and vscode_SymbolKind_Function_to_js :
          vscode_SymbolKind_Function -> Ojs.t =
          fun (x503 : [ `Function ]) ->
            match x503 with | `Function -> Ojs.int_to_js 11
        and vscode_SymbolKind_Variable_of_js :
          Ojs.t -> vscode_SymbolKind_Variable =
          fun (x507 : Ojs.t) ->
            let x508 = x507 in
            match Ojs.int_of_js x508 with
            | 12 -> `Variable
            | _ -> assert false
        and vscode_SymbolKind_Variable_to_js :
          vscode_SymbolKind_Variable -> Ojs.t =
          fun (x506 : [ `Variable ]) ->
            match x506 with | `Variable -> Ojs.int_to_js 12
        and vscode_SymbolKind_Constant_of_js :
          Ojs.t -> vscode_SymbolKind_Constant =
          fun (x510 : Ojs.t) ->
            let x511 = x510 in
            match Ojs.int_of_js x511 with
            | 13 -> `Constant
            | _ -> assert false
        and vscode_SymbolKind_Constant_to_js :
          vscode_SymbolKind_Constant -> Ojs.t =
          fun (x509 : [ `Constant ]) ->
            match x509 with | `Constant -> Ojs.int_to_js 13
        and vscode_SymbolKind_String_of_js :
          Ojs.t -> vscode_SymbolKind_String =
          fun (x513 : Ojs.t) ->
            let x514 = x513 in
            match Ojs.int_of_js x514 with | 14 -> `String | _ -> assert false
        and vscode_SymbolKind_String_to_js :
          vscode_SymbolKind_String -> Ojs.t =
          fun (x512 : [ `String ]) ->
            match x512 with | `String -> Ojs.int_to_js 14
        and vscode_SymbolKind_Number_of_js :
          Ojs.t -> vscode_SymbolKind_Number =
          fun (x516 : Ojs.t) ->
            let x517 = x516 in
            match Ojs.int_of_js x517 with | 15 -> `Number | _ -> assert false
        and vscode_SymbolKind_Number_to_js :
          vscode_SymbolKind_Number -> Ojs.t =
          fun (x515 : [ `Number ]) ->
            match x515 with | `Number -> Ojs.int_to_js 15
        and vscode_SymbolKind_Boolean_of_js :
          Ojs.t -> vscode_SymbolKind_Boolean =
          fun (x519 : Ojs.t) ->
            let x520 = x519 in
            match Ojs.int_of_js x520 with
            | 16 -> `Boolean
            | _ -> assert false
        and vscode_SymbolKind_Boolean_to_js :
          vscode_SymbolKind_Boolean -> Ojs.t =
          fun (x518 : [ `Boolean ]) ->
            match x518 with | `Boolean -> Ojs.int_to_js 16
        and vscode_SymbolKind_Array_of_js : Ojs.t -> vscode_SymbolKind_Array
          =
          fun (x522 : Ojs.t) ->
            let x523 = x522 in
            match Ojs.int_of_js x523 with | 17 -> `Array | _ -> assert false
        and vscode_SymbolKind_Array_to_js : vscode_SymbolKind_Array -> Ojs.t
          =
          fun (x521 : [ `Array ]) ->
            match x521 with | `Array -> Ojs.int_to_js 17
        and vscode_SymbolKind_Object_of_js :
          Ojs.t -> vscode_SymbolKind_Object =
          fun (x525 : Ojs.t) ->
            let x526 = x525 in
            match Ojs.int_of_js x526 with | 18 -> `Object | _ -> assert false
        and vscode_SymbolKind_Object_to_js :
          vscode_SymbolKind_Object -> Ojs.t =
          fun (x524 : [ `Object ]) ->
            match x524 with | `Object -> Ojs.int_to_js 18
        and vscode_SymbolKind_Key_of_js : Ojs.t -> vscode_SymbolKind_Key =
          fun (x528 : Ojs.t) ->
            let x529 = x528 in
            match Ojs.int_of_js x529 with | 19 -> `Key | _ -> assert false
        and vscode_SymbolKind_Key_to_js : vscode_SymbolKind_Key -> Ojs.t =
          fun (x527 : [ `Key ]) -> match x527 with | `Key -> Ojs.int_to_js 19
        and vscode_SymbolKind_Null_of_js : Ojs.t -> vscode_SymbolKind_Null =
          fun (x531 : Ojs.t) ->
            let x532 = x531 in
            match Ojs.int_of_js x532 with | 20 -> `Null | _ -> assert false
        and vscode_SymbolKind_Null_to_js : vscode_SymbolKind_Null -> Ojs.t =
          fun (x530 : [ `Null ]) ->
            match x530 with | `Null -> Ojs.int_to_js 20
        and vscode_SymbolKind_EnumMember_of_js :
          Ojs.t -> vscode_SymbolKind_EnumMember =
          fun (x534 : Ojs.t) ->
            let x535 = x534 in
            match Ojs.int_of_js x535 with
            | 21 -> `EnumMember
            | _ -> assert false
        and vscode_SymbolKind_EnumMember_to_js :
          vscode_SymbolKind_EnumMember -> Ojs.t =
          fun (x533 : [ `EnumMember ]) ->
            match x533 with | `EnumMember -> Ojs.int_to_js 21
        and vscode_SymbolKind_Struct_of_js :
          Ojs.t -> vscode_SymbolKind_Struct =
          fun (x537 : Ojs.t) ->
            let x538 = x537 in
            match Ojs.int_of_js x538 with | 22 -> `Struct | _ -> assert false
        and vscode_SymbolKind_Struct_to_js :
          vscode_SymbolKind_Struct -> Ojs.t =
          fun (x536 : [ `Struct ]) ->
            match x536 with | `Struct -> Ojs.int_to_js 22
        and vscode_SymbolKind_Event_of_js : Ojs.t -> vscode_SymbolKind_Event
          =
          fun (x540 : Ojs.t) ->
            let x541 = x540 in
            match Ojs.int_of_js x541 with | 23 -> `Event | _ -> assert false
        and vscode_SymbolKind_Event_to_js : vscode_SymbolKind_Event -> Ojs.t
          =
          fun (x539 : [ `Event ]) ->
            match x539 with | `Event -> Ojs.int_to_js 23
        and vscode_SymbolKind_Operator_of_js :
          Ojs.t -> vscode_SymbolKind_Operator =
          fun (x543 : Ojs.t) ->
            let x544 = x543 in
            match Ojs.int_of_js x544 with
            | 24 -> `Operator
            | _ -> assert false
        and vscode_SymbolKind_Operator_to_js :
          vscode_SymbolKind_Operator -> Ojs.t =
          fun (x542 : [ `Operator ]) ->
            match x542 with | `Operator -> Ojs.int_to_js 24
        and vscode_SymbolKind_TypeParameter_of_js :
          Ojs.t -> vscode_SymbolKind_TypeParameter =
          fun (x546 : Ojs.t) ->
            let x547 = x546 in
            match Ojs.int_of_js x547 with
            | 25 -> `TypeParameter
            | _ -> assert false
        and vscode_SymbolKind_TypeParameter_to_js :
          vscode_SymbolKind_TypeParameter -> Ojs.t =
          fun (x545 : [ `TypeParameter ]) ->
            match x545 with | `TypeParameter -> Ojs.int_to_js 25
        and vscode_SymbolTag_of_js : Ojs.t -> vscode_SymbolTag =
          fun (x549 : Ojs.t) ->
            let x550 = x549 in
            match Ojs.int_of_js x550 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_SymbolTag_to_js : vscode_SymbolTag -> Ojs.t =
          fun (x548 : [ `Deprecated ]) ->
            match x548 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_SymbolTag_Deprecated_of_js :
          Ojs.t -> vscode_SymbolTag_Deprecated =
          fun (x552 : Ojs.t) ->
            let x553 = x552 in
            match Ojs.int_of_js x553 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_SymbolTag_Deprecated_to_js :
          vscode_SymbolTag_Deprecated -> Ojs.t =
          fun (x551 : [ `Deprecated ]) ->
            match x551 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_Task_of_js : Ojs.t -> vscode_Task = Obj.magic
        and vscode_Task_to_js : vscode_Task -> Ojs.t = Obj.magic
        and vscode_TaskDefinition_of_js : Ojs.t -> vscode_TaskDefinition =
          Obj.magic
        and vscode_TaskDefinition_to_js : vscode_TaskDefinition -> Ojs.t =
          Obj.magic
        and vscode_TaskEndEvent_of_js : Ojs.t -> vscode_TaskEndEvent =
          Obj.magic
        and vscode_TaskEndEvent_to_js : vscode_TaskEndEvent -> Ojs.t =
          Obj.magic
        and vscode_TaskExecution_of_js : Ojs.t -> vscode_TaskExecution =
          Obj.magic
        and vscode_TaskExecution_to_js : vscode_TaskExecution -> Ojs.t =
          Obj.magic
        and vscode_TaskFilter_of_js : Ojs.t -> vscode_TaskFilter = Obj.magic
        and vscode_TaskFilter_to_js : vscode_TaskFilter -> Ojs.t = Obj.magic
        and vscode_TaskGroup_of_js : Ojs.t -> vscode_TaskGroup = Obj.magic
        and vscode_TaskGroup_to_js : vscode_TaskGroup -> Ojs.t = Obj.magic
        and vscode_TaskPanelKind_of_js : Ojs.t -> vscode_TaskPanelKind =
          fun (x555 : Ojs.t) ->
            let x556 = x555 in
            match Ojs.int_of_js x556 with
            | 1 -> `Shared
            | 2 -> `Dedicated
            | 3 -> `New
            | _ -> assert false
        and vscode_TaskPanelKind_to_js : vscode_TaskPanelKind -> Ojs.t =
          fun (x554 : [ `Shared  | `Dedicated  | `New ]) ->
            match x554 with
            | `Shared -> Ojs.int_to_js 1
            | `Dedicated -> Ojs.int_to_js 2
            | `New -> Ojs.int_to_js 3
        and vscode_TaskPanelKind_Shared_of_js :
          Ojs.t -> vscode_TaskPanelKind_Shared =
          fun (x558 : Ojs.t) ->
            let x559 = x558 in
            match Ojs.int_of_js x559 with | 1 -> `Shared | _ -> assert false
        and vscode_TaskPanelKind_Shared_to_js :
          vscode_TaskPanelKind_Shared -> Ojs.t =
          fun (x557 : [ `Shared ]) ->
            match x557 with | `Shared -> Ojs.int_to_js 1
        and vscode_TaskPanelKind_Dedicated_of_js :
          Ojs.t -> vscode_TaskPanelKind_Dedicated =
          fun (x561 : Ojs.t) ->
            let x562 = x561 in
            match Ojs.int_of_js x562 with
            | 2 -> `Dedicated
            | _ -> assert false
        and vscode_TaskPanelKind_Dedicated_to_js :
          vscode_TaskPanelKind_Dedicated -> Ojs.t =
          fun (x560 : [ `Dedicated ]) ->
            match x560 with | `Dedicated -> Ojs.int_to_js 2
        and vscode_TaskPanelKind_New_of_js :
          Ojs.t -> vscode_TaskPanelKind_New =
          fun (x564 : Ojs.t) ->
            let x565 = x564 in
            match Ojs.int_of_js x565 with | 3 -> `New | _ -> assert false
        and vscode_TaskPanelKind_New_to_js :
          vscode_TaskPanelKind_New -> Ojs.t =
          fun (x563 : [ `New ]) -> match x563 with | `New -> Ojs.int_to_js 3
        and vscode_TaskPresentationOptions_of_js :
          Ojs.t -> vscode_TaskPresentationOptions = Obj.magic
        and vscode_TaskPresentationOptions_to_js :
          vscode_TaskPresentationOptions -> Ojs.t = Obj.magic
        and vscode_TaskProcessEndEvent_of_js :
          Ojs.t -> vscode_TaskProcessEndEvent = Obj.magic
        and vscode_TaskProcessEndEvent_to_js :
          vscode_TaskProcessEndEvent -> Ojs.t = Obj.magic
        and vscode_TaskProcessStartEvent_of_js :
          Ojs.t -> vscode_TaskProcessStartEvent = Obj.magic
        and vscode_TaskProcessStartEvent_to_js :
          vscode_TaskProcessStartEvent -> Ojs.t = Obj.magic
        and vscode_TaskProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TaskProvider =
          fun _T -> Obj.magic
        and vscode_TaskProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TaskProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TaskRevealKind_of_js : Ojs.t -> vscode_TaskRevealKind =
          fun (x567 : Ojs.t) ->
            let x568 = x567 in
            match Ojs.int_of_js x568 with
            | 1 -> `Always
            | 2 -> `Silent
            | 3 -> `Never
            | _ -> assert false
        and vscode_TaskRevealKind_to_js : vscode_TaskRevealKind -> Ojs.t =
          fun (x566 : [ `Always  | `Silent  | `Never ]) ->
            match x566 with
            | `Always -> Ojs.int_to_js 1
            | `Silent -> Ojs.int_to_js 2
            | `Never -> Ojs.int_to_js 3
        and vscode_TaskRevealKind_Always_of_js :
          Ojs.t -> vscode_TaskRevealKind_Always =
          fun (x570 : Ojs.t) ->
            let x571 = x570 in
            match Ojs.int_of_js x571 with | 1 -> `Always | _ -> assert false
        and vscode_TaskRevealKind_Always_to_js :
          vscode_TaskRevealKind_Always -> Ojs.t =
          fun (x569 : [ `Always ]) ->
            match x569 with | `Always -> Ojs.int_to_js 1
        and vscode_TaskRevealKind_Silent_of_js :
          Ojs.t -> vscode_TaskRevealKind_Silent =
          fun (x573 : Ojs.t) ->
            let x574 = x573 in
            match Ojs.int_of_js x574 with | 2 -> `Silent | _ -> assert false
        and vscode_TaskRevealKind_Silent_to_js :
          vscode_TaskRevealKind_Silent -> Ojs.t =
          fun (x572 : [ `Silent ]) ->
            match x572 with | `Silent -> Ojs.int_to_js 2
        and vscode_TaskRevealKind_Never_of_js :
          Ojs.t -> vscode_TaskRevealKind_Never =
          fun (x576 : Ojs.t) ->
            let x577 = x576 in
            match Ojs.int_of_js x577 with | 3 -> `Never | _ -> assert false
        and vscode_TaskRevealKind_Never_to_js :
          vscode_TaskRevealKind_Never -> Ojs.t =
          fun (x575 : [ `Never ]) ->
            match x575 with | `Never -> Ojs.int_to_js 3
        and vscode_TaskScope_of_js : Ojs.t -> vscode_TaskScope =
          fun (x579 : Ojs.t) ->
            let x580 = x579 in
            match Ojs.int_of_js x580 with
            | 1 -> `Global
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_TaskScope_to_js : vscode_TaskScope -> Ojs.t =
          fun (x578 : [ `Global  | `Workspace ]) ->
            match x578 with
            | `Global -> Ojs.int_to_js 1
            | `Workspace -> Ojs.int_to_js 2
        and vscode_TaskScope_Global_of_js : Ojs.t -> vscode_TaskScope_Global
          =
          fun (x582 : Ojs.t) ->
            let x583 = x582 in
            match Ojs.int_of_js x583 with | 1 -> `Global | _ -> assert false
        and vscode_TaskScope_Global_to_js : vscode_TaskScope_Global -> Ojs.t
          =
          fun (x581 : [ `Global ]) ->
            match x581 with | `Global -> Ojs.int_to_js 1
        and vscode_TaskScope_Workspace_of_js :
          Ojs.t -> vscode_TaskScope_Workspace =
          fun (x585 : Ojs.t) ->
            let x586 = x585 in
            match Ojs.int_of_js x586 with
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_TaskScope_Workspace_to_js :
          vscode_TaskScope_Workspace -> Ojs.t =
          fun (x584 : [ `Workspace ]) ->
            match x584 with | `Workspace -> Ojs.int_to_js 2
        and vscode_TaskStartEvent_of_js : Ojs.t -> vscode_TaskStartEvent =
          Obj.magic
        and vscode_TaskStartEvent_to_js : vscode_TaskStartEvent -> Ojs.t =
          Obj.magic
        and vscode_Terminal_of_js : Ojs.t -> vscode_Terminal = Obj.magic
        and vscode_Terminal_to_js : vscode_Terminal -> Ojs.t = Obj.magic
        and vscode_TerminalDimensions_of_js :
          Ojs.t -> vscode_TerminalDimensions = Obj.magic
        and vscode_TerminalDimensions_to_js :
          vscode_TerminalDimensions -> Ojs.t = Obj.magic
        and vscode_TerminalExitStatus_of_js :
          Ojs.t -> vscode_TerminalExitStatus = Obj.magic
        and vscode_TerminalExitStatus_to_js :
          vscode_TerminalExitStatus -> Ojs.t = Obj.magic
        and vscode_TerminalLink_of_js : Ojs.t -> vscode_TerminalLink =
          Obj.magic
        and vscode_TerminalLink_to_js : vscode_TerminalLink -> Ojs.t =
          Obj.magic
        and vscode_TerminalLinkContext_of_js :
          Ojs.t -> vscode_TerminalLinkContext = Obj.magic
        and vscode_TerminalLinkContext_to_js :
          vscode_TerminalLinkContext -> Ojs.t = Obj.magic
        and vscode_TerminalLinkProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TerminalLinkProvider =
          fun _T -> Obj.magic
        and vscode_TerminalLinkProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TerminalLinkProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TerminalOptions_of_js : Ojs.t -> vscode_TerminalOptions =
          Obj.magic
        and vscode_TerminalOptions_to_js : vscode_TerminalOptions -> Ojs.t =
          Obj.magic
        and vscode_TextDocument_of_js : Ojs.t -> vscode_TextDocument =
          Obj.magic
        and vscode_TextDocument_to_js : vscode_TextDocument -> Ojs.t =
          Obj.magic
        and vscode_TextDocumentChangeEvent_of_js :
          Ojs.t -> vscode_TextDocumentChangeEvent = Obj.magic
        and vscode_TextDocumentChangeEvent_to_js :
          vscode_TextDocumentChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextDocumentContentChangeEvent_of_js :
          Ojs.t -> vscode_TextDocumentContentChangeEvent = Obj.magic
        and vscode_TextDocumentContentChangeEvent_to_js :
          vscode_TextDocumentContentChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextDocumentContentProvider_of_js :
          Ojs.t -> vscode_TextDocumentContentProvider = Obj.magic
        and vscode_TextDocumentContentProvider_to_js :
          vscode_TextDocumentContentProvider -> Ojs.t = Obj.magic
        and vscode_TextDocumentSaveReason_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason =
          fun (x588 : Ojs.t) ->
            let x589 = x588 in
            match Ojs.int_of_js x589 with
            | 1 -> `Manual
            | 2 -> `AfterDelay
            | 3 -> `FocusOut
            | _ -> assert false
        and vscode_TextDocumentSaveReason_to_js :
          vscode_TextDocumentSaveReason -> Ojs.t =
          fun (x587 : [ `Manual  | `AfterDelay  | `FocusOut ]) ->
            match x587 with
            | `Manual -> Ojs.int_to_js 1
            | `AfterDelay -> Ojs.int_to_js 2
            | `FocusOut -> Ojs.int_to_js 3
        and vscode_TextDocumentSaveReason_Manual_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason_Manual =
          fun (x591 : Ojs.t) ->
            let x592 = x591 in
            match Ojs.int_of_js x592 with | 1 -> `Manual | _ -> assert false
        and vscode_TextDocumentSaveReason_Manual_to_js :
          vscode_TextDocumentSaveReason_Manual -> Ojs.t =
          fun (x590 : [ `Manual ]) ->
            match x590 with | `Manual -> Ojs.int_to_js 1
        and vscode_TextDocumentSaveReason_AfterDelay_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason_AfterDelay =
          fun (x594 : Ojs.t) ->
            let x595 = x594 in
            match Ojs.int_of_js x595 with
            | 2 -> `AfterDelay
            | _ -> assert false
        and vscode_TextDocumentSaveReason_AfterDelay_to_js :
          vscode_TextDocumentSaveReason_AfterDelay -> Ojs.t =
          fun (x593 : [ `AfterDelay ]) ->
            match x593 with | `AfterDelay -> Ojs.int_to_js 2
        and vscode_TextDocumentSaveReason_FocusOut_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason_FocusOut =
          fun (x597 : Ojs.t) ->
            let x598 = x597 in
            match Ojs.int_of_js x598 with
            | 3 -> `FocusOut
            | _ -> assert false
        and vscode_TextDocumentSaveReason_FocusOut_to_js :
          vscode_TextDocumentSaveReason_FocusOut -> Ojs.t =
          fun (x596 : [ `FocusOut ]) ->
            match x596 with | `FocusOut -> Ojs.int_to_js 3
        and vscode_TextDocumentShowOptions_of_js :
          Ojs.t -> vscode_TextDocumentShowOptions = Obj.magic
        and vscode_TextDocumentShowOptions_to_js :
          vscode_TextDocumentShowOptions -> Ojs.t = Obj.magic
        and vscode_TextDocumentWillSaveEvent_of_js :
          Ojs.t -> vscode_TextDocumentWillSaveEvent = Obj.magic
        and vscode_TextDocumentWillSaveEvent_to_js :
          vscode_TextDocumentWillSaveEvent -> Ojs.t = Obj.magic
        and vscode_TextEdit_of_js : Ojs.t -> vscode_TextEdit = Obj.magic
        and vscode_TextEdit_to_js : vscode_TextEdit -> Ojs.t = Obj.magic
        and vscode_TextEditor_of_js : Ojs.t -> vscode_TextEditor = Obj.magic
        and vscode_TextEditor_to_js : vscode_TextEditor -> Ojs.t = Obj.magic
        and vscode_TextEditorCursorStyle_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle =
          fun (x600 : Ojs.t) ->
            let x601 = x600 in
            match Ojs.int_of_js x601 with
            | 1 -> `Line
            | 2 -> `Block
            | 3 -> `Underline
            | 4 -> `LineThin
            | 5 -> `BlockOutline
            | 6 -> `UnderlineThin
            | _ -> assert false
        and vscode_TextEditorCursorStyle_to_js :
          vscode_TextEditorCursorStyle -> Ojs.t =
          fun
            (x599 :
              [ `Line  | `Block  | `Underline  | `LineThin  | `BlockOutline 
              | `UnderlineThin ])
            ->
            match x599 with
            | `Line -> Ojs.int_to_js 1
            | `Block -> Ojs.int_to_js 2
            | `Underline -> Ojs.int_to_js 3
            | `LineThin -> Ojs.int_to_js 4
            | `BlockOutline -> Ojs.int_to_js 5
            | `UnderlineThin -> Ojs.int_to_js 6
        and vscode_TextEditorCursorStyle_Line_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_Line =
          fun (x603 : Ojs.t) ->
            let x604 = x603 in
            match Ojs.int_of_js x604 with | 1 -> `Line | _ -> assert false
        and vscode_TextEditorCursorStyle_Line_to_js :
          vscode_TextEditorCursorStyle_Line -> Ojs.t =
          fun (x602 : [ `Line ]) ->
            match x602 with | `Line -> Ojs.int_to_js 1
        and vscode_TextEditorCursorStyle_Block_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_Block =
          fun (x606 : Ojs.t) ->
            let x607 = x606 in
            match Ojs.int_of_js x607 with | 2 -> `Block | _ -> assert false
        and vscode_TextEditorCursorStyle_Block_to_js :
          vscode_TextEditorCursorStyle_Block -> Ojs.t =
          fun (x605 : [ `Block ]) ->
            match x605 with | `Block -> Ojs.int_to_js 2
        and vscode_TextEditorCursorStyle_Underline_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_Underline =
          fun (x609 : Ojs.t) ->
            let x610 = x609 in
            match Ojs.int_of_js x610 with
            | 3 -> `Underline
            | _ -> assert false
        and vscode_TextEditorCursorStyle_Underline_to_js :
          vscode_TextEditorCursorStyle_Underline -> Ojs.t =
          fun (x608 : [ `Underline ]) ->
            match x608 with | `Underline -> Ojs.int_to_js 3
        and vscode_TextEditorCursorStyle_LineThin_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_LineThin =
          fun (x612 : Ojs.t) ->
            let x613 = x612 in
            match Ojs.int_of_js x613 with
            | 4 -> `LineThin
            | _ -> assert false
        and vscode_TextEditorCursorStyle_LineThin_to_js :
          vscode_TextEditorCursorStyle_LineThin -> Ojs.t =
          fun (x611 : [ `LineThin ]) ->
            match x611 with | `LineThin -> Ojs.int_to_js 4
        and vscode_TextEditorCursorStyle_BlockOutline_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_BlockOutline =
          fun (x615 : Ojs.t) ->
            let x616 = x615 in
            match Ojs.int_of_js x616 with
            | 5 -> `BlockOutline
            | _ -> assert false
        and vscode_TextEditorCursorStyle_BlockOutline_to_js :
          vscode_TextEditorCursorStyle_BlockOutline -> Ojs.t =
          fun (x614 : [ `BlockOutline ]) ->
            match x614 with | `BlockOutline -> Ojs.int_to_js 5
        and vscode_TextEditorCursorStyle_UnderlineThin_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_UnderlineThin =
          fun (x618 : Ojs.t) ->
            let x619 = x618 in
            match Ojs.int_of_js x619 with
            | 6 -> `UnderlineThin
            | _ -> assert false
        and vscode_TextEditorCursorStyle_UnderlineThin_to_js :
          vscode_TextEditorCursorStyle_UnderlineThin -> Ojs.t =
          fun (x617 : [ `UnderlineThin ]) ->
            match x617 with | `UnderlineThin -> Ojs.int_to_js 6
        and vscode_TextEditorDecorationType_of_js :
          Ojs.t -> vscode_TextEditorDecorationType = Obj.magic
        and vscode_TextEditorDecorationType_to_js :
          vscode_TextEditorDecorationType -> Ojs.t = Obj.magic
        and vscode_TextEditorEdit_of_js : Ojs.t -> vscode_TextEditorEdit =
          Obj.magic
        and vscode_TextEditorEdit_to_js : vscode_TextEditorEdit -> Ojs.t =
          Obj.magic
        and vscode_TextEditorLineNumbersStyle_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle =
          fun (x621 : Ojs.t) ->
            let x622 = x621 in
            match Ojs.int_of_js x622 with
            | 0 -> `Off
            | 1 -> `On
            | 2 -> `Relative
            | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_to_js :
          vscode_TextEditorLineNumbersStyle -> Ojs.t =
          fun (x620 : [ `Off  | `On  | `Relative ]) ->
            match x620 with
            | `Off -> Ojs.int_to_js 0
            | `On -> Ojs.int_to_js 1
            | `Relative -> Ojs.int_to_js 2
        and vscode_TextEditorLineNumbersStyle_Off_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle_Off =
          fun (x624 : Ojs.t) ->
            let x625 = x624 in
            match Ojs.int_of_js x625 with | 0 -> `Off | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_Off_to_js :
          vscode_TextEditorLineNumbersStyle_Off -> Ojs.t =
          fun (x623 : [ `Off ]) -> match x623 with | `Off -> Ojs.int_to_js 0
        and vscode_TextEditorLineNumbersStyle_On_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle_On =
          fun (x627 : Ojs.t) ->
            let x628 = x627 in
            match Ojs.int_of_js x628 with | 1 -> `On | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_On_to_js :
          vscode_TextEditorLineNumbersStyle_On -> Ojs.t =
          fun (x626 : [ `On ]) -> match x626 with | `On -> Ojs.int_to_js 1
        and vscode_TextEditorLineNumbersStyle_Relative_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle_Relative =
          fun (x630 : Ojs.t) ->
            let x631 = x630 in
            match Ojs.int_of_js x631 with
            | 2 -> `Relative
            | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_Relative_to_js :
          vscode_TextEditorLineNumbersStyle_Relative -> Ojs.t =
          fun (x629 : [ `Relative ]) ->
            match x629 with | `Relative -> Ojs.int_to_js 2
        and vscode_TextEditorOptions_of_js :
          Ojs.t -> vscode_TextEditorOptions = Obj.magic
        and vscode_TextEditorOptions_to_js :
          vscode_TextEditorOptions -> Ojs.t = Obj.magic
        and vscode_TextEditorOptionsChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorOptionsChangeEvent = Obj.magic
        and vscode_TextEditorOptionsChangeEvent_to_js :
          vscode_TextEditorOptionsChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextEditorRevealType_of_js :
          Ojs.t -> vscode_TextEditorRevealType =
          fun (x633 : Ojs.t) ->
            let x634 = x633 in
            match Ojs.int_of_js x634 with
            | 0 -> `Default
            | 1 -> `InCenter
            | 2 -> `InCenterIfOutsideViewport
            | 3 -> `AtTop
            | _ -> assert false
        and vscode_TextEditorRevealType_to_js :
          vscode_TextEditorRevealType -> Ojs.t =
          fun
            (x632 :
              [ `Default  | `InCenter  | `InCenterIfOutsideViewport 
              | `AtTop ])
            ->
            match x632 with
            | `Default -> Ojs.int_to_js 0
            | `InCenter -> Ojs.int_to_js 1
            | `InCenterIfOutsideViewport -> Ojs.int_to_js 2
            | `AtTop -> Ojs.int_to_js 3
        and vscode_TextEditorRevealType_Default_of_js :
          Ojs.t -> vscode_TextEditorRevealType_Default =
          fun (x636 : Ojs.t) ->
            let x637 = x636 in
            match Ojs.int_of_js x637 with | 0 -> `Default | _ -> assert false
        and vscode_TextEditorRevealType_Default_to_js :
          vscode_TextEditorRevealType_Default -> Ojs.t =
          fun (x635 : [ `Default ]) ->
            match x635 with | `Default -> Ojs.int_to_js 0
        and vscode_TextEditorRevealType_InCenter_of_js :
          Ojs.t -> vscode_TextEditorRevealType_InCenter =
          fun (x639 : Ojs.t) ->
            let x640 = x639 in
            match Ojs.int_of_js x640 with
            | 1 -> `InCenter
            | _ -> assert false
        and vscode_TextEditorRevealType_InCenter_to_js :
          vscode_TextEditorRevealType_InCenter -> Ojs.t =
          fun (x638 : [ `InCenter ]) ->
            match x638 with | `InCenter -> Ojs.int_to_js 1
        and vscode_TextEditorRevealType_InCenterIfOutsideViewport_of_js :
          Ojs.t -> vscode_TextEditorRevealType_InCenterIfOutsideViewport =
          fun (x642 : Ojs.t) ->
            let x643 = x642 in
            match Ojs.int_of_js x643 with
            | 2 -> `InCenterIfOutsideViewport
            | _ -> assert false
        and vscode_TextEditorRevealType_InCenterIfOutsideViewport_to_js :
          vscode_TextEditorRevealType_InCenterIfOutsideViewport -> Ojs.t =
          fun (x641 : [ `InCenterIfOutsideViewport ]) ->
            match x641 with | `InCenterIfOutsideViewport -> Ojs.int_to_js 2
        and vscode_TextEditorRevealType_AtTop_of_js :
          Ojs.t -> vscode_TextEditorRevealType_AtTop =
          fun (x645 : Ojs.t) ->
            let x646 = x645 in
            match Ojs.int_of_js x646 with | 3 -> `AtTop | _ -> assert false
        and vscode_TextEditorRevealType_AtTop_to_js :
          vscode_TextEditorRevealType_AtTop -> Ojs.t =
          fun (x644 : [ `AtTop ]) ->
            match x644 with | `AtTop -> Ojs.int_to_js 3
        and vscode_TextEditorSelectionChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeEvent = Obj.magic
        and vscode_TextEditorSelectionChangeEvent_to_js :
          vscode_TextEditorSelectionChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextEditorSelectionChangeKind_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind =
          fun (x648 : Ojs.t) ->
            let x649 = x648 in
            match Ojs.int_of_js x649 with
            | 1 -> `Keyboard
            | 2 -> `Mouse
            | 3 -> `Command
            | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_to_js :
          vscode_TextEditorSelectionChangeKind -> Ojs.t =
          fun (x647 : [ `Keyboard  | `Mouse  | `Command ]) ->
            match x647 with
            | `Keyboard -> Ojs.int_to_js 1
            | `Mouse -> Ojs.int_to_js 2
            | `Command -> Ojs.int_to_js 3
        and vscode_TextEditorSelectionChangeKind_Keyboard_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind_Keyboard =
          fun (x651 : Ojs.t) ->
            let x652 = x651 in
            match Ojs.int_of_js x652 with
            | 1 -> `Keyboard
            | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_Keyboard_to_js :
          vscode_TextEditorSelectionChangeKind_Keyboard -> Ojs.t =
          fun (x650 : [ `Keyboard ]) ->
            match x650 with | `Keyboard -> Ojs.int_to_js 1
        and vscode_TextEditorSelectionChangeKind_Mouse_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind_Mouse =
          fun (x654 : Ojs.t) ->
            let x655 = x654 in
            match Ojs.int_of_js x655 with | 2 -> `Mouse | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_Mouse_to_js :
          vscode_TextEditorSelectionChangeKind_Mouse -> Ojs.t =
          fun (x653 : [ `Mouse ]) ->
            match x653 with | `Mouse -> Ojs.int_to_js 2
        and vscode_TextEditorSelectionChangeKind_Command_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind_Command =
          fun (x657 : Ojs.t) ->
            let x658 = x657 in
            match Ojs.int_of_js x658 with | 3 -> `Command | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_Command_to_js :
          vscode_TextEditorSelectionChangeKind_Command -> Ojs.t =
          fun (x656 : [ `Command ]) ->
            match x656 with | `Command -> Ojs.int_to_js 3
        and vscode_TextEditorViewColumnChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorViewColumnChangeEvent = Obj.magic
        and vscode_TextEditorViewColumnChangeEvent_to_js :
          vscode_TextEditorViewColumnChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextEditorVisibleRangesChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorVisibleRangesChangeEvent = Obj.magic
        and vscode_TextEditorVisibleRangesChangeEvent_to_js :
          vscode_TextEditorVisibleRangesChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextLine_of_js : Ojs.t -> vscode_TextLine = Obj.magic
        and vscode_TextLine_to_js : vscode_TextLine -> Ojs.t = Obj.magic
        and vscode_ThemableDecorationAttachmentRenderOptions_of_js :
          Ojs.t -> vscode_ThemableDecorationAttachmentRenderOptions =
          Obj.magic
        and vscode_ThemableDecorationAttachmentRenderOptions_to_js :
          vscode_ThemableDecorationAttachmentRenderOptions -> Ojs.t =
          Obj.magic
        and vscode_ThemableDecorationInstanceRenderOptions_of_js :
          Ojs.t -> vscode_ThemableDecorationInstanceRenderOptions = Obj.magic
        and vscode_ThemableDecorationInstanceRenderOptions_to_js :
          vscode_ThemableDecorationInstanceRenderOptions -> Ojs.t = Obj.magic
        and vscode_ThemableDecorationRenderOptions_of_js :
          Ojs.t -> vscode_ThemableDecorationRenderOptions = Obj.magic
        and vscode_ThemableDecorationRenderOptions_to_js :
          vscode_ThemableDecorationRenderOptions -> Ojs.t = Obj.magic
        and vscode_ThemeColor_of_js : Ojs.t -> vscode_ThemeColor = Obj.magic
        and vscode_ThemeColor_to_js : vscode_ThemeColor -> Ojs.t = Obj.magic
        and vscode_ThemeIcon_of_js : Ojs.t -> vscode_ThemeIcon = Obj.magic
        and vscode_ThemeIcon_to_js : vscode_ThemeIcon -> Ojs.t = Obj.magic
        and vscode_TreeDataProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeDataProvider =
          fun _T -> Obj.magic
        and vscode_TreeDataProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeDataProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeItem_of_js : Ojs.t -> vscode_TreeItem = Obj.magic
        and vscode_TreeItem_to_js : vscode_TreeItem -> Ojs.t = Obj.magic
        and vscode_TreeItemCollapsibleState_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState =
          fun (x660 : Ojs.t) ->
            let x661 = x660 in
            match Ojs.int_of_js x661 with
            | 0 -> `None
            | 1 -> `Collapsed
            | 2 -> `Expanded
            | _ -> assert false
        and vscode_TreeItemCollapsibleState_to_js :
          vscode_TreeItemCollapsibleState -> Ojs.t =
          fun (x659 : [ `None  | `Collapsed  | `Expanded ]) ->
            match x659 with
            | `None -> Ojs.int_to_js 0
            | `Collapsed -> Ojs.int_to_js 1
            | `Expanded -> Ojs.int_to_js 2
        and vscode_TreeItemCollapsibleState_None_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState_None =
          fun (x663 : Ojs.t) ->
            let x664 = x663 in
            match Ojs.int_of_js x664 with | 0 -> `None | _ -> assert false
        and vscode_TreeItemCollapsibleState_None_to_js :
          vscode_TreeItemCollapsibleState_None -> Ojs.t =
          fun (x662 : [ `None ]) ->
            match x662 with | `None -> Ojs.int_to_js 0
        and vscode_TreeItemCollapsibleState_Collapsed_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState_Collapsed =
          fun (x666 : Ojs.t) ->
            let x667 = x666 in
            match Ojs.int_of_js x667 with
            | 1 -> `Collapsed
            | _ -> assert false
        and vscode_TreeItemCollapsibleState_Collapsed_to_js :
          vscode_TreeItemCollapsibleState_Collapsed -> Ojs.t =
          fun (x665 : [ `Collapsed ]) ->
            match x665 with | `Collapsed -> Ojs.int_to_js 1
        and vscode_TreeItemCollapsibleState_Expanded_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState_Expanded =
          fun (x669 : Ojs.t) ->
            let x670 = x669 in
            match Ojs.int_of_js x670 with
            | 2 -> `Expanded
            | _ -> assert false
        and vscode_TreeItemCollapsibleState_Expanded_to_js :
          vscode_TreeItemCollapsibleState_Expanded -> Ojs.t =
          fun (x668 : [ `Expanded ]) ->
            match x668 with | `Expanded -> Ojs.int_to_js 2
        and vscode_TreeItemLabel_of_js : Ojs.t -> vscode_TreeItemLabel =
          Obj.magic
        and vscode_TreeItemLabel_to_js : vscode_TreeItemLabel -> Ojs.t =
          Obj.magic
        and vscode_TreeView_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeView =
          fun _T -> Obj.magic
        and vscode_TreeView_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeView -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeViewExpansionEvent_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeViewExpansionEvent =
          fun _T -> Obj.magic
        and vscode_TreeViewExpansionEvent_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeViewExpansionEvent -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeViewOptions_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeViewOptions =
          fun _T -> Obj.magic
        and vscode_TreeViewOptions_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeViewOptions -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeViewSelectionChangeEvent_of_js :
          'T .
            (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeViewSelectionChangeEvent
          = fun _T -> Obj.magic
        and vscode_TreeViewSelectionChangeEvent_to_js :
          'T .
            ('T -> Ojs.t) -> 'T vscode_TreeViewSelectionChangeEvent -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_TreeViewVisibilityChangeEvent_of_js :
          Ojs.t -> vscode_TreeViewVisibilityChangeEvent = Obj.magic
        and vscode_TreeViewVisibilityChangeEvent_to_js :
          vscode_TreeViewVisibilityChangeEvent -> Ojs.t = Obj.magic
        and vscode_TypeDefinitionProvider_of_js :
          Ojs.t -> vscode_TypeDefinitionProvider = Obj.magic
        and vscode_TypeDefinitionProvider_to_js :
          vscode_TypeDefinitionProvider -> Ojs.t = Obj.magic
        and vscode_UIKind_of_js : Ojs.t -> vscode_UIKind =
          fun (x672 : Ojs.t) ->
            let x673 = x672 in
            match Ojs.int_of_js x673 with
            | 1 -> `Desktop
            | 2 -> `Web
            | _ -> assert false
        and vscode_UIKind_to_js : vscode_UIKind -> Ojs.t =
          fun (x671 : [ `Desktop  | `Web ]) ->
            match x671 with
            | `Desktop -> Ojs.int_to_js 1
            | `Web -> Ojs.int_to_js 2
        and vscode_UIKind_Desktop_of_js : Ojs.t -> vscode_UIKind_Desktop =
          fun (x675 : Ojs.t) ->
            let x676 = x675 in
            match Ojs.int_of_js x676 with | 1 -> `Desktop | _ -> assert false
        and vscode_UIKind_Desktop_to_js : vscode_UIKind_Desktop -> Ojs.t =
          fun (x674 : [ `Desktop ]) ->
            match x674 with | `Desktop -> Ojs.int_to_js 1
        and vscode_UIKind_Web_of_js : Ojs.t -> vscode_UIKind_Web =
          fun (x678 : Ojs.t) ->
            let x679 = x678 in
            match Ojs.int_of_js x679 with | 2 -> `Web | _ -> assert false
        and vscode_UIKind_Web_to_js : vscode_UIKind_Web -> Ojs.t =
          fun (x677 : [ `Web ]) -> match x677 with | `Web -> Ojs.int_to_js 2
        and vscode_Uri_of_js : Ojs.t -> vscode_Uri = Obj.magic
        and vscode_Uri_to_js : vscode_Uri -> Ojs.t = Obj.magic
        and vscode_UriHandler_of_js : Ojs.t -> vscode_UriHandler = Obj.magic
        and vscode_UriHandler_to_js : vscode_UriHandler -> Ojs.t = Obj.magic
        and vscode_ViewColumn_of_js : Ojs.t -> vscode_ViewColumn =
          fun (x681 : Ojs.t) ->
            let x682 = x681 in
            match Ojs.int_of_js x682 with
            | (-1) -> `Active
            | (-2) -> `Beside
            | 1 -> `One
            | 2 -> `Two
            | 3 -> `Three
            | 4 -> `Four
            | 5 -> `Five
            | 6 -> `Six
            | 7 -> `Seven
            | 8 -> `Eight
            | 9 -> `Nine
            | _ -> assert false
        and vscode_ViewColumn_to_js : vscode_ViewColumn -> Ojs.t =
          fun
            (x680 :
              [ `Active  | `Beside  | `One  | `Two  | `Three  | `Four 
              | `Five  | `Six  | `Seven  | `Eight  | `Nine ])
            ->
            match x680 with
            | `Active -> Ojs.int_to_js (-1)
            | `Beside -> Ojs.int_to_js (-2)
            | `One -> Ojs.int_to_js 1
            | `Two -> Ojs.int_to_js 2
            | `Three -> Ojs.int_to_js 3
            | `Four -> Ojs.int_to_js 4
            | `Five -> Ojs.int_to_js 5
            | `Six -> Ojs.int_to_js 6
            | `Seven -> Ojs.int_to_js 7
            | `Eight -> Ojs.int_to_js 8
            | `Nine -> Ojs.int_to_js 9
        and vscode_ViewColumn_Active_of_js :
          Ojs.t -> vscode_ViewColumn_Active =
          fun (x684 : Ojs.t) ->
            let x685 = x684 in
            match Ojs.int_of_js x685 with
            | (-1) -> `Active
            | _ -> assert false
        and vscode_ViewColumn_Active_to_js :
          vscode_ViewColumn_Active -> Ojs.t =
          fun (x683 : [ `Active ]) ->
            match x683 with | `Active -> Ojs.int_to_js (-1)
        and vscode_ViewColumn_Beside_of_js :
          Ojs.t -> vscode_ViewColumn_Beside =
          fun (x687 : Ojs.t) ->
            let x688 = x687 in
            match Ojs.int_of_js x688 with
            | (-2) -> `Beside
            | _ -> assert false
        and vscode_ViewColumn_Beside_to_js :
          vscode_ViewColumn_Beside -> Ojs.t =
          fun (x686 : [ `Beside ]) ->
            match x686 with | `Beside -> Ojs.int_to_js (-2)
        and vscode_ViewColumn_One_of_js : Ojs.t -> vscode_ViewColumn_One =
          fun (x690 : Ojs.t) ->
            let x691 = x690 in
            match Ojs.int_of_js x691 with | 1 -> `One | _ -> assert false
        and vscode_ViewColumn_One_to_js : vscode_ViewColumn_One -> Ojs.t =
          fun (x689 : [ `One ]) -> match x689 with | `One -> Ojs.int_to_js 1
        and vscode_ViewColumn_Two_of_js : Ojs.t -> vscode_ViewColumn_Two =
          fun (x693 : Ojs.t) ->
            let x694 = x693 in
            match Ojs.int_of_js x694 with | 2 -> `Two | _ -> assert false
        and vscode_ViewColumn_Two_to_js : vscode_ViewColumn_Two -> Ojs.t =
          fun (x692 : [ `Two ]) -> match x692 with | `Two -> Ojs.int_to_js 2
        and vscode_ViewColumn_Three_of_js : Ojs.t -> vscode_ViewColumn_Three
          =
          fun (x696 : Ojs.t) ->
            let x697 = x696 in
            match Ojs.int_of_js x697 with | 3 -> `Three | _ -> assert false
        and vscode_ViewColumn_Three_to_js : vscode_ViewColumn_Three -> Ojs.t
          =
          fun (x695 : [ `Three ]) ->
            match x695 with | `Three -> Ojs.int_to_js 3
        and vscode_ViewColumn_Four_of_js : Ojs.t -> vscode_ViewColumn_Four =
          fun (x699 : Ojs.t) ->
            let x700 = x699 in
            match Ojs.int_of_js x700 with | 4 -> `Four | _ -> assert false
        and vscode_ViewColumn_Four_to_js : vscode_ViewColumn_Four -> Ojs.t =
          fun (x698 : [ `Four ]) ->
            match x698 with | `Four -> Ojs.int_to_js 4
        and vscode_ViewColumn_Five_of_js : Ojs.t -> vscode_ViewColumn_Five =
          fun (x702 : Ojs.t) ->
            let x703 = x702 in
            match Ojs.int_of_js x703 with | 5 -> `Five | _ -> assert false
        and vscode_ViewColumn_Five_to_js : vscode_ViewColumn_Five -> Ojs.t =
          fun (x701 : [ `Five ]) ->
            match x701 with | `Five -> Ojs.int_to_js 5
        and vscode_ViewColumn_Six_of_js : Ojs.t -> vscode_ViewColumn_Six =
          fun (x705 : Ojs.t) ->
            let x706 = x705 in
            match Ojs.int_of_js x706 with | 6 -> `Six | _ -> assert false
        and vscode_ViewColumn_Six_to_js : vscode_ViewColumn_Six -> Ojs.t =
          fun (x704 : [ `Six ]) -> match x704 with | `Six -> Ojs.int_to_js 6
        and vscode_ViewColumn_Seven_of_js : Ojs.t -> vscode_ViewColumn_Seven
          =
          fun (x708 : Ojs.t) ->
            let x709 = x708 in
            match Ojs.int_of_js x709 with | 7 -> `Seven | _ -> assert false
        and vscode_ViewColumn_Seven_to_js : vscode_ViewColumn_Seven -> Ojs.t
          =
          fun (x707 : [ `Seven ]) ->
            match x707 with | `Seven -> Ojs.int_to_js 7
        and vscode_ViewColumn_Eight_of_js : Ojs.t -> vscode_ViewColumn_Eight
          =
          fun (x711 : Ojs.t) ->
            let x712 = x711 in
            match Ojs.int_of_js x712 with | 8 -> `Eight | _ -> assert false
        and vscode_ViewColumn_Eight_to_js : vscode_ViewColumn_Eight -> Ojs.t
          =
          fun (x710 : [ `Eight ]) ->
            match x710 with | `Eight -> Ojs.int_to_js 8
        and vscode_ViewColumn_Nine_of_js : Ojs.t -> vscode_ViewColumn_Nine =
          fun (x714 : Ojs.t) ->
            let x715 = x714 in
            match Ojs.int_of_js x715 with | 9 -> `Nine | _ -> assert false
        and vscode_ViewColumn_Nine_to_js : vscode_ViewColumn_Nine -> Ojs.t =
          fun (x713 : [ `Nine ]) ->
            match x713 with | `Nine -> Ojs.int_to_js 9
        and vscode_Webview_of_js : Ojs.t -> vscode_Webview = Obj.magic
        and vscode_Webview_to_js : vscode_Webview -> Ojs.t = Obj.magic
        and vscode_WebviewOptions_of_js : Ojs.t -> vscode_WebviewOptions =
          Obj.magic
        and vscode_WebviewOptions_to_js : vscode_WebviewOptions -> Ojs.t =
          Obj.magic
        and vscode_WebviewPanel_of_js : Ojs.t -> vscode_WebviewPanel =
          Obj.magic
        and vscode_WebviewPanel_to_js : vscode_WebviewPanel -> Ojs.t =
          Obj.magic
        and vscode_WebviewPanelOnDidChangeViewStateEvent_of_js :
          Ojs.t -> vscode_WebviewPanelOnDidChangeViewStateEvent = Obj.magic
        and vscode_WebviewPanelOnDidChangeViewStateEvent_to_js :
          vscode_WebviewPanelOnDidChangeViewStateEvent -> Ojs.t = Obj.magic
        and vscode_WebviewPanelOptions_of_js :
          Ojs.t -> vscode_WebviewPanelOptions = Obj.magic
        and vscode_WebviewPanelOptions_to_js :
          vscode_WebviewPanelOptions -> Ojs.t = Obj.magic
        and vscode_WebviewPanelSerializer_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_WebviewPanelSerializer =
          fun _T -> Obj.magic
        and vscode_WebviewPanelSerializer_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_WebviewPanelSerializer -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_WebviewPortMapping_of_js :
          Ojs.t -> vscode_WebviewPortMapping = Obj.magic
        and vscode_WebviewPortMapping_to_js :
          vscode_WebviewPortMapping -> Ojs.t = Obj.magic
        and vscode_WebviewView_of_js : Ojs.t -> vscode_WebviewView =
          Obj.magic
        and vscode_WebviewView_to_js : vscode_WebviewView -> Ojs.t =
          Obj.magic
        and vscode_WebviewViewProvider_of_js :
          Ojs.t -> vscode_WebviewViewProvider = Obj.magic
        and vscode_WebviewViewProvider_to_js :
          vscode_WebviewViewProvider -> Ojs.t = Obj.magic
        and vscode_WebviewViewResolveContext_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_WebviewViewResolveContext
          = fun _T -> Obj.magic
        and vscode_WebviewViewResolveContext_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_WebviewViewResolveContext -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_WindowState_of_js : Ojs.t -> vscode_WindowState =
          Obj.magic
        and vscode_WindowState_to_js : vscode_WindowState -> Ojs.t =
          Obj.magic
        and vscode_WorkspaceConfiguration_of_js :
          Ojs.t -> vscode_WorkspaceConfiguration = Obj.magic
        and vscode_WorkspaceConfiguration_to_js :
          vscode_WorkspaceConfiguration -> Ojs.t = Obj.magic
        and vscode_WorkspaceEdit_of_js : Ojs.t -> vscode_WorkspaceEdit =
          Obj.magic
        and vscode_WorkspaceEdit_to_js : vscode_WorkspaceEdit -> Ojs.t =
          Obj.magic
        and vscode_WorkspaceEditEntryMetadata_of_js :
          Ojs.t -> vscode_WorkspaceEditEntryMetadata = Obj.magic
        and vscode_WorkspaceEditEntryMetadata_to_js :
          vscode_WorkspaceEditEntryMetadata -> Ojs.t = Obj.magic
        and vscode_WorkspaceFolder_of_js : Ojs.t -> vscode_WorkspaceFolder =
          Obj.magic
        and vscode_WorkspaceFolder_to_js : vscode_WorkspaceFolder -> Ojs.t =
          Obj.magic
        and vscode_WorkspaceFolderPickOptions_of_js :
          Ojs.t -> vscode_WorkspaceFolderPickOptions = Obj.magic
        and vscode_WorkspaceFolderPickOptions_to_js :
          vscode_WorkspaceFolderPickOptions -> Ojs.t = Obj.magic
        and vscode_WorkspaceFoldersChangeEvent_of_js :
          Ojs.t -> vscode_WorkspaceFoldersChangeEvent = Obj.magic
        and vscode_WorkspaceFoldersChangeEvent_to_js :
          vscode_WorkspaceFoldersChangeEvent -> Ojs.t = Obj.magic
        and vscode_WorkspaceSymbolProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_WorkspaceSymbolProvider =
          fun _T -> Obj.magic
        and vscode_WorkspaceSymbolProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_WorkspaceSymbolProvider -> Ojs.t =
          fun _T -> Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module AnonymousInterface0 =
  struct
    type t = anonymous_interface_0
    let rec t_of_js : Ojs.t -> t =
      fun (x717 : Ojs.t) -> anonymous_interface_0_of_js x717
    and t_to_js : t -> Ojs.t =
      fun (x716 : anonymous_interface_0) -> anonymous_interface_0_to_js x716
    let (get_autoClosingPairs : t -> anonymous_interface_20 list) =
      fun (x718 : t) ->
        Ojs.list_of_js anonymous_interface_20_of_js
          (Ojs.get_prop_ascii (t_to_js x718) "autoClosingPairs")
    let (set_autoClosingPairs : t -> anonymous_interface_20 list -> unit) =
      fun (x720 : t) ->
        fun (x721 : anonymous_interface_20 list) ->
          Ojs.set_prop_ascii (t_to_js x720) "autoClosingPairs"
            (Ojs.list_to_js anonymous_interface_20_to_js x721)
  end
module AnonymousInterface1 =
  struct
    type t = anonymous_interface_1
    let rec t_of_js : Ojs.t -> t =
      fun (x724 : Ojs.t) -> anonymous_interface_1_of_js x724
    and t_to_js : t -> Ojs.t =
      fun (x723 : anonymous_interface_1) -> anonymous_interface_1_to_js x723
    let (get_brackets : t -> any) =
      fun (x725 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x725) "brackets")
    let (set_brackets : t -> any -> unit) =
      fun (x726 : t) ->
        fun (x727 : any) ->
          Ojs.set_prop_ascii (t_to_js x726) "brackets" (any_to_js x727)
    let (get_docComment : t -> anonymous_interface_31) =
      fun (x728 : t) ->
        anonymous_interface_31_of_js
          (Ojs.get_prop_ascii (t_to_js x728) "docComment")
    let (set_docComment : t -> anonymous_interface_31 -> unit) =
      fun (x729 : t) ->
        fun (x730 : anonymous_interface_31) ->
          Ojs.set_prop_ascii (t_to_js x729) "docComment"
            (anonymous_interface_31_to_js x730)
  end
module AnonymousInterface2 =
  struct
    type t = anonymous_interface_2
    let rec t_of_js : Ojs.t -> t =
      fun (x732 : Ojs.t) -> anonymous_interface_2_of_js x732
    and t_to_js : t -> Ojs.t =
      fun (x731 : anonymous_interface_2) -> anonymous_interface_2_to_js x731
    let (get_canPickMany : t -> [ `L_b_true ]) =
      fun (x733 : t) ->
        let x734 = Ojs.get_prop_ascii (t_to_js x733) "canPickMany" in
        match Ojs.bool_of_js x734 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_canPickMany : t -> [ `L_b_true ] -> unit) =
      fun (x735 : t) ->
        fun (x736 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x735) "canPickMany"
            (match x736 with | `L_b_true -> Ojs.string_to_js "LBTrue")
  end
module AnonymousInterface3 =
  struct
    type t = anonymous_interface_3
    let rec t_of_js : Ojs.t -> t =
      fun (x738 : Ojs.t) -> anonymous_interface_3_of_js x738
    and t_to_js : t -> Ojs.t =
      fun (x737 : anonymous_interface_3) -> anonymous_interface_3_to_js x737
    let (get_create : t -> bool) =
      fun (x739 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x739) "create")
    let (set_create : t -> bool -> unit) =
      fun (x740 : t) ->
        fun (x741 : bool) ->
          Ojs.set_prop_ascii (t_to_js x740) "create" (Ojs.bool_to_js x741)
    let (get_overwrite : t -> bool) =
      fun (x742 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x742) "overwrite")
    let (set_overwrite : t -> bool -> unit) =
      fun (x743 : t) ->
        fun (x744 : bool) ->
          Ojs.set_prop_ascii (t_to_js x743) "overwrite" (Ojs.bool_to_js x744)
  end
module AnonymousInterface4 =
  struct
    type t = anonymous_interface_4
    let rec t_of_js : Ojs.t -> t =
      fun (x746 : Ojs.t) -> anonymous_interface_4_of_js x746
    and t_to_js : t -> Ojs.t =
      fun (x745 : anonymous_interface_4) -> anonymous_interface_4_to_js x745
    let (get_createIfNone : t -> [ `L_b_true ]) =
      fun (x747 : t) ->
        let x748 = Ojs.get_prop_ascii (t_to_js x747) "createIfNone" in
        match Ojs.bool_of_js x748 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_createIfNone : t -> [ `L_b_true ] -> unit) =
      fun (x749 : t) ->
        fun (x750 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x749) "createIfNone"
            (match x750 with | `L_b_true -> Ojs.string_to_js "LBTrue")
  end
module AnonymousInterface5 =
  struct
    type t = anonymous_interface_5
    let rec t_of_js : Ojs.t -> t =
      fun (x752 : Ojs.t) -> anonymous_interface_5_of_js x752
    and t_to_js : t -> Ojs.t =
      fun (x751 : anonymous_interface_5) -> anonymous_interface_5_to_js x751
    let (dispose : t -> any) =
      fun (x753 : t) -> any_of_js (Ojs.call (t_to_js x753) "dispose" [||])
  end
module AnonymousInterface6 =
  struct
    type t = anonymous_interface_6
    let rec t_of_js : Ojs.t -> t =
      fun (x755 : Ojs.t) -> anonymous_interface_6_of_js x755
    and t_to_js : t -> Ojs.t =
      fun (x754 : anonymous_interface_6) -> anonymous_interface_6_to_js x754
    let (get_document : t -> vscode_TextDocument) =
      fun (x756 : t) ->
        vscode_TextDocument_of_js
          (Ojs.get_prop_ascii (t_to_js x756) "document")
    let (set_document : t -> vscode_TextDocument -> unit) =
      fun (x757 : t) ->
        fun (x758 : vscode_TextDocument) ->
          Ojs.set_prop_ascii (t_to_js x757) "document"
            (vscode_TextDocument_to_js x758)
    let (get_range : t -> vscode_Range) =
      fun (x759 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x759) "range")
    let (set_range : t -> vscode_Range -> unit) =
      fun (x760 : t) ->
        fun (x761 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x760) "range" (vscode_Range_to_js x761)
  end
module AnonymousInterface7 =
  struct
    type t = anonymous_interface_7
    let rec t_of_js : Ojs.t -> t =
      fun (x763 : Ojs.t) -> anonymous_interface_7_of_js x763
    and t_to_js : t -> Ojs.t =
      fun (x762 : anonymous_interface_7) -> anonymous_interface_7_to_js x762
    let (get_escapeChar : t -> string) =
      fun (x764 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x764) "escapeChar")
    let (set_escapeChar : t -> string -> unit) =
      fun (x765 : t) ->
        fun (x766 : string) ->
          Ojs.set_prop_ascii (t_to_js x765) "escapeChar"
            (Ojs.string_to_js x766)
    let (get_charsToEscape : t -> string) =
      fun (x767 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x767) "charsToEscape")
    let (set_charsToEscape : t -> string -> unit) =
      fun (x768 : t) ->
        fun (x769 : string) ->
          Ojs.set_prop_ascii (t_to_js x768) "charsToEscape"
            (Ojs.string_to_js x769)
  end
module AnonymousInterface8 =
  struct
    type t = anonymous_interface_8
    let rec t_of_js : Ojs.t -> t =
      fun (x771 : Ojs.t) -> anonymous_interface_8_of_js x771
    and t_to_js : t -> Ojs.t =
      fun (x770 : anonymous_interface_8) -> anonymous_interface_8_to_js x770
    let (get_inserting : t -> vscode_Range) =
      fun (x772 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x772) "inserting")
    let (set_inserting : t -> vscode_Range -> unit) =
      fun (x773 : t) ->
        fun (x774 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x773) "inserting"
            (vscode_Range_to_js x774)
    let (get_replacing : t -> vscode_Range) =
      fun (x775 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x775) "replacing")
    let (set_replacing : t -> vscode_Range -> unit) =
      fun (x776 : t) ->
        fun (x777 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x776) "replacing"
            (vscode_Range_to_js x777)
  end
module AnonymousInterface9 =
  struct
    type t = anonymous_interface_9
    let rec t_of_js : Ojs.t -> t =
      fun (x779 : Ojs.t) -> anonymous_interface_9_of_js x779
    and t_to_js : t -> Ojs.t =
      fun (x778 : anonymous_interface_9) -> anonymous_interface_9_to_js x778
    let (get_isCaseSensitive : t -> bool) =
      fun (x780 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x780) "isCaseSensitive")
    let (get_isReadonly : t -> bool) =
      fun (x781 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x781) "isReadonly")
  end
module AnonymousInterface10 =
  struct
    type t = anonymous_interface_10
    let rec t_of_js : Ojs.t -> t =
      fun (x783 : Ojs.t) -> anonymous_interface_10_of_js x783
    and t_to_js : t -> Ojs.t =
      fun (x782 : anonymous_interface_10) ->
        anonymous_interface_10_to_js x782
    let (get_key : t -> string) =
      fun (x784 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x784) "key")
    let (set_key : t -> string -> unit) =
      fun (x785 : t) ->
        fun (x786 : string) ->
          Ojs.set_prop_ascii (t_to_js x785) "key" (Ojs.string_to_js x786)
    let (get_defaultValue : t -> 'T) =
      fun (x787 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x787) "defaultValue")
    let (set_defaultValue : t -> 'T -> unit) =
      fun (x788 : t) ->
        fun (x789 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x788) "defaultValue" (Obj.magic x789)
    let (get_globalValue : t -> 'T) =
      fun (x790 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x790) "globalValue")
    let (set_globalValue : t -> 'T -> unit) =
      fun (x791 : t) ->
        fun (x792 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x791) "globalValue" (Obj.magic x792)
    let (get_workspaceValue : t -> 'T) =
      fun (x793 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x793) "workspaceValue")
    let (set_workspaceValue : t -> 'T -> unit) =
      fun (x794 : t) ->
        fun (x795 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x794) "workspaceValue" (Obj.magic x795)
    let (get_workspaceFolderValue : t -> 'T) =
      fun (x796 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x796) "workspaceFolderValue")
    let (set_workspaceFolderValue : t -> 'T -> unit) =
      fun (x797 : t) ->
        fun (x798 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x797) "workspaceFolderValue"
            (Obj.magic x798)
    let (get_defaultLanguageValue : t -> 'T) =
      fun (x799 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x799) "defaultLanguageValue")
    let (set_defaultLanguageValue : t -> 'T -> unit) =
      fun (x800 : t) ->
        fun (x801 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x800) "defaultLanguageValue"
            (Obj.magic x801)
    let (get_globalLanguageValue : t -> 'T) =
      fun (x802 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x802) "globalLanguageValue")
    let (set_globalLanguageValue : t -> 'T -> unit) =
      fun (x803 : t) ->
        fun (x804 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x803) "globalLanguageValue"
            (Obj.magic x804)
    let (get_workspaceLanguageValue : t -> 'T) =
      fun (x805 : t) ->
        Obj.magic
          (Ojs.get_prop_ascii (t_to_js x805) "workspaceLanguageValue")
    let (set_workspaceLanguageValue : t -> 'T -> unit) =
      fun (x806 : t) ->
        fun (x807 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x806) "workspaceLanguageValue"
            (Obj.magic x807)
    let (get_workspaceFolderLanguageValue : t -> 'T) =
      fun (x808 : t) ->
        Obj.magic
          (Ojs.get_prop_ascii (t_to_js x808) "workspaceFolderLanguageValue")
    let (set_workspaceFolderLanguageValue : t -> 'T -> unit) =
      fun (x809 : t) ->
        fun (x810 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x809) "workspaceFolderLanguageValue"
            (Obj.magic x810)
    let (get_languageIds : t -> string list) =
      fun (x811 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x811) "languageIds")
    let (set_languageIds : t -> string list -> unit) =
      fun (x813 : t) ->
        fun (x814 : string list) ->
          Ojs.set_prop_ascii (t_to_js x813) "languageIds"
            (Ojs.list_to_js Ojs.string_to_js x814)
  end
module AnonymousInterface11 =
  struct
    type t = anonymous_interface_11
    let rec t_of_js : Ojs.t -> t =
      fun (x817 : Ojs.t) -> anonymous_interface_11_of_js x817
    and t_to_js : t -> Ojs.t =
      fun (x816 : anonymous_interface_11) ->
        anonymous_interface_11_to_js x816
    let (get_kind : t -> vscode_CodeActionKind) =
      fun (x818 : t) ->
        vscode_CodeActionKind_of_js
          (Ojs.get_prop_ascii (t_to_js x818) "kind")
    let (get_command : t -> vscode_Command) =
      fun (x819 : t) ->
        vscode_Command_of_js (Ojs.get_prop_ascii (t_to_js x819) "command")
  end
module AnonymousInterface12 =
  struct
    type t = anonymous_interface_12
    let rec t_of_js : Ojs.t -> t =
      fun (x821 : Ojs.t) -> anonymous_interface_12_of_js x821
    and t_to_js : t -> Ojs.t =
      fun (x820 : anonymous_interface_12) ->
        anonymous_interface_12_to_js x820
    let (get_language : t -> string) =
      fun (x822 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x822) "language")
    let (set_language : t -> string -> unit) =
      fun (x823 : t) ->
        fun (x824 : string) ->
          Ojs.set_prop_ascii (t_to_js x823) "language"
            (Ojs.string_to_js x824)
    let (get_content : t -> string) =
      fun (x825 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x825) "content")
    let (set_content : t -> string -> unit) =
      fun (x826 : t) ->
        fun (x827 : string) ->
          Ojs.set_prop_ascii (t_to_js x826) "content" (Ojs.string_to_js x827)
  end
module AnonymousInterface13 =
  struct
    type t = anonymous_interface_13
    let rec t_of_js : Ojs.t -> t =
      fun (x829 : Ojs.t) -> anonymous_interface_13_of_js x829
    and t_to_js : t -> Ojs.t =
      fun (x828 : anonymous_interface_13) ->
        anonymous_interface_13_to_js x828
    let (get_language : t -> string) =
      fun (x830 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x830) "language")
    let (set_language : t -> string -> unit) =
      fun (x831 : t) ->
        fun (x832 : string) ->
          Ojs.set_prop_ascii (t_to_js x831) "language"
            (Ojs.string_to_js x832)
    let (get_value : t -> string) =
      fun (x833 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x833) "value")
    let (set_value : t -> string -> unit) =
      fun (x834 : t) ->
        fun (x835 : string) ->
          Ojs.set_prop_ascii (t_to_js x834) "value" (Ojs.string_to_js x835)
  end
module AnonymousInterface14 =
  struct
    type t = anonymous_interface_14
    let rec t_of_js : Ojs.t -> t =
      fun (x837 : Ojs.t) -> anonymous_interface_14_of_js x837
    and t_to_js : t -> Ojs.t =
      fun (x836 : anonymous_interface_14) ->
        anonymous_interface_14_to_js x836
    let (get_light : t -> vscode_Uri) =
      fun (x838 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x838) "light")
    let (set_light : t -> vscode_Uri -> unit) =
      fun (x839 : t) ->
        fun (x840 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x839) "light" (vscode_Uri_to_js x840)
    let (get_dark : t -> vscode_Uri) =
      fun (x841 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x841) "dark")
    let (set_dark : t -> vscode_Uri -> unit) =
      fun (x842 : t) ->
        fun (x843 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x842) "dark" (vscode_Uri_to_js x843)
  end
module AnonymousInterface15 =
  struct
    type t = anonymous_interface_15
    let rec t_of_js : Ojs.t -> t =
      fun (x845 : Ojs.t) -> anonymous_interface_15_of_js x845
    and t_to_js : t -> Ojs.t =
      fun (x844 : anonymous_interface_15) ->
        anonymous_interface_15_to_js x844
    let (get_light : t -> vscode_Uri or_string) =
      fun (x846 : t) ->
        or_string_of_js vscode_Uri_of_js
          (Ojs.get_prop_ascii (t_to_js x846) "light")
    let (set_light : t -> vscode_Uri or_string -> unit) =
      fun (x848 : t) ->
        fun (x849 : vscode_Uri or_string) ->
          Ojs.set_prop_ascii (t_to_js x848) "light"
            (or_string_to_js vscode_Uri_to_js x849)
    let (get_dark : t -> vscode_Uri or_string) =
      fun (x851 : t) ->
        or_string_of_js vscode_Uri_of_js
          (Ojs.get_prop_ascii (t_to_js x851) "dark")
    let (set_dark : t -> vscode_Uri or_string -> unit) =
      fun (x853 : t) ->
        fun (x854 : vscode_Uri or_string) ->
          Ojs.set_prop_ascii (t_to_js x853) "dark"
            (or_string_to_js vscode_Uri_to_js x854)
  end
module AnonymousInterface16 =
  struct
    type t = anonymous_interface_16
    let rec t_of_js : Ojs.t -> t =
      fun (x857 : Ojs.t) -> anonymous_interface_16_of_js x857
    and t_to_js : t -> Ojs.t =
      fun (x856 : anonymous_interface_16) ->
        anonymous_interface_16_to_js x856
    let (get_line : t -> float) =
      fun (x858 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x858) "line")
    let (set_line : t -> float -> unit) =
      fun (x859 : t) ->
        fun (x860 : float) ->
          Ojs.set_prop_ascii (t_to_js x859) "line" (Ojs.float_to_js x860)
    let (get_character : t -> float) =
      fun (x861 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x861) "character")
    let (set_character : t -> float -> unit) =
      fun (x862 : t) ->
        fun (x863 : float) ->
          Ojs.set_prop_ascii (t_to_js x862) "character"
            (Ojs.float_to_js x863)
  end
module AnonymousInterface17 =
  struct
    type t = anonymous_interface_17
    let rec t_of_js : Ojs.t -> t =
      fun (x865 : Ojs.t) -> anonymous_interface_17_of_js x865
    and t_to_js : t -> Ojs.t =
      fun (x864 : anonymous_interface_17) ->
        anonymous_interface_17_to_js x864
    let (get_lineDelta : t -> float) =
      fun (x866 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x866) "lineDelta")
    let (set_lineDelta : t -> float -> unit) =
      fun (x867 : t) ->
        fun (x868 : float) ->
          Ojs.set_prop_ascii (t_to_js x867) "lineDelta"
            (Ojs.float_to_js x868)
    let (get_characterDelta : t -> float) =
      fun (x869 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x869) "characterDelta")
    let (set_characterDelta : t -> float -> unit) =
      fun (x870 : t) ->
        fun (x871 : float) ->
          Ojs.set_prop_ascii (t_to_js x870) "characterDelta"
            (Ojs.float_to_js x871)
  end
module AnonymousInterface18 =
  struct
    type t = anonymous_interface_18
    let rec t_of_js : Ojs.t -> t =
      fun (x873 : Ojs.t) -> anonymous_interface_18_of_js x873
    and t_to_js : t -> Ojs.t =
      fun (x872 : anonymous_interface_18) ->
        anonymous_interface_18_to_js x872
    let (get_message : t -> string) =
      fun (x874 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x874) "message")
    let (set_message : t -> string -> unit) =
      fun (x875 : t) ->
        fun (x876 : string) ->
          Ojs.set_prop_ascii (t_to_js x875) "message" (Ojs.string_to_js x876)
    let (get_increment : t -> float) =
      fun (x877 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x877) "increment")
    let (set_increment : t -> float -> unit) =
      fun (x878 : t) ->
        fun (x879 : float) ->
          Ojs.set_prop_ascii (t_to_js x878) "increment"
            (Ojs.float_to_js x879)
  end
module AnonymousInterface19 =
  struct
    type t = anonymous_interface_19
    let rec t_of_js : Ojs.t -> t =
      fun (x881 : Ojs.t) -> anonymous_interface_19_of_js x881
    and t_to_js : t -> Ojs.t =
      fun (x880 : anonymous_interface_19) ->
        anonymous_interface_19_to_js x880
    let (get_oldUri : t -> vscode_Uri) =
      fun (x882 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x882) "oldUri")
    let (set_oldUri : t -> vscode_Uri -> unit) =
      fun (x883 : t) ->
        fun (x884 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x883) "oldUri" (vscode_Uri_to_js x884)
    let (get_newUri : t -> vscode_Uri) =
      fun (x885 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x885) "newUri")
    let (set_newUri : t -> vscode_Uri -> unit) =
      fun (x886 : t) ->
        fun (x887 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x886) "newUri" (vscode_Uri_to_js x887)
  end
module AnonymousInterface20 =
  struct
    type t = anonymous_interface_20
    let rec t_of_js : Ojs.t -> t =
      fun (x889 : Ojs.t) -> anonymous_interface_20_of_js x889
    and t_to_js : t -> Ojs.t =
      fun (x888 : anonymous_interface_20) ->
        anonymous_interface_20_to_js x888
    let (get_open : t -> string) =
      fun (x890 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x890) "open")
    let (set_open : t -> string -> unit) =
      fun (x891 : t) ->
        fun (x892 : string) ->
          Ojs.set_prop_ascii (t_to_js x891) "open" (Ojs.string_to_js x892)
    let (get_close : t -> string) =
      fun (x893 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x893) "close")
    let (set_close : t -> string -> unit) =
      fun (x894 : t) ->
        fun (x895 : string) ->
          Ojs.set_prop_ascii (t_to_js x894) "close" (Ojs.string_to_js x895)
    let (get_notIn : t -> string list) =
      fun (x896 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x896) "notIn")
    let (set_notIn : t -> string list -> unit) =
      fun (x898 : t) ->
        fun (x899 : string list) ->
          Ojs.set_prop_ascii (t_to_js x898) "notIn"
            (Ojs.list_to_js Ojs.string_to_js x899)
  end
module AnonymousInterface21 =
  struct
    type t = anonymous_interface_21
    let rec t_of_js : Ojs.t -> t =
      fun (x902 : Ojs.t) -> anonymous_interface_21_of_js x902
    and t_to_js : t -> Ojs.t =
      fun (x901 : anonymous_interface_21) ->
        anonymous_interface_21_to_js x901
    let (get_overwrite : t -> bool) =
      fun (x903 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x903) "overwrite")
    let (set_overwrite : t -> bool -> unit) =
      fun (x904 : t) ->
        fun (x905 : bool) ->
          Ojs.set_prop_ascii (t_to_js x904) "overwrite" (Ojs.bool_to_js x905)
  end
module AnonymousInterface22 =
  struct
    type t = anonymous_interface_22
    let rec t_of_js : Ojs.t -> t =
      fun (x907 : Ojs.t) -> anonymous_interface_22_of_js x907
    and t_to_js : t -> Ojs.t =
      fun (x906 : anonymous_interface_22) ->
        anonymous_interface_22_to_js x906
    let (get_overwrite : t -> bool) =
      fun (x908 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x908) "overwrite")
    let (set_overwrite : t -> bool -> unit) =
      fun (x909 : t) ->
        fun (x910 : bool) ->
          Ojs.set_prop_ascii (t_to_js x909) "overwrite" (Ojs.bool_to_js x910)
    let (get_ignoreIfExists : t -> bool) =
      fun (x911 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x911) "ignoreIfExists")
    let (set_ignoreIfExists : t -> bool -> unit) =
      fun (x912 : t) ->
        fun (x913 : bool) ->
          Ojs.set_prop_ascii (t_to_js x912) "ignoreIfExists"
            (Ojs.bool_to_js x913)
  end
module AnonymousInterface23 =
  struct
    type t = anonymous_interface_23
    let rec t_of_js : Ojs.t -> t =
      fun (x915 : Ojs.t) -> anonymous_interface_23_of_js x915
    and t_to_js : t -> Ojs.t =
      fun (x914 : anonymous_interface_23) ->
        anonymous_interface_23_to_js x914
    let (get_range : t -> vscode_Range) =
      fun (x916 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x916) "range")
    let (set_range : t -> vscode_Range -> unit) =
      fun (x917 : t) ->
        fun (x918 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x917) "range" (vscode_Range_to_js x918)
    let (get_placeholder : t -> string) =
      fun (x919 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x919) "placeholder")
    let (set_placeholder : t -> string -> unit) =
      fun (x920 : t) ->
        fun (x921 : string) ->
          Ojs.set_prop_ascii (t_to_js x920) "placeholder"
            (Ojs.string_to_js x921)
  end
module AnonymousInterface24 =
  struct
    type t = anonymous_interface_24
    let rec t_of_js : Ojs.t -> t =
      fun (x923 : Ojs.t) -> anonymous_interface_24_of_js x923
    and t_to_js : t -> Ojs.t =
      fun (x922 : anonymous_interface_24) ->
        anonymous_interface_24_to_js x922
    let (get_reason : t -> string) =
      fun (x924 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x924) "reason")
  end
module AnonymousInterface25 =
  struct
    type t = anonymous_interface_25
    let rec t_of_js : Ojs.t -> t =
      fun (x926 : Ojs.t) -> anonymous_interface_25_of_js x926
    and t_to_js : t -> Ojs.t =
      fun (x925 : anonymous_interface_25) ->
        anonymous_interface_25_to_js x925
    let (get_recursive : t -> bool) =
      fun (x927 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x927) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x928 : t) ->
        fun (x929 : bool) ->
          Ojs.set_prop_ascii (t_to_js x928) "recursive" (Ojs.bool_to_js x929)
  end
module AnonymousInterface26 =
  struct
    type t = anonymous_interface_26
    let rec t_of_js : Ojs.t -> t =
      fun (x931 : Ojs.t) -> anonymous_interface_26_of_js x931
    and t_to_js : t -> Ojs.t =
      fun (x930 : anonymous_interface_26) ->
        anonymous_interface_26_to_js x930
    let (get_recursive : t -> bool) =
      fun (x932 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x932) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x933 : t) ->
        fun (x934 : bool) ->
          Ojs.set_prop_ascii (t_to_js x933) "recursive" (Ojs.bool_to_js x934)
    let (get_excludes : t -> string list) =
      fun (x935 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x935) "excludes")
    let (set_excludes : t -> string list -> unit) =
      fun (x937 : t) ->
        fun (x938 : string list) ->
          Ojs.set_prop_ascii (t_to_js x937) "excludes"
            (Ojs.list_to_js Ojs.string_to_js x938)
  end
module AnonymousInterface27 =
  struct
    type t = anonymous_interface_27
    let rec t_of_js : Ojs.t -> t =
      fun (x941 : Ojs.t) -> anonymous_interface_27_of_js x941
    and t_to_js : t -> Ojs.t =
      fun (x940 : anonymous_interface_27) ->
        anonymous_interface_27_to_js x940
    let (get_recursive : t -> bool) =
      fun (x942 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x942) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x943 : t) ->
        fun (x944 : bool) ->
          Ojs.set_prop_ascii (t_to_js x943) "recursive" (Ojs.bool_to_js x944)
    let (get_ignoreIfNotExists : t -> bool) =
      fun (x945 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x945) "ignoreIfNotExists")
    let (set_ignoreIfNotExists : t -> bool -> unit) =
      fun (x946 : t) ->
        fun (x947 : bool) ->
          Ojs.set_prop_ascii (t_to_js x946) "ignoreIfNotExists"
            (Ojs.bool_to_js x947)
  end
module AnonymousInterface28 =
  struct
    type t = anonymous_interface_28
    let rec t_of_js : Ojs.t -> t =
      fun (x949 : Ojs.t) -> anonymous_interface_28_of_js x949
    and t_to_js : t -> Ojs.t =
      fun (x948 : anonymous_interface_28) ->
        anonymous_interface_28_to_js x948
    let (get_recursive : t -> bool) =
      fun (x950 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x950) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x951 : t) ->
        fun (x952 : bool) ->
          Ojs.set_prop_ascii (t_to_js x951) "recursive" (Ojs.bool_to_js x952)
    let (get_useTrash : t -> bool) =
      fun (x953 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x953) "useTrash")
    let (set_useTrash : t -> bool -> unit) =
      fun (x954 : t) ->
        fun (x955 : bool) ->
          Ojs.set_prop_ascii (t_to_js x954) "useTrash" (Ojs.bool_to_js x955)
  end
module AnonymousInterface29 =
  struct
    type t = anonymous_interface_29
    let rec t_of_js : Ojs.t -> t =
      fun (x957 : Ojs.t) -> anonymous_interface_29_of_js x957
    and t_to_js : t -> Ojs.t =
      fun (x956 : anonymous_interface_29) ->
        anonymous_interface_29_to_js x956
    let (get_retainContextWhenHidden : t -> bool) =
      fun (x958 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x958) "retainContextWhenHidden")
  end
module AnonymousInterface30 =
  struct
    type t = anonymous_interface_30
    let rec t_of_js : Ojs.t -> t =
      fun (x960 : Ojs.t) -> anonymous_interface_30_of_js x960
    and t_to_js : t -> Ojs.t =
      fun (x959 : anonymous_interface_30) ->
        anonymous_interface_30_to_js x959
    let (get_scheme : t -> string) =
      fun (x961 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x961) "scheme")
    let (set_scheme : t -> string -> unit) =
      fun (x962 : t) ->
        fun (x963 : string) ->
          Ojs.set_prop_ascii (t_to_js x962) "scheme" (Ojs.string_to_js x963)
    let (get_authority : t -> string) =
      fun (x964 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x964) "authority")
    let (set_authority : t -> string -> unit) =
      fun (x965 : t) ->
        fun (x966 : string) ->
          Ojs.set_prop_ascii (t_to_js x965) "authority"
            (Ojs.string_to_js x966)
    let (get_path : t -> string) =
      fun (x967 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x967) "path")
    let (set_path : t -> string -> unit) =
      fun (x968 : t) ->
        fun (x969 : string) ->
          Ojs.set_prop_ascii (t_to_js x968) "path" (Ojs.string_to_js x969)
    let (get_query : t -> string) =
      fun (x970 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x970) "query")
    let (set_query : t -> string -> unit) =
      fun (x971 : t) ->
        fun (x972 : string) ->
          Ojs.set_prop_ascii (t_to_js x971) "query" (Ojs.string_to_js x972)
    let (get_fragment : t -> string) =
      fun (x973 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x973) "fragment")
    let (set_fragment : t -> string -> unit) =
      fun (x974 : t) ->
        fun (x975 : string) ->
          Ojs.set_prop_ascii (t_to_js x974) "fragment"
            (Ojs.string_to_js x975)
  end
module AnonymousInterface31 =
  struct
    type t = anonymous_interface_31
    let rec t_of_js : Ojs.t -> t =
      fun (x977 : Ojs.t) -> anonymous_interface_31_of_js x977
    and t_to_js : t -> Ojs.t =
      fun (x976 : anonymous_interface_31) ->
        anonymous_interface_31_to_js x976
    let (get_scope : t -> string) =
      fun (x978 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x978) "scope")
    let (set_scope : t -> string -> unit) =
      fun (x979 : t) ->
        fun (x980 : string) ->
          Ojs.set_prop_ascii (t_to_js x979) "scope" (Ojs.string_to_js x980)
    let (get_open : t -> string) =
      fun (x981 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x981) "open")
    let (set_open : t -> string -> unit) =
      fun (x982 : t) ->
        fun (x983 : string) ->
          Ojs.set_prop_ascii (t_to_js x982) "open" (Ojs.string_to_js x983)
    let (get_lineStart : t -> string) =
      fun (x984 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x984) "lineStart")
    let (set_lineStart : t -> string -> unit) =
      fun (x985 : t) ->
        fun (x986 : string) ->
          Ojs.set_prop_ascii (t_to_js x985) "lineStart"
            (Ojs.string_to_js x986)
    let (get_close : t -> string) =
      fun (x987 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x987) "close")
    let (set_close : t -> string -> unit) =
      fun (x988 : t) ->
        fun (x989 : string) ->
          Ojs.set_prop_ascii (t_to_js x988) "close" (Ojs.string_to_js x989)
  end
module AnonymousInterface32 =
  struct
    type t = anonymous_interface_32
    let rec t_of_js : Ojs.t -> t =
      fun (x991 : Ojs.t) -> anonymous_interface_32_of_js x991
    and t_to_js : t -> Ojs.t =
      fun (x990 : anonymous_interface_32) ->
        anonymous_interface_32_to_js x990
    let (get_select : t -> bool) =
      fun (x992 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x992) "select")
    let (set_select : t -> bool -> unit) =
      fun (x993 : t) ->
        fun (x994 : bool) ->
          Ojs.set_prop_ascii (t_to_js x993) "select" (Ojs.bool_to_js x994)
    let (get_focus : t -> bool) =
      fun (x995 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x995) "focus")
    let (set_focus : t -> bool -> unit) =
      fun (x996 : t) ->
        fun (x997 : bool) ->
          Ojs.set_prop_ascii (t_to_js x996) "focus" (Ojs.bool_to_js x997)
    let (get_expand : t -> bool or_number) =
      fun (x998 : t) ->
        or_number_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x998) "expand")
    let (set_expand : t -> bool or_number -> unit) =
      fun (x1000 : t) ->
        fun (x1001 : bool or_number) ->
          Ojs.set_prop_ascii (t_to_js x1000) "expand"
            (or_number_to_js Ojs.bool_to_js x1001)
  end
module AnonymousInterface33 =
  struct
    type t = anonymous_interface_33
    let rec t_of_js : Ojs.t -> t =
      fun (x1004 : Ojs.t) -> anonymous_interface_33_of_js x1004
    and t_to_js : t -> Ojs.t =
      fun (x1003 : anonymous_interface_33) ->
        anonymous_interface_33_to_js x1003
    let (get_start : t -> vscode_Position) =
      fun (x1005 : t) ->
        vscode_Position_of_js (Ojs.get_prop_ascii (t_to_js x1005) "start")
    let (set_start : t -> vscode_Position -> unit) =
      fun (x1006 : t) ->
        fun (x1007 : vscode_Position) ->
          Ojs.set_prop_ascii (t_to_js x1006) "start"
            (vscode_Position_to_js x1007)
    let (get_end : t -> vscode_Position) =
      fun (x1008 : t) ->
        vscode_Position_of_js (Ojs.get_prop_ascii (t_to_js x1008) "end")
    let (set_end : t -> vscode_Position -> unit) =
      fun (x1009 : t) ->
        fun (x1010 : vscode_Position) ->
          Ojs.set_prop_ascii (t_to_js x1009) "end"
            (vscode_Position_to_js x1010)
  end
module AnonymousInterface34 =
  struct
    type t = anonymous_interface_34
    let rec t_of_js : Ojs.t -> t =
      fun (x1012 : Ojs.t) -> anonymous_interface_34_of_js x1012
    and t_to_js : t -> Ojs.t =
      fun (x1011 : anonymous_interface_34) ->
        anonymous_interface_34_to_js x1011
    let (get_undoStopBefore : t -> bool) =
      fun (x1013 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1013) "undoStopBefore")
    let (set_undoStopBefore : t -> bool -> unit) =
      fun (x1014 : t) ->
        fun (x1015 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1014) "undoStopBefore"
            (Ojs.bool_to_js x1015)
    let (get_undoStopAfter : t -> bool) =
      fun (x1016 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1016) "undoStopAfter")
    let (set_undoStopAfter : t -> bool -> unit) =
      fun (x1017 : t) ->
        fun (x1018 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1017) "undoStopAfter"
            (Ojs.bool_to_js x1018)
  end
module AnonymousInterface35 =
  struct
    type t = anonymous_interface_35
    let rec t_of_js : Ojs.t -> t =
      fun (x1020 : Ojs.t) -> anonymous_interface_35_of_js x1020
    and t_to_js : t -> Ojs.t =
      fun (x1019 : anonymous_interface_35) ->
        anonymous_interface_35_to_js x1019
    let (get_uri : t -> vscode_Uri) =
      fun (x1021 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1021) "uri")
    let (set_uri : t -> vscode_Uri -> unit) =
      fun (x1022 : t) ->
        fun (x1023 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x1022) "uri" (vscode_Uri_to_js x1023)
    let (get_languageId : t -> string) =
      fun (x1024 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1024) "languageId")
    let (set_languageId : t -> string -> unit) =
      fun (x1025 : t) ->
        fun (x1026 : string) ->
          Ojs.set_prop_ascii (t_to_js x1025) "languageId"
            (Ojs.string_to_js x1026)
  end
module AnonymousInterface36 =
  struct
    type t = anonymous_interface_36
    let rec t_of_js : Ojs.t -> t =
      fun (x1028 : Ojs.t) -> anonymous_interface_36_of_js x1028
    and t_to_js : t -> Ojs.t =
      fun (x1027 : anonymous_interface_36) ->
        anonymous_interface_36_to_js x1027
    let (get_uri : t -> vscode_Uri) =
      fun (x1029 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1029) "uri")
    let (set_uri : t -> vscode_Uri -> unit) =
      fun (x1030 : t) ->
        fun (x1031 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x1030) "uri" (vscode_Uri_to_js x1031)
    let (get_name : t -> string) =
      fun (x1032 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1032) "name")
    let (set_name : t -> string -> unit) =
      fun (x1033 : t) ->
        fun (x1034 : string) ->
          Ojs.set_prop_ascii (t_to_js x1033) "name" (Ojs.string_to_js x1034)
  end
module AnonymousInterface37 =
  struct
    type t = anonymous_interface_37
    let rec t_of_js : Ojs.t -> t =
      fun (x1036 : Ojs.t) -> anonymous_interface_37_of_js x1036
    and t_to_js : t -> Ojs.t =
      fun (x1035 : anonymous_interface_37) ->
        anonymous_interface_37_to_js x1035
    let (get_value : t -> string or_number) =
      fun (x1037 : t) ->
        or_number_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x1037) "value")
    let (set_value : t -> string or_number -> unit) =
      fun (x1039 : t) ->
        fun (x1040 : string or_number) ->
          Ojs.set_prop_ascii (t_to_js x1039) "value"
            (or_number_to_js Ojs.string_to_js x1040)
    let (get_target : t -> vscode_Uri) =
      fun (x1042 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1042) "target")
    let (set_target : t -> vscode_Uri -> unit) =
      fun (x1043 : t) ->
        fun (x1044 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x1043) "target"
            (vscode_Uri_to_js x1044)
  end
module AnonymousInterface38 =
  struct
    type t = anonymous_interface_38
    let rec t_of_js : Ojs.t -> t =
      fun (x1046 : Ojs.t) -> anonymous_interface_38_of_js x1046
    and t_to_js : t -> Ojs.t =
      fun (x1045 : anonymous_interface_38) ->
        anonymous_interface_38_to_js x1045
    let (get_viewColumn : t -> vscode_ViewColumn) =
      fun (x1047 : t) ->
        vscode_ViewColumn_of_js
          (Ojs.get_prop_ascii (t_to_js x1047) "viewColumn")
    let (set_viewColumn : t -> vscode_ViewColumn -> unit) =
      fun (x1048 : t) ->
        fun (x1049 : vscode_ViewColumn) ->
          Ojs.set_prop_ascii (t_to_js x1048) "viewColumn"
            (vscode_ViewColumn_to_js x1049)
    let (get_preserveFocus : t -> bool) =
      fun (x1050 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1050) "preserveFocus")
    let (set_preserveFocus : t -> bool -> unit) =
      fun (x1051 : t) ->
        fun (x1052 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1051) "preserveFocus"
            (Ojs.bool_to_js x1052)
  end
module AnonymousInterface39 =
  struct
    type t = anonymous_interface_39
    let rec t_of_js : Ojs.t -> t =
      fun (x1054 : Ojs.t) -> anonymous_interface_39_of_js x1054
    and t_to_js : t -> Ojs.t =
      fun (x1053 : anonymous_interface_39) ->
        anonymous_interface_39_to_js x1053
    let (get_viewId : t -> string) =
      fun (x1055 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1055) "viewId")
    let (set_viewId : t -> string -> unit) =
      fun (x1056 : t) ->
        fun (x1057 : string) ->
          Ojs.set_prop_ascii (t_to_js x1056) "viewId"
            (Ojs.string_to_js x1057)
  end
module AnonymousInterface40 =
  struct
    type t = anonymous_interface_40
    let rec t_of_js : Ojs.t -> t =
      fun (x1059 : Ojs.t) -> anonymous_interface_40_of_js x1059
    and t_to_js : t -> Ojs.t =
      fun (x1058 : anonymous_interface_40) ->
        anonymous_interface_40_to_js x1058
    let (get_webviewOptions : t -> vscode_WebviewPanelOptions) =
      fun (x1060 : t) ->
        vscode_WebviewPanelOptions_of_js
          (Ojs.get_prop_ascii (t_to_js x1060) "webviewOptions")
    let (get_supportsMultipleEditorsPerDocument : t -> bool) =
      fun (x1061 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x1061)
             "supportsMultipleEditorsPerDocument")
  end
module AnonymousInterface41 =
  struct
    type t = anonymous_interface_41
    let rec t_of_js : Ojs.t -> t =
      fun (x1063 : Ojs.t) -> anonymous_interface_41_of_js x1063
    and t_to_js : t -> Ojs.t =
      fun (x1062 : anonymous_interface_41) ->
        anonymous_interface_41_to_js x1062
    let (get_webviewOptions : t -> anonymous_interface_29) =
      fun (x1064 : t) ->
        anonymous_interface_29_of_js
          (Ojs.get_prop_ascii (t_to_js x1064) "webviewOptions")
  end
module AnonymousInterface42 =
  struct
    type t = anonymous_interface_42
    let rec t_of_js : Ojs.t -> t =
      fun (x1066 : Ojs.t) -> anonymous_interface_42_of_js x1066
    and t_to_js : t -> Ojs.t =
      fun (x1065 : anonymous_interface_42) ->
        anonymous_interface_42_to_js x1065
    let (dispose : t -> any) =
      fun (x1067 : t) -> any_of_js (Ojs.call (t_to_js x1067) "dispose" [||])
  end
module AnonymousInterface43 =
  struct
    type t = anonymous_interface_43
    let rec t_of_js : Ojs.t -> t =
      fun (x1069 : Ojs.t) -> anonymous_interface_43_of_js x1069
    and t_to_js : t -> Ojs.t =
      fun (x1068 : anonymous_interface_43) ->
        anonymous_interface_43_to_js x1068
    let (setKeysForSync : t -> keys:string list -> unit) =
      fun (x1072 : t) ->
        fun ~keys:(x1070 : string list) ->
          ignore
            (Ojs.call (t_to_js x1072) "setKeysForSync"
               [|(Ojs.list_to_js Ojs.string_to_js x1070)|])
  end
module AnonymousInterface44 =
  struct
    type t = anonymous_interface_44
    let rec t_of_js : Ojs.t -> t =
      fun (x1074 : Ojs.t) -> anonymous_interface_44_of_js x1074
    and t_to_js : t -> Ojs.t =
      fun (x1073 : anonymous_interface_44) ->
        anonymous_interface_44_to_js x1073
    let (get : t -> string -> string) =
      fun (x1075 : t) ->
        fun (x1076 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1075) (Ojs.string_to_js x1076))
    let (set : t -> string -> string -> unit) =
      fun (x1077 : t) ->
        fun (x1078 : string) ->
          fun (x1079 : string) ->
            Ojs.set_prop (t_to_js x1077) (Ojs.string_to_js x1078)
              (Ojs.string_to_js x1079)
  end
module AnonymousInterface45 =
  struct
    type t = anonymous_interface_45
    let rec t_of_js : Ojs.t -> t =
      fun (x1081 : Ojs.t) -> anonymous_interface_45_of_js x1081
    and t_to_js : t -> Ojs.t =
      fun (x1080 : anonymous_interface_45) ->
        anonymous_interface_45_to_js x1080
    let (get : t -> string -> string or_null_or_undefined) =
      fun (x1082 : t) ->
        fun (x1083 : string) ->
          or_null_or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1082) (Ojs.string_to_js x1083))
    let (set : t -> string -> string or_null_or_undefined -> unit) =
      fun (x1085 : t) ->
        fun (x1086 : string) ->
          fun (x1087 : string or_null_or_undefined) ->
            Ojs.set_prop (t_to_js x1085) (Ojs.string_to_js x1086)
              (or_null_or_undefined_to_js Ojs.string_to_js x1087)
  end
module AnonymousInterface46 =
  struct
    type t = anonymous_interface_46
    let rec t_of_js : Ojs.t -> t =
      fun (x1090 : Ojs.t) -> anonymous_interface_46_of_js x1090
    and t_to_js : t -> Ojs.t =
      fun (x1089 : anonymous_interface_46) ->
        anonymous_interface_46_to_js x1089
    let (get : t -> string -> string list) =
      fun (x1091 : t) ->
        fun (x1092 : string) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1091) (Ojs.string_to_js x1092))
    let (set : t -> string -> string list -> unit) =
      fun (x1094 : t) ->
        fun (x1095 : string) ->
          fun (x1096 : string list) ->
            Ojs.set_prop (t_to_js x1094) (Ojs.string_to_js x1095)
              (Ojs.list_to_js Ojs.string_to_js x1096)
  end
module Vscode =
  struct
    let (version : string) =
      Ojs.string_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
           "version")
    module Command =
      struct
        type t = vscode_Command
        let rec t_of_js : Ojs.t -> t =
          fun (x1099 : Ojs.t) -> vscode_Command_of_js x1099
        and t_to_js : t -> Ojs.t =
          fun (x1098 : vscode_Command) -> vscode_Command_to_js x1098
        let (get_title : t -> string) =
          fun (x1100 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1100) "title")
        let (set_title : t -> string -> unit) =
          fun (x1101 : t) ->
            fun (x1102 : string) ->
              Ojs.set_prop_ascii (t_to_js x1101) "title"
                (Ojs.string_to_js x1102)
        let (get_command : t -> string) =
          fun (x1103 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1103) "command")
        let (set_command : t -> string -> unit) =
          fun (x1104 : t) ->
            fun (x1105 : string) ->
              Ojs.set_prop_ascii (t_to_js x1104) "command"
                (Ojs.string_to_js x1105)
        let (get_tooltip : t -> string) =
          fun (x1106 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1106) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x1107 : t) ->
            fun (x1108 : string) ->
              Ojs.set_prop_ascii (t_to_js x1107) "tooltip"
                (Ojs.string_to_js x1108)
        let (get_arguments : t -> any list) =
          fun (x1109 : t) ->
            Ojs.list_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x1109) "arguments")
        let (set_arguments : t -> any list -> unit) =
          fun (x1111 : t) ->
            fun (x1112 : any list) ->
              Ojs.set_prop_ascii (t_to_js x1111) "arguments"
                (Ojs.list_to_js any_to_js x1112)
      end
    module TextLine =
      struct
        type t = vscode_TextLine
        let rec t_of_js : Ojs.t -> t =
          fun (x1115 : Ojs.t) -> vscode_TextLine_of_js x1115
        and t_to_js : t -> Ojs.t =
          fun (x1114 : vscode_TextLine) -> vscode_TextLine_to_js x1114
        let (get_lineNumber : t -> float) =
          fun (x1116 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1116) "lineNumber")
        let (get_text : t -> string) =
          fun (x1117 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1117) "text")
        let (get_range : t -> vscode_Range) =
          fun (x1118 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x1118) "range")
        let (get_rangeIncludingLineBreak : t -> vscode_Range) =
          fun (x1119 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1119) "rangeIncludingLineBreak")
        let (get_firstNonWhitespaceCharacterIndex : t -> float) =
          fun (x1120 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x1120)
                 "firstNonWhitespaceCharacterIndex")
        let (get_isEmptyOrWhitespace : t -> bool) =
          fun (x1121 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1121) "isEmptyOrWhitespace")
      end
    module TextDocument =
      struct
        type t = vscode_TextDocument
        let rec t_of_js : Ojs.t -> t =
          fun (x1123 : Ojs.t) -> vscode_TextDocument_of_js x1123
        and t_to_js : t -> Ojs.t =
          fun (x1122 : vscode_TextDocument) ->
            vscode_TextDocument_to_js x1122
        let (get_uri : t -> vscode_Uri) =
          fun (x1124 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1124) "uri")
        let (get_fileName : t -> string) =
          fun (x1125 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1125) "fileName")
        let (get_isUntitled : t -> bool) =
          fun (x1126 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1126) "isUntitled")
        let (get_languageId : t -> string) =
          fun (x1127 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1127) "languageId")
        let (get_version : t -> float) =
          fun (x1128 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1128) "version")
        let (get_isDirty : t -> bool) =
          fun (x1129 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1129) "isDirty")
        let (get_isClosed : t -> bool) =
          fun (x1130 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1130) "isClosed")
        let (save : t -> bool _Thenable) =
          fun (x1131 : t) ->
            _Thenable_of_js Ojs.bool_of_js
              (Ojs.call (t_to_js x1131) "save" [||])
        let (get_eol : t -> vscode_EndOfLine) =
          fun (x1133 : t) ->
            vscode_EndOfLine_of_js (Ojs.get_prop_ascii (t_to_js x1133) "eol")
        let (get_lineCount : t -> float) =
          fun (x1134 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1134) "lineCount")
        let (lineAt : t -> line:float -> vscode_TextLine) =
          fun (x1136 : t) ->
            fun ~line:(x1135 : float) ->
              vscode_TextLine_of_js
                (Ojs.call (t_to_js x1136) "lineAt"
                   [|(Ojs.float_to_js x1135)|])
        let (lineAt' : t -> position:vscode_Position -> vscode_TextLine) =
          fun (x1138 : t) ->
            fun ~position:(x1137 : vscode_Position) ->
              vscode_TextLine_of_js
                (Ojs.call (t_to_js x1138) "lineAt"
                   [|(vscode_Position_to_js x1137)|])
        let (offsetAt : t -> position:vscode_Position -> float) =
          fun (x1140 : t) ->
            fun ~position:(x1139 : vscode_Position) ->
              Ojs.float_of_js
                (Ojs.call (t_to_js x1140) "offsetAt"
                   [|(vscode_Position_to_js x1139)|])
        let (positionAt : t -> offset:float -> vscode_Position) =
          fun (x1142 : t) ->
            fun ~offset:(x1141 : float) ->
              vscode_Position_of_js
                (Ojs.call (t_to_js x1142) "positionAt"
                   [|(Ojs.float_to_js x1141)|])
        let (getText : t -> ?range:vscode_Range -> unit -> string) =
          fun (x1146 : t) ->
            fun ?range:(x1143 : vscode_Range option) ->
              fun () ->
                Ojs.string_of_js
                  (let x1147 = t_to_js x1146 in
                   Ojs.call (Ojs.get_prop_ascii x1147 "getText") "apply"
                     [|x1147;((let x1144 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x1143 with
                                | Some x1145 ->
                                    ignore
                                      (Ojs.call x1144 "push"
                                         [|(vscode_Range_to_js x1145)|])
                                | None -> ());
                               x1144))|])
        let (getWordRangeAtPosition :
          t ->
            position:vscode_Position ->
              ?regex:regexp -> unit -> vscode_Range or_undefined)
          =
          fun (x1152 : t) ->
            fun ~position:(x1148 : vscode_Position) ->
              fun ?regex:(x1149 : regexp option) ->
                fun () ->
                  or_undefined_of_js vscode_Range_of_js
                    (let x1153 = t_to_js x1152 in
                     Ojs.call
                       (Ojs.get_prop_ascii x1153 "getWordRangeAtPosition")
                       "apply"
                       [|x1153;((let x1150 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1150 "push"
                                      [|(vscode_Position_to_js x1148)|]);
                                 (match x1149 with
                                  | Some x1151 ->
                                      ignore
                                        (Ojs.call x1150 "push"
                                           [|(regexp_to_js x1151)|])
                                  | None -> ());
                                 x1150))|])
        let (validateRange : t -> range:vscode_Range -> vscode_Range) =
          fun (x1156 : t) ->
            fun ~range:(x1155 : vscode_Range) ->
              vscode_Range_of_js
                (Ojs.call (t_to_js x1156) "validateRange"
                   [|(vscode_Range_to_js x1155)|])
        let (validatePosition :
          t -> position:vscode_Position -> vscode_Position) =
          fun (x1158 : t) ->
            fun ~position:(x1157 : vscode_Position) ->
              vscode_Position_of_js
                (Ojs.call (t_to_js x1158) "validatePosition"
                   [|(vscode_Position_to_js x1157)|])
      end
    module Position =
      struct
        type t = vscode_Position
        let rec t_of_js : Ojs.t -> t =
          fun (x1160 : Ojs.t) -> vscode_Position_of_js x1160
        and t_to_js : t -> Ojs.t =
          fun (x1159 : vscode_Position) -> vscode_Position_to_js x1159
        let (get_line : t -> float) =
          fun (x1161 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1161) "line")
        let (get_character : t -> float) =
          fun (x1162 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1162) "character")
        let (create : line:float -> character:float -> t) =
          fun ~line:(x1163 : float) ->
            fun ~character:(x1164 : float) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Position")
                   [|(Ojs.float_to_js x1163);(Ojs.float_to_js x1164)|])
        let (isBefore : t -> other:t -> bool) =
          fun (x1166 : t) ->
            fun ~other:(x1165 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1166) "isBefore" [|(t_to_js x1165)|])
        let (isBeforeOrEqual : t -> other:t -> bool) =
          fun (x1168 : t) ->
            fun ~other:(x1167 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1168) "isBeforeOrEqual"
                   [|(t_to_js x1167)|])
        let (isAfter : t -> other:t -> bool) =
          fun (x1170 : t) ->
            fun ~other:(x1169 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1170) "isAfter" [|(t_to_js x1169)|])
        let (isAfterOrEqual : t -> other:t -> bool) =
          fun (x1172 : t) ->
            fun ~other:(x1171 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1172) "isAfterOrEqual"
                   [|(t_to_js x1171)|])
        let (isEqual : t -> other:t -> bool) =
          fun (x1174 : t) ->
            fun ~other:(x1173 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1174) "isEqual" [|(t_to_js x1173)|])
        let (compareTo : t -> other:t -> float) =
          fun (x1176 : t) ->
            fun ~other:(x1175 : t) ->
              Ojs.float_of_js
                (Ojs.call (t_to_js x1176) "compareTo" [|(t_to_js x1175)|])
        let (translate :
          t -> ?lineDelta:float -> ?characterDelta:float -> unit -> t) =
          fun (x1182 : t) ->
            fun ?lineDelta:(x1177 : float option) ->
              fun ?characterDelta:(x1178 : float option) ->
                fun () ->
                  t_of_js
                    (let x1183 = t_to_js x1182 in
                     Ojs.call (Ojs.get_prop_ascii x1183 "translate") "apply"
                       [|x1183;((let x1179 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x1177 with
                                  | Some x1181 ->
                                      ignore
                                        (Ojs.call x1179 "push"
                                           [|(Ojs.float_to_js x1181)|])
                                  | None -> ());
                                 (match x1178 with
                                  | Some x1180 ->
                                      ignore
                                        (Ojs.call x1179 "push"
                                           [|(Ojs.float_to_js x1180)|])
                                  | None -> ());
                                 x1179))|])
        let (translate' : t -> change:anonymous_interface_17 -> t) =
          fun (x1185 : t) ->
            fun ~change:(x1184 : anonymous_interface_17) ->
              t_of_js
                (Ojs.call (t_to_js x1185) "translate"
                   [|(anonymous_interface_17_to_js x1184)|])
        let (with_ : t -> ?line:float -> ?character:float -> unit -> t) =
          fun (x1191 : t) ->
            fun ?line:(x1186 : float option) ->
              fun ?character:(x1187 : float option) ->
                fun () ->
                  t_of_js
                    (let x1192 = t_to_js x1191 in
                     Ojs.call (Ojs.get_prop_ascii x1192 "with") "apply"
                       [|x1192;((let x1188 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x1186 with
                                  | Some x1190 ->
                                      ignore
                                        (Ojs.call x1188 "push"
                                           [|(Ojs.float_to_js x1190)|])
                                  | None -> ());
                                 (match x1187 with
                                  | Some x1189 ->
                                      ignore
                                        (Ojs.call x1188 "push"
                                           [|(Ojs.float_to_js x1189)|])
                                  | None -> ());
                                 x1188))|])
        let (with_' : t -> change:anonymous_interface_16 -> t) =
          fun (x1194 : t) ->
            fun ~change:(x1193 : anonymous_interface_16) ->
              t_of_js
                (Ojs.call (t_to_js x1194) "with"
                   [|(anonymous_interface_16_to_js x1193)|])
      end
    module Range =
      struct
        type t = vscode_Range
        let rec t_of_js : Ojs.t -> t =
          fun (x1196 : Ojs.t) -> vscode_Range_of_js x1196
        and t_to_js : t -> Ojs.t =
          fun (x1195 : vscode_Range) -> vscode_Range_to_js x1195
        let (get_start : t -> vscode_Position) =
          fun (x1197 : t) ->
            vscode_Position_of_js
              (Ojs.get_prop_ascii (t_to_js x1197) "start")
        let (get_end : t -> vscode_Position) =
          fun (x1198 : t) ->
            vscode_Position_of_js (Ojs.get_prop_ascii (t_to_js x1198) "end")
        let (create : start:vscode_Position -> end_:vscode_Position -> t) =
          fun ~start:(x1199 : vscode_Position) ->
            fun ~end_:(x1200 : vscode_Position) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Range")
                   [|(vscode_Position_to_js x1199);(vscode_Position_to_js
                                                      x1200)|])
        let (create' :
          startLine:float ->
            startCharacter:float -> endLine:float -> endCharacter:float -> t)
          =
          fun ~startLine:(x1201 : float) ->
            fun ~startCharacter:(x1202 : float) ->
              fun ~endLine:(x1203 : float) ->
                fun ~endCharacter:(x1204 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode") "Range")
                       [|(Ojs.float_to_js x1201);(Ojs.float_to_js x1202);(
                         Ojs.float_to_js x1203);(Ojs.float_to_js x1204)|])
        let (get_isEmpty : t -> bool) =
          fun (x1205 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1205) "isEmpty")
        let (set_isEmpty : t -> bool -> unit) =
          fun (x1206 : t) ->
            fun (x1207 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1206) "isEmpty"
                (Ojs.bool_to_js x1207)
        let (get_isSingleLine : t -> bool) =
          fun (x1208 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1208) "isSingleLine")
        let (set_isSingleLine : t -> bool -> unit) =
          fun (x1209 : t) ->
            fun (x1210 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1209) "isSingleLine"
                (Ojs.bool_to_js x1210)
        let (contains :
          t -> positionOrRange:(vscode_Position, t) union2 -> bool) =
          fun (x1214 : t) ->
            fun ~positionOrRange:(x1211 : (vscode_Position, t) union2) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1214) "contains"
                   [|(union2_to_js vscode_Position_to_js t_to_js x1211)|])
        let (isEqual : t -> other:t -> bool) =
          fun (x1216 : t) ->
            fun ~other:(x1215 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1216) "isEqual" [|(t_to_js x1215)|])
        let (intersection : t -> range:t -> t or_undefined) =
          fun (x1218 : t) ->
            fun ~range:(x1217 : t) ->
              or_undefined_of_js t_of_js
                (Ojs.call (t_to_js x1218) "intersection" [|(t_to_js x1217)|])
        let (union : t -> other:t -> t) =
          fun (x1221 : t) ->
            fun ~other:(x1220 : t) ->
              t_of_js (Ojs.call (t_to_js x1221) "union" [|(t_to_js x1220)|])
        let (with_ :
          t -> ?start:vscode_Position -> ?end_:vscode_Position -> unit -> t)
          =
          fun (x1227 : t) ->
            fun ?start:(x1222 : vscode_Position option) ->
              fun ?end_:(x1223 : vscode_Position option) ->
                fun () ->
                  t_of_js
                    (let x1228 = t_to_js x1227 in
                     Ojs.call (Ojs.get_prop_ascii x1228 "with") "apply"
                       [|x1228;((let x1224 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x1222 with
                                  | Some x1226 ->
                                      ignore
                                        (Ojs.call x1224 "push"
                                           [|(vscode_Position_to_js x1226)|])
                                  | None -> ());
                                 (match x1223 with
                                  | Some x1225 ->
                                      ignore
                                        (Ojs.call x1224 "push"
                                           [|(vscode_Position_to_js x1225)|])
                                  | None -> ());
                                 x1224))|])
        let (with_' : t -> change:anonymous_interface_33 -> t) =
          fun (x1230 : t) ->
            fun ~change:(x1229 : anonymous_interface_33) ->
              t_of_js
                (Ojs.call (t_to_js x1230) "with"
                   [|(anonymous_interface_33_to_js x1229)|])
      end
    module Selection =
      struct
        include struct include Range end
        let (get_anchor : t -> vscode_Position) =
          fun (x1231 : t) ->
            vscode_Position_of_js
              (Ojs.get_prop_ascii (t_to_js x1231) "anchor")
        let (set_anchor : t -> vscode_Position -> unit) =
          fun (x1232 : t) ->
            fun (x1233 : vscode_Position) ->
              Ojs.set_prop_ascii (t_to_js x1232) "anchor"
                (vscode_Position_to_js x1233)
        let (get_active : t -> vscode_Position) =
          fun (x1234 : t) ->
            vscode_Position_of_js
              (Ojs.get_prop_ascii (t_to_js x1234) "active")
        let (set_active : t -> vscode_Position -> unit) =
          fun (x1235 : t) ->
            fun (x1236 : vscode_Position) ->
              Ojs.set_prop_ascii (t_to_js x1235) "active"
                (vscode_Position_to_js x1236)
        let (create : anchor:vscode_Position -> active:vscode_Position -> t)
          =
          fun ~anchor:(x1237 : vscode_Position) ->
            fun ~active:(x1238 : vscode_Position) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Selection")
                   [|(vscode_Position_to_js x1237);(vscode_Position_to_js
                                                      x1238)|])
        let (create' :
          anchorLine:float ->
            anchorCharacter:float ->
              activeLine:float -> activeCharacter:float -> t)
          =
          fun ~anchorLine:(x1239 : float) ->
            fun ~anchorCharacter:(x1240 : float) ->
              fun ~activeLine:(x1241 : float) ->
                fun ~activeCharacter:(x1242 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "Selection")
                       [|(Ojs.float_to_js x1239);(Ojs.float_to_js x1240);(
                         Ojs.float_to_js x1241);(Ojs.float_to_js x1242)|])
        let (get_isReversed : t -> bool) =
          fun (x1243 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1243) "isReversed")
        let (set_isReversed : t -> bool -> unit) =
          fun (x1244 : t) ->
            fun (x1245 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1244) "isReversed"
                (Ojs.bool_to_js x1245)
      end
    module TextEditorSelectionChangeKind =
      struct
        type t = vscode_TextEditorSelectionChangeKind
        let rec t_of_js : Ojs.t -> t =
          fun (x1247 : Ojs.t) ->
            vscode_TextEditorSelectionChangeKind_of_js x1247
        and t_to_js : t -> Ojs.t =
          fun (x1246 : vscode_TextEditorSelectionChangeKind) ->
            vscode_TextEditorSelectionChangeKind_to_js x1246
      end
    module TextEditorSelectionChangeEvent =
      struct
        type t = vscode_TextEditorSelectionChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1249 : Ojs.t) ->
            vscode_TextEditorSelectionChangeEvent_of_js x1249
        and t_to_js : t -> Ojs.t =
          fun (x1248 : vscode_TextEditorSelectionChangeEvent) ->
            vscode_TextEditorSelectionChangeEvent_to_js x1248
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1250 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1250) "textEditor")
        let (get_selections : t -> vscode_Selection list) =
          fun (x1251 : t) ->
            Ojs.list_of_js vscode_Selection_of_js
              (Ojs.get_prop_ascii (t_to_js x1251) "selections")
        let (get_kind : t -> vscode_TextEditorSelectionChangeKind) =
          fun (x1253 : t) ->
            vscode_TextEditorSelectionChangeKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1253) "kind")
      end
    module TextEditorVisibleRangesChangeEvent =
      struct
        type t = vscode_TextEditorVisibleRangesChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1255 : Ojs.t) ->
            vscode_TextEditorVisibleRangesChangeEvent_of_js x1255
        and t_to_js : t -> Ojs.t =
          fun (x1254 : vscode_TextEditorVisibleRangesChangeEvent) ->
            vscode_TextEditorVisibleRangesChangeEvent_to_js x1254
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1256 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1256) "textEditor")
        let (get_visibleRanges : t -> vscode_Range list) =
          fun (x1257 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1257) "visibleRanges")
      end
    module TextEditorOptionsChangeEvent =
      struct
        type t = vscode_TextEditorOptionsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1260 : Ojs.t) ->
            vscode_TextEditorOptionsChangeEvent_of_js x1260
        and t_to_js : t -> Ojs.t =
          fun (x1259 : vscode_TextEditorOptionsChangeEvent) ->
            vscode_TextEditorOptionsChangeEvent_to_js x1259
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1261 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1261) "textEditor")
        let (get_options : t -> vscode_TextEditorOptions) =
          fun (x1262 : t) ->
            vscode_TextEditorOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1262) "options")
      end
    module TextEditorViewColumnChangeEvent =
      struct
        type t = vscode_TextEditorViewColumnChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1264 : Ojs.t) ->
            vscode_TextEditorViewColumnChangeEvent_of_js x1264
        and t_to_js : t -> Ojs.t =
          fun (x1263 : vscode_TextEditorViewColumnChangeEvent) ->
            vscode_TextEditorViewColumnChangeEvent_to_js x1263
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1265 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1265) "textEditor")
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x1266 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x1266) "viewColumn")
      end
    module TextEditorCursorStyle =
      struct
        type t = vscode_TextEditorCursorStyle
        let rec t_of_js : Ojs.t -> t =
          fun (x1268 : Ojs.t) -> vscode_TextEditorCursorStyle_of_js x1268
        and t_to_js : t -> Ojs.t =
          fun (x1267 : vscode_TextEditorCursorStyle) ->
            vscode_TextEditorCursorStyle_to_js x1267
      end
    module TextEditorLineNumbersStyle =
      struct
        type t = vscode_TextEditorLineNumbersStyle
        let rec t_of_js : Ojs.t -> t =
          fun (x1270 : Ojs.t) ->
            vscode_TextEditorLineNumbersStyle_of_js x1270
        and t_to_js : t -> Ojs.t =
          fun (x1269 : vscode_TextEditorLineNumbersStyle) ->
            vscode_TextEditorLineNumbersStyle_to_js x1269
      end
    module TextEditorOptions =
      struct
        type t = vscode_TextEditorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1272 : Ojs.t) -> vscode_TextEditorOptions_of_js x1272
        and t_to_js : t -> Ojs.t =
          fun (x1271 : vscode_TextEditorOptions) ->
            vscode_TextEditorOptions_to_js x1271
        let (get_tabSize : t -> string or_number) =
          fun (x1273 : t) ->
            or_number_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1273) "tabSize")
        let (set_tabSize : t -> string or_number -> unit) =
          fun (x1275 : t) ->
            fun (x1276 : string or_number) ->
              Ojs.set_prop_ascii (t_to_js x1275) "tabSize"
                (or_number_to_js Ojs.string_to_js x1276)
        let (get_insertSpaces : t -> bool or_string) =
          fun (x1278 : t) ->
            or_string_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1278) "insertSpaces")
        let (set_insertSpaces : t -> bool or_string -> unit) =
          fun (x1280 : t) ->
            fun (x1281 : bool or_string) ->
              Ojs.set_prop_ascii (t_to_js x1280) "insertSpaces"
                (or_string_to_js Ojs.bool_to_js x1281)
        let (get_cursorStyle : t -> vscode_TextEditorCursorStyle) =
          fun (x1283 : t) ->
            vscode_TextEditorCursorStyle_of_js
              (Ojs.get_prop_ascii (t_to_js x1283) "cursorStyle")
        let (set_cursorStyle : t -> vscode_TextEditorCursorStyle -> unit) =
          fun (x1284 : t) ->
            fun (x1285 : vscode_TextEditorCursorStyle) ->
              Ojs.set_prop_ascii (t_to_js x1284) "cursorStyle"
                (vscode_TextEditorCursorStyle_to_js x1285)
        let (get_lineNumbers : t -> vscode_TextEditorLineNumbersStyle) =
          fun (x1286 : t) ->
            vscode_TextEditorLineNumbersStyle_of_js
              (Ojs.get_prop_ascii (t_to_js x1286) "lineNumbers")
        let (set_lineNumbers :
          t -> vscode_TextEditorLineNumbersStyle -> unit) =
          fun (x1287 : t) ->
            fun (x1288 : vscode_TextEditorLineNumbersStyle) ->
              Ojs.set_prop_ascii (t_to_js x1287) "lineNumbers"
                (vscode_TextEditorLineNumbersStyle_to_js x1288)
      end
    module TextEditorDecorationType =
      struct
        type t = vscode_TextEditorDecorationType
        let rec t_of_js : Ojs.t -> t =
          fun (x1290 : Ojs.t) -> vscode_TextEditorDecorationType_of_js x1290
        and t_to_js : t -> Ojs.t =
          fun (x1289 : vscode_TextEditorDecorationType) ->
            vscode_TextEditorDecorationType_to_js x1289
        let (get_key : t -> string) =
          fun (x1291 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1291) "key")
        let (dispose : t -> unit) =
          fun (x1292 : t) -> ignore (Ojs.call (t_to_js x1292) "dispose" [||])
      end
    module TextEditorRevealType =
      struct
        type t = vscode_TextEditorRevealType
        let rec t_of_js : Ojs.t -> t =
          fun (x1294 : Ojs.t) -> vscode_TextEditorRevealType_of_js x1294
        and t_to_js : t -> Ojs.t =
          fun (x1293 : vscode_TextEditorRevealType) ->
            vscode_TextEditorRevealType_to_js x1293
      end
    module OverviewRulerLane =
      struct
        type t = vscode_OverviewRulerLane
        let rec t_of_js : Ojs.t -> t =
          fun (x1296 : Ojs.t) -> vscode_OverviewRulerLane_of_js x1296
        and t_to_js : t -> Ojs.t =
          fun (x1295 : vscode_OverviewRulerLane) ->
            vscode_OverviewRulerLane_to_js x1295
      end
    module DecorationRangeBehavior =
      struct
        type t = vscode_DecorationRangeBehavior
        let rec t_of_js : Ojs.t -> t =
          fun (x1298 : Ojs.t) -> vscode_DecorationRangeBehavior_of_js x1298
        and t_to_js : t -> Ojs.t =
          fun (x1297 : vscode_DecorationRangeBehavior) ->
            vscode_DecorationRangeBehavior_to_js x1297
      end
    module TextDocumentShowOptions =
      struct
        type t = vscode_TextDocumentShowOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1300 : Ojs.t) -> vscode_TextDocumentShowOptions_of_js x1300
        and t_to_js : t -> Ojs.t =
          fun (x1299 : vscode_TextDocumentShowOptions) ->
            vscode_TextDocumentShowOptions_to_js x1299
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x1301 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x1301) "viewColumn")
        let (set_viewColumn : t -> vscode_ViewColumn -> unit) =
          fun (x1302 : t) ->
            fun (x1303 : vscode_ViewColumn) ->
              Ojs.set_prop_ascii (t_to_js x1302) "viewColumn"
                (vscode_ViewColumn_to_js x1303)
        let (get_preserveFocus : t -> bool) =
          fun (x1304 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1304) "preserveFocus")
        let (set_preserveFocus : t -> bool -> unit) =
          fun (x1305 : t) ->
            fun (x1306 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1305) "preserveFocus"
                (Ojs.bool_to_js x1306)
        let (get_preview : t -> bool) =
          fun (x1307 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1307) "preview")
        let (set_preview : t -> bool -> unit) =
          fun (x1308 : t) ->
            fun (x1309 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1308) "preview"
                (Ojs.bool_to_js x1309)
        let (get_selection : t -> vscode_Range) =
          fun (x1310 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1310) "selection")
        let (set_selection : t -> vscode_Range -> unit) =
          fun (x1311 : t) ->
            fun (x1312 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x1311) "selection"
                (vscode_Range_to_js x1312)
      end
    module ThemeColor =
      struct
        type t = vscode_ThemeColor
        let rec t_of_js : Ojs.t -> t =
          fun (x1314 : Ojs.t) -> vscode_ThemeColor_of_js x1314
        and t_to_js : t -> Ojs.t =
          fun (x1313 : vscode_ThemeColor) -> vscode_ThemeColor_to_js x1313
        let (create : id:string -> t) =
          fun ~id:(x1315 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ThemeColor") [|(Ojs.string_to_js x1315)|])
      end
    module ThemeIcon =
      struct
        type t = vscode_ThemeIcon
        let rec t_of_js : Ojs.t -> t =
          fun (x1317 : Ojs.t) -> vscode_ThemeIcon_of_js x1317
        and t_to_js : t -> Ojs.t =
          fun (x1316 : vscode_ThemeIcon) -> vscode_ThemeIcon_to_js x1316
        let (get_File : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ThemeIcon") "File")
        let (get_Folder : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ThemeIcon") "Folder")
        let (get_id : t -> string) =
          fun (x1318 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1318) "id")
        let (get_color : t -> vscode_ThemeColor) =
          fun (x1319 : t) ->
            vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1319) "color")
        let (create : id:string -> ?color:vscode_ThemeColor -> unit -> t) =
          fun ~id:(x1320 : string) ->
            fun ?color:(x1321 : vscode_ThemeColor option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "ThemeIcon")
                     (let x1322 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x1322 "push" [|(Ojs.string_to_js x1320)|]);
                      (match x1321 with
                       | Some x1323 ->
                           ignore
                             (Ojs.call x1322 "push"
                                [|(vscode_ThemeColor_to_js x1323)|])
                       | None -> ());
                      x1322))
      end
    module ThemableDecorationRenderOptions =
      struct
        type t = vscode_ThemableDecorationRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1325 : Ojs.t) ->
            vscode_ThemableDecorationRenderOptions_of_js x1325
        and t_to_js : t -> Ojs.t =
          fun (x1324 : vscode_ThemableDecorationRenderOptions) ->
            vscode_ThemableDecorationRenderOptions_to_js x1324
        let (get_backgroundColor : t -> vscode_ThemeColor or_string) =
          fun (x1326 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1326) "backgroundColor")
        let (set_backgroundColor : t -> vscode_ThemeColor or_string -> unit)
          =
          fun (x1328 : t) ->
            fun (x1329 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1328) "backgroundColor"
                (or_string_to_js vscode_ThemeColor_to_js x1329)
        let (get_outline : t -> string) =
          fun (x1331 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1331) "outline")
        let (set_outline : t -> string -> unit) =
          fun (x1332 : t) ->
            fun (x1333 : string) ->
              Ojs.set_prop_ascii (t_to_js x1332) "outline"
                (Ojs.string_to_js x1333)
        let (get_outlineColor : t -> vscode_ThemeColor or_string) =
          fun (x1334 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1334) "outlineColor")
        let (set_outlineColor : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1336 : t) ->
            fun (x1337 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1336) "outlineColor"
                (or_string_to_js vscode_ThemeColor_to_js x1337)
        let (get_outlineStyle : t -> string) =
          fun (x1339 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1339) "outlineStyle")
        let (set_outlineStyle : t -> string -> unit) =
          fun (x1340 : t) ->
            fun (x1341 : string) ->
              Ojs.set_prop_ascii (t_to_js x1340) "outlineStyle"
                (Ojs.string_to_js x1341)
        let (get_outlineWidth : t -> string) =
          fun (x1342 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1342) "outlineWidth")
        let (set_outlineWidth : t -> string -> unit) =
          fun (x1343 : t) ->
            fun (x1344 : string) ->
              Ojs.set_prop_ascii (t_to_js x1343) "outlineWidth"
                (Ojs.string_to_js x1344)
        let (get_border : t -> string) =
          fun (x1345 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1345) "border")
        let (set_border : t -> string -> unit) =
          fun (x1346 : t) ->
            fun (x1347 : string) ->
              Ojs.set_prop_ascii (t_to_js x1346) "border"
                (Ojs.string_to_js x1347)
        let (get_borderColor : t -> vscode_ThemeColor or_string) =
          fun (x1348 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1348) "borderColor")
        let (set_borderColor : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1350 : t) ->
            fun (x1351 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1350) "borderColor"
                (or_string_to_js vscode_ThemeColor_to_js x1351)
        let (get_borderRadius : t -> string) =
          fun (x1353 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1353) "borderRadius")
        let (set_borderRadius : t -> string -> unit) =
          fun (x1354 : t) ->
            fun (x1355 : string) ->
              Ojs.set_prop_ascii (t_to_js x1354) "borderRadius"
                (Ojs.string_to_js x1355)
        let (get_borderSpacing : t -> string) =
          fun (x1356 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1356) "borderSpacing")
        let (set_borderSpacing : t -> string -> unit) =
          fun (x1357 : t) ->
            fun (x1358 : string) ->
              Ojs.set_prop_ascii (t_to_js x1357) "borderSpacing"
                (Ojs.string_to_js x1358)
        let (get_borderStyle : t -> string) =
          fun (x1359 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1359) "borderStyle")
        let (set_borderStyle : t -> string -> unit) =
          fun (x1360 : t) ->
            fun (x1361 : string) ->
              Ojs.set_prop_ascii (t_to_js x1360) "borderStyle"
                (Ojs.string_to_js x1361)
        let (get_borderWidth : t -> string) =
          fun (x1362 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1362) "borderWidth")
        let (set_borderWidth : t -> string -> unit) =
          fun (x1363 : t) ->
            fun (x1364 : string) ->
              Ojs.set_prop_ascii (t_to_js x1363) "borderWidth"
                (Ojs.string_to_js x1364)
        let (get_fontStyle : t -> string) =
          fun (x1365 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1365) "fontStyle")
        let (set_fontStyle : t -> string -> unit) =
          fun (x1366 : t) ->
            fun (x1367 : string) ->
              Ojs.set_prop_ascii (t_to_js x1366) "fontStyle"
                (Ojs.string_to_js x1367)
        let (get_fontWeight : t -> string) =
          fun (x1368 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1368) "fontWeight")
        let (set_fontWeight : t -> string -> unit) =
          fun (x1369 : t) ->
            fun (x1370 : string) ->
              Ojs.set_prop_ascii (t_to_js x1369) "fontWeight"
                (Ojs.string_to_js x1370)
        let (get_textDecoration : t -> string) =
          fun (x1371 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1371) "textDecoration")
        let (set_textDecoration : t -> string -> unit) =
          fun (x1372 : t) ->
            fun (x1373 : string) ->
              Ojs.set_prop_ascii (t_to_js x1372) "textDecoration"
                (Ojs.string_to_js x1373)
        let (get_cursor : t -> string) =
          fun (x1374 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1374) "cursor")
        let (set_cursor : t -> string -> unit) =
          fun (x1375 : t) ->
            fun (x1376 : string) ->
              Ojs.set_prop_ascii (t_to_js x1375) "cursor"
                (Ojs.string_to_js x1376)
        let (get_color : t -> vscode_ThemeColor or_string) =
          fun (x1377 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1377) "color")
        let (set_color : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1379 : t) ->
            fun (x1380 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1379) "color"
                (or_string_to_js vscode_ThemeColor_to_js x1380)
        let (get_opacity : t -> string) =
          fun (x1382 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1382) "opacity")
        let (set_opacity : t -> string -> unit) =
          fun (x1383 : t) ->
            fun (x1384 : string) ->
              Ojs.set_prop_ascii (t_to_js x1383) "opacity"
                (Ojs.string_to_js x1384)
        let (get_letterSpacing : t -> string) =
          fun (x1385 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1385) "letterSpacing")
        let (set_letterSpacing : t -> string -> unit) =
          fun (x1386 : t) ->
            fun (x1387 : string) ->
              Ojs.set_prop_ascii (t_to_js x1386) "letterSpacing"
                (Ojs.string_to_js x1387)
        let (get_gutterIconPath : t -> vscode_Uri or_string) =
          fun (x1388 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1388) "gutterIconPath")
        let (set_gutterIconPath : t -> vscode_Uri or_string -> unit) =
          fun (x1390 : t) ->
            fun (x1391 : vscode_Uri or_string) ->
              Ojs.set_prop_ascii (t_to_js x1390) "gutterIconPath"
                (or_string_to_js vscode_Uri_to_js x1391)
        let (get_gutterIconSize : t -> string) =
          fun (x1393 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1393) "gutterIconSize")
        let (set_gutterIconSize : t -> string -> unit) =
          fun (x1394 : t) ->
            fun (x1395 : string) ->
              Ojs.set_prop_ascii (t_to_js x1394) "gutterIconSize"
                (Ojs.string_to_js x1395)
        let (get_overviewRulerColor : t -> vscode_ThemeColor or_string) =
          fun (x1396 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1396) "overviewRulerColor")
        let (set_overviewRulerColor :
          t -> vscode_ThemeColor or_string -> unit) =
          fun (x1398 : t) ->
            fun (x1399 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1398) "overviewRulerColor"
                (or_string_to_js vscode_ThemeColor_to_js x1399)
        let (get_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1401 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1401) "before")
        let (set_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1402 : t) ->
            fun (x1403 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1402) "before"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1403)
        let (get_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1404 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1404) "after")
        let (set_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1405 : t) ->
            fun (x1406 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1405) "after"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1406)
      end
    module ThemableDecorationAttachmentRenderOptions =
      struct
        type t = vscode_ThemableDecorationAttachmentRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1408 : Ojs.t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js x1408
        and t_to_js : t -> Ojs.t =
          fun (x1407 : vscode_ThemableDecorationAttachmentRenderOptions) ->
            vscode_ThemableDecorationAttachmentRenderOptions_to_js x1407
        let (get_contentText : t -> string) =
          fun (x1409 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1409) "contentText")
        let (set_contentText : t -> string -> unit) =
          fun (x1410 : t) ->
            fun (x1411 : string) ->
              Ojs.set_prop_ascii (t_to_js x1410) "contentText"
                (Ojs.string_to_js x1411)
        let (get_contentIconPath : t -> vscode_Uri or_string) =
          fun (x1412 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1412) "contentIconPath")
        let (set_contentIconPath : t -> vscode_Uri or_string -> unit) =
          fun (x1414 : t) ->
            fun (x1415 : vscode_Uri or_string) ->
              Ojs.set_prop_ascii (t_to_js x1414) "contentIconPath"
                (or_string_to_js vscode_Uri_to_js x1415)
        let (get_border : t -> string) =
          fun (x1417 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1417) "border")
        let (set_border : t -> string -> unit) =
          fun (x1418 : t) ->
            fun (x1419 : string) ->
              Ojs.set_prop_ascii (t_to_js x1418) "border"
                (Ojs.string_to_js x1419)
        let (get_borderColor : t -> vscode_ThemeColor or_string) =
          fun (x1420 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1420) "borderColor")
        let (set_borderColor : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1422 : t) ->
            fun (x1423 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1422) "borderColor"
                (or_string_to_js vscode_ThemeColor_to_js x1423)
        let (get_fontStyle : t -> string) =
          fun (x1425 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1425) "fontStyle")
        let (set_fontStyle : t -> string -> unit) =
          fun (x1426 : t) ->
            fun (x1427 : string) ->
              Ojs.set_prop_ascii (t_to_js x1426) "fontStyle"
                (Ojs.string_to_js x1427)
        let (get_fontWeight : t -> string) =
          fun (x1428 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1428) "fontWeight")
        let (set_fontWeight : t -> string -> unit) =
          fun (x1429 : t) ->
            fun (x1430 : string) ->
              Ojs.set_prop_ascii (t_to_js x1429) "fontWeight"
                (Ojs.string_to_js x1430)
        let (get_textDecoration : t -> string) =
          fun (x1431 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1431) "textDecoration")
        let (set_textDecoration : t -> string -> unit) =
          fun (x1432 : t) ->
            fun (x1433 : string) ->
              Ojs.set_prop_ascii (t_to_js x1432) "textDecoration"
                (Ojs.string_to_js x1433)
        let (get_color : t -> vscode_ThemeColor or_string) =
          fun (x1434 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1434) "color")
        let (set_color : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1436 : t) ->
            fun (x1437 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1436) "color"
                (or_string_to_js vscode_ThemeColor_to_js x1437)
        let (get_backgroundColor : t -> vscode_ThemeColor or_string) =
          fun (x1439 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1439) "backgroundColor")
        let (set_backgroundColor : t -> vscode_ThemeColor or_string -> unit)
          =
          fun (x1441 : t) ->
            fun (x1442 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1441) "backgroundColor"
                (or_string_to_js vscode_ThemeColor_to_js x1442)
        let (get_margin : t -> string) =
          fun (x1444 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1444) "margin")
        let (set_margin : t -> string -> unit) =
          fun (x1445 : t) ->
            fun (x1446 : string) ->
              Ojs.set_prop_ascii (t_to_js x1445) "margin"
                (Ojs.string_to_js x1446)
        let (get_width : t -> string) =
          fun (x1447 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1447) "width")
        let (set_width : t -> string -> unit) =
          fun (x1448 : t) ->
            fun (x1449 : string) ->
              Ojs.set_prop_ascii (t_to_js x1448) "width"
                (Ojs.string_to_js x1449)
        let (get_height : t -> string) =
          fun (x1450 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1450) "height")
        let (set_height : t -> string -> unit) =
          fun (x1451 : t) ->
            fun (x1452 : string) ->
              Ojs.set_prop_ascii (t_to_js x1451) "height"
                (Ojs.string_to_js x1452)
      end
    module DecorationRenderOptions =
      struct
        include struct include ThemableDecorationRenderOptions end
        let (get_isWholeLine : t -> bool) =
          fun (x1453 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1453) "isWholeLine")
        let (set_isWholeLine : t -> bool -> unit) =
          fun (x1454 : t) ->
            fun (x1455 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1454) "isWholeLine"
                (Ojs.bool_to_js x1455)
        let (get_rangeBehavior : t -> vscode_DecorationRangeBehavior) =
          fun (x1456 : t) ->
            vscode_DecorationRangeBehavior_of_js
              (Ojs.get_prop_ascii (t_to_js x1456) "rangeBehavior")
        let (set_rangeBehavior : t -> vscode_DecorationRangeBehavior -> unit)
          =
          fun (x1457 : t) ->
            fun (x1458 : vscode_DecorationRangeBehavior) ->
              Ojs.set_prop_ascii (t_to_js x1457) "rangeBehavior"
                (vscode_DecorationRangeBehavior_to_js x1458)
        let (get_overviewRulerLane : t -> vscode_OverviewRulerLane) =
          fun (x1459 : t) ->
            vscode_OverviewRulerLane_of_js
              (Ojs.get_prop_ascii (t_to_js x1459) "overviewRulerLane")
        let (set_overviewRulerLane : t -> vscode_OverviewRulerLane -> unit) =
          fun (x1460 : t) ->
            fun (x1461 : vscode_OverviewRulerLane) ->
              Ojs.set_prop_ascii (t_to_js x1460) "overviewRulerLane"
                (vscode_OverviewRulerLane_to_js x1461)
        let (get_light : t -> vscode_ThemableDecorationRenderOptions) =
          fun (x1462 : t) ->
            vscode_ThemableDecorationRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1462) "light")
        let (set_light : t -> vscode_ThemableDecorationRenderOptions -> unit)
          =
          fun (x1463 : t) ->
            fun (x1464 : vscode_ThemableDecorationRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1463) "light"
                (vscode_ThemableDecorationRenderOptions_to_js x1464)
        let (get_dark : t -> vscode_ThemableDecorationRenderOptions) =
          fun (x1465 : t) ->
            vscode_ThemableDecorationRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1465) "dark")
        let (set_dark : t -> vscode_ThemableDecorationRenderOptions -> unit)
          =
          fun (x1466 : t) ->
            fun (x1467 : vscode_ThemableDecorationRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1466) "dark"
                (vscode_ThemableDecorationRenderOptions_to_js x1467)
      end
    module DecorationOptions =
      struct
        type t = vscode_DecorationOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1469 : Ojs.t) -> vscode_DecorationOptions_of_js x1469
        and t_to_js : t -> Ojs.t =
          fun (x1468 : vscode_DecorationOptions) ->
            vscode_DecorationOptions_to_js x1468
        let (get_range : t -> vscode_Range) =
          fun (x1470 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x1470) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x1471 : t) ->
            fun (x1472 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x1471) "range"
                (vscode_Range_to_js x1472)
        let (get_hoverMessage :
          t -> (vscode_MarkedString, vscode_MarkedString) or_array) =
          fun (x1473 : t) ->
            or_array_of_js vscode_MarkedString_of_js
              vscode_MarkedString_of_js
              (Ojs.get_prop_ascii (t_to_js x1473) "hoverMessage")
        let (set_hoverMessage :
          t -> (vscode_MarkedString, vscode_MarkedString) or_array -> unit) =
          fun (x1476 : t) ->
            fun (x1477 : (vscode_MarkedString, vscode_MarkedString) or_array)
              ->
              Ojs.set_prop_ascii (t_to_js x1476) "hoverMessage"
                (or_array_to_js vscode_MarkedString_to_js
                   vscode_MarkedString_to_js x1477)
        let (get_renderOptions : t -> vscode_DecorationInstanceRenderOptions)
          =
          fun (x1480 : t) ->
            vscode_DecorationInstanceRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1480) "renderOptions")
        let (set_renderOptions :
          t -> vscode_DecorationInstanceRenderOptions -> unit) =
          fun (x1481 : t) ->
            fun (x1482 : vscode_DecorationInstanceRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1481) "renderOptions"
                (vscode_DecorationInstanceRenderOptions_to_js x1482)
      end
    module ThemableDecorationInstanceRenderOptions =
      struct
        type t = vscode_ThemableDecorationInstanceRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1484 : Ojs.t) ->
            vscode_ThemableDecorationInstanceRenderOptions_of_js x1484
        and t_to_js : t -> Ojs.t =
          fun (x1483 : vscode_ThemableDecorationInstanceRenderOptions) ->
            vscode_ThemableDecorationInstanceRenderOptions_to_js x1483
        let (get_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1485 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1485) "before")
        let (set_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1486 : t) ->
            fun (x1487 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1486) "before"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1487)
        let (get_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1488 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1488) "after")
        let (set_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1489 : t) ->
            fun (x1490 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1489) "after"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1490)
      end
    module DecorationInstanceRenderOptions =
      struct
        include struct include ThemableDecorationInstanceRenderOptions end
        let (get_light : t -> vscode_ThemableDecorationInstanceRenderOptions)
          =
          fun (x1491 : t) ->
            vscode_ThemableDecorationInstanceRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1491) "light")
        let (set_light :
          t -> vscode_ThemableDecorationInstanceRenderOptions -> unit) =
          fun (x1492 : t) ->
            fun (x1493 : vscode_ThemableDecorationInstanceRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1492) "light"
                (vscode_ThemableDecorationInstanceRenderOptions_to_js x1493)
        let (get_dark : t -> vscode_ThemableDecorationInstanceRenderOptions)
          =
          fun (x1494 : t) ->
            vscode_ThemableDecorationInstanceRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1494) "dark")
        let (set_dark :
          t -> vscode_ThemableDecorationInstanceRenderOptions -> unit) =
          fun (x1495 : t) ->
            fun (x1496 : vscode_ThemableDecorationInstanceRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1495) "dark"
                (vscode_ThemableDecorationInstanceRenderOptions_to_js x1496)
      end
    module TextEditor =
      struct
        type t = vscode_TextEditor
        let rec t_of_js : Ojs.t -> t =
          fun (x1498 : Ojs.t) -> vscode_TextEditor_of_js x1498
        and t_to_js : t -> Ojs.t =
          fun (x1497 : vscode_TextEditor) -> vscode_TextEditor_to_js x1497
        let (get_document : t -> vscode_TextDocument) =
          fun (x1499 : t) ->
            vscode_TextDocument_of_js
              (Ojs.get_prop_ascii (t_to_js x1499) "document")
        let (get_selection : t -> vscode_Selection) =
          fun (x1500 : t) ->
            vscode_Selection_of_js
              (Ojs.get_prop_ascii (t_to_js x1500) "selection")
        let (set_selection : t -> vscode_Selection -> unit) =
          fun (x1501 : t) ->
            fun (x1502 : vscode_Selection) ->
              Ojs.set_prop_ascii (t_to_js x1501) "selection"
                (vscode_Selection_to_js x1502)
        let (get_selections : t -> vscode_Selection list) =
          fun (x1503 : t) ->
            Ojs.list_of_js vscode_Selection_of_js
              (Ojs.get_prop_ascii (t_to_js x1503) "selections")
        let (set_selections : t -> vscode_Selection list -> unit) =
          fun (x1505 : t) ->
            fun (x1506 : vscode_Selection list) ->
              Ojs.set_prop_ascii (t_to_js x1505) "selections"
                (Ojs.list_to_js vscode_Selection_to_js x1506)
        let (get_visibleRanges : t -> vscode_Range list) =
          fun (x1508 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1508) "visibleRanges")
        let (get_options : t -> vscode_TextEditorOptions) =
          fun (x1510 : t) ->
            vscode_TextEditorOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1510) "options")
        let (set_options : t -> vscode_TextEditorOptions -> unit) =
          fun (x1511 : t) ->
            fun (x1512 : vscode_TextEditorOptions) ->
              Ojs.set_prop_ascii (t_to_js x1511) "options"
                (vscode_TextEditorOptions_to_js x1512)
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x1513 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x1513) "viewColumn")
        let (edit :
          t ->
            callback:(editBuilder:vscode_TextEditorEdit -> unit) ->
              ?options:anonymous_interface_34 -> unit -> bool _Thenable)
          =
          fun (x1519 : t) ->
            fun ~callback:(x1514 : editBuilder:vscode_TextEditorEdit -> unit)
              ->
              fun ?options:(x1515 : anonymous_interface_34 option) ->
                fun () ->
                  _Thenable_of_js Ojs.bool_of_js
                    (let x1520 = t_to_js x1519 in
                     Ojs.call (Ojs.get_prop_ascii x1520 "edit") "apply"
                       [|x1520;((let x1516 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1516 "push"
                                      [|(Ojs.fun_to_js 1
                                           (fun (x1518 : Ojs.t) ->
                                              x1514
                                                ~editBuilder:(vscode_TextEditorEdit_of_js
                                                                x1518)))|]);
                                 (match x1515 with
                                  | Some x1517 ->
                                      ignore
                                        (Ojs.call x1516 "push"
                                           [|(anonymous_interface_34_to_js
                                                x1517)|])
                                  | None -> ());
                                 x1516))|])
        let (insertSnippet :
          t ->
            snippet:vscode_SnippetString ->
              ?location:(vscode_Position, vscode_Range, vscode_Position list,
                vscode_Range list) union4 ->
                ?options:anonymous_interface_34 -> unit -> bool _Thenable)
          =
          fun (x1534 : t) ->
            fun ~snippet:(x1522 : vscode_SnippetString) ->
              fun
                ?location:(x1523 :
                            (vscode_Position, vscode_Range,
                              vscode_Position list, vscode_Range list) union4
                              option)
                ->
                fun ?options:(x1524 : anonymous_interface_34 option) ->
                  fun () ->
                    _Thenable_of_js Ojs.bool_of_js
                      (let x1535 = t_to_js x1534 in
                       Ojs.call (Ojs.get_prop_ascii x1535 "insertSnippet")
                         "apply"
                         [|x1535;((let x1525 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1525 "push"
                                        [|(vscode_SnippetString_to_js x1522)|]);
                                   (match x1523 with
                                    | Some x1527 ->
                                        ignore
                                          (Ojs.call x1525 "push"
                                             [|(union4_to_js
                                                  vscode_Position_to_js
                                                  vscode_Range_to_js
                                                  (fun
                                                     (x1530 :
                                                       vscode_Position list)
                                                     ->
                                                     Ojs.list_to_js
                                                       vscode_Position_to_js
                                                       x1530)
                                                  (fun
                                                     (x1532 :
                                                       vscode_Range list)
                                                     ->
                                                     Ojs.list_to_js
                                                       vscode_Range_to_js
                                                       x1532) x1527)|])
                                    | None -> ());
                                   (match x1524 with
                                    | Some x1526 ->
                                        ignore
                                          (Ojs.call x1525 "push"
                                             [|(anonymous_interface_34_to_js
                                                  x1526)|])
                                    | None -> ());
                                   x1525))|])
        let (setDecorations :
          t ->
            decorationType:vscode_TextEditorDecorationType ->
              rangesOrOptions:(vscode_DecorationOptions, vscode_Range) union2
                list -> unit)
          =
          fun (x1542 : t) ->
            fun ~decorationType:(x1537 : vscode_TextEditorDecorationType) ->
              fun
                ~rangesOrOptions:(x1538 :
                                   (vscode_DecorationOptions, vscode_Range)
                                     union2 list)
                ->
                ignore
                  (Ojs.call (t_to_js x1542) "setDecorations"
                     [|(vscode_TextEditorDecorationType_to_js x1537);(
                       Ojs.list_to_js
                         (fun
                            (x1539 :
                              (vscode_DecorationOptions, vscode_Range) union2)
                            ->
                            union2_to_js vscode_DecorationOptions_to_js
                              vscode_Range_to_js x1539) x1538)|])
        let (revealRange :
          t ->
            range:vscode_Range ->
              ?revealType:vscode_TextEditorRevealType -> unit -> unit)
          =
          fun (x1547 : t) ->
            fun ~range:(x1543 : vscode_Range) ->
              fun ?revealType:(x1544 : vscode_TextEditorRevealType option) ->
                fun () ->
                  ignore
                    (let x1548 = t_to_js x1547 in
                     Ojs.call (Ojs.get_prop_ascii x1548 "revealRange")
                       "apply"
                       [|x1548;((let x1545 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1545 "push"
                                      [|(vscode_Range_to_js x1543)|]);
                                 (match x1544 with
                                  | Some x1546 ->
                                      ignore
                                        (Ojs.call x1545 "push"
                                           [|(vscode_TextEditorRevealType_to_js
                                                x1546)|])
                                  | None -> ());
                                 x1545))|])
        let (show : t -> ?column:vscode_ViewColumn -> unit -> unit) =
          fun (x1552 : t) ->
            fun ?column:(x1549 : vscode_ViewColumn option) ->
              fun () ->
                ignore
                  (let x1553 = t_to_js x1552 in
                   Ojs.call (Ojs.get_prop_ascii x1553 "show") "apply"
                     [|x1553;((let x1550 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x1549 with
                                | Some x1551 ->
                                    ignore
                                      (Ojs.call x1550 "push"
                                         [|(vscode_ViewColumn_to_js x1551)|])
                                | None -> ());
                               x1550))|])
        let (hide : t -> unit) =
          fun (x1554 : t) -> ignore (Ojs.call (t_to_js x1554) "hide" [||])
      end
    module EndOfLine =
      struct
        type t = vscode_EndOfLine
        let rec t_of_js : Ojs.t -> t =
          fun (x1556 : Ojs.t) -> vscode_EndOfLine_of_js x1556
        and t_to_js : t -> Ojs.t =
          fun (x1555 : vscode_EndOfLine) -> vscode_EndOfLine_to_js x1555
      end
    module TextEditorEdit =
      struct
        type t = vscode_TextEditorEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x1558 : Ojs.t) -> vscode_TextEditorEdit_of_js x1558
        and t_to_js : t -> Ojs.t =
          fun (x1557 : vscode_TextEditorEdit) ->
            vscode_TextEditorEdit_to_js x1557
        let (replace :
          t ->
            location:(vscode_Position, vscode_Range, vscode_Selection) union3
              -> value:string -> unit)
          =
          fun (x1564 : t) ->
            fun
              ~location:(x1559 :
                          (vscode_Position, vscode_Range, vscode_Selection)
                            union3)
              ->
              fun ~value:(x1563 : string) ->
                ignore
                  (Ojs.call (t_to_js x1564) "replace"
                     [|(union3_to_js vscode_Position_to_js vscode_Range_to_js
                          vscode_Selection_to_js x1559);(Ojs.string_to_js
                                                           x1563)|])
        let (insert : t -> location:vscode_Position -> value:string -> unit)
          =
          fun (x1567 : t) ->
            fun ~location:(x1565 : vscode_Position) ->
              fun ~value:(x1566 : string) ->
                ignore
                  (Ojs.call (t_to_js x1567) "insert"
                     [|(vscode_Position_to_js x1565);(Ojs.string_to_js x1566)|])
        let (delete :
          t -> location:(vscode_Range, vscode_Selection) union2 -> unit) =
          fun (x1571 : t) ->
            fun ~location:(x1568 : (vscode_Range, vscode_Selection) union2)
              ->
              ignore
                (Ojs.call (t_to_js x1571) "delete"
                   [|(union2_to_js vscode_Range_to_js vscode_Selection_to_js
                        x1568)|])
        let (setEndOfLine : t -> endOfLine:vscode_EndOfLine -> unit) =
          fun (x1573 : t) ->
            fun ~endOfLine:(x1572 : vscode_EndOfLine) ->
              ignore
                (Ojs.call (t_to_js x1573) "setEndOfLine"
                   [|(vscode_EndOfLine_to_js x1572)|])
      end
    module Uri =
      struct
        type t = vscode_Uri
        let rec t_of_js : Ojs.t -> t =
          fun (x1575 : Ojs.t) -> vscode_Uri_of_js x1575
        and t_to_js : t -> Ojs.t =
          fun (x1574 : vscode_Uri) -> vscode_Uri_to_js x1574
        let (parse : value:string -> ?strict:bool -> unit -> t) =
          fun ~value:(x1576 : string) ->
            fun ?strict:(x1577 : bool option) ->
              fun () ->
                t_of_js
                  (let x1580 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "Uri" in
                   Ojs.call (Ojs.get_prop_ascii x1580 "parse") "apply"
                     [|x1580;((let x1578 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1578 "push"
                                    [|(Ojs.string_to_js x1576)|]);
                               (match x1577 with
                                | Some x1579 ->
                                    ignore
                                      (Ojs.call x1578 "push"
                                         [|(Ojs.bool_to_js x1579)|])
                                | None -> ());
                               x1578))|])
        let (file : path:string -> t) =
          fun ~path:(x1581 : string) ->
            t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "Uri") "file" [|(Ojs.string_to_js x1581)|])
        let (joinPath : base:t -> pathSegments:string list -> t) =
          fun ~base:(x1582 : t) ->
            fun ~pathSegments:(x1583 : string list) ->
              t_of_js
                (let x1586 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "Uri" in
                 Ojs.call (Ojs.get_prop_ascii x1586 "joinPath") "apply"
                   [|x1586;((let x1584 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1584 "push" [|(t_to_js x1582)|]);
                             List.iter
                               (fun (x1585 : string) ->
                                  ignore
                                    (Ojs.call x1584 "push"
                                       [|(Ojs.string_to_js x1585)|])) x1583;
                             x1584))|])
        let (create :
          scheme:string ->
            authority:string ->
              path:string -> query:string -> fragment:string -> t)
          =
          fun ~scheme:(x1587 : string) ->
            fun ~authority:(x1588 : string) ->
              fun ~path:(x1589 : string) ->
                fun ~query:(x1590 : string) ->
                  fun ~fragment:(x1591 : string) ->
                    t_of_js
                      (Ojs.new_obj
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode") "Uri")
                         [|(Ojs.string_to_js x1587);(Ojs.string_to_js x1588);(
                           Ojs.string_to_js x1589);(Ojs.string_to_js x1590);(
                           Ojs.string_to_js x1591)|])
        let (get_scheme : t -> string) =
          fun (x1592 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1592) "scheme")
        let (get_authority : t -> string) =
          fun (x1593 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1593) "authority")
        let (get_path : t -> string) =
          fun (x1594 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1594) "path")
        let (get_query : t -> string) =
          fun (x1595 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1595) "query")
        let (get_fragment : t -> string) =
          fun (x1596 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1596) "fragment")
        let (get_fsPath : t -> string) =
          fun (x1597 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1597) "fsPath")
        let (with_ : t -> change:anonymous_interface_30 -> t) =
          fun (x1599 : t) ->
            fun ~change:(x1598 : anonymous_interface_30) ->
              t_of_js
                (Ojs.call (t_to_js x1599) "with"
                   [|(anonymous_interface_30_to_js x1598)|])
        let (toString : t -> ?skipEncoding:bool -> unit -> string) =
          fun (x1603 : t) ->
            fun ?skipEncoding:(x1600 : bool option) ->
              fun () ->
                Ojs.string_of_js
                  (let x1604 = t_to_js x1603 in
                   Ojs.call (Ojs.get_prop_ascii x1604 "toString") "apply"
                     [|x1604;((let x1601 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x1600 with
                                | Some x1602 ->
                                    ignore
                                      (Ojs.call x1601 "push"
                                         [|(Ojs.bool_to_js x1602)|])
                                | None -> ());
                               x1601))|])
        let (toJSON : t -> any) =
          fun (x1605 : t) ->
            any_of_js (Ojs.call (t_to_js x1605) "toJSON" [||])
      end
    module CancellationToken =
      struct
        type t = vscode_CancellationToken
        let rec t_of_js : Ojs.t -> t =
          fun (x1607 : Ojs.t) -> vscode_CancellationToken_of_js x1607
        and t_to_js : t -> Ojs.t =
          fun (x1606 : vscode_CancellationToken) ->
            vscode_CancellationToken_to_js x1606
        let (get_isCancellationRequested : t -> bool) =
          fun (x1608 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1608) "isCancellationRequested")
        let (set_isCancellationRequested : t -> bool -> unit) =
          fun (x1609 : t) ->
            fun (x1610 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1609) "isCancellationRequested"
                (Ojs.bool_to_js x1610)
        let (get_onCancellationRequested : t -> any vscode_Event) =
          fun (x1611 : t) ->
            vscode_Event_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x1611) "onCancellationRequested")
        let (set_onCancellationRequested : t -> any vscode_Event -> unit) =
          fun (x1613 : t) ->
            fun (x1614 : any vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1613) "onCancellationRequested"
                (vscode_Event_to_js any_to_js x1614)
      end
    module CancellationTokenSource =
      struct
        type t = vscode_CancellationTokenSource
        let rec t_of_js : Ojs.t -> t =
          fun (x1617 : Ojs.t) -> vscode_CancellationTokenSource_of_js x1617
        and t_to_js : t -> Ojs.t =
          fun (x1616 : vscode_CancellationTokenSource) ->
            vscode_CancellationTokenSource_to_js x1616
        let (get_token : t -> vscode_CancellationToken) =
          fun (x1618 : t) ->
            vscode_CancellationToken_of_js
              (Ojs.get_prop_ascii (t_to_js x1618) "token")
        let (set_token : t -> vscode_CancellationToken -> unit) =
          fun (x1619 : t) ->
            fun (x1620 : vscode_CancellationToken) ->
              Ojs.set_prop_ascii (t_to_js x1619) "token"
                (vscode_CancellationToken_to_js x1620)
        let (cancel : t -> unit) =
          fun (x1621 : t) -> ignore (Ojs.call (t_to_js x1621) "cancel" [||])
        let (dispose : t -> unit) =
          fun (x1622 : t) -> ignore (Ojs.call (t_to_js x1622) "dispose" [||])
      end
    module CancellationError =
      struct
        include struct include Error end
        let (create : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CancellationError") [||])
      end
    module Disposable =
      struct
        type t = vscode_Disposable
        let rec t_of_js : Ojs.t -> t =
          fun (x1624 : Ojs.t) -> vscode_Disposable_of_js x1624
        and t_to_js : t -> Ojs.t =
          fun (x1623 : vscode_Disposable) -> vscode_Disposable_to_js x1623
        let (from : disposableLikes:anonymous_interface_5 list -> t) =
          fun ~disposableLikes:(x1625 : anonymous_interface_5 list) ->
            t_of_js
              (let x1628 =
                 Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                   "Disposable" in
               Ojs.call (Ojs.get_prop_ascii x1628 "from") "apply"
                 [|x1628;((let x1626 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x1627 : anonymous_interface_5) ->
                                ignore
                                  (Ojs.call x1626 "push"
                                     [|(anonymous_interface_5_to_js x1627)|]))
                             x1625;
                           x1626))|])
        let (create : callOnDispose:untyped_function -> t) =
          fun ~callOnDispose:(x1629 : untyped_function) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "Disposable") [|(untyped_function_to_js x1629)|])
        let (dispose : t -> any) =
          fun (x1630 : t) ->
            any_of_js (Ojs.call (t_to_js x1630) "dispose" [||])
      end
    module Event =
      struct
        type 'T t = 'T vscode_Event
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1633 : Ojs.t) -> vscode_Event_of_js __T_of_js x1633
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1631 : __T vscode_Event) ->
              vscode_Event_to_js __T_to_js x1631
        let (apply :
          'T t ->
            listener:(e:'T -> any) ->
              ?thisArgs:any ->
                ?disposables:vscode_Disposable list ->
                  unit -> vscode_Disposable)
          =
          fun (x1643 : 'T t) ->
            fun ~listener:(x1635 : e:'T -> any) ->
              fun ?thisArgs:(x1636 : any option) ->
                fun ?disposables:(x1637 : vscode_Disposable list option) ->
                  fun () ->
                    vscode_Disposable_of_js
                      (Ojs.call (t_to_js Obj.magic x1643) "apply"
                         [|Ojs.null;((let x1638 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      ignore
                                        (Ojs.call x1638 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1642 : Ojs.t) ->
                                                   any_to_js
                                                     (x1635
                                                        ~e:(Obj.magic x1642))))|]);
                                      (match x1636 with
                                       | Some x1641 ->
                                           ignore
                                             (Ojs.call x1638 "push"
                                                [|(any_to_js x1641)|])
                                       | None -> ());
                                      (match x1637 with
                                       | Some x1639 ->
                                           ignore
                                             (Ojs.call x1638 "push"
                                                [|(Ojs.list_to_js
                                                     vscode_Disposable_to_js
                                                     x1639)|])
                                       | None -> ());
                                      x1638))|])
      end
    module EventEmitter =
      struct
        type 'T t = 'T vscode_EventEmitter
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1647 : Ojs.t) -> vscode_EventEmitter_of_js __T_of_js x1647
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1645 : __T vscode_EventEmitter) ->
              vscode_EventEmitter_to_js __T_to_js x1645
        let (get_event : 'T t -> 'T vscode_Event) =
          fun (x1649 : 'T t) ->
            vscode_Event_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x1649) "event")
        let (set_event : 'T t -> 'T vscode_Event -> unit) =
          fun (x1652 : 'T t) ->
            fun (x1653 : 'T vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x1652) "event"
                (vscode_Event_to_js Obj.magic x1653)
        let (fire : 'T t -> data:'T -> unit) =
          fun (x1657 : 'T t) ->
            fun ~data:(x1656 : 'T) ->
              ignore
                (Ojs.call (t_to_js Obj.magic x1657) "fire"
                   [|(Obj.magic x1656)|])
        let (dispose : 'T t -> unit) =
          fun (x1659 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x1659) "dispose" [||])
      end
    module FileSystemWatcher =
      struct
        include struct include Disposable end
        let (get_ignoreCreateEvents : t -> bool) =
          fun (x1661 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1661) "ignoreCreateEvents")
        let (set_ignoreCreateEvents : t -> bool -> unit) =
          fun (x1662 : t) ->
            fun (x1663 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1662) "ignoreCreateEvents"
                (Ojs.bool_to_js x1663)
        let (get_ignoreChangeEvents : t -> bool) =
          fun (x1664 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1664) "ignoreChangeEvents")
        let (set_ignoreChangeEvents : t -> bool -> unit) =
          fun (x1665 : t) ->
            fun (x1666 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1665) "ignoreChangeEvents"
                (Ojs.bool_to_js x1666)
        let (get_ignoreDeleteEvents : t -> bool) =
          fun (x1667 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1667) "ignoreDeleteEvents")
        let (set_ignoreDeleteEvents : t -> bool -> unit) =
          fun (x1668 : t) ->
            fun (x1669 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1668) "ignoreDeleteEvents"
                (Ojs.bool_to_js x1669)
        let (get_onDidCreate : t -> vscode_Uri vscode_Event) =
          fun (x1670 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1670) "onDidCreate")
        let (set_onDidCreate : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1672 : t) ->
            fun (x1673 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1672) "onDidCreate"
                (vscode_Event_to_js vscode_Uri_to_js x1673)
        let (get_onDidChange : t -> vscode_Uri vscode_Event) =
          fun (x1675 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1675) "onDidChange")
        let (set_onDidChange : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1677 : t) ->
            fun (x1678 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1677) "onDidChange"
                (vscode_Event_to_js vscode_Uri_to_js x1678)
        let (get_onDidDelete : t -> vscode_Uri vscode_Event) =
          fun (x1680 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1680) "onDidDelete")
        let (set_onDidDelete : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1682 : t) ->
            fun (x1683 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1682) "onDidDelete"
                (vscode_Event_to_js vscode_Uri_to_js x1683)
      end
    module TextDocumentContentProvider =
      struct
        type t = vscode_TextDocumentContentProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1686 : Ojs.t) ->
            vscode_TextDocumentContentProvider_of_js x1686
        and t_to_js : t -> Ojs.t =
          fun (x1685 : vscode_TextDocumentContentProvider) ->
            vscode_TextDocumentContentProvider_to_js x1685
        let (get_onDidChange : t -> vscode_Uri vscode_Event) =
          fun (x1687 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1687) "onDidChange")
        let (set_onDidChange : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1689 : t) ->
            fun (x1690 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1689) "onDidChange"
                (vscode_Event_to_js vscode_Uri_to_js x1690)
        let (provideTextDocumentContent :
          t ->
            uri:vscode_Uri ->
              token:vscode_CancellationToken -> string vscode_ProviderResult)
          =
          fun (x1694 : t) ->
            fun ~uri:(x1692 : vscode_Uri) ->
              fun ~token:(x1693 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Ojs.string_of_js
                  (Ojs.call (t_to_js x1694) "provideTextDocumentContent"
                     [|(vscode_Uri_to_js x1692);(vscode_CancellationToken_to_js
                                                   x1693)|])
      end
    module QuickPickItem =
      struct
        type t = vscode_QuickPickItem
        let rec t_of_js : Ojs.t -> t =
          fun (x1697 : Ojs.t) -> vscode_QuickPickItem_of_js x1697
        and t_to_js : t -> Ojs.t =
          fun (x1696 : vscode_QuickPickItem) ->
            vscode_QuickPickItem_to_js x1696
        let (get_label : t -> string) =
          fun (x1698 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1698) "label")
        let (set_label : t -> string -> unit) =
          fun (x1699 : t) ->
            fun (x1700 : string) ->
              Ojs.set_prop_ascii (t_to_js x1699) "label"
                (Ojs.string_to_js x1700)
        let (get_description : t -> string) =
          fun (x1701 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1701) "description")
        let (set_description : t -> string -> unit) =
          fun (x1702 : t) ->
            fun (x1703 : string) ->
              Ojs.set_prop_ascii (t_to_js x1702) "description"
                (Ojs.string_to_js x1703)
        let (get_detail : t -> string) =
          fun (x1704 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1704) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x1705 : t) ->
            fun (x1706 : string) ->
              Ojs.set_prop_ascii (t_to_js x1705) "detail"
                (Ojs.string_to_js x1706)
        let (get_picked : t -> bool) =
          fun (x1707 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1707) "picked")
        let (set_picked : t -> bool -> unit) =
          fun (x1708 : t) ->
            fun (x1709 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1708) "picked"
                (Ojs.bool_to_js x1709)
        let (get_alwaysShow : t -> bool) =
          fun (x1710 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1710) "alwaysShow")
        let (set_alwaysShow : t -> bool -> unit) =
          fun (x1711 : t) ->
            fun (x1712 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1711) "alwaysShow"
                (Ojs.bool_to_js x1712)
      end
    module QuickPickOptions =
      struct
        type t = vscode_QuickPickOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1714 : Ojs.t) -> vscode_QuickPickOptions_of_js x1714
        and t_to_js : t -> Ojs.t =
          fun (x1713 : vscode_QuickPickOptions) ->
            vscode_QuickPickOptions_to_js x1713
        let (get_matchOnDescription : t -> bool) =
          fun (x1715 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1715) "matchOnDescription")
        let (set_matchOnDescription : t -> bool -> unit) =
          fun (x1716 : t) ->
            fun (x1717 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1716) "matchOnDescription"
                (Ojs.bool_to_js x1717)
        let (get_matchOnDetail : t -> bool) =
          fun (x1718 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1718) "matchOnDetail")
        let (set_matchOnDetail : t -> bool -> unit) =
          fun (x1719 : t) ->
            fun (x1720 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1719) "matchOnDetail"
                (Ojs.bool_to_js x1720)
        let (get_placeHolder : t -> string) =
          fun (x1721 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1721) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x1722 : t) ->
            fun (x1723 : string) ->
              Ojs.set_prop_ascii (t_to_js x1722) "placeHolder"
                (Ojs.string_to_js x1723)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x1724 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1724) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x1725 : t) ->
            fun (x1726 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1725) "ignoreFocusOut"
                (Ojs.bool_to_js x1726)
        let (get_canPickMany : t -> bool) =
          fun (x1727 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1727) "canPickMany")
        let (set_canPickMany : t -> bool -> unit) =
          fun (x1728 : t) ->
            fun (x1729 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1728) "canPickMany"
                (Ojs.bool_to_js x1729)
        let (onDidSelectItem :
          t -> item:vscode_QuickPickItem or_string -> any) =
          fun (x1732 : t) ->
            fun ~item:(x1730 : vscode_QuickPickItem or_string) ->
              any_of_js
                (Ojs.call (t_to_js x1732) "onDidSelectItem"
                   [|(or_string_to_js vscode_QuickPickItem_to_js x1730)|])
      end
    module WorkspaceFolderPickOptions =
      struct
        type t = vscode_WorkspaceFolderPickOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1734 : Ojs.t) ->
            vscode_WorkspaceFolderPickOptions_of_js x1734
        and t_to_js : t -> Ojs.t =
          fun (x1733 : vscode_WorkspaceFolderPickOptions) ->
            vscode_WorkspaceFolderPickOptions_to_js x1733
        let (get_placeHolder : t -> string) =
          fun (x1735 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1735) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x1736 : t) ->
            fun (x1737 : string) ->
              Ojs.set_prop_ascii (t_to_js x1736) "placeHolder"
                (Ojs.string_to_js x1737)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x1738 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1738) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x1739 : t) ->
            fun (x1740 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1739) "ignoreFocusOut"
                (Ojs.bool_to_js x1740)
      end
    module OpenDialogOptions =
      struct
        type t = vscode_OpenDialogOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1742 : Ojs.t) -> vscode_OpenDialogOptions_of_js x1742
        and t_to_js : t -> Ojs.t =
          fun (x1741 : vscode_OpenDialogOptions) ->
            vscode_OpenDialogOptions_to_js x1741
        let (get_defaultUri : t -> vscode_Uri) =
          fun (x1743 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1743) "defaultUri")
        let (set_defaultUri : t -> vscode_Uri -> unit) =
          fun (x1744 : t) ->
            fun (x1745 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x1744) "defaultUri"
                (vscode_Uri_to_js x1745)
        let (get_openLabel : t -> string) =
          fun (x1746 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1746) "openLabel")
        let (set_openLabel : t -> string -> unit) =
          fun (x1747 : t) ->
            fun (x1748 : string) ->
              Ojs.set_prop_ascii (t_to_js x1747) "openLabel"
                (Ojs.string_to_js x1748)
        let (get_canSelectFiles : t -> bool) =
          fun (x1749 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1749) "canSelectFiles")
        let (set_canSelectFiles : t -> bool -> unit) =
          fun (x1750 : t) ->
            fun (x1751 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1750) "canSelectFiles"
                (Ojs.bool_to_js x1751)
        let (get_canSelectFolders : t -> bool) =
          fun (x1752 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1752) "canSelectFolders")
        let (set_canSelectFolders : t -> bool -> unit) =
          fun (x1753 : t) ->
            fun (x1754 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1753) "canSelectFolders"
                (Ojs.bool_to_js x1754)
        let (get_canSelectMany : t -> bool) =
          fun (x1755 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1755) "canSelectMany")
        let (set_canSelectMany : t -> bool -> unit) =
          fun (x1756 : t) ->
            fun (x1757 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1756) "canSelectMany"
                (Ojs.bool_to_js x1757)
        let (get_filters : t -> anonymous_interface_46) =
          fun (x1758 : t) ->
            anonymous_interface_46_of_js
              (Ojs.get_prop_ascii (t_to_js x1758) "filters")
        let (set_filters : t -> anonymous_interface_46 -> unit) =
          fun (x1759 : t) ->
            fun (x1760 : anonymous_interface_46) ->
              Ojs.set_prop_ascii (t_to_js x1759) "filters"
                (anonymous_interface_46_to_js x1760)
        let (get_title : t -> string) =
          fun (x1761 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1761) "title")
        let (set_title : t -> string -> unit) =
          fun (x1762 : t) ->
            fun (x1763 : string) ->
              Ojs.set_prop_ascii (t_to_js x1762) "title"
                (Ojs.string_to_js x1763)
      end
    module SaveDialogOptions =
      struct
        type t = vscode_SaveDialogOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1765 : Ojs.t) -> vscode_SaveDialogOptions_of_js x1765
        and t_to_js : t -> Ojs.t =
          fun (x1764 : vscode_SaveDialogOptions) ->
            vscode_SaveDialogOptions_to_js x1764
        let (get_defaultUri : t -> vscode_Uri) =
          fun (x1766 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1766) "defaultUri")
        let (set_defaultUri : t -> vscode_Uri -> unit) =
          fun (x1767 : t) ->
            fun (x1768 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x1767) "defaultUri"
                (vscode_Uri_to_js x1768)
        let (get_saveLabel : t -> string) =
          fun (x1769 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1769) "saveLabel")
        let (set_saveLabel : t -> string -> unit) =
          fun (x1770 : t) ->
            fun (x1771 : string) ->
              Ojs.set_prop_ascii (t_to_js x1770) "saveLabel"
                (Ojs.string_to_js x1771)
        let (get_filters : t -> anonymous_interface_46) =
          fun (x1772 : t) ->
            anonymous_interface_46_of_js
              (Ojs.get_prop_ascii (t_to_js x1772) "filters")
        let (set_filters : t -> anonymous_interface_46 -> unit) =
          fun (x1773 : t) ->
            fun (x1774 : anonymous_interface_46) ->
              Ojs.set_prop_ascii (t_to_js x1773) "filters"
                (anonymous_interface_46_to_js x1774)
        let (get_title : t -> string) =
          fun (x1775 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1775) "title")
        let (set_title : t -> string -> unit) =
          fun (x1776 : t) ->
            fun (x1777 : string) ->
              Ojs.set_prop_ascii (t_to_js x1776) "title"
                (Ojs.string_to_js x1777)
      end
    module MessageItem =
      struct
        type t = vscode_MessageItem
        let rec t_of_js : Ojs.t -> t =
          fun (x1779 : Ojs.t) -> vscode_MessageItem_of_js x1779
        and t_to_js : t -> Ojs.t =
          fun (x1778 : vscode_MessageItem) -> vscode_MessageItem_to_js x1778
        let (get_title : t -> string) =
          fun (x1780 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1780) "title")
        let (set_title : t -> string -> unit) =
          fun (x1781 : t) ->
            fun (x1782 : string) ->
              Ojs.set_prop_ascii (t_to_js x1781) "title"
                (Ojs.string_to_js x1782)
        let (get_isCloseAffordance : t -> bool) =
          fun (x1783 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1783) "isCloseAffordance")
        let (set_isCloseAffordance : t -> bool -> unit) =
          fun (x1784 : t) ->
            fun (x1785 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1784) "isCloseAffordance"
                (Ojs.bool_to_js x1785)
      end
    module MessageOptions =
      struct
        type t = vscode_MessageOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1787 : Ojs.t) -> vscode_MessageOptions_of_js x1787
        and t_to_js : t -> Ojs.t =
          fun (x1786 : vscode_MessageOptions) ->
            vscode_MessageOptions_to_js x1786
        let (get_modal : t -> bool) =
          fun (x1788 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1788) "modal")
        let (set_modal : t -> bool -> unit) =
          fun (x1789 : t) ->
            fun (x1790 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1789) "modal"
                (Ojs.bool_to_js x1790)
      end
    module InputBoxOptions =
      struct
        type t = vscode_InputBoxOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1792 : Ojs.t) -> vscode_InputBoxOptions_of_js x1792
        and t_to_js : t -> Ojs.t =
          fun (x1791 : vscode_InputBoxOptions) ->
            vscode_InputBoxOptions_to_js x1791
        let (get_value : t -> string) =
          fun (x1793 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1793) "value")
        let (set_value : t -> string -> unit) =
          fun (x1794 : t) ->
            fun (x1795 : string) ->
              Ojs.set_prop_ascii (t_to_js x1794) "value"
                (Ojs.string_to_js x1795)
        let (get_valueSelection : t -> (float * float)) =
          fun (x1796 : t) ->
            let x1797 = Ojs.get_prop_ascii (t_to_js x1796) "valueSelection" in
            ((Ojs.float_of_js (Ojs.array_get x1797 0)),
              (Ojs.float_of_js (Ojs.array_get x1797 1)))
        let (set_valueSelection : t -> (float * float) -> unit) =
          fun (x1798 : t) ->
            fun (x1799 : (float * float)) ->
              Ojs.set_prop_ascii (t_to_js x1798) "valueSelection"
                (let (x1800, x1801) = x1799 in
                 let x1802 = Ojs.array_make 2 in
                 Ojs.array_set x1802 0 (Ojs.float_to_js x1800);
                 Ojs.array_set x1802 1 (Ojs.float_to_js x1801);
                 x1802)
        let (get_prompt : t -> string) =
          fun (x1803 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1803) "prompt")
        let (set_prompt : t -> string -> unit) =
          fun (x1804 : t) ->
            fun (x1805 : string) ->
              Ojs.set_prop_ascii (t_to_js x1804) "prompt"
                (Ojs.string_to_js x1805)
        let (get_placeHolder : t -> string) =
          fun (x1806 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1806) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x1807 : t) ->
            fun (x1808 : string) ->
              Ojs.set_prop_ascii (t_to_js x1807) "placeHolder"
                (Ojs.string_to_js x1808)
        let (get_password : t -> bool) =
          fun (x1809 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1809) "password")
        let (set_password : t -> bool -> unit) =
          fun (x1810 : t) ->
            fun (x1811 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1810) "password"
                (Ojs.bool_to_js x1811)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x1812 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1812) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x1813 : t) ->
            fun (x1814 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1813) "ignoreFocusOut"
                (Ojs.bool_to_js x1814)
        let (validateInput :
          t ->
            value:string ->
              string or_null_or_undefined _Thenable or_string
                or_null_or_undefined)
          =
          fun (x1816 : t) ->
            fun ~value:(x1815 : string) ->
              or_null_or_undefined_of_js
                (fun (x1817 : Ojs.t) ->
                   or_string_of_js
                     (fun (x1818 : Ojs.t) ->
                        _Thenable_of_js
                          (fun (x1819 : Ojs.t) ->
                             or_null_or_undefined_of_js Ojs.string_of_js
                               x1819) x1818) x1817)
                (Ojs.call (t_to_js x1816) "validateInput"
                   [|(Ojs.string_to_js x1815)|])
      end
    module RelativePattern =
      struct
        type t = vscode_RelativePattern
        let rec t_of_js : Ojs.t -> t =
          fun (x1822 : Ojs.t) -> vscode_RelativePattern_of_js x1822
        and t_to_js : t -> Ojs.t =
          fun (x1821 : vscode_RelativePattern) ->
            vscode_RelativePattern_to_js x1821
        let (get_base : t -> string) =
          fun (x1823 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1823) "base")
        let (set_base : t -> string -> unit) =
          fun (x1824 : t) ->
            fun (x1825 : string) ->
              Ojs.set_prop_ascii (t_to_js x1824) "base"
                (Ojs.string_to_js x1825)
        let (get_pattern : t -> string) =
          fun (x1826 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1826) "pattern")
        let (set_pattern : t -> string -> unit) =
          fun (x1827 : t) ->
            fun (x1828 : string) ->
              Ojs.set_prop_ascii (t_to_js x1827) "pattern"
                (Ojs.string_to_js x1828)
        let (create :
          base:(vscode_Uri, vscode_WorkspaceFolder) union2 or_string ->
            pattern:string -> t)
          =
          fun
            ~base:(x1829 :
                    (vscode_Uri, vscode_WorkspaceFolder) union2 or_string)
            ->
            fun ~pattern:(x1833 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "RelativePattern")
                   [|(or_string_to_js
                        (fun
                           (x1830 :
                             (vscode_Uri, vscode_WorkspaceFolder) union2)
                           ->
                           union2_to_js vscode_Uri_to_js
                             vscode_WorkspaceFolder_to_js x1830) x1829);(
                     Ojs.string_to_js x1833)|])
      end
    module GlobPattern =
      struct
        type t = vscode_GlobPattern
        let rec t_of_js : Ojs.t -> t =
          fun (x1835 : Ojs.t) -> vscode_GlobPattern_of_js x1835
        and t_to_js : t -> Ojs.t =
          fun (x1834 : vscode_GlobPattern) -> vscode_GlobPattern_to_js x1834
      end
    module DocumentFilter =
      struct
        type t = vscode_DocumentFilter
        let rec t_of_js : Ojs.t -> t =
          fun (x1837 : Ojs.t) -> vscode_DocumentFilter_of_js x1837
        and t_to_js : t -> Ojs.t =
          fun (x1836 : vscode_DocumentFilter) ->
            vscode_DocumentFilter_to_js x1836
        let (get_language : t -> string) =
          fun (x1838 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1838) "language")
        let (get_scheme : t -> string) =
          fun (x1839 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1839) "scheme")
        let (get_pattern : t -> vscode_GlobPattern) =
          fun (x1840 : t) ->
            vscode_GlobPattern_of_js
              (Ojs.get_prop_ascii (t_to_js x1840) "pattern")
      end
    module DocumentSelector =
      struct
        type t = vscode_DocumentSelector
        let rec t_of_js : Ojs.t -> t =
          fun (x1842 : Ojs.t) -> vscode_DocumentSelector_of_js x1842
        and t_to_js : t -> Ojs.t =
          fun (x1841 : vscode_DocumentSelector) ->
            vscode_DocumentSelector_to_js x1841
      end
    module ProviderResult =
      struct
        type 'T t = 'T vscode_ProviderResult
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1845 : Ojs.t) ->
              vscode_ProviderResult_of_js __T_of_js x1845
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1843 : __T vscode_ProviderResult) ->
              vscode_ProviderResult_to_js __T_to_js x1843
      end
    module CodeActionKind =
      struct
        type t = vscode_CodeActionKind
        let rec t_of_js : Ojs.t -> t =
          fun (x1848 : Ojs.t) -> vscode_CodeActionKind_of_js x1848
        and t_to_js : t -> Ojs.t =
          fun (x1847 : vscode_CodeActionKind) ->
            vscode_CodeActionKind_to_js x1847
        let (get_Empty : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "Empty")
        let (get_QuickFix : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "QuickFix")
        let (get_Refactor : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "Refactor")
        let (get_RefactorExtract : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "RefactorExtract")
        let (get_RefactorInline : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "RefactorInline")
        let (get_RefactorRewrite : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "RefactorRewrite")
        let (get_Source : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "Source")
        let (get_SourceOrganizeImports : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "SourceOrganizeImports")
        let (get_SourceFixAll : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "SourceFixAll")
        let (create : value:string -> t) =
          fun ~value:(x1849 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") [|(Ojs.string_to_js x1849)|])
        let (get_value : t -> string) =
          fun (x1850 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1850) "value")
        let (append : t -> parts:string -> t) =
          fun (x1852 : t) ->
            fun ~parts:(x1851 : string) ->
              t_of_js
                (Ojs.call (t_to_js x1852) "append"
                   [|(Ojs.string_to_js x1851)|])
        let (intersects : t -> other:t -> bool) =
          fun (x1854 : t) ->
            fun ~other:(x1853 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1854) "intersects" [|(t_to_js x1853)|])
        let (contains : t -> other:t -> bool) =
          fun (x1856 : t) ->
            fun ~other:(x1855 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1856) "contains" [|(t_to_js x1855)|])
      end
    module CodeActionTriggerKind =
      struct
        type t = vscode_CodeActionTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x1858 : Ojs.t) -> vscode_CodeActionTriggerKind_of_js x1858
        and t_to_js : t -> Ojs.t =
          fun (x1857 : vscode_CodeActionTriggerKind) ->
            vscode_CodeActionTriggerKind_to_js x1857
      end
    module CodeActionContext =
      struct
        type t = vscode_CodeActionContext
        let rec t_of_js : Ojs.t -> t =
          fun (x1860 : Ojs.t) -> vscode_CodeActionContext_of_js x1860
        and t_to_js : t -> Ojs.t =
          fun (x1859 : vscode_CodeActionContext) ->
            vscode_CodeActionContext_to_js x1859
        let (get_triggerKind : t -> vscode_CodeActionTriggerKind) =
          fun (x1861 : t) ->
            vscode_CodeActionTriggerKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1861) "triggerKind")
        let (get_diagnostics : t -> vscode_Diagnostic list) =
          fun (x1862 : t) ->
            Ojs.list_of_js vscode_Diagnostic_of_js
              (Ojs.get_prop_ascii (t_to_js x1862) "diagnostics")
        let (get_only : t -> vscode_CodeActionKind) =
          fun (x1864 : t) ->
            vscode_CodeActionKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1864) "only")
      end
    module CodeAction =
      struct
        type t = vscode_CodeAction
        let rec t_of_js : Ojs.t -> t =
          fun (x1866 : Ojs.t) -> vscode_CodeAction_of_js x1866
        and t_to_js : t -> Ojs.t =
          fun (x1865 : vscode_CodeAction) -> vscode_CodeAction_to_js x1865
        let (get_title : t -> string) =
          fun (x1867 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1867) "title")
        let (set_title : t -> string -> unit) =
          fun (x1868 : t) ->
            fun (x1869 : string) ->
              Ojs.set_prop_ascii (t_to_js x1868) "title"
                (Ojs.string_to_js x1869)
        let (get_edit : t -> vscode_WorkspaceEdit) =
          fun (x1870 : t) ->
            vscode_WorkspaceEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x1870) "edit")
        let (set_edit : t -> vscode_WorkspaceEdit -> unit) =
          fun (x1871 : t) ->
            fun (x1872 : vscode_WorkspaceEdit) ->
              Ojs.set_prop_ascii (t_to_js x1871) "edit"
                (vscode_WorkspaceEdit_to_js x1872)
        let (get_diagnostics : t -> vscode_Diagnostic list) =
          fun (x1873 : t) ->
            Ojs.list_of_js vscode_Diagnostic_of_js
              (Ojs.get_prop_ascii (t_to_js x1873) "diagnostics")
        let (set_diagnostics : t -> vscode_Diagnostic list -> unit) =
          fun (x1875 : t) ->
            fun (x1876 : vscode_Diagnostic list) ->
              Ojs.set_prop_ascii (t_to_js x1875) "diagnostics"
                (Ojs.list_to_js vscode_Diagnostic_to_js x1876)
        let (get_command : t -> vscode_Command) =
          fun (x1878 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x1878) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x1879 : t) ->
            fun (x1880 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x1879) "command"
                (vscode_Command_to_js x1880)
        let (get_kind : t -> vscode_CodeActionKind) =
          fun (x1881 : t) ->
            vscode_CodeActionKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1881) "kind")
        let (set_kind : t -> vscode_CodeActionKind -> unit) =
          fun (x1882 : t) ->
            fun (x1883 : vscode_CodeActionKind) ->
              Ojs.set_prop_ascii (t_to_js x1882) "kind"
                (vscode_CodeActionKind_to_js x1883)
        let (get_isPreferred : t -> bool) =
          fun (x1884 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1884) "isPreferred")
        let (set_isPreferred : t -> bool -> unit) =
          fun (x1885 : t) ->
            fun (x1886 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1885) "isPreferred"
                (Ojs.bool_to_js x1886)
        let (get_disabled : t -> anonymous_interface_24) =
          fun (x1887 : t) ->
            anonymous_interface_24_of_js
              (Ojs.get_prop_ascii (t_to_js x1887) "disabled")
        let (set_disabled : t -> anonymous_interface_24 -> unit) =
          fun (x1888 : t) ->
            fun (x1889 : anonymous_interface_24) ->
              Ojs.set_prop_ascii (t_to_js x1888) "disabled"
                (anonymous_interface_24_to_js x1889)
        let (create :
          title:string -> ?kind:vscode_CodeActionKind -> unit -> t) =
          fun ~title:(x1890 : string) ->
            fun ?kind:(x1891 : vscode_CodeActionKind option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "CodeAction")
                     (let x1892 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x1892 "push" [|(Ojs.string_to_js x1890)|]);
                      (match x1891 with
                       | Some x1893 ->
                           ignore
                             (Ojs.call x1892 "push"
                                [|(vscode_CodeActionKind_to_js x1893)|])
                       | None -> ());
                      x1892))
      end
    module CodeActionProvider =
      struct
        type 'T t = 'T vscode_CodeActionProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1896 : Ojs.t) ->
              vscode_CodeActionProvider_of_js __T_of_js x1896
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1894 : __T vscode_CodeActionProvider) ->
              vscode_CodeActionProvider_to_js __T_to_js x1894
        let (provideCodeActions :
          'T t ->
            document:vscode_TextDocument ->
              range:(vscode_Range, vscode_Selection) union2 ->
                context:vscode_CodeActionContext ->
                  token:vscode_CancellationToken ->
                    (vscode_Command, 'T) union2 list vscode_ProviderResult)
          =
          fun (x1904 : 'T t) ->
            fun ~document:(x1898 : vscode_TextDocument) ->
              fun ~range:(x1899 : (vscode_Range, vscode_Selection) union2) ->
                fun ~context:(x1902 : vscode_CodeActionContext) ->
                  fun ~token:(x1903 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x1906 : Ojs.t) ->
                         Ojs.list_of_js
                           (fun (x1907 : Ojs.t) ->
                              union2_of_js vscode_Command_of_js Obj.magic
                                x1907) x1906)
                      (Ojs.call (t_to_js Obj.magic x1904)
                         "provideCodeActions"
                         [|(vscode_TextDocument_to_js x1898);(union2_to_js
                                                                vscode_Range_to_js
                                                                vscode_Selection_to_js
                                                                x1899);(
                           vscode_CodeActionContext_to_js x1902);(vscode_CancellationToken_to_js
                                                                    x1903)|])
        let (resolveCodeAction :
          'T t ->
            codeAction:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x1912 : 'T t) ->
            fun ~codeAction:(x1910 : 'T) ->
              fun ~token:(x1911 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x1912) "resolveCodeAction"
                     [|(Obj.magic x1910);(vscode_CancellationToken_to_js
                                            x1911)|])
      end
    module CodeActionProviderMetadata =
      struct
        type t = vscode_CodeActionProviderMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x1916 : Ojs.t) ->
            vscode_CodeActionProviderMetadata_of_js x1916
        and t_to_js : t -> Ojs.t =
          fun (x1915 : vscode_CodeActionProviderMetadata) ->
            vscode_CodeActionProviderMetadata_to_js x1915
        let (get_providedCodeActionKinds : t -> vscode_CodeActionKind list) =
          fun (x1917 : t) ->
            Ojs.list_of_js vscode_CodeActionKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1917) "providedCodeActionKinds")
        let (get_documentation : t -> anonymous_interface_11 list) =
          fun (x1919 : t) ->
            Ojs.list_of_js anonymous_interface_11_of_js
              (Ojs.get_prop_ascii (t_to_js x1919) "documentation")
      end
    module CodeLens =
      struct
        type t = vscode_CodeLens
        let rec t_of_js : Ojs.t -> t =
          fun (x1922 : Ojs.t) -> vscode_CodeLens_of_js x1922
        and t_to_js : t -> Ojs.t =
          fun (x1921 : vscode_CodeLens) -> vscode_CodeLens_to_js x1921
        let (get_range : t -> vscode_Range) =
          fun (x1923 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x1923) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x1924 : t) ->
            fun (x1925 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x1924) "range"
                (vscode_Range_to_js x1925)
        let (get_command : t -> vscode_Command) =
          fun (x1926 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x1926) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x1927 : t) ->
            fun (x1928 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x1927) "command"
                (vscode_Command_to_js x1928)
        let (get_isResolved : t -> bool) =
          fun (x1929 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1929) "isResolved")
        let (create :
          range:vscode_Range -> ?command:vscode_Command -> unit -> t) =
          fun ~range:(x1930 : vscode_Range) ->
            fun ?command:(x1931 : vscode_Command option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "CodeLens")
                     (let x1932 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x1932 "push" [|(vscode_Range_to_js x1930)|]);
                      (match x1931 with
                       | Some x1933 ->
                           ignore
                             (Ojs.call x1932 "push"
                                [|(vscode_Command_to_js x1933)|])
                       | None -> ());
                      x1932))
      end
    module CodeLensProvider =
      struct
        type 'T t = 'T vscode_CodeLensProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1936 : Ojs.t) ->
              vscode_CodeLensProvider_of_js __T_of_js x1936
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1934 : __T vscode_CodeLensProvider) ->
              vscode_CodeLensProvider_to_js __T_to_js x1934
        let (get_onDidChangeCodeLenses : 'T t -> unit vscode_Event) =
          fun (x1938 : 'T t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x1938)
                 "onDidChangeCodeLenses")
        let (set_onDidChangeCodeLenses : 'T t -> unit vscode_Event -> unit) =
          fun (x1941 : 'T t) ->
            fun (x1942 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x1941)
                "onDidChangeCodeLenses"
                (vscode_Event_to_js Ojs.unit_to_js x1942)
        let (provideCodeLenses :
          'T t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x1947 : 'T t) ->
            fun ~document:(x1945 : vscode_TextDocument) ->
              fun ~token:(x1946 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x1949 : Ojs.t) -> Ojs.list_of_js Obj.magic x1949)
                  (Ojs.call (t_to_js Obj.magic x1947) "provideCodeLenses"
                     [|(vscode_TextDocument_to_js x1945);(vscode_CancellationToken_to_js
                                                            x1946)|])
        let (resolveCodeLens :
          'T t ->
            codeLens:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x1953 : 'T t) ->
            fun ~codeLens:(x1951 : 'T) ->
              fun ~token:(x1952 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x1953) "resolveCodeLens"
                     [|(Obj.magic x1951);(vscode_CancellationToken_to_js
                                            x1952)|])
      end
    module DefinitionLink =
      struct
        type t = vscode_DefinitionLink
        let rec t_of_js : Ojs.t -> t =
          fun (x1957 : Ojs.t) -> vscode_DefinitionLink_of_js x1957
        and t_to_js : t -> Ojs.t =
          fun (x1956 : vscode_DefinitionLink) ->
            vscode_DefinitionLink_to_js x1956
      end
    module Definition =
      struct
        type t = vscode_Definition
        let rec t_of_js : Ojs.t -> t =
          fun (x1959 : Ojs.t) -> vscode_Definition_of_js x1959
        and t_to_js : t -> Ojs.t =
          fun (x1958 : vscode_Definition) -> vscode_Definition_to_js x1958
      end
    module DefinitionProvider =
      struct
        type t = vscode_DefinitionProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1961 : Ojs.t) -> vscode_DefinitionProvider_of_js x1961
        and t_to_js : t -> Ojs.t =
          fun (x1960 : vscode_DefinitionProvider) ->
            vscode_DefinitionProvider_to_js x1960
        let (provideDefinition :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Definition, vscode_DefinitionLink) or_array
                    vscode_ProviderResult)
          =
          fun (x1965 : t) ->
            fun ~document:(x1962 : vscode_TextDocument) ->
              fun ~position:(x1963 : vscode_Position) ->
                fun ~token:(x1964 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x1966 : Ojs.t) ->
                       or_array_of_js vscode_Definition_of_js
                         vscode_DefinitionLink_of_js x1966)
                    (Ojs.call (t_to_js x1965) "provideDefinition"
                       [|(vscode_TextDocument_to_js x1962);(vscode_Position_to_js
                                                              x1963);(
                         vscode_CancellationToken_to_js x1964)|])
      end
    module ImplementationProvider =
      struct
        type t = vscode_ImplementationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1970 : Ojs.t) -> vscode_ImplementationProvider_of_js x1970
        and t_to_js : t -> Ojs.t =
          fun (x1969 : vscode_ImplementationProvider) ->
            vscode_ImplementationProvider_to_js x1969
        let (provideImplementation :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Definition, vscode_DefinitionLink) or_array
                    vscode_ProviderResult)
          =
          fun (x1974 : t) ->
            fun ~document:(x1971 : vscode_TextDocument) ->
              fun ~position:(x1972 : vscode_Position) ->
                fun ~token:(x1973 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x1975 : Ojs.t) ->
                       or_array_of_js vscode_Definition_of_js
                         vscode_DefinitionLink_of_js x1975)
                    (Ojs.call (t_to_js x1974) "provideImplementation"
                       [|(vscode_TextDocument_to_js x1971);(vscode_Position_to_js
                                                              x1972);(
                         vscode_CancellationToken_to_js x1973)|])
      end
    module TypeDefinitionProvider =
      struct
        type t = vscode_TypeDefinitionProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1979 : Ojs.t) -> vscode_TypeDefinitionProvider_of_js x1979
        and t_to_js : t -> Ojs.t =
          fun (x1978 : vscode_TypeDefinitionProvider) ->
            vscode_TypeDefinitionProvider_to_js x1978
        let (provideTypeDefinition :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Definition, vscode_DefinitionLink) or_array
                    vscode_ProviderResult)
          =
          fun (x1983 : t) ->
            fun ~document:(x1980 : vscode_TextDocument) ->
              fun ~position:(x1981 : vscode_Position) ->
                fun ~token:(x1982 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x1984 : Ojs.t) ->
                       or_array_of_js vscode_Definition_of_js
                         vscode_DefinitionLink_of_js x1984)
                    (Ojs.call (t_to_js x1983) "provideTypeDefinition"
                       [|(vscode_TextDocument_to_js x1980);(vscode_Position_to_js
                                                              x1981);(
                         vscode_CancellationToken_to_js x1982)|])
      end
    module Declaration =
      struct
        type t = vscode_Declaration
        let rec t_of_js : Ojs.t -> t =
          fun (x1988 : Ojs.t) -> vscode_Declaration_of_js x1988
        and t_to_js : t -> Ojs.t =
          fun (x1987 : vscode_Declaration) -> vscode_Declaration_to_js x1987
      end
    module DeclarationProvider =
      struct
        type t = vscode_DeclarationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1990 : Ojs.t) -> vscode_DeclarationProvider_of_js x1990
        and t_to_js : t -> Ojs.t =
          fun (x1989 : vscode_DeclarationProvider) ->
            vscode_DeclarationProvider_to_js x1989
        let (provideDeclaration :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_Declaration vscode_ProviderResult)
          =
          fun (x1994 : t) ->
            fun ~document:(x1991 : vscode_TextDocument) ->
              fun ~position:(x1992 : vscode_Position) ->
                fun ~token:(x1993 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_Declaration_of_js
                    (Ojs.call (t_to_js x1994) "provideDeclaration"
                       [|(vscode_TextDocument_to_js x1991);(vscode_Position_to_js
                                                              x1992);(
                         vscode_CancellationToken_to_js x1993)|])
      end
    module MarkdownString =
      struct
        type t = vscode_MarkdownString
        let rec t_of_js : Ojs.t -> t =
          fun (x1997 : Ojs.t) -> vscode_MarkdownString_of_js x1997
        and t_to_js : t -> Ojs.t =
          fun (x1996 : vscode_MarkdownString) ->
            vscode_MarkdownString_to_js x1996
        let (get_value : t -> string) =
          fun (x1998 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1998) "value")
        let (set_value : t -> string -> unit) =
          fun (x1999 : t) ->
            fun (x2000 : string) ->
              Ojs.set_prop_ascii (t_to_js x1999) "value"
                (Ojs.string_to_js x2000)
        let (get_isTrusted : t -> bool) =
          fun (x2001 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x2001) "isTrusted")
        let (set_isTrusted : t -> bool -> unit) =
          fun (x2002 : t) ->
            fun (x2003 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2002) "isTrusted"
                (Ojs.bool_to_js x2003)
        let (get_supportThemeIcons : t -> bool) =
          fun (x2004 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2004) "supportThemeIcons")
        let (create : ?value:string -> ?supportThemeIcons:bool -> unit -> t)
          =
          fun ?value:(x2005 : string option) ->
            fun ?supportThemeIcons:(x2006 : bool option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "MarkdownString")
                     (let x2007 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2005 with
                       | Some x2009 ->
                           ignore
                             (Ojs.call x2007 "push"
                                [|(Ojs.string_to_js x2009)|])
                       | None -> ());
                      (match x2006 with
                       | Some x2008 ->
                           ignore
                             (Ojs.call x2007 "push"
                                [|(Ojs.bool_to_js x2008)|])
                       | None -> ());
                      x2007))
        let (appendText : t -> value:string -> t) =
          fun (x2011 : t) ->
            fun ~value:(x2010 : string) ->
              t_of_js
                (Ojs.call (t_to_js x2011) "appendText"
                   [|(Ojs.string_to_js x2010)|])
        let (appendMarkdown : t -> value:string -> t) =
          fun (x2013 : t) ->
            fun ~value:(x2012 : string) ->
              t_of_js
                (Ojs.call (t_to_js x2013) "appendMarkdown"
                   [|(Ojs.string_to_js x2012)|])
        let (appendCodeblock :
          t -> value:string -> ?language:string -> unit -> t) =
          fun (x2018 : t) ->
            fun ~value:(x2014 : string) ->
              fun ?language:(x2015 : string option) ->
                fun () ->
                  t_of_js
                    (let x2019 = t_to_js x2018 in
                     Ojs.call (Ojs.get_prop_ascii x2019 "appendCodeblock")
                       "apply"
                       [|x2019;((let x2016 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2016 "push"
                                      [|(Ojs.string_to_js x2014)|]);
                                 (match x2015 with
                                  | Some x2017 ->
                                      ignore
                                        (Ojs.call x2016 "push"
                                           [|(Ojs.string_to_js x2017)|])
                                  | None -> ());
                                 x2016))|])
      end
    module MarkedString =
      struct
        type t = vscode_MarkedString
        let rec t_of_js : Ojs.t -> t =
          fun (x2021 : Ojs.t) -> vscode_MarkedString_of_js x2021
        and t_to_js : t -> Ojs.t =
          fun (x2020 : vscode_MarkedString) ->
            vscode_MarkedString_to_js x2020
      end
    module Hover =
      struct
        type t = vscode_Hover
        let rec t_of_js : Ojs.t -> t =
          fun (x2023 : Ojs.t) -> vscode_Hover_of_js x2023
        and t_to_js : t -> Ojs.t =
          fun (x2022 : vscode_Hover) -> vscode_Hover_to_js x2022
        let (get_contents : t -> vscode_MarkedString list) =
          fun (x2024 : t) ->
            Ojs.list_of_js vscode_MarkedString_of_js
              (Ojs.get_prop_ascii (t_to_js x2024) "contents")
        let (set_contents : t -> vscode_MarkedString list -> unit) =
          fun (x2026 : t) ->
            fun (x2027 : vscode_MarkedString list) ->
              Ojs.set_prop_ascii (t_to_js x2026) "contents"
                (Ojs.list_to_js vscode_MarkedString_to_js x2027)
        let (get_range : t -> vscode_Range) =
          fun (x2029 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2029) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2030 : t) ->
            fun (x2031 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2030) "range"
                (vscode_Range_to_js x2031)
        let (create :
          contents:(vscode_MarkedString, vscode_MarkedString) or_array ->
            ?range:vscode_Range -> unit -> t)
          =
          fun
            ~contents:(x2032 :
                        (vscode_MarkedString, vscode_MarkedString) or_array)
            ->
            fun ?range:(x2033 : vscode_Range option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "Hover")
                     (let x2034 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2034 "push"
                           [|(or_array_to_js vscode_MarkedString_to_js
                                vscode_MarkedString_to_js x2032)|]);
                      (match x2033 with
                       | Some x2035 ->
                           ignore
                             (Ojs.call x2034 "push"
                                [|(vscode_Range_to_js x2035)|])
                       | None -> ());
                      x2034))
      end
    module HoverProvider =
      struct
        type t = vscode_HoverProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2039 : Ojs.t) -> vscode_HoverProvider_of_js x2039
        and t_to_js : t -> Ojs.t =
          fun (x2038 : vscode_HoverProvider) ->
            vscode_HoverProvider_to_js x2038
        let (provideHover :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_Hover vscode_ProviderResult)
          =
          fun (x2043 : t) ->
            fun ~document:(x2040 : vscode_TextDocument) ->
              fun ~position:(x2041 : vscode_Position) ->
                fun ~token:(x2042 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_Hover_of_js
                    (Ojs.call (t_to_js x2043) "provideHover"
                       [|(vscode_TextDocument_to_js x2040);(vscode_Position_to_js
                                                              x2041);(
                         vscode_CancellationToken_to_js x2042)|])
      end
    module EvaluatableExpression =
      struct
        type t = vscode_EvaluatableExpression
        let rec t_of_js : Ojs.t -> t =
          fun (x2046 : Ojs.t) -> vscode_EvaluatableExpression_of_js x2046
        and t_to_js : t -> Ojs.t =
          fun (x2045 : vscode_EvaluatableExpression) ->
            vscode_EvaluatableExpression_to_js x2045
        let (get_range : t -> vscode_Range) =
          fun (x2047 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2047) "range")
        let (get_expression : t -> string) =
          fun (x2048 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2048) "expression")
        let (create : range:vscode_Range -> ?expression:string -> unit -> t)
          =
          fun ~range:(x2049 : vscode_Range) ->
            fun ?expression:(x2050 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "EvaluatableExpression")
                     (let x2051 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2051 "push" [|(vscode_Range_to_js x2049)|]);
                      (match x2050 with
                       | Some x2052 ->
                           ignore
                             (Ojs.call x2051 "push"
                                [|(Ojs.string_to_js x2052)|])
                       | None -> ());
                      x2051))
      end
    module EvaluatableExpressionProvider =
      struct
        type t = vscode_EvaluatableExpressionProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2054 : Ojs.t) ->
            vscode_EvaluatableExpressionProvider_of_js x2054
        and t_to_js : t -> Ojs.t =
          fun (x2053 : vscode_EvaluatableExpressionProvider) ->
            vscode_EvaluatableExpressionProvider_to_js x2053
        let (provideEvaluatableExpression :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_EvaluatableExpression vscode_ProviderResult)
          =
          fun (x2058 : t) ->
            fun ~document:(x2055 : vscode_TextDocument) ->
              fun ~position:(x2056 : vscode_Position) ->
                fun ~token:(x2057 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    vscode_EvaluatableExpression_of_js
                    (Ojs.call (t_to_js x2058) "provideEvaluatableExpression"
                       [|(vscode_TextDocument_to_js x2055);(vscode_Position_to_js
                                                              x2056);(
                         vscode_CancellationToken_to_js x2057)|])
      end
    module InlineValueText =
      struct
        type t = vscode_InlineValueText
        let rec t_of_js : Ojs.t -> t =
          fun (x2061 : Ojs.t) -> vscode_InlineValueText_of_js x2061
        and t_to_js : t -> Ojs.t =
          fun (x2060 : vscode_InlineValueText) ->
            vscode_InlineValueText_to_js x2060
        let (get_range : t -> vscode_Range) =
          fun (x2062 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2062) "range")
        let (get_text : t -> string) =
          fun (x2063 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2063) "text")
        let (create : range:vscode_Range -> text:string -> t) =
          fun ~range:(x2064 : vscode_Range) ->
            fun ~text:(x2065 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "InlineValueText")
                   [|(vscode_Range_to_js x2064);(Ojs.string_to_js x2065)|])
      end
    module InlineValueVariableLookup =
      struct
        type t = vscode_InlineValueVariableLookup
        let rec t_of_js : Ojs.t -> t =
          fun (x2067 : Ojs.t) -> vscode_InlineValueVariableLookup_of_js x2067
        and t_to_js : t -> Ojs.t =
          fun (x2066 : vscode_InlineValueVariableLookup) ->
            vscode_InlineValueVariableLookup_to_js x2066
        let (get_range : t -> vscode_Range) =
          fun (x2068 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2068) "range")
        let (get_variableName : t -> string) =
          fun (x2069 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2069) "variableName")
        let (get_caseSensitiveLookup : t -> bool) =
          fun (x2070 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2070) "caseSensitiveLookup")
        let (create :
          range:vscode_Range ->
            ?variableName:string -> ?caseSensitiveLookup:bool -> unit -> t)
          =
          fun ~range:(x2071 : vscode_Range) ->
            fun ?variableName:(x2072 : string option) ->
              fun ?caseSensitiveLookup:(x2073 : bool option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "InlineValueVariableLookup")
                       (let x2074 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x2074 "push"
                             [|(vscode_Range_to_js x2071)|]);
                        (match x2072 with
                         | Some x2076 ->
                             ignore
                               (Ojs.call x2074 "push"
                                  [|(Ojs.string_to_js x2076)|])
                         | None -> ());
                        (match x2073 with
                         | Some x2075 ->
                             ignore
                               (Ojs.call x2074 "push"
                                  [|(Ojs.bool_to_js x2075)|])
                         | None -> ());
                        x2074))
      end
    module InlineValueEvaluatableExpression =
      struct
        type t = vscode_InlineValueEvaluatableExpression
        let rec t_of_js : Ojs.t -> t =
          fun (x2078 : Ojs.t) ->
            vscode_InlineValueEvaluatableExpression_of_js x2078
        and t_to_js : t -> Ojs.t =
          fun (x2077 : vscode_InlineValueEvaluatableExpression) ->
            vscode_InlineValueEvaluatableExpression_to_js x2077
        let (get_range : t -> vscode_Range) =
          fun (x2079 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2079) "range")
        let (get_expression : t -> string) =
          fun (x2080 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2080) "expression")
        let (create : range:vscode_Range -> ?expression:string -> unit -> t)
          =
          fun ~range:(x2081 : vscode_Range) ->
            fun ?expression:(x2082 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "InlineValueEvaluatableExpression")
                     (let x2083 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2083 "push" [|(vscode_Range_to_js x2081)|]);
                      (match x2082 with
                       | Some x2084 ->
                           ignore
                             (Ojs.call x2083 "push"
                                [|(Ojs.string_to_js x2084)|])
                       | None -> ());
                      x2083))
      end
    module InlineValue =
      struct
        type t = vscode_InlineValue
        let rec t_of_js : Ojs.t -> t =
          fun (x2086 : Ojs.t) -> vscode_InlineValue_of_js x2086
        and t_to_js : t -> Ojs.t =
          fun (x2085 : vscode_InlineValue) -> vscode_InlineValue_to_js x2085
      end
    module InlineValueContext =
      struct
        type t = vscode_InlineValueContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2088 : Ojs.t) -> vscode_InlineValueContext_of_js x2088
        and t_to_js : t -> Ojs.t =
          fun (x2087 : vscode_InlineValueContext) ->
            vscode_InlineValueContext_to_js x2087
        let (get_frameId : t -> float) =
          fun (x2089 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2089) "frameId")
        let (get_stoppedLocation : t -> vscode_Range) =
          fun (x2090 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2090) "stoppedLocation")
      end
    module InlineValuesProvider =
      struct
        type t = vscode_InlineValuesProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2092 : Ojs.t) -> vscode_InlineValuesProvider_of_js x2092
        and t_to_js : t -> Ojs.t =
          fun (x2091 : vscode_InlineValuesProvider) ->
            vscode_InlineValuesProvider_to_js x2091
        let (get_onDidChangeInlineValues :
          t -> unit vscode_Event or_undefined) =
          fun (x2093 : t) ->
            or_undefined_of_js
              (fun (x2094 : Ojs.t) -> vscode_Event_of_js Ojs.unit_of_js x2094)
              (Ojs.get_prop_ascii (t_to_js x2093) "onDidChangeInlineValues")
        let (set_onDidChangeInlineValues :
          t -> unit vscode_Event or_undefined -> unit) =
          fun (x2096 : t) ->
            fun (x2097 : unit vscode_Event or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x2096) "onDidChangeInlineValues"
                (or_undefined_to_js
                   (fun (x2098 : unit vscode_Event) ->
                      vscode_Event_to_js Ojs.unit_to_js x2098) x2097)
        let (provideInlineValues :
          t ->
            document:vscode_TextDocument ->
              viewPort:vscode_Range ->
                context:vscode_InlineValueContext ->
                  token:vscode_CancellationToken ->
                    vscode_InlineValue list vscode_ProviderResult)
          =
          fun (x2104 : t) ->
            fun ~document:(x2100 : vscode_TextDocument) ->
              fun ~viewPort:(x2101 : vscode_Range) ->
                fun ~context:(x2102 : vscode_InlineValueContext) ->
                  fun ~token:(x2103 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x2105 : Ojs.t) ->
                         Ojs.list_of_js vscode_InlineValue_of_js x2105)
                      (Ojs.call (t_to_js x2104) "provideInlineValues"
                         [|(vscode_TextDocument_to_js x2100);(vscode_Range_to_js
                                                                x2101);(
                           vscode_InlineValueContext_to_js x2102);(vscode_CancellationToken_to_js
                                                                    x2103)|])
      end
    module DocumentHighlightKind =
      struct
        type t = vscode_DocumentHighlightKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2108 : Ojs.t) -> vscode_DocumentHighlightKind_of_js x2108
        and t_to_js : t -> Ojs.t =
          fun (x2107 : vscode_DocumentHighlightKind) ->
            vscode_DocumentHighlightKind_to_js x2107
      end
    module DocumentHighlight =
      struct
        type t = vscode_DocumentHighlight
        let rec t_of_js : Ojs.t -> t =
          fun (x2110 : Ojs.t) -> vscode_DocumentHighlight_of_js x2110
        and t_to_js : t -> Ojs.t =
          fun (x2109 : vscode_DocumentHighlight) ->
            vscode_DocumentHighlight_to_js x2109
        let (get_range : t -> vscode_Range) =
          fun (x2111 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2111) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2112 : t) ->
            fun (x2113 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2112) "range"
                (vscode_Range_to_js x2113)
        let (get_kind : t -> vscode_DocumentHighlightKind) =
          fun (x2114 : t) ->
            vscode_DocumentHighlightKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2114) "kind")
        let (set_kind : t -> vscode_DocumentHighlightKind -> unit) =
          fun (x2115 : t) ->
            fun (x2116 : vscode_DocumentHighlightKind) ->
              Ojs.set_prop_ascii (t_to_js x2115) "kind"
                (vscode_DocumentHighlightKind_to_js x2116)
        let (create :
          range:vscode_Range ->
            ?kind:vscode_DocumentHighlightKind -> unit -> t)
          =
          fun ~range:(x2117 : vscode_Range) ->
            fun ?kind:(x2118 : vscode_DocumentHighlightKind option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "DocumentHighlight")
                     (let x2119 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2119 "push" [|(vscode_Range_to_js x2117)|]);
                      (match x2118 with
                       | Some x2120 ->
                           ignore
                             (Ojs.call x2119 "push"
                                [|(vscode_DocumentHighlightKind_to_js x2120)|])
                       | None -> ());
                      x2119))
      end
    module DocumentHighlightProvider =
      struct
        type t = vscode_DocumentHighlightProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2122 : Ojs.t) -> vscode_DocumentHighlightProvider_of_js x2122
        and t_to_js : t -> Ojs.t =
          fun (x2121 : vscode_DocumentHighlightProvider) ->
            vscode_DocumentHighlightProvider_to_js x2121
        let (provideDocumentHighlights :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_DocumentHighlight list vscode_ProviderResult)
          =
          fun (x2126 : t) ->
            fun ~document:(x2123 : vscode_TextDocument) ->
              fun ~position:(x2124 : vscode_Position) ->
                fun ~token:(x2125 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2127 : Ojs.t) ->
                       Ojs.list_of_js vscode_DocumentHighlight_of_js x2127)
                    (Ojs.call (t_to_js x2126) "provideDocumentHighlights"
                       [|(vscode_TextDocument_to_js x2123);(vscode_Position_to_js
                                                              x2124);(
                         vscode_CancellationToken_to_js x2125)|])
      end
    module SymbolKind =
      struct
        type t = vscode_SymbolKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2130 : Ojs.t) -> vscode_SymbolKind_of_js x2130
        and t_to_js : t -> Ojs.t =
          fun (x2129 : vscode_SymbolKind) -> vscode_SymbolKind_to_js x2129
      end
    module SymbolTag =
      struct
        type t = vscode_SymbolTag
        let rec t_of_js : Ojs.t -> t =
          fun (x2132 : Ojs.t) -> vscode_SymbolTag_of_js x2132
        and t_to_js : t -> Ojs.t =
          fun (x2131 : vscode_SymbolTag) -> vscode_SymbolTag_to_js x2131
      end
    module SymbolInformation =
      struct
        type t = vscode_SymbolInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2134 : Ojs.t) -> vscode_SymbolInformation_of_js x2134
        and t_to_js : t -> Ojs.t =
          fun (x2133 : vscode_SymbolInformation) ->
            vscode_SymbolInformation_to_js x2133
        let (get_name : t -> string) =
          fun (x2135 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2135) "name")
        let (set_name : t -> string -> unit) =
          fun (x2136 : t) ->
            fun (x2137 : string) ->
              Ojs.set_prop_ascii (t_to_js x2136) "name"
                (Ojs.string_to_js x2137)
        let (get_containerName : t -> string) =
          fun (x2138 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2138) "containerName")
        let (set_containerName : t -> string -> unit) =
          fun (x2139 : t) ->
            fun (x2140 : string) ->
              Ojs.set_prop_ascii (t_to_js x2139) "containerName"
                (Ojs.string_to_js x2140)
        let (get_kind : t -> vscode_SymbolKind) =
          fun (x2141 : t) ->
            vscode_SymbolKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2141) "kind")
        let (set_kind : t -> vscode_SymbolKind -> unit) =
          fun (x2142 : t) ->
            fun (x2143 : vscode_SymbolKind) ->
              Ojs.set_prop_ascii (t_to_js x2142) "kind"
                (vscode_SymbolKind_to_js x2143)
        let (get_tags : t -> vscode_SymbolTag list) =
          fun (x2144 : t) ->
            Ojs.list_of_js vscode_SymbolTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2144) "tags")
        let (set_tags : t -> vscode_SymbolTag list -> unit) =
          fun (x2146 : t) ->
            fun (x2147 : vscode_SymbolTag list) ->
              Ojs.set_prop_ascii (t_to_js x2146) "tags"
                (Ojs.list_to_js vscode_SymbolTag_to_js x2147)
        let (get_location : t -> vscode_Location) =
          fun (x2149 : t) ->
            vscode_Location_of_js
              (Ojs.get_prop_ascii (t_to_js x2149) "location")
        let (set_location : t -> vscode_Location -> unit) =
          fun (x2150 : t) ->
            fun (x2151 : vscode_Location) ->
              Ojs.set_prop_ascii (t_to_js x2150) "location"
                (vscode_Location_to_js x2151)
        let (create :
          name:string ->
            kind:vscode_SymbolKind ->
              containerName:string -> location:vscode_Location -> t)
          =
          fun ~name:(x2152 : string) ->
            fun ~kind:(x2153 : vscode_SymbolKind) ->
              fun ~containerName:(x2154 : string) ->
                fun ~location:(x2155 : vscode_Location) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "SymbolInformation")
                       [|(Ojs.string_to_js x2152);(vscode_SymbolKind_to_js
                                                     x2153);(Ojs.string_to_js
                                                               x2154);(
                         vscode_Location_to_js x2155)|])
        let (create' :
          name:string ->
            kind:vscode_SymbolKind ->
              range:vscode_Range ->
                ?uri:vscode_Uri -> ?containerName:string -> unit -> t)
          =
          fun ~name:(x2156 : string) ->
            fun ~kind:(x2157 : vscode_SymbolKind) ->
              fun ~range:(x2158 : vscode_Range) ->
                fun ?uri:(x2159 : vscode_Uri option) ->
                  fun ?containerName:(x2160 : string option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "SymbolInformation")
                           (let x2161 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x2161 "push"
                                 [|(Ojs.string_to_js x2156)|]);
                            ignore
                              (Ojs.call x2161 "push"
                                 [|(vscode_SymbolKind_to_js x2157)|]);
                            ignore
                              (Ojs.call x2161 "push"
                                 [|(vscode_Range_to_js x2158)|]);
                            (match x2159 with
                             | Some x2163 ->
                                 ignore
                                   (Ojs.call x2161 "push"
                                      [|(vscode_Uri_to_js x2163)|])
                             | None -> ());
                            (match x2160 with
                             | Some x2162 ->
                                 ignore
                                   (Ojs.call x2161 "push"
                                      [|(Ojs.string_to_js x2162)|])
                             | None -> ());
                            x2161))
      end
    module DocumentSymbol =
      struct
        type t = vscode_DocumentSymbol
        let rec t_of_js : Ojs.t -> t =
          fun (x2165 : Ojs.t) -> vscode_DocumentSymbol_of_js x2165
        and t_to_js : t -> Ojs.t =
          fun (x2164 : vscode_DocumentSymbol) ->
            vscode_DocumentSymbol_to_js x2164
        let (get_name : t -> string) =
          fun (x2166 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2166) "name")
        let (set_name : t -> string -> unit) =
          fun (x2167 : t) ->
            fun (x2168 : string) ->
              Ojs.set_prop_ascii (t_to_js x2167) "name"
                (Ojs.string_to_js x2168)
        let (get_detail : t -> string) =
          fun (x2169 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2169) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x2170 : t) ->
            fun (x2171 : string) ->
              Ojs.set_prop_ascii (t_to_js x2170) "detail"
                (Ojs.string_to_js x2171)
        let (get_kind : t -> vscode_SymbolKind) =
          fun (x2172 : t) ->
            vscode_SymbolKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2172) "kind")
        let (set_kind : t -> vscode_SymbolKind -> unit) =
          fun (x2173 : t) ->
            fun (x2174 : vscode_SymbolKind) ->
              Ojs.set_prop_ascii (t_to_js x2173) "kind"
                (vscode_SymbolKind_to_js x2174)
        let (get_tags : t -> vscode_SymbolTag list) =
          fun (x2175 : t) ->
            Ojs.list_of_js vscode_SymbolTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2175) "tags")
        let (set_tags : t -> vscode_SymbolTag list -> unit) =
          fun (x2177 : t) ->
            fun (x2178 : vscode_SymbolTag list) ->
              Ojs.set_prop_ascii (t_to_js x2177) "tags"
                (Ojs.list_to_js vscode_SymbolTag_to_js x2178)
        let (get_range : t -> vscode_Range) =
          fun (x2180 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2180) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2181 : t) ->
            fun (x2182 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2181) "range"
                (vscode_Range_to_js x2182)
        let (get_selectionRange : t -> vscode_Range) =
          fun (x2183 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2183) "selectionRange")
        let (set_selectionRange : t -> vscode_Range -> unit) =
          fun (x2184 : t) ->
            fun (x2185 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2184) "selectionRange"
                (vscode_Range_to_js x2185)
        let (get_children : t -> t list) =
          fun (x2186 : t) ->
            Ojs.list_of_js t_of_js
              (Ojs.get_prop_ascii (t_to_js x2186) "children")
        let (set_children : t -> t list -> unit) =
          fun (x2188 : t) ->
            fun (x2189 : t list) ->
              Ojs.set_prop_ascii (t_to_js x2188) "children"
                (Ojs.list_to_js t_to_js x2189)
        let (create :
          name:string ->
            detail:string ->
              kind:vscode_SymbolKind ->
                range:vscode_Range -> selectionRange:vscode_Range -> t)
          =
          fun ~name:(x2191 : string) ->
            fun ~detail:(x2192 : string) ->
              fun ~kind:(x2193 : vscode_SymbolKind) ->
                fun ~range:(x2194 : vscode_Range) ->
                  fun ~selectionRange:(x2195 : vscode_Range) ->
                    t_of_js
                      (Ojs.new_obj
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "DocumentSymbol")
                         [|(Ojs.string_to_js x2191);(Ojs.string_to_js x2192);(
                           vscode_SymbolKind_to_js x2193);(vscode_Range_to_js
                                                             x2194);(
                           vscode_Range_to_js x2195)|])
      end
    module DocumentSymbolProvider =
      struct
        type t = vscode_DocumentSymbolProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2197 : Ojs.t) -> vscode_DocumentSymbolProvider_of_js x2197
        and t_to_js : t -> Ojs.t =
          fun (x2196 : vscode_DocumentSymbolProvider) ->
            vscode_DocumentSymbolProvider_to_js x2196
        let (provideDocumentSymbols :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                [
                  `U_n_0 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_1 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_2 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_3 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_4 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_5 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_6 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_7 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_8 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_9 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_10 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_11 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_12 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_13 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_14 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_15 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_16 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_17 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_18 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_19 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_20 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_21 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_22 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_23 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_24 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_25 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 ]
                  list vscode_ProviderResult)
          =
          fun (x2200 : t) ->
            fun ~document:(x2198 : vscode_TextDocument) ->
              fun ~token:(x2199 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2201 : Ojs.t) ->
                     Ojs.list_of_js
                       (fun (x2202 : Ojs.t) ->
                          let x2203 = x2202 in
                          match Ojs.int_of_js
                                  (Ojs.get_prop_ascii x2203 "kind")
                          with
                          | 0 ->
                              `U_n_0
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 1 ->
                              `U_n_1
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 2 ->
                              `U_n_2
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 3 ->
                              `U_n_3
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 4 ->
                              `U_n_4
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 5 ->
                              `U_n_5
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 6 ->
                              `U_n_6
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 7 ->
                              `U_n_7
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 8 ->
                              `U_n_8
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 9 ->
                              `U_n_9
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 10 ->
                              `U_n_10
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 11 ->
                              `U_n_11
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 12 ->
                              `U_n_12
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 13 ->
                              `U_n_13
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 14 ->
                              `U_n_14
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 15 ->
                              `U_n_15
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 16 ->
                              `U_n_16
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 17 ->
                              `U_n_17
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 18 ->
                              `U_n_18
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 19 ->
                              `U_n_19
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 20 ->
                              `U_n_20
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 21 ->
                              `U_n_21
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 22 ->
                              `U_n_22
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 23 ->
                              `U_n_23
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 24 ->
                              `U_n_24
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | 25 ->
                              `U_n_25
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2203)
                          | _ -> assert false) x2201)
                  (Ojs.call (t_to_js x2200) "provideDocumentSymbols"
                     [|(vscode_TextDocument_to_js x2198);(vscode_CancellationToken_to_js
                                                            x2199)|])
      end
    module DocumentSymbolProviderMetadata =
      struct
        type t = vscode_DocumentSymbolProviderMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x2257 : Ojs.t) ->
            vscode_DocumentSymbolProviderMetadata_of_js x2257
        and t_to_js : t -> Ojs.t =
          fun (x2256 : vscode_DocumentSymbolProviderMetadata) ->
            vscode_DocumentSymbolProviderMetadata_to_js x2256
        let (get_label : t -> string) =
          fun (x2258 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2258) "label")
        let (set_label : t -> string -> unit) =
          fun (x2259 : t) ->
            fun (x2260 : string) ->
              Ojs.set_prop_ascii (t_to_js x2259) "label"
                (Ojs.string_to_js x2260)
      end
    module WorkspaceSymbolProvider =
      struct
        type 'T t = 'T vscode_WorkspaceSymbolProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2263 : Ojs.t) ->
              vscode_WorkspaceSymbolProvider_of_js __T_of_js x2263
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2261 : __T vscode_WorkspaceSymbolProvider) ->
              vscode_WorkspaceSymbolProvider_to_js __T_to_js x2261
        let (provideWorkspaceSymbols :
          'T t ->
            query:string ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x2267 : 'T t) ->
            fun ~query:(x2265 : string) ->
              fun ~token:(x2266 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2269 : Ojs.t) -> Ojs.list_of_js Obj.magic x2269)
                  (Ojs.call (t_to_js Obj.magic x2267)
                     "provideWorkspaceSymbols"
                     [|(Ojs.string_to_js x2265);(vscode_CancellationToken_to_js
                                                   x2266)|])
        let (resolveWorkspaceSymbol :
          'T t ->
            symbol:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x2273 : 'T t) ->
            fun ~symbol:(x2271 : 'T) ->
              fun ~token:(x2272 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x2273)
                     "resolveWorkspaceSymbol"
                     [|(Obj.magic x2271);(vscode_CancellationToken_to_js
                                            x2272)|])
      end
    module ReferenceContext =
      struct
        type t = vscode_ReferenceContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2277 : Ojs.t) -> vscode_ReferenceContext_of_js x2277
        and t_to_js : t -> Ojs.t =
          fun (x2276 : vscode_ReferenceContext) ->
            vscode_ReferenceContext_to_js x2276
        let (get_includeDeclaration : t -> bool) =
          fun (x2278 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2278) "includeDeclaration")
        let (set_includeDeclaration : t -> bool -> unit) =
          fun (x2279 : t) ->
            fun (x2280 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2279) "includeDeclaration"
                (Ojs.bool_to_js x2280)
      end
    module ReferenceProvider =
      struct
        type t = vscode_ReferenceProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2282 : Ojs.t) -> vscode_ReferenceProvider_of_js x2282
        and t_to_js : t -> Ojs.t =
          fun (x2281 : vscode_ReferenceProvider) ->
            vscode_ReferenceProvider_to_js x2281
        let (provideReferences :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                context:vscode_ReferenceContext ->
                  token:vscode_CancellationToken ->
                    vscode_Location list vscode_ProviderResult)
          =
          fun (x2287 : t) ->
            fun ~document:(x2283 : vscode_TextDocument) ->
              fun ~position:(x2284 : vscode_Position) ->
                fun ~context:(x2285 : vscode_ReferenceContext) ->
                  fun ~token:(x2286 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x2288 : Ojs.t) ->
                         Ojs.list_of_js vscode_Location_of_js x2288)
                      (Ojs.call (t_to_js x2287) "provideReferences"
                         [|(vscode_TextDocument_to_js x2283);(vscode_Position_to_js
                                                                x2284);(
                           vscode_ReferenceContext_to_js x2285);(vscode_CancellationToken_to_js
                                                                   x2286)|])
      end
    module TextEdit =
      struct
        type t = vscode_TextEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x2291 : Ojs.t) -> vscode_TextEdit_of_js x2291
        and t_to_js : t -> Ojs.t =
          fun (x2290 : vscode_TextEdit) -> vscode_TextEdit_to_js x2290
        let (replace : range:vscode_Range -> newText:string -> t) =
          fun ~range:(x2292 : vscode_Range) ->
            fun ~newText:(x2293 : string) ->
              t_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TextEdit")
                   "replace"
                   [|(vscode_Range_to_js x2292);(Ojs.string_to_js x2293)|])
        let (insert : position:vscode_Position -> newText:string -> t) =
          fun ~position:(x2294 : vscode_Position) ->
            fun ~newText:(x2295 : string) ->
              t_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TextEdit")
                   "insert"
                   [|(vscode_Position_to_js x2294);(Ojs.string_to_js x2295)|])
        let (delete : range:vscode_Range -> t) =
          fun ~range:(x2296 : vscode_Range) ->
            t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TextEdit") "delete" [|(vscode_Range_to_js x2296)|])
        let (setEndOfLine : eol:vscode_EndOfLine -> t) =
          fun ~eol:(x2297 : vscode_EndOfLine) ->
            t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TextEdit") "setEndOfLine"
                 [|(vscode_EndOfLine_to_js x2297)|])
        let (get_range : t -> vscode_Range) =
          fun (x2298 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2298) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2299 : t) ->
            fun (x2300 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2299) "range"
                (vscode_Range_to_js x2300)
        let (get_newText : t -> string) =
          fun (x2301 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2301) "newText")
        let (set_newText : t -> string -> unit) =
          fun (x2302 : t) ->
            fun (x2303 : string) ->
              Ojs.set_prop_ascii (t_to_js x2302) "newText"
                (Ojs.string_to_js x2303)
        let (get_newEol : t -> vscode_EndOfLine) =
          fun (x2304 : t) ->
            vscode_EndOfLine_of_js
              (Ojs.get_prop_ascii (t_to_js x2304) "newEol")
        let (set_newEol : t -> vscode_EndOfLine -> unit) =
          fun (x2305 : t) ->
            fun (x2306 : vscode_EndOfLine) ->
              Ojs.set_prop_ascii (t_to_js x2305) "newEol"
                (vscode_EndOfLine_to_js x2306)
        let (create : range:vscode_Range -> newText:string -> t) =
          fun ~range:(x2307 : vscode_Range) ->
            fun ~newText:(x2308 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TextEdit")
                   [|(vscode_Range_to_js x2307);(Ojs.string_to_js x2308)|])
      end
    module WorkspaceEditEntryMetadata =
      struct
        type t = vscode_WorkspaceEditEntryMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x2310 : Ojs.t) ->
            vscode_WorkspaceEditEntryMetadata_of_js x2310
        and t_to_js : t -> Ojs.t =
          fun (x2309 : vscode_WorkspaceEditEntryMetadata) ->
            vscode_WorkspaceEditEntryMetadata_to_js x2309
        let (get_needsConfirmation : t -> bool) =
          fun (x2311 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2311) "needsConfirmation")
        let (set_needsConfirmation : t -> bool -> unit) =
          fun (x2312 : t) ->
            fun (x2313 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2312) "needsConfirmation"
                (Ojs.bool_to_js x2313)
        let (get_label : t -> string) =
          fun (x2314 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2314) "label")
        let (set_label : t -> string -> unit) =
          fun (x2315 : t) ->
            fun (x2316 : string) ->
              Ojs.set_prop_ascii (t_to_js x2315) "label"
                (Ojs.string_to_js x2316)
        let (get_description : t -> string) =
          fun (x2317 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2317) "description")
        let (set_description : t -> string -> unit) =
          fun (x2318 : t) ->
            fun (x2319 : string) ->
              Ojs.set_prop_ascii (t_to_js x2318) "description"
                (Ojs.string_to_js x2319)
        let (get_iconPath :
          t -> (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3)
          =
          fun (x2320 : t) ->
            union3_of_js vscode_ThemeIcon_of_js vscode_Uri_of_js
              anonymous_interface_14_of_js
              (Ojs.get_prop_ascii (t_to_js x2320) "iconPath")
        let (set_iconPath :
          t ->
            (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3 ->
              unit)
          =
          fun (x2324 : t) ->
            fun
              (x2325 :
                (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3)
              ->
              Ojs.set_prop_ascii (t_to_js x2324) "iconPath"
                (union3_to_js vscode_ThemeIcon_to_js vscode_Uri_to_js
                   anonymous_interface_14_to_js x2325)
      end
    module WorkspaceEdit =
      struct
        type t = vscode_WorkspaceEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x2330 : Ojs.t) -> vscode_WorkspaceEdit_of_js x2330
        and t_to_js : t -> Ojs.t =
          fun (x2329 : vscode_WorkspaceEdit) ->
            vscode_WorkspaceEdit_to_js x2329
        let (get_size : t -> float) =
          fun (x2331 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2331) "size")
        let (replace :
          t ->
            uri:vscode_Uri ->
              range:vscode_Range ->
                newText:string ->
                  ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2338 : t) ->
            fun ~uri:(x2332 : vscode_Uri) ->
              fun ~range:(x2333 : vscode_Range) ->
                fun ~newText:(x2334 : string) ->
                  fun
                    ?metadata:(x2335 :
                                vscode_WorkspaceEditEntryMetadata option)
                    ->
                    fun () ->
                      ignore
                        (let x2339 = t_to_js x2338 in
                         Ojs.call (Ojs.get_prop_ascii x2339 "replace")
                           "apply"
                           [|x2339;((let x2336 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2336 "push"
                                          [|(vscode_Uri_to_js x2332)|]);
                                     ignore
                                       (Ojs.call x2336 "push"
                                          [|(vscode_Range_to_js x2333)|]);
                                     ignore
                                       (Ojs.call x2336 "push"
                                          [|(Ojs.string_to_js x2334)|]);
                                     (match x2335 with
                                      | Some x2337 ->
                                          ignore
                                            (Ojs.call x2336 "push"
                                               [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                    x2337)|])
                                      | None -> ());
                                     x2336))|])
        let (insert :
          t ->
            uri:vscode_Uri ->
              position:vscode_Position ->
                newText:string ->
                  ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2346 : t) ->
            fun ~uri:(x2340 : vscode_Uri) ->
              fun ~position:(x2341 : vscode_Position) ->
                fun ~newText:(x2342 : string) ->
                  fun
                    ?metadata:(x2343 :
                                vscode_WorkspaceEditEntryMetadata option)
                    ->
                    fun () ->
                      ignore
                        (let x2347 = t_to_js x2346 in
                         Ojs.call (Ojs.get_prop_ascii x2347 "insert") "apply"
                           [|x2347;((let x2344 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2344 "push"
                                          [|(vscode_Uri_to_js x2340)|]);
                                     ignore
                                       (Ojs.call x2344 "push"
                                          [|(vscode_Position_to_js x2341)|]);
                                     ignore
                                       (Ojs.call x2344 "push"
                                          [|(Ojs.string_to_js x2342)|]);
                                     (match x2343 with
                                      | Some x2345 ->
                                          ignore
                                            (Ojs.call x2344 "push"
                                               [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                    x2345)|])
                                      | None -> ());
                                     x2344))|])
        let (delete :
          t ->
            uri:vscode_Uri ->
              range:vscode_Range ->
                ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2353 : t) ->
            fun ~uri:(x2348 : vscode_Uri) ->
              fun ~range:(x2349 : vscode_Range) ->
                fun
                  ?metadata:(x2350 :
                              vscode_WorkspaceEditEntryMetadata option)
                  ->
                  fun () ->
                    ignore
                      (let x2354 = t_to_js x2353 in
                       Ojs.call (Ojs.get_prop_ascii x2354 "delete") "apply"
                         [|x2354;((let x2351 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2351 "push"
                                        [|(vscode_Uri_to_js x2348)|]);
                                   ignore
                                     (Ojs.call x2351 "push"
                                        [|(vscode_Range_to_js x2349)|]);
                                   (match x2350 with
                                    | Some x2352 ->
                                        ignore
                                          (Ojs.call x2351 "push"
                                             [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                  x2352)|])
                                    | None -> ());
                                   x2351))|])
        let (has : t -> uri:vscode_Uri -> bool) =
          fun (x2356 : t) ->
            fun ~uri:(x2355 : vscode_Uri) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2356) "has" [|(vscode_Uri_to_js x2355)|])
        let (set_ :
          t -> uri:vscode_Uri -> edits:vscode_TextEdit list -> unit) =
          fun (x2360 : t) ->
            fun ~uri:(x2357 : vscode_Uri) ->
              fun ~edits:(x2358 : vscode_TextEdit list) ->
                ignore
                  (Ojs.call (t_to_js x2360) "set"
                     [|(vscode_Uri_to_js x2357);(Ojs.list_to_js
                                                   vscode_TextEdit_to_js
                                                   x2358)|])
        let (get_ : t -> uri:vscode_Uri -> vscode_TextEdit list) =
          fun (x2362 : t) ->
            fun ~uri:(x2361 : vscode_Uri) ->
              Ojs.list_of_js vscode_TextEdit_of_js
                (Ojs.call (t_to_js x2362) "get" [|(vscode_Uri_to_js x2361)|])
        let (createFile :
          t ->
            uri:vscode_Uri ->
              ?options:anonymous_interface_22 ->
                ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2370 : t) ->
            fun ~uri:(x2364 : vscode_Uri) ->
              fun ?options:(x2365 : anonymous_interface_22 option) ->
                fun
                  ?metadata:(x2366 :
                              vscode_WorkspaceEditEntryMetadata option)
                  ->
                  fun () ->
                    ignore
                      (let x2371 = t_to_js x2370 in
                       Ojs.call (Ojs.get_prop_ascii x2371 "createFile")
                         "apply"
                         [|x2371;((let x2367 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2367 "push"
                                        [|(vscode_Uri_to_js x2364)|]);
                                   (match x2365 with
                                    | Some x2369 ->
                                        ignore
                                          (Ojs.call x2367 "push"
                                             [|(anonymous_interface_22_to_js
                                                  x2369)|])
                                    | None -> ());
                                   (match x2366 with
                                    | Some x2368 ->
                                        ignore
                                          (Ojs.call x2367 "push"
                                             [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                  x2368)|])
                                    | None -> ());
                                   x2367))|])
        let (deleteFile :
          t ->
            uri:vscode_Uri ->
              ?options:anonymous_interface_27 ->
                ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2378 : t) ->
            fun ~uri:(x2372 : vscode_Uri) ->
              fun ?options:(x2373 : anonymous_interface_27 option) ->
                fun
                  ?metadata:(x2374 :
                              vscode_WorkspaceEditEntryMetadata option)
                  ->
                  fun () ->
                    ignore
                      (let x2379 = t_to_js x2378 in
                       Ojs.call (Ojs.get_prop_ascii x2379 "deleteFile")
                         "apply"
                         [|x2379;((let x2375 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2375 "push"
                                        [|(vscode_Uri_to_js x2372)|]);
                                   (match x2373 with
                                    | Some x2377 ->
                                        ignore
                                          (Ojs.call x2375 "push"
                                             [|(anonymous_interface_27_to_js
                                                  x2377)|])
                                    | None -> ());
                                   (match x2374 with
                                    | Some x2376 ->
                                        ignore
                                          (Ojs.call x2375 "push"
                                             [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                  x2376)|])
                                    | None -> ());
                                   x2375))|])
        let (renameFile :
          t ->
            oldUri:vscode_Uri ->
              newUri:vscode_Uri ->
                ?options:anonymous_interface_22 ->
                  ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2387 : t) ->
            fun ~oldUri:(x2380 : vscode_Uri) ->
              fun ~newUri:(x2381 : vscode_Uri) ->
                fun ?options:(x2382 : anonymous_interface_22 option) ->
                  fun
                    ?metadata:(x2383 :
                                vscode_WorkspaceEditEntryMetadata option)
                    ->
                    fun () ->
                      ignore
                        (let x2388 = t_to_js x2387 in
                         Ojs.call (Ojs.get_prop_ascii x2388 "renameFile")
                           "apply"
                           [|x2388;((let x2384 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2384 "push"
                                          [|(vscode_Uri_to_js x2380)|]);
                                     ignore
                                       (Ojs.call x2384 "push"
                                          [|(vscode_Uri_to_js x2381)|]);
                                     (match x2382 with
                                      | Some x2386 ->
                                          ignore
                                            (Ojs.call x2384 "push"
                                               [|(anonymous_interface_22_to_js
                                                    x2386)|])
                                      | None -> ());
                                     (match x2383 with
                                      | Some x2385 ->
                                          ignore
                                            (Ojs.call x2384 "push"
                                               [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                    x2385)|])
                                      | None -> ());
                                     x2384))|])
        let (entries : t -> (vscode_Uri * vscode_TextEdit list) list) =
          fun (x2389 : t) ->
            Ojs.list_of_js
              (fun (x2390 : Ojs.t) ->
                 let x2391 = x2390 in
                 ((vscode_Uri_of_js (Ojs.array_get x2391 0)),
                   (Ojs.list_of_js vscode_TextEdit_of_js
                      (Ojs.array_get x2391 1))))
              (Ojs.call (t_to_js x2389) "entries" [||])
      end
    module SnippetString =
      struct
        type t = vscode_SnippetString
        let rec t_of_js : Ojs.t -> t =
          fun (x2394 : Ojs.t) -> vscode_SnippetString_of_js x2394
        and t_to_js : t -> Ojs.t =
          fun (x2393 : vscode_SnippetString) ->
            vscode_SnippetString_to_js x2393
        let (get_value : t -> string) =
          fun (x2395 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2395) "value")
        let (set_value : t -> string -> unit) =
          fun (x2396 : t) ->
            fun (x2397 : string) ->
              Ojs.set_prop_ascii (t_to_js x2396) "value"
                (Ojs.string_to_js x2397)
        let (create : ?value:string -> unit -> t) =
          fun ?value:(x2398 : string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "SnippetString")
                   (let x2399 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x2398 with
                     | Some x2400 ->
                         ignore
                           (Ojs.call x2399 "push"
                              [|(Ojs.string_to_js x2400)|])
                     | None -> ());
                    x2399))
        let (appendText : t -> string:string -> t) =
          fun (x2402 : t) ->
            fun ~string:(x2401 : string) ->
              t_of_js
                (Ojs.call (t_to_js x2402) "appendText"
                   [|(Ojs.string_to_js x2401)|])
        let (appendTabstop : t -> ?number:float -> unit -> t) =
          fun (x2406 : t) ->
            fun ?number:(x2403 : float option) ->
              fun () ->
                t_of_js
                  (let x2407 = t_to_js x2406 in
                   Ojs.call (Ojs.get_prop_ascii x2407 "appendTabstop")
                     "apply"
                     [|x2407;((let x2404 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2403 with
                                | Some x2405 ->
                                    ignore
                                      (Ojs.call x2404 "push"
                                         [|(Ojs.float_to_js x2405)|])
                                | None -> ());
                               x2404))|])
        let (appendPlaceholder :
          t ->
            value:(snippet:t -> any) or_string -> ?number:float -> unit -> t)
          =
          fun (x2414 : t) ->
            fun ~value:(x2408 : (snippet:t -> any) or_string) ->
              fun ?number:(x2409 : float option) ->
                fun () ->
                  t_of_js
                    (let x2415 = t_to_js x2414 in
                     Ojs.call (Ojs.get_prop_ascii x2415 "appendPlaceholder")
                       "apply"
                       [|x2415;((let x2410 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2410 "push"
                                      [|(or_string_to_js
                                           (fun (x2412 : snippet:t -> any) ->
                                              Ojs.fun_to_js 1
                                                (fun (x2413 : Ojs.t) ->
                                                   any_to_js
                                                     (x2412
                                                        ~snippet:(t_of_js
                                                                    x2413))))
                                           x2408)|]);
                                 (match x2409 with
                                  | Some x2411 ->
                                      ignore
                                        (Ojs.call x2410 "push"
                                           [|(Ojs.float_to_js x2411)|])
                                  | None -> ());
                                 x2410))|])
        let (appendChoice :
          t -> values:string list -> ?number:float -> unit -> t) =
          fun (x2421 : t) ->
            fun ~values:(x2416 : string list) ->
              fun ?number:(x2417 : float option) ->
                fun () ->
                  t_of_js
                    (let x2422 = t_to_js x2421 in
                     Ojs.call (Ojs.get_prop_ascii x2422 "appendChoice")
                       "apply"
                       [|x2422;((let x2418 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2418 "push"
                                      [|(Ojs.list_to_js Ojs.string_to_js
                                           x2416)|]);
                                 (match x2417 with
                                  | Some x2419 ->
                                      ignore
                                        (Ojs.call x2418 "push"
                                           [|(Ojs.float_to_js x2419)|])
                                  | None -> ());
                                 x2418))|])
        let (appendVariable :
          t -> name:string -> defaultValue:(snippet:t -> any) or_string -> t)
          =
          fun (x2427 : t) ->
            fun ~name:(x2423 : string) ->
              fun ~defaultValue:(x2424 : (snippet:t -> any) or_string) ->
                t_of_js
                  (Ojs.call (t_to_js x2427) "appendVariable"
                     [|(Ojs.string_to_js x2423);(or_string_to_js
                                                   (fun
                                                      (x2425 :
                                                        snippet:t -> any)
                                                      ->
                                                      Ojs.fun_to_js 1
                                                        (fun (x2426 : Ojs.t)
                                                           ->
                                                           any_to_js
                                                             (x2425
                                                                ~snippet:(
                                                                t_of_js x2426))))
                                                   x2424)|])
      end
    module RenameProvider =
      struct
        type t = vscode_RenameProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2429 : Ojs.t) -> vscode_RenameProvider_of_js x2429
        and t_to_js : t -> Ojs.t =
          fun (x2428 : vscode_RenameProvider) ->
            vscode_RenameProvider_to_js x2428
        let (provideRenameEdits :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                newName:string ->
                  token:vscode_CancellationToken ->
                    vscode_WorkspaceEdit vscode_ProviderResult)
          =
          fun (x2434 : t) ->
            fun ~document:(x2430 : vscode_TextDocument) ->
              fun ~position:(x2431 : vscode_Position) ->
                fun ~newName:(x2432 : string) ->
                  fun ~token:(x2433 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js vscode_WorkspaceEdit_of_js
                      (Ojs.call (t_to_js x2434) "provideRenameEdits"
                         [|(vscode_TextDocument_to_js x2430);(vscode_Position_to_js
                                                                x2431);(
                           Ojs.string_to_js x2432);(vscode_CancellationToken_to_js
                                                      x2433)|])
        let (prepareRename :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Range, anonymous_interface_23) union2
                    vscode_ProviderResult)
          =
          fun (x2439 : t) ->
            fun ~document:(x2436 : vscode_TextDocument) ->
              fun ~position:(x2437 : vscode_Position) ->
                fun ~token:(x2438 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2440 : Ojs.t) ->
                       union2_of_js vscode_Range_of_js
                         anonymous_interface_23_of_js x2440)
                    (Ojs.call (t_to_js x2439) "prepareRename"
                       [|(vscode_TextDocument_to_js x2436);(vscode_Position_to_js
                                                              x2437);(
                         vscode_CancellationToken_to_js x2438)|])
      end
    module SemanticTokensLegend =
      struct
        type t = vscode_SemanticTokensLegend
        let rec t_of_js : Ojs.t -> t =
          fun (x2444 : Ojs.t) -> vscode_SemanticTokensLegend_of_js x2444
        and t_to_js : t -> Ojs.t =
          fun (x2443 : vscode_SemanticTokensLegend) ->
            vscode_SemanticTokensLegend_to_js x2443
        let (get_tokenTypes : t -> string list) =
          fun (x2445 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2445) "tokenTypes")
        let (get_tokenModifiers : t -> string list) =
          fun (x2447 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2447) "tokenModifiers")
        let (create :
          tokenTypes:string list -> ?tokenModifiers:string list -> unit -> t)
          =
          fun ~tokenTypes:(x2449 : string list) ->
            fun ?tokenModifiers:(x2450 : string list option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SemanticTokensLegend")
                     (let x2451 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2451 "push"
                           [|(Ojs.list_to_js Ojs.string_to_js x2449)|]);
                      (match x2450 with
                       | Some x2452 ->
                           ignore
                             (Ojs.call x2451 "push"
                                [|(Ojs.list_to_js Ojs.string_to_js x2452)|])
                       | None -> ());
                      x2451))
      end
    module SemanticTokensBuilder =
      struct
        type t = vscode_SemanticTokensBuilder
        let rec t_of_js : Ojs.t -> t =
          fun (x2456 : Ojs.t) -> vscode_SemanticTokensBuilder_of_js x2456
        and t_to_js : t -> Ojs.t =
          fun (x2455 : vscode_SemanticTokensBuilder) ->
            vscode_SemanticTokensBuilder_to_js x2455
        let (create : ?legend:vscode_SemanticTokensLegend -> unit -> t) =
          fun ?legend:(x2457 : vscode_SemanticTokensLegend option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "SemanticTokensBuilder")
                   (let x2458 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x2457 with
                     | Some x2459 ->
                         ignore
                           (Ojs.call x2458 "push"
                              [|(vscode_SemanticTokensLegend_to_js x2459)|])
                     | None -> ());
                    x2458))
        let (push :
          t ->
            line:float ->
              char:float ->
                length:float ->
                  tokenType:float -> ?tokenModifiers:float -> unit -> unit)
          =
          fun (x2467 : t) ->
            fun ~line:(x2460 : float) ->
              fun ~char:(x2461 : float) ->
                fun ~length:(x2462 : float) ->
                  fun ~tokenType:(x2463 : float) ->
                    fun ?tokenModifiers:(x2464 : float option) ->
                      fun () ->
                        ignore
                          (let x2468 = t_to_js x2467 in
                           Ojs.call (Ojs.get_prop_ascii x2468 "push") "apply"
                             [|x2468;((let x2465 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x2465 "push"
                                            [|(Ojs.float_to_js x2460)|]);
                                       ignore
                                         (Ojs.call x2465 "push"
                                            [|(Ojs.float_to_js x2461)|]);
                                       ignore
                                         (Ojs.call x2465 "push"
                                            [|(Ojs.float_to_js x2462)|]);
                                       ignore
                                         (Ojs.call x2465 "push"
                                            [|(Ojs.float_to_js x2463)|]);
                                       (match x2464 with
                                        | Some x2466 ->
                                            ignore
                                              (Ojs.call x2465 "push"
                                                 [|(Ojs.float_to_js x2466)|])
                                        | None -> ());
                                       x2465))|])
        let (push' :
          t ->
            range:vscode_Range ->
              tokenType:string -> ?tokenModifiers:string list -> unit -> unit)
          =
          fun (x2475 : t) ->
            fun ~range:(x2469 : vscode_Range) ->
              fun ~tokenType:(x2470 : string) ->
                fun ?tokenModifiers:(x2471 : string list option) ->
                  fun () ->
                    ignore
                      (let x2476 = t_to_js x2475 in
                       Ojs.call (Ojs.get_prop_ascii x2476 "push") "apply"
                         [|x2476;((let x2472 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2472 "push"
                                        [|(vscode_Range_to_js x2469)|]);
                                   ignore
                                     (Ojs.call x2472 "push"
                                        [|(Ojs.string_to_js x2470)|]);
                                   (match x2471 with
                                    | Some x2473 ->
                                        ignore
                                          (Ojs.call x2472 "push"
                                             [|(Ojs.list_to_js
                                                  Ojs.string_to_js x2473)|])
                                    | None -> ());
                                   x2472))|])
        let (build : t -> ?resultId:string -> unit -> vscode_SemanticTokens)
          =
          fun (x2480 : t) ->
            fun ?resultId:(x2477 : string option) ->
              fun () ->
                vscode_SemanticTokens_of_js
                  (let x2481 = t_to_js x2480 in
                   Ojs.call (Ojs.get_prop_ascii x2481 "build") "apply"
                     [|x2481;((let x2478 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2477 with
                                | Some x2479 ->
                                    ignore
                                      (Ojs.call x2478 "push"
                                         [|(Ojs.string_to_js x2479)|])
                                | None -> ());
                               x2478))|])
      end
    module SemanticTokens =
      struct
        type t = vscode_SemanticTokens
        let rec t_of_js : Ojs.t -> t =
          fun (x2483 : Ojs.t) -> vscode_SemanticTokens_of_js x2483
        and t_to_js : t -> Ojs.t =
          fun (x2482 : vscode_SemanticTokens) ->
            vscode_SemanticTokens_to_js x2482
        let (get_resultId : t -> string) =
          fun (x2484 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2484) "resultId")
        let (get_data : t -> Uint32Array.t) =
          fun (x2485 : t) ->
            Uint32Array.t_of_js (Ojs.get_prop_ascii (t_to_js x2485) "data")
        let (create : data:Uint32Array.t -> ?resultId:string -> unit -> t) =
          fun ~data:(x2486 : Uint32Array.t) ->
            fun ?resultId:(x2487 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SemanticTokens")
                     (let x2488 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2488 "push"
                           [|(Uint32Array.t_to_js x2486)|]);
                      (match x2487 with
                       | Some x2489 ->
                           ignore
                             (Ojs.call x2488 "push"
                                [|(Ojs.string_to_js x2489)|])
                       | None -> ());
                      x2488))
      end
    module SemanticTokensEdits =
      struct
        type t = vscode_SemanticTokensEdits
        let rec t_of_js : Ojs.t -> t =
          fun (x2491 : Ojs.t) -> vscode_SemanticTokensEdits_of_js x2491
        and t_to_js : t -> Ojs.t =
          fun (x2490 : vscode_SemanticTokensEdits) ->
            vscode_SemanticTokensEdits_to_js x2490
        let (get_resultId : t -> string) =
          fun (x2492 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2492) "resultId")
        let (get_edits : t -> vscode_SemanticTokensEdit list) =
          fun (x2493 : t) ->
            Ojs.list_of_js vscode_SemanticTokensEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2493) "edits")
        let (create :
          edits:vscode_SemanticTokensEdit list ->
            ?resultId:string -> unit -> t)
          =
          fun ~edits:(x2495 : vscode_SemanticTokensEdit list) ->
            fun ?resultId:(x2496 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SemanticTokensEdits")
                     (let x2497 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2497 "push"
                           [|(Ojs.list_to_js vscode_SemanticTokensEdit_to_js
                                x2495)|]);
                      (match x2496 with
                       | Some x2498 ->
                           ignore
                             (Ojs.call x2497 "push"
                                [|(Ojs.string_to_js x2498)|])
                       | None -> ());
                      x2497))
      end
    module SemanticTokensEdit =
      struct
        type t = vscode_SemanticTokensEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x2501 : Ojs.t) -> vscode_SemanticTokensEdit_of_js x2501
        and t_to_js : t -> Ojs.t =
          fun (x2500 : vscode_SemanticTokensEdit) ->
            vscode_SemanticTokensEdit_to_js x2500
        let (get_start : t -> float) =
          fun (x2502 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2502) "start")
        let (get_deleteCount : t -> float) =
          fun (x2503 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2503) "deleteCount")
        let (get_data : t -> Uint32Array.t) =
          fun (x2504 : t) ->
            Uint32Array.t_of_js (Ojs.get_prop_ascii (t_to_js x2504) "data")
        let (create :
          start:float ->
            deleteCount:float -> ?data:Uint32Array.t -> unit -> t)
          =
          fun ~start:(x2505 : float) ->
            fun ~deleteCount:(x2506 : float) ->
              fun ?data:(x2507 : Uint32Array.t option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "SemanticTokensEdit")
                       (let x2508 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x2508 "push" [|(Ojs.float_to_js x2505)|]);
                        ignore
                          (Ojs.call x2508 "push" [|(Ojs.float_to_js x2506)|]);
                        (match x2507 with
                         | Some x2509 ->
                             ignore
                               (Ojs.call x2508 "push"
                                  [|(Uint32Array.t_to_js x2509)|])
                         | None -> ());
                        x2508))
      end
    module DocumentSemanticTokensProvider =
      struct
        type t = vscode_DocumentSemanticTokensProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2511 : Ojs.t) ->
            vscode_DocumentSemanticTokensProvider_of_js x2511
        and t_to_js : t -> Ojs.t =
          fun (x2510 : vscode_DocumentSemanticTokensProvider) ->
            vscode_DocumentSemanticTokensProvider_to_js x2510
        let (get_onDidChangeSemanticTokens : t -> unit vscode_Event) =
          fun (x2512 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x2512) "onDidChangeSemanticTokens")
        let (set_onDidChangeSemanticTokens : t -> unit vscode_Event -> unit)
          =
          fun (x2514 : t) ->
            fun (x2515 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x2514) "onDidChangeSemanticTokens"
                (vscode_Event_to_js Ojs.unit_to_js x2515)
        let (provideDocumentSemanticTokens :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                vscode_SemanticTokens vscode_ProviderResult)
          =
          fun (x2519 : t) ->
            fun ~document:(x2517 : vscode_TextDocument) ->
              fun ~token:(x2518 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js vscode_SemanticTokens_of_js
                  (Ojs.call (t_to_js x2519) "provideDocumentSemanticTokens"
                     [|(vscode_TextDocument_to_js x2517);(vscode_CancellationToken_to_js
                                                            x2518)|])
        let (provideDocumentSemanticTokensEdits :
          t ->
            document:vscode_TextDocument ->
              previousResultId:string ->
                token:vscode_CancellationToken ->
                  (vscode_SemanticTokens, vscode_SemanticTokensEdits) union2
                    vscode_ProviderResult)
          =
          fun (x2524 : t) ->
            fun ~document:(x2521 : vscode_TextDocument) ->
              fun ~previousResultId:(x2522 : string) ->
                fun ~token:(x2523 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2525 : Ojs.t) ->
                       union2_of_js vscode_SemanticTokens_of_js
                         vscode_SemanticTokensEdits_of_js x2525)
                    (Ojs.call (t_to_js x2524)
                       "provideDocumentSemanticTokensEdits"
                       [|(vscode_TextDocument_to_js x2521);(Ojs.string_to_js
                                                              x2522);(
                         vscode_CancellationToken_to_js x2523)|])
      end
    module DocumentRangeSemanticTokensProvider =
      struct
        type t = vscode_DocumentRangeSemanticTokensProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2529 : Ojs.t) ->
            vscode_DocumentRangeSemanticTokensProvider_of_js x2529
        and t_to_js : t -> Ojs.t =
          fun (x2528 : vscode_DocumentRangeSemanticTokensProvider) ->
            vscode_DocumentRangeSemanticTokensProvider_to_js x2528
        let (provideDocumentRangeSemanticTokens :
          t ->
            document:vscode_TextDocument ->
              range:vscode_Range ->
                token:vscode_CancellationToken ->
                  vscode_SemanticTokens vscode_ProviderResult)
          =
          fun (x2533 : t) ->
            fun ~document:(x2530 : vscode_TextDocument) ->
              fun ~range:(x2531 : vscode_Range) ->
                fun ~token:(x2532 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_SemanticTokens_of_js
                    (Ojs.call (t_to_js x2533)
                       "provideDocumentRangeSemanticTokens"
                       [|(vscode_TextDocument_to_js x2530);(vscode_Range_to_js
                                                              x2531);(
                         vscode_CancellationToken_to_js x2532)|])
      end
    module FormattingOptions =
      struct
        type t = vscode_FormattingOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x2536 : Ojs.t) -> vscode_FormattingOptions_of_js x2536
        and t_to_js : t -> Ojs.t =
          fun (x2535 : vscode_FormattingOptions) ->
            vscode_FormattingOptions_to_js x2535
        let (get_tabSize : t -> float) =
          fun (x2537 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2537) "tabSize")
        let (set_tabSize : t -> float -> unit) =
          fun (x2538 : t) ->
            fun (x2539 : float) ->
              Ojs.set_prop_ascii (t_to_js x2538) "tabSize"
                (Ojs.float_to_js x2539)
        let (get_insertSpaces : t -> bool) =
          fun (x2540 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2540) "insertSpaces")
        let (set_insertSpaces : t -> bool -> unit) =
          fun (x2541 : t) ->
            fun (x2542 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2541) "insertSpaces"
                (Ojs.bool_to_js x2542)
        let (get : t -> string -> bool or_string or_number) =
          fun (x2543 : t) ->
            fun (x2544 : string) ->
              or_number_of_js
                (fun (x2545 : Ojs.t) -> or_string_of_js Ojs.bool_of_js x2545)
                (Ojs.get_prop (t_to_js x2543) (Ojs.string_to_js x2544))
        let (set : t -> string -> bool or_string or_number -> unit) =
          fun (x2547 : t) ->
            fun (x2548 : string) ->
              fun (x2549 : bool or_string or_number) ->
                Ojs.set_prop (t_to_js x2547) (Ojs.string_to_js x2548)
                  (or_number_to_js
                     (fun (x2550 : bool or_string) ->
                        or_string_to_js Ojs.bool_to_js x2550) x2549)
      end
    module DocumentFormattingEditProvider =
      struct
        type t = vscode_DocumentFormattingEditProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2553 : Ojs.t) ->
            vscode_DocumentFormattingEditProvider_of_js x2553
        and t_to_js : t -> Ojs.t =
          fun (x2552 : vscode_DocumentFormattingEditProvider) ->
            vscode_DocumentFormattingEditProvider_to_js x2552
        let (provideDocumentFormattingEdits :
          t ->
            document:vscode_TextDocument ->
              options:vscode_FormattingOptions ->
                token:vscode_CancellationToken ->
                  vscode_TextEdit list vscode_ProviderResult)
          =
          fun (x2557 : t) ->
            fun ~document:(x2554 : vscode_TextDocument) ->
              fun ~options:(x2555 : vscode_FormattingOptions) ->
                fun ~token:(x2556 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2558 : Ojs.t) ->
                       Ojs.list_of_js vscode_TextEdit_of_js x2558)
                    (Ojs.call (t_to_js x2557)
                       "provideDocumentFormattingEdits"
                       [|(vscode_TextDocument_to_js x2554);(vscode_FormattingOptions_to_js
                                                              x2555);(
                         vscode_CancellationToken_to_js x2556)|])
      end
    module DocumentRangeFormattingEditProvider =
      struct
        type t = vscode_DocumentRangeFormattingEditProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2561 : Ojs.t) ->
            vscode_DocumentRangeFormattingEditProvider_of_js x2561
        and t_to_js : t -> Ojs.t =
          fun (x2560 : vscode_DocumentRangeFormattingEditProvider) ->
            vscode_DocumentRangeFormattingEditProvider_to_js x2560
        let (provideDocumentRangeFormattingEdits :
          t ->
            document:vscode_TextDocument ->
              range:vscode_Range ->
                options:vscode_FormattingOptions ->
                  token:vscode_CancellationToken ->
                    vscode_TextEdit list vscode_ProviderResult)
          =
          fun (x2566 : t) ->
            fun ~document:(x2562 : vscode_TextDocument) ->
              fun ~range:(x2563 : vscode_Range) ->
                fun ~options:(x2564 : vscode_FormattingOptions) ->
                  fun ~token:(x2565 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x2567 : Ojs.t) ->
                         Ojs.list_of_js vscode_TextEdit_of_js x2567)
                      (Ojs.call (t_to_js x2566)
                         "provideDocumentRangeFormattingEdits"
                         [|(vscode_TextDocument_to_js x2562);(vscode_Range_to_js
                                                                x2563);(
                           vscode_FormattingOptions_to_js x2564);(vscode_CancellationToken_to_js
                                                                    x2565)|])
      end
    module OnTypeFormattingEditProvider =
      struct
        type t = vscode_OnTypeFormattingEditProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2570 : Ojs.t) ->
            vscode_OnTypeFormattingEditProvider_of_js x2570
        and t_to_js : t -> Ojs.t =
          fun (x2569 : vscode_OnTypeFormattingEditProvider) ->
            vscode_OnTypeFormattingEditProvider_to_js x2569
        let (provideOnTypeFormattingEdits :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                ch:string ->
                  options:vscode_FormattingOptions ->
                    token:vscode_CancellationToken ->
                      vscode_TextEdit list vscode_ProviderResult)
          =
          fun (x2576 : t) ->
            fun ~document:(x2571 : vscode_TextDocument) ->
              fun ~position:(x2572 : vscode_Position) ->
                fun ~ch:(x2573 : string) ->
                  fun ~options:(x2574 : vscode_FormattingOptions) ->
                    fun ~token:(x2575 : vscode_CancellationToken) ->
                      vscode_ProviderResult_of_js
                        (fun (x2577 : Ojs.t) ->
                           Ojs.list_of_js vscode_TextEdit_of_js x2577)
                        (Ojs.call (t_to_js x2576)
                           "provideOnTypeFormattingEdits"
                           [|(vscode_TextDocument_to_js x2571);(vscode_Position_to_js
                                                                  x2572);(
                             Ojs.string_to_js x2573);(vscode_FormattingOptions_to_js
                                                        x2574);(vscode_CancellationToken_to_js
                                                                  x2575)|])
      end
    module ParameterInformation =
      struct
        type t = vscode_ParameterInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2580 : Ojs.t) -> vscode_ParameterInformation_of_js x2580
        and t_to_js : t -> Ojs.t =
          fun (x2579 : vscode_ParameterInformation) ->
            vscode_ParameterInformation_to_js x2579
        let (get_label : t -> (float * float) or_string) =
          fun (x2581 : t) ->
            or_string_of_js
              (fun (x2582 : Ojs.t) ->
                 let x2583 = x2582 in
                 ((Ojs.float_of_js (Ojs.array_get x2583 0)),
                   (Ojs.float_of_js (Ojs.array_get x2583 1))))
              (Ojs.get_prop_ascii (t_to_js x2581) "label")
        let (set_label : t -> (float * float) or_string -> unit) =
          fun (x2584 : t) ->
            fun (x2585 : (float * float) or_string) ->
              Ojs.set_prop_ascii (t_to_js x2584) "label"
                (or_string_to_js
                   (fun (x2586 : (float * float)) ->
                      let (x2587, x2588) = x2586 in
                      let x2589 = Ojs.array_make 2 in
                      Ojs.array_set x2589 0 (Ojs.float_to_js x2587);
                      Ojs.array_set x2589 1 (Ojs.float_to_js x2588);
                      x2589) x2585)
        let (get_documentation : t -> vscode_MarkdownString or_string) =
          fun (x2590 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x2590) "documentation")
        let (set_documentation :
          t -> vscode_MarkdownString or_string -> unit) =
          fun (x2592 : t) ->
            fun (x2593 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2592) "documentation"
                (or_string_to_js vscode_MarkdownString_to_js x2593)
        let (create :
          label:(float * float) or_string ->
            ?documentation:vscode_MarkdownString or_string -> unit -> t)
          =
          fun ~label:(x2595 : (float * float) or_string) ->
            fun
              ?documentation:(x2596 : vscode_MarkdownString or_string option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "ParameterInformation")
                     (let x2597 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2597 "push"
                           [|(or_string_to_js
                                (fun (x2600 : (float * float)) ->
                                   let (x2601, x2602) = x2600 in
                                   let x2603 = Ojs.array_make 2 in
                                   Ojs.array_set x2603 0
                                     (Ojs.float_to_js x2601);
                                   Ojs.array_set x2603 1
                                     (Ojs.float_to_js x2602);
                                   x2603) x2595)|]);
                      (match x2596 with
                       | Some x2598 ->
                           ignore
                             (Ojs.call x2597 "push"
                                [|(or_string_to_js
                                     vscode_MarkdownString_to_js x2598)|])
                       | None -> ());
                      x2597))
      end
    module SignatureInformation =
      struct
        type t = vscode_SignatureInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2605 : Ojs.t) -> vscode_SignatureInformation_of_js x2605
        and t_to_js : t -> Ojs.t =
          fun (x2604 : vscode_SignatureInformation) ->
            vscode_SignatureInformation_to_js x2604
        let (get_label : t -> string) =
          fun (x2606 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2606) "label")
        let (set_label : t -> string -> unit) =
          fun (x2607 : t) ->
            fun (x2608 : string) ->
              Ojs.set_prop_ascii (t_to_js x2607) "label"
                (Ojs.string_to_js x2608)
        let (get_documentation : t -> vscode_MarkdownString or_string) =
          fun (x2609 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x2609) "documentation")
        let (set_documentation :
          t -> vscode_MarkdownString or_string -> unit) =
          fun (x2611 : t) ->
            fun (x2612 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2611) "documentation"
                (or_string_to_js vscode_MarkdownString_to_js x2612)
        let (get_parameters : t -> vscode_ParameterInformation list) =
          fun (x2614 : t) ->
            Ojs.list_of_js vscode_ParameterInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x2614) "parameters")
        let (set_parameters : t -> vscode_ParameterInformation list -> unit)
          =
          fun (x2616 : t) ->
            fun (x2617 : vscode_ParameterInformation list) ->
              Ojs.set_prop_ascii (t_to_js x2616) "parameters"
                (Ojs.list_to_js vscode_ParameterInformation_to_js x2617)
        let (get_activeParameter : t -> float) =
          fun (x2619 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2619) "activeParameter")
        let (set_activeParameter : t -> float -> unit) =
          fun (x2620 : t) ->
            fun (x2621 : float) ->
              Ojs.set_prop_ascii (t_to_js x2620) "activeParameter"
                (Ojs.float_to_js x2621)
        let (create :
          label:string ->
            ?documentation:vscode_MarkdownString or_string -> unit -> t)
          =
          fun ~label:(x2622 : string) ->
            fun
              ?documentation:(x2623 : vscode_MarkdownString or_string option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SignatureInformation")
                     (let x2624 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2624 "push" [|(Ojs.string_to_js x2622)|]);
                      (match x2623 with
                       | Some x2625 ->
                           ignore
                             (Ojs.call x2624 "push"
                                [|(or_string_to_js
                                     vscode_MarkdownString_to_js x2625)|])
                       | None -> ());
                      x2624))
      end
    module SignatureHelp =
      struct
        type t = vscode_SignatureHelp
        let rec t_of_js : Ojs.t -> t =
          fun (x2628 : Ojs.t) -> vscode_SignatureHelp_of_js x2628
        and t_to_js : t -> Ojs.t =
          fun (x2627 : vscode_SignatureHelp) ->
            vscode_SignatureHelp_to_js x2627
        let (get_signatures : t -> vscode_SignatureInformation list) =
          fun (x2629 : t) ->
            Ojs.list_of_js vscode_SignatureInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x2629) "signatures")
        let (set_signatures : t -> vscode_SignatureInformation list -> unit)
          =
          fun (x2631 : t) ->
            fun (x2632 : vscode_SignatureInformation list) ->
              Ojs.set_prop_ascii (t_to_js x2631) "signatures"
                (Ojs.list_to_js vscode_SignatureInformation_to_js x2632)
        let (get_activeSignature : t -> float) =
          fun (x2634 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2634) "activeSignature")
        let (set_activeSignature : t -> float -> unit) =
          fun (x2635 : t) ->
            fun (x2636 : float) ->
              Ojs.set_prop_ascii (t_to_js x2635) "activeSignature"
                (Ojs.float_to_js x2636)
        let (get_activeParameter : t -> float) =
          fun (x2637 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2637) "activeParameter")
        let (set_activeParameter : t -> float -> unit) =
          fun (x2638 : t) ->
            fun (x2639 : float) ->
              Ojs.set_prop_ascii (t_to_js x2638) "activeParameter"
                (Ojs.float_to_js x2639)
      end
    module SignatureHelpTriggerKind =
      struct
        type t = vscode_SignatureHelpTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2641 : Ojs.t) -> vscode_SignatureHelpTriggerKind_of_js x2641
        and t_to_js : t -> Ojs.t =
          fun (x2640 : vscode_SignatureHelpTriggerKind) ->
            vscode_SignatureHelpTriggerKind_to_js x2640
      end
    module SignatureHelpContext =
      struct
        type t = vscode_SignatureHelpContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2643 : Ojs.t) -> vscode_SignatureHelpContext_of_js x2643
        and t_to_js : t -> Ojs.t =
          fun (x2642 : vscode_SignatureHelpContext) ->
            vscode_SignatureHelpContext_to_js x2642
        let (get_triggerKind : t -> vscode_SignatureHelpTriggerKind) =
          fun (x2644 : t) ->
            vscode_SignatureHelpTriggerKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2644) "triggerKind")
        let (get_triggerCharacter : t -> string) =
          fun (x2645 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2645) "triggerCharacter")
        let (get_isRetrigger : t -> bool) =
          fun (x2646 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x2646) "isRetrigger")
        let (get_activeSignatureHelp : t -> vscode_SignatureHelp) =
          fun (x2647 : t) ->
            vscode_SignatureHelp_of_js
              (Ojs.get_prop_ascii (t_to_js x2647) "activeSignatureHelp")
      end
    module SignatureHelpProvider =
      struct
        type t = vscode_SignatureHelpProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2649 : Ojs.t) -> vscode_SignatureHelpProvider_of_js x2649
        and t_to_js : t -> Ojs.t =
          fun (x2648 : vscode_SignatureHelpProvider) ->
            vscode_SignatureHelpProvider_to_js x2648
        let (provideSignatureHelp :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  context:vscode_SignatureHelpContext ->
                    vscode_SignatureHelp vscode_ProviderResult)
          =
          fun (x2654 : t) ->
            fun ~document:(x2650 : vscode_TextDocument) ->
              fun ~position:(x2651 : vscode_Position) ->
                fun ~token:(x2652 : vscode_CancellationToken) ->
                  fun ~context:(x2653 : vscode_SignatureHelpContext) ->
                    vscode_ProviderResult_of_js vscode_SignatureHelp_of_js
                      (Ojs.call (t_to_js x2654) "provideSignatureHelp"
                         [|(vscode_TextDocument_to_js x2650);(vscode_Position_to_js
                                                                x2651);(
                           vscode_CancellationToken_to_js x2652);(vscode_SignatureHelpContext_to_js
                                                                    x2653)|])
      end
    module SignatureHelpProviderMetadata =
      struct
        type t = vscode_SignatureHelpProviderMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x2657 : Ojs.t) ->
            vscode_SignatureHelpProviderMetadata_of_js x2657
        and t_to_js : t -> Ojs.t =
          fun (x2656 : vscode_SignatureHelpProviderMetadata) ->
            vscode_SignatureHelpProviderMetadata_to_js x2656
        let (get_triggerCharacters : t -> string list) =
          fun (x2658 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2658) "triggerCharacters")
        let (get_retriggerCharacters : t -> string list) =
          fun (x2660 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2660) "retriggerCharacters")
      end
    module CompletionItemKind =
      struct
        type t = vscode_CompletionItemKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2663 : Ojs.t) -> vscode_CompletionItemKind_of_js x2663
        and t_to_js : t -> Ojs.t =
          fun (x2662 : vscode_CompletionItemKind) ->
            vscode_CompletionItemKind_to_js x2662
      end
    module CompletionItemTag =
      struct
        type t = vscode_CompletionItemTag
        let rec t_of_js : Ojs.t -> t =
          fun (x2665 : Ojs.t) -> vscode_CompletionItemTag_of_js x2665
        and t_to_js : t -> Ojs.t =
          fun (x2664 : vscode_CompletionItemTag) ->
            vscode_CompletionItemTag_to_js x2664
      end
    module CompletionItem =
      struct
        type t = vscode_CompletionItem
        let rec t_of_js : Ojs.t -> t =
          fun (x2667 : Ojs.t) -> vscode_CompletionItem_of_js x2667
        and t_to_js : t -> Ojs.t =
          fun (x2666 : vscode_CompletionItem) ->
            vscode_CompletionItem_to_js x2666
        let (get_label : t -> string) =
          fun (x2668 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2668) "label")
        let (set_label : t -> string -> unit) =
          fun (x2669 : t) ->
            fun (x2670 : string) ->
              Ojs.set_prop_ascii (t_to_js x2669) "label"
                (Ojs.string_to_js x2670)
        let (get_kind : t -> vscode_CompletionItemKind) =
          fun (x2671 : t) ->
            vscode_CompletionItemKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2671) "kind")
        let (set_kind : t -> vscode_CompletionItemKind -> unit) =
          fun (x2672 : t) ->
            fun (x2673 : vscode_CompletionItemKind) ->
              Ojs.set_prop_ascii (t_to_js x2672) "kind"
                (vscode_CompletionItemKind_to_js x2673)
        let (get_tags : t -> vscode_CompletionItemTag list) =
          fun (x2674 : t) ->
            Ojs.list_of_js vscode_CompletionItemTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2674) "tags")
        let (set_tags : t -> vscode_CompletionItemTag list -> unit) =
          fun (x2676 : t) ->
            fun (x2677 : vscode_CompletionItemTag list) ->
              Ojs.set_prop_ascii (t_to_js x2676) "tags"
                (Ojs.list_to_js vscode_CompletionItemTag_to_js x2677)
        let (get_detail : t -> string) =
          fun (x2679 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2679) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x2680 : t) ->
            fun (x2681 : string) ->
              Ojs.set_prop_ascii (t_to_js x2680) "detail"
                (Ojs.string_to_js x2681)
        let (get_documentation : t -> vscode_MarkdownString or_string) =
          fun (x2682 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x2682) "documentation")
        let (set_documentation :
          t -> vscode_MarkdownString or_string -> unit) =
          fun (x2684 : t) ->
            fun (x2685 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2684) "documentation"
                (or_string_to_js vscode_MarkdownString_to_js x2685)
        let (get_sortText : t -> string) =
          fun (x2687 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2687) "sortText")
        let (set_sortText : t -> string -> unit) =
          fun (x2688 : t) ->
            fun (x2689 : string) ->
              Ojs.set_prop_ascii (t_to_js x2688) "sortText"
                (Ojs.string_to_js x2689)
        let (get_filterText : t -> string) =
          fun (x2690 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2690) "filterText")
        let (set_filterText : t -> string -> unit) =
          fun (x2691 : t) ->
            fun (x2692 : string) ->
              Ojs.set_prop_ascii (t_to_js x2691) "filterText"
                (Ojs.string_to_js x2692)
        let (get_preselect : t -> bool) =
          fun (x2693 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x2693) "preselect")
        let (set_preselect : t -> bool -> unit) =
          fun (x2694 : t) ->
            fun (x2695 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2694) "preselect"
                (Ojs.bool_to_js x2695)
        let (get_insertText : t -> vscode_SnippetString or_string) =
          fun (x2696 : t) ->
            or_string_of_js vscode_SnippetString_of_js
              (Ojs.get_prop_ascii (t_to_js x2696) "insertText")
        let (set_insertText : t -> vscode_SnippetString or_string -> unit) =
          fun (x2698 : t) ->
            fun (x2699 : vscode_SnippetString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2698) "insertText"
                (or_string_to_js vscode_SnippetString_to_js x2699)
        let (get_range : t -> (vscode_Range, anonymous_interface_8) union2) =
          fun (x2701 : t) ->
            union2_of_js vscode_Range_of_js anonymous_interface_8_of_js
              (Ojs.get_prop_ascii (t_to_js x2701) "range")
        let (set_range :
          t -> (vscode_Range, anonymous_interface_8) union2 -> unit) =
          fun (x2704 : t) ->
            fun (x2705 : (vscode_Range, anonymous_interface_8) union2) ->
              Ojs.set_prop_ascii (t_to_js x2704) "range"
                (union2_to_js vscode_Range_to_js anonymous_interface_8_to_js
                   x2705)
        let (get_commitCharacters : t -> string list) =
          fun (x2708 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2708) "commitCharacters")
        let (set_commitCharacters : t -> string list -> unit) =
          fun (x2710 : t) ->
            fun (x2711 : string list) ->
              Ojs.set_prop_ascii (t_to_js x2710) "commitCharacters"
                (Ojs.list_to_js Ojs.string_to_js x2711)
        let (get_keepWhitespace : t -> bool) =
          fun (x2713 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2713) "keepWhitespace")
        let (set_keepWhitespace : t -> bool -> unit) =
          fun (x2714 : t) ->
            fun (x2715 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2714) "keepWhitespace"
                (Ojs.bool_to_js x2715)
        let (get_textEdit : t -> vscode_TextEdit) =
          fun (x2716 : t) ->
            vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2716) "textEdit")
        let (set_textEdit : t -> vscode_TextEdit -> unit) =
          fun (x2717 : t) ->
            fun (x2718 : vscode_TextEdit) ->
              Ojs.set_prop_ascii (t_to_js x2717) "textEdit"
                (vscode_TextEdit_to_js x2718)
        let (get_additionalTextEdits : t -> vscode_TextEdit list) =
          fun (x2719 : t) ->
            Ojs.list_of_js vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2719) "additionalTextEdits")
        let (set_additionalTextEdits : t -> vscode_TextEdit list -> unit) =
          fun (x2721 : t) ->
            fun (x2722 : vscode_TextEdit list) ->
              Ojs.set_prop_ascii (t_to_js x2721) "additionalTextEdits"
                (Ojs.list_to_js vscode_TextEdit_to_js x2722)
        let (get_command : t -> vscode_Command) =
          fun (x2724 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x2724) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x2725 : t) ->
            fun (x2726 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x2725) "command"
                (vscode_Command_to_js x2726)
        let (create :
          label:string -> ?kind:vscode_CompletionItemKind -> unit -> t) =
          fun ~label:(x2727 : string) ->
            fun ?kind:(x2728 : vscode_CompletionItemKind option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "CompletionItem")
                     (let x2729 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2729 "push" [|(Ojs.string_to_js x2727)|]);
                      (match x2728 with
                       | Some x2730 ->
                           ignore
                             (Ojs.call x2729 "push"
                                [|(vscode_CompletionItemKind_to_js x2730)|])
                       | None -> ());
                      x2729))
      end
    module CompletionList =
      struct
        type 'T t = 'T vscode_CompletionList
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2733 : Ojs.t) ->
              vscode_CompletionList_of_js __T_of_js x2733
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2731 : __T vscode_CompletionList) ->
              vscode_CompletionList_to_js __T_to_js x2731
        let (get_isIncomplete : 'T t -> bool) =
          fun (x2735 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x2735) "isIncomplete")
        let (set_isIncomplete : 'T t -> bool -> unit) =
          fun (x2737 : 'T t) ->
            fun (x2738 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x2737) "isIncomplete"
                (Ojs.bool_to_js x2738)
        let (get_items : 'T t -> 'T list) =
          fun (x2740 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x2740) "items")
        let (set_items : 'T t -> 'T list -> unit) =
          fun (x2743 : 'T t) ->
            fun (x2744 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x2743) "items"
                (Ojs.list_to_js Obj.magic x2744)
        let (create : ?items:'T list -> ?isIncomplete:bool -> unit -> 'T t) =
          fun ?items:(x2747 : 'T list option) ->
            fun ?isIncomplete:(x2748 : bool option) ->
              fun () ->
                t_of_js Obj.magic
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "CompletionList")
                     (let x2749 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2747 with
                       | Some x2751 ->
                           ignore
                             (Ojs.call x2749 "push"
                                [|(Ojs.list_to_js Obj.magic x2751)|])
                       | None -> ());
                      (match x2748 with
                       | Some x2750 ->
                           ignore
                             (Ojs.call x2749 "push"
                                [|(Ojs.bool_to_js x2750)|])
                       | None -> ());
                      x2749))
      end
    module CompletionTriggerKind =
      struct
        type t = vscode_CompletionTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2755 : Ojs.t) -> vscode_CompletionTriggerKind_of_js x2755
        and t_to_js : t -> Ojs.t =
          fun (x2754 : vscode_CompletionTriggerKind) ->
            vscode_CompletionTriggerKind_to_js x2754
      end
    module CompletionContext =
      struct
        type t = vscode_CompletionContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2757 : Ojs.t) -> vscode_CompletionContext_of_js x2757
        and t_to_js : t -> Ojs.t =
          fun (x2756 : vscode_CompletionContext) ->
            vscode_CompletionContext_to_js x2756
        let (get_triggerKind : t -> vscode_CompletionTriggerKind) =
          fun (x2758 : t) ->
            vscode_CompletionTriggerKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2758) "triggerKind")
        let (get_triggerCharacter : t -> string) =
          fun (x2759 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2759) "triggerCharacter")
      end
    module CompletionItemProvider =
      struct
        type 'T t = 'T vscode_CompletionItemProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2762 : Ojs.t) ->
              vscode_CompletionItemProvider_of_js __T_of_js x2762
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2760 : __T vscode_CompletionItemProvider) ->
              vscode_CompletionItemProvider_to_js __T_to_js x2760
        let (provideCompletionItems :
          'T t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  context:vscode_CompletionContext ->
                    ('T vscode_CompletionList, 'T) or_array
                      vscode_ProviderResult)
          =
          fun (x2768 : 'T t) ->
            fun ~document:(x2764 : vscode_TextDocument) ->
              fun ~position:(x2765 : vscode_Position) ->
                fun ~token:(x2766 : vscode_CancellationToken) ->
                  fun ~context:(x2767 : vscode_CompletionContext) ->
                    vscode_ProviderResult_of_js
                      (fun (x2770 : Ojs.t) ->
                         or_array_of_js
                           (fun (x2771 : Ojs.t) ->
                              vscode_CompletionList_of_js Obj.magic x2771)
                           Obj.magic x2770)
                      (Ojs.call (t_to_js Obj.magic x2768)
                         "provideCompletionItems"
                         [|(vscode_TextDocument_to_js x2764);(vscode_Position_to_js
                                                                x2765);(
                           vscode_CancellationToken_to_js x2766);(vscode_CompletionContext_to_js
                                                                    x2767)|])
        let (resolveCompletionItem :
          'T t ->
            item:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x2776 : 'T t) ->
            fun ~item:(x2774 : 'T) ->
              fun ~token:(x2775 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x2776) "resolveCompletionItem"
                     [|(Obj.magic x2774);(vscode_CancellationToken_to_js
                                            x2775)|])
      end
    module DocumentLink =
      struct
        type t = vscode_DocumentLink
        let rec t_of_js : Ojs.t -> t =
          fun (x2780 : Ojs.t) -> vscode_DocumentLink_of_js x2780
        and t_to_js : t -> Ojs.t =
          fun (x2779 : vscode_DocumentLink) ->
            vscode_DocumentLink_to_js x2779
        let (get_range : t -> vscode_Range) =
          fun (x2781 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2781) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2782 : t) ->
            fun (x2783 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2782) "range"
                (vscode_Range_to_js x2783)
        let (get_target : t -> vscode_Uri) =
          fun (x2784 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x2784) "target")
        let (set_target : t -> vscode_Uri -> unit) =
          fun (x2785 : t) ->
            fun (x2786 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x2785) "target"
                (vscode_Uri_to_js x2786)
        let (get_tooltip : t -> string) =
          fun (x2787 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2787) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x2788 : t) ->
            fun (x2789 : string) ->
              Ojs.set_prop_ascii (t_to_js x2788) "tooltip"
                (Ojs.string_to_js x2789)
        let (create : range:vscode_Range -> ?target:vscode_Uri -> unit -> t)
          =
          fun ~range:(x2790 : vscode_Range) ->
            fun ?target:(x2791 : vscode_Uri option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "DocumentLink")
                     (let x2792 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2792 "push" [|(vscode_Range_to_js x2790)|]);
                      (match x2791 with
                       | Some x2793 ->
                           ignore
                             (Ojs.call x2792 "push"
                                [|(vscode_Uri_to_js x2793)|])
                       | None -> ());
                      x2792))
      end
    module DocumentLinkProvider =
      struct
        type 'T t = 'T vscode_DocumentLinkProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2796 : Ojs.t) ->
              vscode_DocumentLinkProvider_of_js __T_of_js x2796
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2794 : __T vscode_DocumentLinkProvider) ->
              vscode_DocumentLinkProvider_to_js __T_to_js x2794
        let (provideDocumentLinks :
          'T t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x2800 : 'T t) ->
            fun ~document:(x2798 : vscode_TextDocument) ->
              fun ~token:(x2799 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2802 : Ojs.t) -> Ojs.list_of_js Obj.magic x2802)
                  (Ojs.call (t_to_js Obj.magic x2800) "provideDocumentLinks"
                     [|(vscode_TextDocument_to_js x2798);(vscode_CancellationToken_to_js
                                                            x2799)|])
        let (resolveDocumentLink :
          'T t ->
            link:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x2806 : 'T t) ->
            fun ~link:(x2804 : 'T) ->
              fun ~token:(x2805 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x2806) "resolveDocumentLink"
                     [|(Obj.magic x2804);(vscode_CancellationToken_to_js
                                            x2805)|])
      end
    module Color =
      struct
        type t = vscode_Color
        let rec t_of_js : Ojs.t -> t =
          fun (x2810 : Ojs.t) -> vscode_Color_of_js x2810
        and t_to_js : t -> Ojs.t =
          fun (x2809 : vscode_Color) -> vscode_Color_to_js x2809
        let (get_red : t -> float) =
          fun (x2811 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2811) "red")
        let (get_green : t -> float) =
          fun (x2812 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2812) "green")
        let (get_blue : t -> float) =
          fun (x2813 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2813) "blue")
        let (get_alpha : t -> float) =
          fun (x2814 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2814) "alpha")
        let (create :
          red:float -> green:float -> blue:float -> alpha:float -> t) =
          fun ~red:(x2815 : float) ->
            fun ~green:(x2816 : float) ->
              fun ~blue:(x2817 : float) ->
                fun ~alpha:(x2818 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode") "Color")
                       [|(Ojs.float_to_js x2815);(Ojs.float_to_js x2816);(
                         Ojs.float_to_js x2817);(Ojs.float_to_js x2818)|])
      end
    module ColorInformation =
      struct
        type t = vscode_ColorInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2820 : Ojs.t) -> vscode_ColorInformation_of_js x2820
        and t_to_js : t -> Ojs.t =
          fun (x2819 : vscode_ColorInformation) ->
            vscode_ColorInformation_to_js x2819
        let (get_range : t -> vscode_Range) =
          fun (x2821 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2821) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2822 : t) ->
            fun (x2823 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2822) "range"
                (vscode_Range_to_js x2823)
        let (get_color : t -> vscode_Color) =
          fun (x2824 : t) ->
            vscode_Color_of_js (Ojs.get_prop_ascii (t_to_js x2824) "color")
        let (set_color : t -> vscode_Color -> unit) =
          fun (x2825 : t) ->
            fun (x2826 : vscode_Color) ->
              Ojs.set_prop_ascii (t_to_js x2825) "color"
                (vscode_Color_to_js x2826)
        let (create : range:vscode_Range -> color:vscode_Color -> t) =
          fun ~range:(x2827 : vscode_Range) ->
            fun ~color:(x2828 : vscode_Color) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "ColorInformation")
                   [|(vscode_Range_to_js x2827);(vscode_Color_to_js x2828)|])
      end
    module ColorPresentation =
      struct
        type t = vscode_ColorPresentation
        let rec t_of_js : Ojs.t -> t =
          fun (x2830 : Ojs.t) -> vscode_ColorPresentation_of_js x2830
        and t_to_js : t -> Ojs.t =
          fun (x2829 : vscode_ColorPresentation) ->
            vscode_ColorPresentation_to_js x2829
        let (get_label : t -> string) =
          fun (x2831 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2831) "label")
        let (set_label : t -> string -> unit) =
          fun (x2832 : t) ->
            fun (x2833 : string) ->
              Ojs.set_prop_ascii (t_to_js x2832) "label"
                (Ojs.string_to_js x2833)
        let (get_textEdit : t -> vscode_TextEdit) =
          fun (x2834 : t) ->
            vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2834) "textEdit")
        let (set_textEdit : t -> vscode_TextEdit -> unit) =
          fun (x2835 : t) ->
            fun (x2836 : vscode_TextEdit) ->
              Ojs.set_prop_ascii (t_to_js x2835) "textEdit"
                (vscode_TextEdit_to_js x2836)
        let (get_additionalTextEdits : t -> vscode_TextEdit list) =
          fun (x2837 : t) ->
            Ojs.list_of_js vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2837) "additionalTextEdits")
        let (set_additionalTextEdits : t -> vscode_TextEdit list -> unit) =
          fun (x2839 : t) ->
            fun (x2840 : vscode_TextEdit list) ->
              Ojs.set_prop_ascii (t_to_js x2839) "additionalTextEdits"
                (Ojs.list_to_js vscode_TextEdit_to_js x2840)
        let (create : label:string -> t) =
          fun ~label:(x2842 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ColorPresentation") [|(Ojs.string_to_js x2842)|])
      end
    module DocumentColorProvider =
      struct
        type t = vscode_DocumentColorProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2844 : Ojs.t) -> vscode_DocumentColorProvider_of_js x2844
        and t_to_js : t -> Ojs.t =
          fun (x2843 : vscode_DocumentColorProvider) ->
            vscode_DocumentColorProvider_to_js x2843
        let (provideDocumentColors :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                vscode_ColorInformation list vscode_ProviderResult)
          =
          fun (x2847 : t) ->
            fun ~document:(x2845 : vscode_TextDocument) ->
              fun ~token:(x2846 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2848 : Ojs.t) ->
                     Ojs.list_of_js vscode_ColorInformation_of_js x2848)
                  (Ojs.call (t_to_js x2847) "provideDocumentColors"
                     [|(vscode_TextDocument_to_js x2845);(vscode_CancellationToken_to_js
                                                            x2846)|])
        let (provideColorPresentations :
          t ->
            color:vscode_Color ->
              context:anonymous_interface_6 ->
                token:vscode_CancellationToken ->
                  vscode_ColorPresentation list vscode_ProviderResult)
          =
          fun (x2853 : t) ->
            fun ~color:(x2850 : vscode_Color) ->
              fun ~context:(x2851 : anonymous_interface_6) ->
                fun ~token:(x2852 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2854 : Ojs.t) ->
                       Ojs.list_of_js vscode_ColorPresentation_of_js x2854)
                    (Ojs.call (t_to_js x2853) "provideColorPresentations"
                       [|(vscode_Color_to_js x2850);(anonymous_interface_6_to_js
                                                       x2851);(vscode_CancellationToken_to_js
                                                                 x2852)|])
      end
    module FoldingRange =
      struct
        type t = vscode_FoldingRange
        let rec t_of_js : Ojs.t -> t =
          fun (x2857 : Ojs.t) -> vscode_FoldingRange_of_js x2857
        and t_to_js : t -> Ojs.t =
          fun (x2856 : vscode_FoldingRange) ->
            vscode_FoldingRange_to_js x2856
        let (get_start : t -> float) =
          fun (x2858 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2858) "start")
        let (set_start : t -> float -> unit) =
          fun (x2859 : t) ->
            fun (x2860 : float) ->
              Ojs.set_prop_ascii (t_to_js x2859) "start"
                (Ojs.float_to_js x2860)
        let (get_end : t -> float) =
          fun (x2861 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2861) "end")
        let (set_end : t -> float -> unit) =
          fun (x2862 : t) ->
            fun (x2863 : float) ->
              Ojs.set_prop_ascii (t_to_js x2862) "end"
                (Ojs.float_to_js x2863)
        let (get_kind : t -> vscode_FoldingRangeKind) =
          fun (x2864 : t) ->
            vscode_FoldingRangeKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2864) "kind")
        let (set_kind : t -> vscode_FoldingRangeKind -> unit) =
          fun (x2865 : t) ->
            fun (x2866 : vscode_FoldingRangeKind) ->
              Ojs.set_prop_ascii (t_to_js x2865) "kind"
                (vscode_FoldingRangeKind_to_js x2866)
        let (create :
          start:float ->
            end_:float -> ?kind:vscode_FoldingRangeKind -> unit -> t)
          =
          fun ~start:(x2867 : float) ->
            fun ~end_:(x2868 : float) ->
              fun ?kind:(x2869 : vscode_FoldingRangeKind option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "FoldingRange")
                       (let x2870 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x2870 "push" [|(Ojs.float_to_js x2867)|]);
                        ignore
                          (Ojs.call x2870 "push" [|(Ojs.float_to_js x2868)|]);
                        (match x2869 with
                         | Some x2871 ->
                             ignore
                               (Ojs.call x2870 "push"
                                  [|(vscode_FoldingRangeKind_to_js x2871)|])
                         | None -> ());
                        x2870))
      end
    module FoldingRangeKind =
      struct
        type t = vscode_FoldingRangeKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2873 : Ojs.t) -> vscode_FoldingRangeKind_of_js x2873
        and t_to_js : t -> Ojs.t =
          fun (x2872 : vscode_FoldingRangeKind) ->
            vscode_FoldingRangeKind_to_js x2872
      end
    module FoldingContext =
      struct
        type t = vscode_FoldingContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2875 : Ojs.t) -> vscode_FoldingContext_of_js x2875
        and t_to_js : t -> Ojs.t =
          fun (x2874 : vscode_FoldingContext) ->
            vscode_FoldingContext_to_js x2874
      end
    module FoldingRangeProvider =
      struct
        type t = vscode_FoldingRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2877 : Ojs.t) -> vscode_FoldingRangeProvider_of_js x2877
        and t_to_js : t -> Ojs.t =
          fun (x2876 : vscode_FoldingRangeProvider) ->
            vscode_FoldingRangeProvider_to_js x2876
        let (get_onDidChangeFoldingRanges : t -> unit vscode_Event) =
          fun (x2878 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x2878) "onDidChangeFoldingRanges")
        let (set_onDidChangeFoldingRanges : t -> unit vscode_Event -> unit) =
          fun (x2880 : t) ->
            fun (x2881 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x2880) "onDidChangeFoldingRanges"
                (vscode_Event_to_js Ojs.unit_to_js x2881)
        let (provideFoldingRanges :
          t ->
            document:vscode_TextDocument ->
              context:vscode_FoldingContext ->
                token:vscode_CancellationToken ->
                  vscode_FoldingRange list vscode_ProviderResult)
          =
          fun (x2886 : t) ->
            fun ~document:(x2883 : vscode_TextDocument) ->
              fun ~context:(x2884 : vscode_FoldingContext) ->
                fun ~token:(x2885 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2887 : Ojs.t) ->
                       Ojs.list_of_js vscode_FoldingRange_of_js x2887)
                    (Ojs.call (t_to_js x2886) "provideFoldingRanges"
                       [|(vscode_TextDocument_to_js x2883);(vscode_FoldingContext_to_js
                                                              x2884);(
                         vscode_CancellationToken_to_js x2885)|])
      end
    module SelectionRange =
      struct
        type t = vscode_SelectionRange
        let rec t_of_js : Ojs.t -> t =
          fun (x2890 : Ojs.t) -> vscode_SelectionRange_of_js x2890
        and t_to_js : t -> Ojs.t =
          fun (x2889 : vscode_SelectionRange) ->
            vscode_SelectionRange_to_js x2889
        let (get_range : t -> vscode_Range) =
          fun (x2891 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2891) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2892 : t) ->
            fun (x2893 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2892) "range"
                (vscode_Range_to_js x2893)
        let (get_parent : t -> t) =
          fun (x2894 : t) ->
            t_of_js (Ojs.get_prop_ascii (t_to_js x2894) "parent")
        let (set_parent : t -> t -> unit) =
          fun (x2895 : t) ->
            fun (x2896 : t) ->
              Ojs.set_prop_ascii (t_to_js x2895) "parent" (t_to_js x2896)
        let (create : range:vscode_Range -> ?parent:t -> unit -> t) =
          fun ~range:(x2897 : vscode_Range) ->
            fun ?parent:(x2898 : t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SelectionRange")
                     (let x2899 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2899 "push" [|(vscode_Range_to_js x2897)|]);
                      (match x2898 with
                       | Some x2900 ->
                           ignore (Ojs.call x2899 "push" [|(t_to_js x2900)|])
                       | None -> ());
                      x2899))
      end
    module SelectionRangeProvider =
      struct
        type t = vscode_SelectionRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2902 : Ojs.t) -> vscode_SelectionRangeProvider_of_js x2902
        and t_to_js : t -> Ojs.t =
          fun (x2901 : vscode_SelectionRangeProvider) ->
            vscode_SelectionRangeProvider_to_js x2901
        let (provideSelectionRanges :
          t ->
            document:vscode_TextDocument ->
              positions:vscode_Position list ->
                token:vscode_CancellationToken ->
                  vscode_SelectionRange list vscode_ProviderResult)
          =
          fun (x2907 : t) ->
            fun ~document:(x2903 : vscode_TextDocument) ->
              fun ~positions:(x2904 : vscode_Position list) ->
                fun ~token:(x2906 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2908 : Ojs.t) ->
                       Ojs.list_of_js vscode_SelectionRange_of_js x2908)
                    (Ojs.call (t_to_js x2907) "provideSelectionRanges"
                       [|(vscode_TextDocument_to_js x2903);(Ojs.list_to_js
                                                              vscode_Position_to_js
                                                              x2904);(
                         vscode_CancellationToken_to_js x2906)|])
      end
    module CallHierarchyItem =
      struct
        type t = vscode_CallHierarchyItem
        let rec t_of_js : Ojs.t -> t =
          fun (x2911 : Ojs.t) -> vscode_CallHierarchyItem_of_js x2911
        and t_to_js : t -> Ojs.t =
          fun (x2910 : vscode_CallHierarchyItem) ->
            vscode_CallHierarchyItem_to_js x2910
        let (get_name : t -> string) =
          fun (x2912 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2912) "name")
        let (set_name : t -> string -> unit) =
          fun (x2913 : t) ->
            fun (x2914 : string) ->
              Ojs.set_prop_ascii (t_to_js x2913) "name"
                (Ojs.string_to_js x2914)
        let (get_kind : t -> vscode_SymbolKind) =
          fun (x2915 : t) ->
            vscode_SymbolKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2915) "kind")
        let (set_kind : t -> vscode_SymbolKind -> unit) =
          fun (x2916 : t) ->
            fun (x2917 : vscode_SymbolKind) ->
              Ojs.set_prop_ascii (t_to_js x2916) "kind"
                (vscode_SymbolKind_to_js x2917)
        let (get_tags : t -> vscode_SymbolTag list) =
          fun (x2918 : t) ->
            Ojs.list_of_js vscode_SymbolTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2918) "tags")
        let (set_tags : t -> vscode_SymbolTag list -> unit) =
          fun (x2920 : t) ->
            fun (x2921 : vscode_SymbolTag list) ->
              Ojs.set_prop_ascii (t_to_js x2920) "tags"
                (Ojs.list_to_js vscode_SymbolTag_to_js x2921)
        let (get_detail : t -> string) =
          fun (x2923 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2923) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x2924 : t) ->
            fun (x2925 : string) ->
              Ojs.set_prop_ascii (t_to_js x2924) "detail"
                (Ojs.string_to_js x2925)
        let (get_uri : t -> vscode_Uri) =
          fun (x2926 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x2926) "uri")
        let (set_uri : t -> vscode_Uri -> unit) =
          fun (x2927 : t) ->
            fun (x2928 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x2927) "uri"
                (vscode_Uri_to_js x2928)
        let (get_range : t -> vscode_Range) =
          fun (x2929 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2929) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2930 : t) ->
            fun (x2931 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2930) "range"
                (vscode_Range_to_js x2931)
        let (get_selectionRange : t -> vscode_Range) =
          fun (x2932 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2932) "selectionRange")
        let (set_selectionRange : t -> vscode_Range -> unit) =
          fun (x2933 : t) ->
            fun (x2934 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2933) "selectionRange"
                (vscode_Range_to_js x2934)
        let (create :
          kind:vscode_SymbolKind ->
            name:string ->
              detail:string ->
                uri:vscode_Uri ->
                  range:vscode_Range -> selectionRange:vscode_Range -> t)
          =
          fun ~kind:(x2935 : vscode_SymbolKind) ->
            fun ~name:(x2936 : string) ->
              fun ~detail:(x2937 : string) ->
                fun ~uri:(x2938 : vscode_Uri) ->
                  fun ~range:(x2939 : vscode_Range) ->
                    fun ~selectionRange:(x2940 : vscode_Range) ->
                      t_of_js
                        (Ojs.new_obj
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "CallHierarchyItem")
                           [|(vscode_SymbolKind_to_js x2935);(Ojs.string_to_js
                                                                x2936);(
                             Ojs.string_to_js x2937);(vscode_Uri_to_js x2938);(
                             vscode_Range_to_js x2939);(vscode_Range_to_js
                                                          x2940)|])
      end
    module CallHierarchyIncomingCall =
      struct
        type t = vscode_CallHierarchyIncomingCall
        let rec t_of_js : Ojs.t -> t =
          fun (x2942 : Ojs.t) -> vscode_CallHierarchyIncomingCall_of_js x2942
        and t_to_js : t -> Ojs.t =
          fun (x2941 : vscode_CallHierarchyIncomingCall) ->
            vscode_CallHierarchyIncomingCall_to_js x2941
        let (get_from : t -> vscode_CallHierarchyItem) =
          fun (x2943 : t) ->
            vscode_CallHierarchyItem_of_js
              (Ojs.get_prop_ascii (t_to_js x2943) "from")
        let (set_from : t -> vscode_CallHierarchyItem -> unit) =
          fun (x2944 : t) ->
            fun (x2945 : vscode_CallHierarchyItem) ->
              Ojs.set_prop_ascii (t_to_js x2944) "from"
                (vscode_CallHierarchyItem_to_js x2945)
        let (get_fromRanges : t -> vscode_Range list) =
          fun (x2946 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2946) "fromRanges")
        let (set_fromRanges : t -> vscode_Range list -> unit) =
          fun (x2948 : t) ->
            fun (x2949 : vscode_Range list) ->
              Ojs.set_prop_ascii (t_to_js x2948) "fromRanges"
                (Ojs.list_to_js vscode_Range_to_js x2949)
        let (create :
          item:vscode_CallHierarchyItem -> fromRanges:vscode_Range list -> t)
          =
          fun ~item:(x2951 : vscode_CallHierarchyItem) ->
            fun ~fromRanges:(x2952 : vscode_Range list) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "CallHierarchyIncomingCall")
                   [|(vscode_CallHierarchyItem_to_js x2951);(Ojs.list_to_js
                                                               vscode_Range_to_js
                                                               x2952)|])
      end
    module CallHierarchyOutgoingCall =
      struct
        type t = vscode_CallHierarchyOutgoingCall
        let rec t_of_js : Ojs.t -> t =
          fun (x2955 : Ojs.t) -> vscode_CallHierarchyOutgoingCall_of_js x2955
        and t_to_js : t -> Ojs.t =
          fun (x2954 : vscode_CallHierarchyOutgoingCall) ->
            vscode_CallHierarchyOutgoingCall_to_js x2954
        let (get_to : t -> vscode_CallHierarchyItem) =
          fun (x2956 : t) ->
            vscode_CallHierarchyItem_of_js
              (Ojs.get_prop_ascii (t_to_js x2956) "to")
        let (set_to : t -> vscode_CallHierarchyItem -> unit) =
          fun (x2957 : t) ->
            fun (x2958 : vscode_CallHierarchyItem) ->
              Ojs.set_prop_ascii (t_to_js x2957) "to"
                (vscode_CallHierarchyItem_to_js x2958)
        let (get_fromRanges : t -> vscode_Range list) =
          fun (x2959 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2959) "fromRanges")
        let (set_fromRanges : t -> vscode_Range list -> unit) =
          fun (x2961 : t) ->
            fun (x2962 : vscode_Range list) ->
              Ojs.set_prop_ascii (t_to_js x2961) "fromRanges"
                (Ojs.list_to_js vscode_Range_to_js x2962)
        let (create :
          item:vscode_CallHierarchyItem -> fromRanges:vscode_Range list -> t)
          =
          fun ~item:(x2964 : vscode_CallHierarchyItem) ->
            fun ~fromRanges:(x2965 : vscode_Range list) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "CallHierarchyOutgoingCall")
                   [|(vscode_CallHierarchyItem_to_js x2964);(Ojs.list_to_js
                                                               vscode_Range_to_js
                                                               x2965)|])
      end
    module CallHierarchyProvider =
      struct
        type t = vscode_CallHierarchyProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2968 : Ojs.t) -> vscode_CallHierarchyProvider_of_js x2968
        and t_to_js : t -> Ojs.t =
          fun (x2967 : vscode_CallHierarchyProvider) ->
            vscode_CallHierarchyProvider_to_js x2967
        let (prepareCallHierarchy :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_CallHierarchyItem, vscode_CallHierarchyItem)
                    or_array vscode_ProviderResult)
          =
          fun (x2972 : t) ->
            fun ~document:(x2969 : vscode_TextDocument) ->
              fun ~position:(x2970 : vscode_Position) ->
                fun ~token:(x2971 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2973 : Ojs.t) ->
                       or_array_of_js vscode_CallHierarchyItem_of_js
                         vscode_CallHierarchyItem_of_js x2973)
                    (Ojs.call (t_to_js x2972) "prepareCallHierarchy"
                       [|(vscode_TextDocument_to_js x2969);(vscode_Position_to_js
                                                              x2970);(
                         vscode_CancellationToken_to_js x2971)|])
        let (provideCallHierarchyIncomingCalls :
          t ->
            item:vscode_CallHierarchyItem ->
              token:vscode_CancellationToken ->
                vscode_CallHierarchyIncomingCall list vscode_ProviderResult)
          =
          fun (x2978 : t) ->
            fun ~item:(x2976 : vscode_CallHierarchyItem) ->
              fun ~token:(x2977 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2979 : Ojs.t) ->
                     Ojs.list_of_js vscode_CallHierarchyIncomingCall_of_js
                       x2979)
                  (Ojs.call (t_to_js x2978)
                     "provideCallHierarchyIncomingCalls"
                     [|(vscode_CallHierarchyItem_to_js x2976);(vscode_CancellationToken_to_js
                                                                 x2977)|])
        let (provideCallHierarchyOutgoingCalls :
          t ->
            item:vscode_CallHierarchyItem ->
              token:vscode_CancellationToken ->
                vscode_CallHierarchyOutgoingCall list vscode_ProviderResult)
          =
          fun (x2983 : t) ->
            fun ~item:(x2981 : vscode_CallHierarchyItem) ->
              fun ~token:(x2982 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2984 : Ojs.t) ->
                     Ojs.list_of_js vscode_CallHierarchyOutgoingCall_of_js
                       x2984)
                  (Ojs.call (t_to_js x2983)
                     "provideCallHierarchyOutgoingCalls"
                     [|(vscode_CallHierarchyItem_to_js x2981);(vscode_CancellationToken_to_js
                                                                 x2982)|])
      end
    module LinkedEditingRanges =
      struct
        type t = vscode_LinkedEditingRanges
        let rec t_of_js : Ojs.t -> t =
          fun (x2987 : Ojs.t) -> vscode_LinkedEditingRanges_of_js x2987
        and t_to_js : t -> Ojs.t =
          fun (x2986 : vscode_LinkedEditingRanges) ->
            vscode_LinkedEditingRanges_to_js x2986
        let (create :
          ranges:vscode_Range list -> ?wordPattern:regexp -> unit -> t) =
          fun ~ranges:(x2988 : vscode_Range list) ->
            fun ?wordPattern:(x2989 : regexp option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "LinkedEditingRanges")
                     (let x2990 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2990 "push"
                           [|(Ojs.list_to_js vscode_Range_to_js x2988)|]);
                      (match x2989 with
                       | Some x2991 ->
                           ignore
                             (Ojs.call x2990 "push" [|(regexp_to_js x2991)|])
                       | None -> ());
                      x2990))
        let (get_ranges : t -> vscode_Range list) =
          fun (x2993 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2993) "ranges")
        let (get_wordPattern : t -> regexp) =
          fun (x2995 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x2995) "wordPattern")
      end
    module LinkedEditingRangeProvider =
      struct
        type t = vscode_LinkedEditingRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2997 : Ojs.t) ->
            vscode_LinkedEditingRangeProvider_of_js x2997
        and t_to_js : t -> Ojs.t =
          fun (x2996 : vscode_LinkedEditingRangeProvider) ->
            vscode_LinkedEditingRangeProvider_to_js x2996
        let (provideLinkedEditingRanges :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_LinkedEditingRanges vscode_ProviderResult)
          =
          fun (x3001 : t) ->
            fun ~document:(x2998 : vscode_TextDocument) ->
              fun ~position:(x2999 : vscode_Position) ->
                fun ~token:(x3000 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    vscode_LinkedEditingRanges_of_js
                    (Ojs.call (t_to_js x3001) "provideLinkedEditingRanges"
                       [|(vscode_TextDocument_to_js x2998);(vscode_Position_to_js
                                                              x2999);(
                         vscode_CancellationToken_to_js x3000)|])
      end
    module CharacterPair =
      struct
        type t = vscode_CharacterPair
        let rec t_of_js : Ojs.t -> t =
          fun (x3004 : Ojs.t) -> vscode_CharacterPair_of_js x3004
        and t_to_js : t -> Ojs.t =
          fun (x3003 : vscode_CharacterPair) ->
            vscode_CharacterPair_to_js x3003
      end
    module CommentRule =
      struct
        type t = vscode_CommentRule
        let rec t_of_js : Ojs.t -> t =
          fun (x3006 : Ojs.t) -> vscode_CommentRule_of_js x3006
        and t_to_js : t -> Ojs.t =
          fun (x3005 : vscode_CommentRule) -> vscode_CommentRule_to_js x3005
        let (get_lineComment : t -> string) =
          fun (x3007 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3007) "lineComment")
        let (set_lineComment : t -> string -> unit) =
          fun (x3008 : t) ->
            fun (x3009 : string) ->
              Ojs.set_prop_ascii (t_to_js x3008) "lineComment"
                (Ojs.string_to_js x3009)
        let (get_blockComment : t -> vscode_CharacterPair) =
          fun (x3010 : t) ->
            vscode_CharacterPair_of_js
              (Ojs.get_prop_ascii (t_to_js x3010) "blockComment")
        let (set_blockComment : t -> vscode_CharacterPair -> unit) =
          fun (x3011 : t) ->
            fun (x3012 : vscode_CharacterPair) ->
              Ojs.set_prop_ascii (t_to_js x3011) "blockComment"
                (vscode_CharacterPair_to_js x3012)
      end
    module IndentationRule =
      struct
        type t = vscode_IndentationRule
        let rec t_of_js : Ojs.t -> t =
          fun (x3014 : Ojs.t) -> vscode_IndentationRule_of_js x3014
        and t_to_js : t -> Ojs.t =
          fun (x3013 : vscode_IndentationRule) ->
            vscode_IndentationRule_to_js x3013
        let (get_decreaseIndentPattern : t -> regexp) =
          fun (x3015 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3015) "decreaseIndentPattern")
        let (set_decreaseIndentPattern : t -> regexp -> unit) =
          fun (x3016 : t) ->
            fun (x3017 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3016) "decreaseIndentPattern"
                (regexp_to_js x3017)
        let (get_increaseIndentPattern : t -> regexp) =
          fun (x3018 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3018) "increaseIndentPattern")
        let (set_increaseIndentPattern : t -> regexp -> unit) =
          fun (x3019 : t) ->
            fun (x3020 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3019) "increaseIndentPattern"
                (regexp_to_js x3020)
        let (get_indentNextLinePattern : t -> regexp) =
          fun (x3021 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3021) "indentNextLinePattern")
        let (set_indentNextLinePattern : t -> regexp -> unit) =
          fun (x3022 : t) ->
            fun (x3023 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3022) "indentNextLinePattern"
                (regexp_to_js x3023)
        let (get_unIndentedLinePattern : t -> regexp) =
          fun (x3024 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3024) "unIndentedLinePattern")
        let (set_unIndentedLinePattern : t -> regexp -> unit) =
          fun (x3025 : t) ->
            fun (x3026 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3025) "unIndentedLinePattern"
                (regexp_to_js x3026)
      end
    module IndentAction =
      struct
        type t = vscode_IndentAction
        let rec t_of_js : Ojs.t -> t =
          fun (x3028 : Ojs.t) -> vscode_IndentAction_of_js x3028
        and t_to_js : t -> Ojs.t =
          fun (x3027 : vscode_IndentAction) ->
            vscode_IndentAction_to_js x3027
      end
    module EnterAction =
      struct
        type t = vscode_EnterAction
        let rec t_of_js : Ojs.t -> t =
          fun (x3030 : Ojs.t) -> vscode_EnterAction_of_js x3030
        and t_to_js : t -> Ojs.t =
          fun (x3029 : vscode_EnterAction) -> vscode_EnterAction_to_js x3029
        let (get_indentAction : t -> vscode_IndentAction) =
          fun (x3031 : t) ->
            vscode_IndentAction_of_js
              (Ojs.get_prop_ascii (t_to_js x3031) "indentAction")
        let (set_indentAction : t -> vscode_IndentAction -> unit) =
          fun (x3032 : t) ->
            fun (x3033 : vscode_IndentAction) ->
              Ojs.set_prop_ascii (t_to_js x3032) "indentAction"
                (vscode_IndentAction_to_js x3033)
        let (get_appendText : t -> string) =
          fun (x3034 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3034) "appendText")
        let (set_appendText : t -> string -> unit) =
          fun (x3035 : t) ->
            fun (x3036 : string) ->
              Ojs.set_prop_ascii (t_to_js x3035) "appendText"
                (Ojs.string_to_js x3036)
        let (get_removeText : t -> float) =
          fun (x3037 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3037) "removeText")
        let (set_removeText : t -> float -> unit) =
          fun (x3038 : t) ->
            fun (x3039 : float) ->
              Ojs.set_prop_ascii (t_to_js x3038) "removeText"
                (Ojs.float_to_js x3039)
      end
    module OnEnterRule =
      struct
        type t = vscode_OnEnterRule
        let rec t_of_js : Ojs.t -> t =
          fun (x3041 : Ojs.t) -> vscode_OnEnterRule_of_js x3041
        and t_to_js : t -> Ojs.t =
          fun (x3040 : vscode_OnEnterRule) -> vscode_OnEnterRule_to_js x3040
        let (get_beforeText : t -> regexp) =
          fun (x3042 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x3042) "beforeText")
        let (set_beforeText : t -> regexp -> unit) =
          fun (x3043 : t) ->
            fun (x3044 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3043) "beforeText"
                (regexp_to_js x3044)
        let (get_afterText : t -> regexp) =
          fun (x3045 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x3045) "afterText")
        let (set_afterText : t -> regexp -> unit) =
          fun (x3046 : t) ->
            fun (x3047 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3046) "afterText"
                (regexp_to_js x3047)
        let (get_previousLineText : t -> regexp) =
          fun (x3048 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3048) "previousLineText")
        let (set_previousLineText : t -> regexp -> unit) =
          fun (x3049 : t) ->
            fun (x3050 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3049) "previousLineText"
                (regexp_to_js x3050)
        let (get_action : t -> vscode_EnterAction) =
          fun (x3051 : t) ->
            vscode_EnterAction_of_js
              (Ojs.get_prop_ascii (t_to_js x3051) "action")
        let (set_action : t -> vscode_EnterAction -> unit) =
          fun (x3052 : t) ->
            fun (x3053 : vscode_EnterAction) ->
              Ojs.set_prop_ascii (t_to_js x3052) "action"
                (vscode_EnterAction_to_js x3053)
      end
    module LanguageConfiguration =
      struct
        type t = vscode_LanguageConfiguration
        let rec t_of_js : Ojs.t -> t =
          fun (x3055 : Ojs.t) -> vscode_LanguageConfiguration_of_js x3055
        and t_to_js : t -> Ojs.t =
          fun (x3054 : vscode_LanguageConfiguration) ->
            vscode_LanguageConfiguration_to_js x3054
        let (get_comments : t -> vscode_CommentRule) =
          fun (x3056 : t) ->
            vscode_CommentRule_of_js
              (Ojs.get_prop_ascii (t_to_js x3056) "comments")
        let (set_comments : t -> vscode_CommentRule -> unit) =
          fun (x3057 : t) ->
            fun (x3058 : vscode_CommentRule) ->
              Ojs.set_prop_ascii (t_to_js x3057) "comments"
                (vscode_CommentRule_to_js x3058)
        let (get_brackets : t -> vscode_CharacterPair list) =
          fun (x3059 : t) ->
            Ojs.list_of_js vscode_CharacterPair_of_js
              (Ojs.get_prop_ascii (t_to_js x3059) "brackets")
        let (set_brackets : t -> vscode_CharacterPair list -> unit) =
          fun (x3061 : t) ->
            fun (x3062 : vscode_CharacterPair list) ->
              Ojs.set_prop_ascii (t_to_js x3061) "brackets"
                (Ojs.list_to_js vscode_CharacterPair_to_js x3062)
        let (get_wordPattern : t -> regexp) =
          fun (x3064 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x3064) "wordPattern")
        let (set_wordPattern : t -> regexp -> unit) =
          fun (x3065 : t) ->
            fun (x3066 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3065) "wordPattern"
                (regexp_to_js x3066)
        let (get_indentationRules : t -> vscode_IndentationRule) =
          fun (x3067 : t) ->
            vscode_IndentationRule_of_js
              (Ojs.get_prop_ascii (t_to_js x3067) "indentationRules")
        let (set_indentationRules : t -> vscode_IndentationRule -> unit) =
          fun (x3068 : t) ->
            fun (x3069 : vscode_IndentationRule) ->
              Ojs.set_prop_ascii (t_to_js x3068) "indentationRules"
                (vscode_IndentationRule_to_js x3069)
        let (get_onEnterRules : t -> vscode_OnEnterRule list) =
          fun (x3070 : t) ->
            Ojs.list_of_js vscode_OnEnterRule_of_js
              (Ojs.get_prop_ascii (t_to_js x3070) "onEnterRules")
        let (set_onEnterRules : t -> vscode_OnEnterRule list -> unit) =
          fun (x3072 : t) ->
            fun (x3073 : vscode_OnEnterRule list) ->
              Ojs.set_prop_ascii (t_to_js x3072) "onEnterRules"
                (Ojs.list_to_js vscode_OnEnterRule_to_js x3073)
        let (get___electricCharacterSupport : t -> anonymous_interface_1) =
          fun (x3075 : t) ->
            anonymous_interface_1_of_js
              (Ojs.get_prop_ascii (t_to_js x3075)
                 "__electricCharacterSupport")
        let (set___electricCharacterSupport :
          t -> anonymous_interface_1 -> unit) =
          fun (x3076 : t) ->
            fun (x3077 : anonymous_interface_1) ->
              Ojs.set_prop_ascii (t_to_js x3076) "__electricCharacterSupport"
                (anonymous_interface_1_to_js x3077)
        let (get___characterPairSupport : t -> anonymous_interface_0) =
          fun (x3078 : t) ->
            anonymous_interface_0_of_js
              (Ojs.get_prop_ascii (t_to_js x3078) "__characterPairSupport")
        let (set___characterPairSupport : t -> anonymous_interface_0 -> unit)
          =
          fun (x3079 : t) ->
            fun (x3080 : anonymous_interface_0) ->
              Ojs.set_prop_ascii (t_to_js x3079) "__characterPairSupport"
                (anonymous_interface_0_to_js x3080)
      end
    module ConfigurationTarget =
      struct
        type t = vscode_ConfigurationTarget
        let rec t_of_js : Ojs.t -> t =
          fun (x3082 : Ojs.t) -> vscode_ConfigurationTarget_of_js x3082
        and t_to_js : t -> Ojs.t =
          fun (x3081 : vscode_ConfigurationTarget) ->
            vscode_ConfigurationTarget_to_js x3081
      end
    module WorkspaceConfiguration =
      struct
        type t = vscode_WorkspaceConfiguration
        let rec t_of_js : Ojs.t -> t =
          fun (x3084 : Ojs.t) -> vscode_WorkspaceConfiguration_of_js x3084
        and t_to_js : t -> Ojs.t =
          fun (x3083 : vscode_WorkspaceConfiguration) ->
            vscode_WorkspaceConfiguration_to_js x3083
        let (get_ : t -> section:string -> 'T or_undefined) =
          fun (x3086 : t) ->
            fun ~section:(x3085 : string) ->
              or_undefined_of_js Obj.magic
                (Ojs.call (t_to_js x3086) "get" [|(Ojs.string_to_js x3085)|])
        let (get_' : t -> section:string -> defaultValue:'T -> 'T) =
          fun (x3090 : t) ->
            fun ~section:(x3088 : string) ->
              fun ~defaultValue:(x3089 : 'T) ->
                Obj.magic
                  (Ojs.call (t_to_js x3090) "get"
                     [|(Ojs.string_to_js x3088);(Obj.magic x3089)|])
        let (has : t -> section:string -> bool) =
          fun (x3092 : t) ->
            fun ~section:(x3091 : string) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x3092) "has" [|(Ojs.string_to_js x3091)|])
        let (inspect :
          t -> section:string -> anonymous_interface_10 or_undefined) =
          fun (x3094 : t) ->
            fun ~section:(x3093 : string) ->
              or_undefined_of_js anonymous_interface_10_of_js
                (Ojs.call (t_to_js x3094) "inspect"
                   [|(Ojs.string_to_js x3093)|])
        let (update :
          t ->
            section:string ->
              value:any ->
                ?configurationTarget:vscode_ConfigurationTarget or_boolean ->
                  ?overrideInLanguage:bool -> unit -> unit _Thenable)
          =
          fun (x3104 : t) ->
            fun ~section:(x3096 : string) ->
              fun ~value:(x3097 : any) ->
                fun
                  ?configurationTarget:(x3098 :
                                         vscode_ConfigurationTarget
                                           or_boolean option)
                  ->
                  fun ?overrideInLanguage:(x3099 : bool option) ->
                    fun () ->
                      _Thenable_of_js Ojs.unit_of_js
                        (let x3105 = t_to_js x3104 in
                         Ojs.call (Ojs.get_prop_ascii x3105 "update") "apply"
                           [|x3105;((let x3100 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x3100 "push"
                                          [|(Ojs.string_to_js x3096)|]);
                                     ignore
                                       (Ojs.call x3100 "push"
                                          [|(any_to_js x3097)|]);
                                     (match x3098 with
                                      | Some x3102 ->
                                          ignore
                                            (Ojs.call x3100 "push"
                                               [|(or_boolean_to_js
                                                    vscode_ConfigurationTarget_to_js
                                                    x3102)|])
                                      | None -> ());
                                     (match x3099 with
                                      | Some x3101 ->
                                          ignore
                                            (Ojs.call x3100 "push"
                                               [|(Ojs.bool_to_js x3101)|])
                                      | None -> ());
                                     x3100))|])
        let (get : t -> string -> any) =
          fun (x3107 : t) ->
            fun (x3108 : string) ->
              any_of_js
                (Ojs.get_prop (t_to_js x3107) (Ojs.string_to_js x3108))
      end
    module Location =
      struct
        type t = vscode_Location
        let rec t_of_js : Ojs.t -> t =
          fun (x3110 : Ojs.t) -> vscode_Location_of_js x3110
        and t_to_js : t -> Ojs.t =
          fun (x3109 : vscode_Location) -> vscode_Location_to_js x3109
        let (get_uri : t -> vscode_Uri) =
          fun (x3111 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3111) "uri")
        let (set_uri : t -> vscode_Uri -> unit) =
          fun (x3112 : t) ->
            fun (x3113 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x3112) "uri"
                (vscode_Uri_to_js x3113)
        let (get_range : t -> vscode_Range) =
          fun (x3114 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x3114) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x3115 : t) ->
            fun (x3116 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3115) "range"
                (vscode_Range_to_js x3116)
        let (create :
          uri:vscode_Uri ->
            rangeOrPosition:(vscode_Position, vscode_Range) union2 -> t)
          =
          fun ~uri:(x3117 : vscode_Uri) ->
            fun
              ~rangeOrPosition:(x3118 :
                                 (vscode_Position, vscode_Range) union2)
              ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Location")
                   [|(vscode_Uri_to_js x3117);(union2_to_js
                                                 vscode_Position_to_js
                                                 vscode_Range_to_js x3118)|])
      end
    module LocationLink =
      struct
        type t = vscode_LocationLink
        let rec t_of_js : Ojs.t -> t =
          fun (x3122 : Ojs.t) -> vscode_LocationLink_of_js x3122
        and t_to_js : t -> Ojs.t =
          fun (x3121 : vscode_LocationLink) ->
            vscode_LocationLink_to_js x3121
        let (get_originSelectionRange : t -> vscode_Range) =
          fun (x3123 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x3123) "originSelectionRange")
        let (set_originSelectionRange : t -> vscode_Range -> unit) =
          fun (x3124 : t) ->
            fun (x3125 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3124) "originSelectionRange"
                (vscode_Range_to_js x3125)
        let (get_targetUri : t -> vscode_Uri) =
          fun (x3126 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3126) "targetUri")
        let (set_targetUri : t -> vscode_Uri -> unit) =
          fun (x3127 : t) ->
            fun (x3128 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x3127) "targetUri"
                (vscode_Uri_to_js x3128)
        let (get_targetRange : t -> vscode_Range) =
          fun (x3129 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x3129) "targetRange")
        let (set_targetRange : t -> vscode_Range -> unit) =
          fun (x3130 : t) ->
            fun (x3131 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3130) "targetRange"
                (vscode_Range_to_js x3131)
        let (get_targetSelectionRange : t -> vscode_Range) =
          fun (x3132 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x3132) "targetSelectionRange")
        let (set_targetSelectionRange : t -> vscode_Range -> unit) =
          fun (x3133 : t) ->
            fun (x3134 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3133) "targetSelectionRange"
                (vscode_Range_to_js x3134)
      end
    module DiagnosticChangeEvent =
      struct
        type t = vscode_DiagnosticChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3136 : Ojs.t) -> vscode_DiagnosticChangeEvent_of_js x3136
        and t_to_js : t -> Ojs.t =
          fun (x3135 : vscode_DiagnosticChangeEvent) ->
            vscode_DiagnosticChangeEvent_to_js x3135
        let (get_uris : t -> vscode_Uri list) =
          fun (x3137 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3137) "uris")
      end
    module DiagnosticSeverity =
      struct
        type t = vscode_DiagnosticSeverity
        let rec t_of_js : Ojs.t -> t =
          fun (x3140 : Ojs.t) -> vscode_DiagnosticSeverity_of_js x3140
        and t_to_js : t -> Ojs.t =
          fun (x3139 : vscode_DiagnosticSeverity) ->
            vscode_DiagnosticSeverity_to_js x3139
      end
    module DiagnosticRelatedInformation =
      struct
        type t = vscode_DiagnosticRelatedInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x3142 : Ojs.t) ->
            vscode_DiagnosticRelatedInformation_of_js x3142
        and t_to_js : t -> Ojs.t =
          fun (x3141 : vscode_DiagnosticRelatedInformation) ->
            vscode_DiagnosticRelatedInformation_to_js x3141
        let (get_location : t -> vscode_Location) =
          fun (x3143 : t) ->
            vscode_Location_of_js
              (Ojs.get_prop_ascii (t_to_js x3143) "location")
        let (set_location : t -> vscode_Location -> unit) =
          fun (x3144 : t) ->
            fun (x3145 : vscode_Location) ->
              Ojs.set_prop_ascii (t_to_js x3144) "location"
                (vscode_Location_to_js x3145)
        let (get_message : t -> string) =
          fun (x3146 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3146) "message")
        let (set_message : t -> string -> unit) =
          fun (x3147 : t) ->
            fun (x3148 : string) ->
              Ojs.set_prop_ascii (t_to_js x3147) "message"
                (Ojs.string_to_js x3148)
        let (create : location:vscode_Location -> message:string -> t) =
          fun ~location:(x3149 : vscode_Location) ->
            fun ~message:(x3150 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "DiagnosticRelatedInformation")
                   [|(vscode_Location_to_js x3149);(Ojs.string_to_js x3150)|])
      end
    module DiagnosticTag =
      struct
        type t = vscode_DiagnosticTag
        let rec t_of_js : Ojs.t -> t =
          fun (x3152 : Ojs.t) -> vscode_DiagnosticTag_of_js x3152
        and t_to_js : t -> Ojs.t =
          fun (x3151 : vscode_DiagnosticTag) ->
            vscode_DiagnosticTag_to_js x3151
      end
    module Diagnostic =
      struct
        type t = vscode_Diagnostic
        let rec t_of_js : Ojs.t -> t =
          fun (x3154 : Ojs.t) -> vscode_Diagnostic_of_js x3154
        and t_to_js : t -> Ojs.t =
          fun (x3153 : vscode_Diagnostic) -> vscode_Diagnostic_to_js x3153
        let (get_range : t -> vscode_Range) =
          fun (x3155 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x3155) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x3156 : t) ->
            fun (x3157 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3156) "range"
                (vscode_Range_to_js x3157)
        let (get_message : t -> string) =
          fun (x3158 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3158) "message")
        let (set_message : t -> string -> unit) =
          fun (x3159 : t) ->
            fun (x3160 : string) ->
              Ojs.set_prop_ascii (t_to_js x3159) "message"
                (Ojs.string_to_js x3160)
        let (get_severity : t -> vscode_DiagnosticSeverity) =
          fun (x3161 : t) ->
            vscode_DiagnosticSeverity_of_js
              (Ojs.get_prop_ascii (t_to_js x3161) "severity")
        let (set_severity : t -> vscode_DiagnosticSeverity -> unit) =
          fun (x3162 : t) ->
            fun (x3163 : vscode_DiagnosticSeverity) ->
              Ojs.set_prop_ascii (t_to_js x3162) "severity"
                (vscode_DiagnosticSeverity_to_js x3163)
        let (get_source : t -> string) =
          fun (x3164 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3164) "source")
        let (set_source : t -> string -> unit) =
          fun (x3165 : t) ->
            fun (x3166 : string) ->
              Ojs.set_prop_ascii (t_to_js x3165) "source"
                (Ojs.string_to_js x3166)
        let (get_code : t -> anonymous_interface_37 or_string or_number) =
          fun (x3167 : t) ->
            or_number_of_js
              (fun (x3168 : Ojs.t) ->
                 or_string_of_js anonymous_interface_37_of_js x3168)
              (Ojs.get_prop_ascii (t_to_js x3167) "code")
        let (set_code :
          t -> anonymous_interface_37 or_string or_number -> unit) =
          fun (x3170 : t) ->
            fun (x3171 : anonymous_interface_37 or_string or_number) ->
              Ojs.set_prop_ascii (t_to_js x3170) "code"
                (or_number_to_js
                   (fun (x3172 : anonymous_interface_37 or_string) ->
                      or_string_to_js anonymous_interface_37_to_js x3172)
                   x3171)
        let (get_relatedInformation :
          t -> vscode_DiagnosticRelatedInformation list) =
          fun (x3174 : t) ->
            Ojs.list_of_js vscode_DiagnosticRelatedInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x3174) "relatedInformation")
        let (set_relatedInformation :
          t -> vscode_DiagnosticRelatedInformation list -> unit) =
          fun (x3176 : t) ->
            fun (x3177 : vscode_DiagnosticRelatedInformation list) ->
              Ojs.set_prop_ascii (t_to_js x3176) "relatedInformation"
                (Ojs.list_to_js vscode_DiagnosticRelatedInformation_to_js
                   x3177)
        let (get_tags : t -> vscode_DiagnosticTag list) =
          fun (x3179 : t) ->
            Ojs.list_of_js vscode_DiagnosticTag_of_js
              (Ojs.get_prop_ascii (t_to_js x3179) "tags")
        let (set_tags : t -> vscode_DiagnosticTag list -> unit) =
          fun (x3181 : t) ->
            fun (x3182 : vscode_DiagnosticTag list) ->
              Ojs.set_prop_ascii (t_to_js x3181) "tags"
                (Ojs.list_to_js vscode_DiagnosticTag_to_js x3182)
        let (create :
          range:vscode_Range ->
            message:string ->
              ?severity:vscode_DiagnosticSeverity -> unit -> t)
          =
          fun ~range:(x3184 : vscode_Range) ->
            fun ~message:(x3185 : string) ->
              fun ?severity:(x3186 : vscode_DiagnosticSeverity option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "Diagnostic")
                       (let x3187 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x3187 "push"
                             [|(vscode_Range_to_js x3184)|]);
                        ignore
                          (Ojs.call x3187 "push" [|(Ojs.string_to_js x3185)|]);
                        (match x3186 with
                         | Some x3188 ->
                             ignore
                               (Ojs.call x3187 "push"
                                  [|(vscode_DiagnosticSeverity_to_js x3188)|])
                         | None -> ());
                        x3187))
      end
    module DiagnosticCollection =
      struct
        type t = vscode_DiagnosticCollection
        let rec t_of_js : Ojs.t -> t =
          fun (x3190 : Ojs.t) -> vscode_DiagnosticCollection_of_js x3190
        and t_to_js : t -> Ojs.t =
          fun (x3189 : vscode_DiagnosticCollection) ->
            vscode_DiagnosticCollection_to_js x3189
        let (get_name : t -> string) =
          fun (x3191 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3191) "name")
        let (set_ :
          t ->
            uri:vscode_Uri ->
              diagnostics:vscode_Diagnostic list or_undefined -> unit)
          =
          fun (x3196 : t) ->
            fun ~uri:(x3192 : vscode_Uri) ->
              fun ~diagnostics:(x3193 : vscode_Diagnostic list or_undefined)
                ->
                ignore
                  (Ojs.call (t_to_js x3196) "set"
                     [|(vscode_Uri_to_js x3192);(or_undefined_to_js
                                                   (fun
                                                      (x3194 :
                                                        vscode_Diagnostic
                                                          list)
                                                      ->
                                                      Ojs.list_to_js
                                                        vscode_Diagnostic_to_js
                                                        x3194) x3193)|])
        let (set_' :
          t ->
            entries:(vscode_Uri * vscode_Diagnostic list or_undefined) list
              -> unit)
          =
          fun (x3204 : t) ->
            fun
              ~entries:(x3197 :
                         (vscode_Uri * vscode_Diagnostic list or_undefined)
                           list)
              ->
              ignore
                (Ojs.call (t_to_js x3204) "set"
                   [|(Ojs.list_to_js
                        (fun
                           (x3198 :
                             (vscode_Uri * vscode_Diagnostic list
                               or_undefined))
                           ->
                           let (x3199, x3200) = x3198 in
                           let x3201 = Ojs.array_make 2 in
                           Ojs.array_set x3201 0 (vscode_Uri_to_js x3199);
                           Ojs.array_set x3201 1
                             (or_undefined_to_js
                                (fun (x3202 : vscode_Diagnostic list) ->
                                   Ojs.list_to_js vscode_Diagnostic_to_js
                                     x3202) x3200);
                           x3201) x3197)|])
        let (delete : t -> uri:vscode_Uri -> unit) =
          fun (x3206 : t) ->
            fun ~uri:(x3205 : vscode_Uri) ->
              ignore
                (Ojs.call (t_to_js x3206) "delete"
                   [|(vscode_Uri_to_js x3205)|])
        let (clear : t -> unit) =
          fun (x3207 : t) -> ignore (Ojs.call (t_to_js x3207) "clear" [||])
        let (forEach :
          t ->
            callback:(uri:vscode_Uri ->
                        diagnostics:vscode_Diagnostic list ->
                          collection:t -> any)
              -> ?thisArg:any -> unit -> unit)
          =
          fun (x3216 : t) ->
            fun
              ~callback:(x3208 :
                          uri:vscode_Uri ->
                            diagnostics:vscode_Diagnostic list ->
                              collection:t -> any)
              ->
              fun ?thisArg:(x3209 : any option) ->
                fun () ->
                  ignore
                    (let x3217 = t_to_js x3216 in
                     Ojs.call (Ojs.get_prop_ascii x3217 "forEach") "apply"
                       [|x3217;((let x3210 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x3210 "push"
                                      [|(Ojs.fun_to_js 3
                                           (fun (x3212 : Ojs.t) ->
                                              fun (x3213 : Ojs.t) ->
                                                fun (x3215 : Ojs.t) ->
                                                  any_to_js
                                                    (x3208
                                                       ~uri:(vscode_Uri_of_js
                                                               x3212)
                                                       ~diagnostics:(
                                                       Ojs.list_of_js
                                                         vscode_Diagnostic_of_js
                                                         x3213)
                                                       ~collection:(t_of_js
                                                                    x3215))))|]);
                                 (match x3209 with
                                  | Some x3211 ->
                                      ignore
                                        (Ojs.call x3210 "push"
                                           [|(any_to_js x3211)|])
                                  | None -> ());
                                 x3210))|])
        let (get_ :
          t -> uri:vscode_Uri -> vscode_Diagnostic list or_undefined) =
          fun (x3219 : t) ->
            fun ~uri:(x3218 : vscode_Uri) ->
              or_undefined_of_js
                (fun (x3220 : Ojs.t) ->
                   Ojs.list_of_js vscode_Diagnostic_of_js x3220)
                (Ojs.call (t_to_js x3219) "get" [|(vscode_Uri_to_js x3218)|])
        let (has : t -> uri:vscode_Uri -> bool) =
          fun (x3223 : t) ->
            fun ~uri:(x3222 : vscode_Uri) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x3223) "has" [|(vscode_Uri_to_js x3222)|])
        let (dispose : t -> unit) =
          fun (x3224 : t) -> ignore (Ojs.call (t_to_js x3224) "dispose" [||])
      end
    module ViewColumn =
      struct
        type t = vscode_ViewColumn
        let rec t_of_js : Ojs.t -> t =
          fun (x3226 : Ojs.t) -> vscode_ViewColumn_of_js x3226
        and t_to_js : t -> Ojs.t =
          fun (x3225 : vscode_ViewColumn) -> vscode_ViewColumn_to_js x3225
      end
    module OutputChannel =
      struct
        type t = vscode_OutputChannel
        let rec t_of_js : Ojs.t -> t =
          fun (x3228 : Ojs.t) -> vscode_OutputChannel_of_js x3228
        and t_to_js : t -> Ojs.t =
          fun (x3227 : vscode_OutputChannel) ->
            vscode_OutputChannel_to_js x3227
        let (get_name : t -> string) =
          fun (x3229 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3229) "name")
        let (append : t -> value:string -> unit) =
          fun (x3231 : t) ->
            fun ~value:(x3230 : string) ->
              ignore
                (Ojs.call (t_to_js x3231) "append"
                   [|(Ojs.string_to_js x3230)|])
        let (appendLine : t -> value:string -> unit) =
          fun (x3233 : t) ->
            fun ~value:(x3232 : string) ->
              ignore
                (Ojs.call (t_to_js x3233) "appendLine"
                   [|(Ojs.string_to_js x3232)|])
        let (clear : t -> unit) =
          fun (x3234 : t) -> ignore (Ojs.call (t_to_js x3234) "clear" [||])
        let (show : t -> ?preserveFocus:bool -> unit -> unit) =
          fun (x3238 : t) ->
            fun ?preserveFocus:(x3235 : bool option) ->
              fun () ->
                ignore
                  (let x3239 = t_to_js x3238 in
                   Ojs.call (Ojs.get_prop_ascii x3239 "show") "apply"
                     [|x3239;((let x3236 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3235 with
                                | Some x3237 ->
                                    ignore
                                      (Ojs.call x3236 "push"
                                         [|(Ojs.bool_to_js x3237)|])
                                | None -> ());
                               x3236))|])
        let (show' :
          t ->
            ?column:vscode_ViewColumn -> ?preserveFocus:bool -> unit -> unit)
          =
          fun (x3245 : t) ->
            fun ?column:(x3240 : vscode_ViewColumn option) ->
              fun ?preserveFocus:(x3241 : bool option) ->
                fun () ->
                  ignore
                    (let x3246 = t_to_js x3245 in
                     Ojs.call (Ojs.get_prop_ascii x3246 "show") "apply"
                       [|x3246;((let x3242 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x3240 with
                                  | Some x3244 ->
                                      ignore
                                        (Ojs.call x3242 "push"
                                           [|(vscode_ViewColumn_to_js x3244)|])
                                  | None -> ());
                                 (match x3241 with
                                  | Some x3243 ->
                                      ignore
                                        (Ojs.call x3242 "push"
                                           [|(Ojs.bool_to_js x3243)|])
                                  | None -> ());
                                 x3242))|])
        let (hide : t -> unit) =
          fun (x3247 : t) -> ignore (Ojs.call (t_to_js x3247) "hide" [||])
        let (dispose : t -> unit) =
          fun (x3248 : t) -> ignore (Ojs.call (t_to_js x3248) "dispose" [||])
      end
    module AccessibilityInformation =
      struct
        type t = vscode_AccessibilityInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x3250 : Ojs.t) -> vscode_AccessibilityInformation_of_js x3250
        and t_to_js : t -> Ojs.t =
          fun (x3249 : vscode_AccessibilityInformation) ->
            vscode_AccessibilityInformation_to_js x3249
        let (get_label : t -> string) =
          fun (x3251 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3251) "label")
        let (set_label : t -> string -> unit) =
          fun (x3252 : t) ->
            fun (x3253 : string) ->
              Ojs.set_prop_ascii (t_to_js x3252) "label"
                (Ojs.string_to_js x3253)
        let (get_role : t -> string) =
          fun (x3254 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3254) "role")
        let (set_role : t -> string -> unit) =
          fun (x3255 : t) ->
            fun (x3256 : string) ->
              Ojs.set_prop_ascii (t_to_js x3255) "role"
                (Ojs.string_to_js x3256)
      end
    module StatusBarAlignment =
      struct
        type t = vscode_StatusBarAlignment
        let rec t_of_js : Ojs.t -> t =
          fun (x3258 : Ojs.t) -> vscode_StatusBarAlignment_of_js x3258
        and t_to_js : t -> Ojs.t =
          fun (x3257 : vscode_StatusBarAlignment) ->
            vscode_StatusBarAlignment_to_js x3257
      end
    module StatusBarItem =
      struct
        type t = vscode_StatusBarItem
        let rec t_of_js : Ojs.t -> t =
          fun (x3260 : Ojs.t) -> vscode_StatusBarItem_of_js x3260
        and t_to_js : t -> Ojs.t =
          fun (x3259 : vscode_StatusBarItem) ->
            vscode_StatusBarItem_to_js x3259
        let (get_alignment : t -> vscode_StatusBarAlignment) =
          fun (x3261 : t) ->
            vscode_StatusBarAlignment_of_js
              (Ojs.get_prop_ascii (t_to_js x3261) "alignment")
        let (get_priority : t -> float) =
          fun (x3262 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3262) "priority")
        let (get_text : t -> string) =
          fun (x3263 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3263) "text")
        let (set_text : t -> string -> unit) =
          fun (x3264 : t) ->
            fun (x3265 : string) ->
              Ojs.set_prop_ascii (t_to_js x3264) "text"
                (Ojs.string_to_js x3265)
        let (get_tooltip : t -> string or_undefined) =
          fun (x3266 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3266) "tooltip")
        let (set_tooltip : t -> string or_undefined -> unit) =
          fun (x3268 : t) ->
            fun (x3269 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3268) "tooltip"
                (or_undefined_to_js Ojs.string_to_js x3269)
        let (get_color : t -> vscode_ThemeColor or_string or_undefined) =
          fun (x3271 : t) ->
            or_undefined_of_js
              (fun (x3272 : Ojs.t) ->
                 or_string_of_js vscode_ThemeColor_of_js x3272)
              (Ojs.get_prop_ascii (t_to_js x3271) "color")
        let (set_color :
          t -> vscode_ThemeColor or_string or_undefined -> unit) =
          fun (x3274 : t) ->
            fun (x3275 : vscode_ThemeColor or_string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3274) "color"
                (or_undefined_to_js
                   (fun (x3276 : vscode_ThemeColor or_string) ->
                      or_string_to_js vscode_ThemeColor_to_js x3276) x3275)
        let (get_backgroundColor : t -> vscode_ThemeColor or_undefined) =
          fun (x3278 : t) ->
            or_undefined_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x3278) "backgroundColor")
        let (set_backgroundColor :
          t -> vscode_ThemeColor or_undefined -> unit) =
          fun (x3280 : t) ->
            fun (x3281 : vscode_ThemeColor or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3280) "backgroundColor"
                (or_undefined_to_js vscode_ThemeColor_to_js x3281)
        let (get_command : t -> vscode_Command or_string or_undefined) =
          fun (x3283 : t) ->
            or_undefined_of_js
              (fun (x3284 : Ojs.t) ->
                 or_string_of_js vscode_Command_of_js x3284)
              (Ojs.get_prop_ascii (t_to_js x3283) "command")
        let (set_command :
          t -> vscode_Command or_string or_undefined -> unit) =
          fun (x3286 : t) ->
            fun (x3287 : vscode_Command or_string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3286) "command"
                (or_undefined_to_js
                   (fun (x3288 : vscode_Command or_string) ->
                      or_string_to_js vscode_Command_to_js x3288) x3287)
        let (get_accessibilityInformation :
          t -> vscode_AccessibilityInformation) =
          fun (x3290 : t) ->
            vscode_AccessibilityInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x3290) "accessibilityInformation")
        let (set_accessibilityInformation :
          t -> vscode_AccessibilityInformation -> unit) =
          fun (x3291 : t) ->
            fun (x3292 : vscode_AccessibilityInformation) ->
              Ojs.set_prop_ascii (t_to_js x3291) "accessibilityInformation"
                (vscode_AccessibilityInformation_to_js x3292)
        let (show : t -> unit) =
          fun (x3293 : t) -> ignore (Ojs.call (t_to_js x3293) "show" [||])
        let (hide : t -> unit) =
          fun (x3294 : t) -> ignore (Ojs.call (t_to_js x3294) "hide" [||])
        let (dispose : t -> unit) =
          fun (x3295 : t) -> ignore (Ojs.call (t_to_js x3295) "dispose" [||])
      end
    module Progress =
      struct
        type 'T t = 'T vscode_Progress
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3298 : Ojs.t) -> vscode_Progress_of_js __T_of_js x3298
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3296 : __T vscode_Progress) ->
              vscode_Progress_to_js __T_to_js x3296
        let (report : 'T t -> value:'T -> unit) =
          fun (x3301 : 'T t) ->
            fun ~value:(x3300 : 'T) ->
              ignore
                (Ojs.call (t_to_js Obj.magic x3301) "report"
                   [|(Obj.magic x3300)|])
      end
    module Terminal =
      struct
        type t = vscode_Terminal
        let rec t_of_js : Ojs.t -> t =
          fun (x3304 : Ojs.t) -> vscode_Terminal_of_js x3304
        and t_to_js : t -> Ojs.t =
          fun (x3303 : vscode_Terminal) -> vscode_Terminal_to_js x3303
        let (get_name : t -> string) =
          fun (x3305 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3305) "name")
        let (get_processId : t -> float or_undefined _Thenable) =
          fun (x3306 : t) ->
            _Thenable_of_js
              (fun (x3307 : Ojs.t) ->
                 or_undefined_of_js Ojs.float_of_js x3307)
              (Ojs.get_prop_ascii (t_to_js x3306) "processId")
        let (get_creationOptions :
          t ->
            (vscode_ExtensionTerminalOptions, vscode_TerminalOptions) union2
              Readonly.t)
          =
          fun (x3309 : t) ->
            Readonly.t_of_js
              (fun (x3310 : Ojs.t) ->
                 union2_of_js vscode_ExtensionTerminalOptions_of_js
                   vscode_TerminalOptions_of_js x3310)
              (Ojs.get_prop_ascii (t_to_js x3309) "creationOptions")
        let (get_exitStatus : t -> vscode_TerminalExitStatus or_undefined) =
          fun (x3313 : t) ->
            or_undefined_of_js vscode_TerminalExitStatus_of_js
              (Ojs.get_prop_ascii (t_to_js x3313) "exitStatus")
        let (sendText : t -> text:string -> ?addNewLine:bool -> unit -> unit)
          =
          fun (x3319 : t) ->
            fun ~text:(x3315 : string) ->
              fun ?addNewLine:(x3316 : bool option) ->
                fun () ->
                  ignore
                    (let x3320 = t_to_js x3319 in
                     Ojs.call (Ojs.get_prop_ascii x3320 "sendText") "apply"
                       [|x3320;((let x3317 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x3317 "push"
                                      [|(Ojs.string_to_js x3315)|]);
                                 (match x3316 with
                                  | Some x3318 ->
                                      ignore
                                        (Ojs.call x3317 "push"
                                           [|(Ojs.bool_to_js x3318)|])
                                  | None -> ());
                                 x3317))|])
        let (show : t -> ?preserveFocus:bool -> unit -> unit) =
          fun (x3324 : t) ->
            fun ?preserveFocus:(x3321 : bool option) ->
              fun () ->
                ignore
                  (let x3325 = t_to_js x3324 in
                   Ojs.call (Ojs.get_prop_ascii x3325 "show") "apply"
                     [|x3325;((let x3322 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3321 with
                                | Some x3323 ->
                                    ignore
                                      (Ojs.call x3322 "push"
                                         [|(Ojs.bool_to_js x3323)|])
                                | None -> ());
                               x3322))|])
        let (hide : t -> unit) =
          fun (x3326 : t) -> ignore (Ojs.call (t_to_js x3326) "hide" [||])
        let (dispose : t -> unit) =
          fun (x3327 : t) -> ignore (Ojs.call (t_to_js x3327) "dispose" [||])
      end
    module TerminalLinkContext =
      struct
        type t = vscode_TerminalLinkContext
        let rec t_of_js : Ojs.t -> t =
          fun (x3329 : Ojs.t) -> vscode_TerminalLinkContext_of_js x3329
        and t_to_js : t -> Ojs.t =
          fun (x3328 : vscode_TerminalLinkContext) ->
            vscode_TerminalLinkContext_to_js x3328
        let (get_line : t -> string) =
          fun (x3330 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3330) "line")
        let (set_line : t -> string -> unit) =
          fun (x3331 : t) ->
            fun (x3332 : string) ->
              Ojs.set_prop_ascii (t_to_js x3331) "line"
                (Ojs.string_to_js x3332)
        let (get_terminal : t -> vscode_Terminal) =
          fun (x3333 : t) ->
            vscode_Terminal_of_js
              (Ojs.get_prop_ascii (t_to_js x3333) "terminal")
        let (set_terminal : t -> vscode_Terminal -> unit) =
          fun (x3334 : t) ->
            fun (x3335 : vscode_Terminal) ->
              Ojs.set_prop_ascii (t_to_js x3334) "terminal"
                (vscode_Terminal_to_js x3335)
      end
    module TerminalLinkProvider =
      struct
        type 'T t = 'T vscode_TerminalLinkProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3338 : Ojs.t) ->
              vscode_TerminalLinkProvider_of_js __T_of_js x3338
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3336 : __T vscode_TerminalLinkProvider) ->
              vscode_TerminalLinkProvider_to_js __T_to_js x3336
        let (provideTerminalLinks :
          'T t ->
            context:vscode_TerminalLinkContext ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x3342 : 'T t) ->
            fun ~context:(x3340 : vscode_TerminalLinkContext) ->
              fun ~token:(x3341 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x3344 : Ojs.t) -> Ojs.list_of_js Obj.magic x3344)
                  (Ojs.call (t_to_js Obj.magic x3342) "provideTerminalLinks"
                     [|(vscode_TerminalLinkContext_to_js x3340);(vscode_CancellationToken_to_js
                                                                   x3341)|])
        let (handleTerminalLink :
          'T t -> link:'T -> unit vscode_ProviderResult) =
          fun (x3347 : 'T t) ->
            fun ~link:(x3346 : 'T) ->
              vscode_ProviderResult_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js Obj.magic x3347) "handleTerminalLink"
                   [|(Obj.magic x3346)|])
      end
    module TerminalLink =
      struct
        type t = vscode_TerminalLink
        let rec t_of_js : Ojs.t -> t =
          fun (x3351 : Ojs.t) -> vscode_TerminalLink_of_js x3351
        and t_to_js : t -> Ojs.t =
          fun (x3350 : vscode_TerminalLink) ->
            vscode_TerminalLink_to_js x3350
        let (get_startIndex : t -> float) =
          fun (x3352 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3352) "startIndex")
        let (set_startIndex : t -> float -> unit) =
          fun (x3353 : t) ->
            fun (x3354 : float) ->
              Ojs.set_prop_ascii (t_to_js x3353) "startIndex"
                (Ojs.float_to_js x3354)
        let (get_length : t -> float) =
          fun (x3355 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3355) "length")
        let (set_length : t -> float -> unit) =
          fun (x3356 : t) ->
            fun (x3357 : float) ->
              Ojs.set_prop_ascii (t_to_js x3356) "length"
                (Ojs.float_to_js x3357)
        let (get_tooltip : t -> string) =
          fun (x3358 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3358) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x3359 : t) ->
            fun (x3360 : string) ->
              Ojs.set_prop_ascii (t_to_js x3359) "tooltip"
                (Ojs.string_to_js x3360)
      end
    module FileDecoration =
      struct
        type t = vscode_FileDecoration
        let rec t_of_js : Ojs.t -> t =
          fun (x3362 : Ojs.t) -> vscode_FileDecoration_of_js x3362
        and t_to_js : t -> Ojs.t =
          fun (x3361 : vscode_FileDecoration) ->
            vscode_FileDecoration_to_js x3361
        let (get_badge : t -> string) =
          fun (x3363 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3363) "badge")
        let (set_badge : t -> string -> unit) =
          fun (x3364 : t) ->
            fun (x3365 : string) ->
              Ojs.set_prop_ascii (t_to_js x3364) "badge"
                (Ojs.string_to_js x3365)
        let (get_tooltip : t -> string) =
          fun (x3366 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3366) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x3367 : t) ->
            fun (x3368 : string) ->
              Ojs.set_prop_ascii (t_to_js x3367) "tooltip"
                (Ojs.string_to_js x3368)
        let (get_color : t -> vscode_ThemeColor) =
          fun (x3369 : t) ->
            vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x3369) "color")
        let (set_color : t -> vscode_ThemeColor -> unit) =
          fun (x3370 : t) ->
            fun (x3371 : vscode_ThemeColor) ->
              Ojs.set_prop_ascii (t_to_js x3370) "color"
                (vscode_ThemeColor_to_js x3371)
        let (get_propagate : t -> bool) =
          fun (x3372 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3372) "propagate")
        let (set_propagate : t -> bool -> unit) =
          fun (x3373 : t) ->
            fun (x3374 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3373) "propagate"
                (Ojs.bool_to_js x3374)
        let (create :
          ?badge:string ->
            ?tooltip:string -> ?color:vscode_ThemeColor -> unit -> t)
          =
          fun ?badge:(x3375 : string option) ->
            fun ?tooltip:(x3376 : string option) ->
              fun ?color:(x3377 : vscode_ThemeColor option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "FileDecoration")
                       (let x3378 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x3375 with
                         | Some x3381 ->
                             ignore
                               (Ojs.call x3378 "push"
                                  [|(Ojs.string_to_js x3381)|])
                         | None -> ());
                        (match x3376 with
                         | Some x3380 ->
                             ignore
                               (Ojs.call x3378 "push"
                                  [|(Ojs.string_to_js x3380)|])
                         | None -> ());
                        (match x3377 with
                         | Some x3379 ->
                             ignore
                               (Ojs.call x3378 "push"
                                  [|(vscode_ThemeColor_to_js x3379)|])
                         | None -> ());
                        x3378))
      end
    module FileDecorationProvider =
      struct
        type t = vscode_FileDecorationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x3383 : Ojs.t) -> vscode_FileDecorationProvider_of_js x3383
        and t_to_js : t -> Ojs.t =
          fun (x3382 : vscode_FileDecorationProvider) ->
            vscode_FileDecorationProvider_to_js x3382
        let (get_onDidChangeFileDecorations :
          t -> (vscode_Uri, vscode_Uri) or_array or_undefined vscode_Event) =
          fun (x3384 : t) ->
            vscode_Event_of_js
              (fun (x3385 : Ojs.t) ->
                 or_undefined_of_js
                   (fun (x3386 : Ojs.t) ->
                      or_array_of_js vscode_Uri_of_js vscode_Uri_of_js x3386)
                   x3385)
              (Ojs.get_prop_ascii (t_to_js x3384)
                 "onDidChangeFileDecorations")
        let (set_onDidChangeFileDecorations :
          t ->
            (vscode_Uri, vscode_Uri) or_array or_undefined vscode_Event ->
              unit)
          =
          fun (x3389 : t) ->
            fun
              (x3390 :
                (vscode_Uri, vscode_Uri) or_array or_undefined vscode_Event)
              ->
              Ojs.set_prop_ascii (t_to_js x3389) "onDidChangeFileDecorations"
                (vscode_Event_to_js
                   (fun
                      (x3391 :
                        (vscode_Uri, vscode_Uri) or_array or_undefined)
                      ->
                      or_undefined_to_js
                        (fun (x3392 : (vscode_Uri, vscode_Uri) or_array) ->
                           or_array_to_js vscode_Uri_to_js vscode_Uri_to_js
                             x3392) x3391) x3390)
        let (provideFileDecoration :
          t ->
            uri:vscode_Uri ->
              token:vscode_CancellationToken ->
                vscode_FileDecoration vscode_ProviderResult)
          =
          fun (x3397 : t) ->
            fun ~uri:(x3395 : vscode_Uri) ->
              fun ~token:(x3396 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js vscode_FileDecoration_of_js
                  (Ojs.call (t_to_js x3397) "provideFileDecoration"
                     [|(vscode_Uri_to_js x3395);(vscode_CancellationToken_to_js
                                                   x3396)|])
      end
    module ExtensionKind =
      struct
        type t = vscode_ExtensionKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3400 : Ojs.t) -> vscode_ExtensionKind_of_js x3400
        and t_to_js : t -> Ojs.t =
          fun (x3399 : vscode_ExtensionKind) ->
            vscode_ExtensionKind_to_js x3399
      end
    module Extension =
      struct
        type 'T t = 'T vscode_Extension
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3403 : Ojs.t) -> vscode_Extension_of_js __T_of_js x3403
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3401 : __T vscode_Extension) ->
              vscode_Extension_to_js __T_to_js x3401
        let (get_id : 'T t -> string) =
          fun (x3405 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3405) "id")
        let (get_extensionUri : 'T t -> vscode_Uri) =
          fun (x3407 : 'T t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3407) "extensionUri")
        let (get_extensionPath : 'T t -> string) =
          fun (x3409 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3409) "extensionPath")
        let (get_isActive : 'T t -> bool) =
          fun (x3411 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3411) "isActive")
        let (get_packageJSON : 'T t -> any) =
          fun (x3413 : 'T t) ->
            any_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3413) "packageJSON")
        let (get_extensionKind : 'T t -> vscode_ExtensionKind) =
          fun (x3415 : 'T t) ->
            vscode_ExtensionKind_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3415) "extensionKind")
        let (set_extensionKind : 'T t -> vscode_ExtensionKind -> unit) =
          fun (x3417 : 'T t) ->
            fun (x3418 : vscode_ExtensionKind) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x3417) "extensionKind"
                (vscode_ExtensionKind_to_js x3418)
        let (get_exports : 'T t -> 'T) =
          fun (x3420 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3420) "exports")
        let (activate : 'T t -> 'T _Thenable) =
          fun (x3422 : 'T t) ->
            _Thenable_of_js Obj.magic
              (Ojs.call (t_to_js Obj.magic x3422) "activate" [||])
      end
    module ExtensionMode =
      struct
        type t = vscode_ExtensionMode
        let rec t_of_js : Ojs.t -> t =
          fun (x3426 : Ojs.t) -> vscode_ExtensionMode_of_js x3426
        and t_to_js : t -> Ojs.t =
          fun (x3425 : vscode_ExtensionMode) ->
            vscode_ExtensionMode_to_js x3425
      end
    module ExtensionContext =
      struct
        type t = vscode_ExtensionContext
        let rec t_of_js : Ojs.t -> t =
          fun (x3428 : Ojs.t) -> vscode_ExtensionContext_of_js x3428
        and t_to_js : t -> Ojs.t =
          fun (x3427 : vscode_ExtensionContext) ->
            vscode_ExtensionContext_to_js x3427
        let (get_subscriptions : t -> anonymous_interface_42 list) =
          fun (x3429 : t) ->
            Ojs.list_of_js anonymous_interface_42_of_js
              (Ojs.get_prop_ascii (t_to_js x3429) "subscriptions")
        let (get_workspaceState : t -> vscode_Memento) =
          fun (x3431 : t) ->
            vscode_Memento_of_js
              (Ojs.get_prop_ascii (t_to_js x3431) "workspaceState")
        let (get_globalState :
          t -> (vscode_Memento, anonymous_interface_43) intersection2) =
          fun (x3432 : t) ->
            intersection2_of_js vscode_Memento_of_js
              anonymous_interface_43_of_js
              (Ojs.get_prop_ascii (t_to_js x3432) "globalState")
        let (get_secrets : t -> vscode_SecretStorage) =
          fun (x3435 : t) ->
            vscode_SecretStorage_of_js
              (Ojs.get_prop_ascii (t_to_js x3435) "secrets")
        let (get_extensionUri : t -> vscode_Uri) =
          fun (x3436 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3436) "extensionUri")
        let (get_extensionPath : t -> string) =
          fun (x3437 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3437) "extensionPath")
        let (get_environmentVariableCollection :
          t -> vscode_EnvironmentVariableCollection) =
          fun (x3438 : t) ->
            vscode_EnvironmentVariableCollection_of_js
              (Ojs.get_prop_ascii (t_to_js x3438)
                 "environmentVariableCollection")
        let (asAbsolutePath : t -> relativePath:string -> string) =
          fun (x3440 : t) ->
            fun ~relativePath:(x3439 : string) ->
              Ojs.string_of_js
                (Ojs.call (t_to_js x3440) "asAbsolutePath"
                   [|(Ojs.string_to_js x3439)|])
        let (get_storageUri : t -> vscode_Uri or_undefined) =
          fun (x3441 : t) ->
            or_undefined_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3441) "storageUri")
        let (get_storagePath : t -> string or_undefined) =
          fun (x3443 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3443) "storagePath")
        let (get_globalStorageUri : t -> vscode_Uri) =
          fun (x3445 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3445) "globalStorageUri")
        let (get_globalStoragePath : t -> string) =
          fun (x3446 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3446) "globalStoragePath")
        let (get_logUri : t -> vscode_Uri) =
          fun (x3447 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3447) "logUri")
        let (get_logPath : t -> string) =
          fun (x3448 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3448) "logPath")
        let (get_extensionMode : t -> vscode_ExtensionMode) =
          fun (x3449 : t) ->
            vscode_ExtensionMode_of_js
              (Ojs.get_prop_ascii (t_to_js x3449) "extensionMode")
        let (get_extension : t -> any vscode_Extension) =
          fun (x3450 : t) ->
            vscode_Extension_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x3450) "extension")
      end
    module Memento =
      struct
        type t = vscode_Memento
        let rec t_of_js : Ojs.t -> t =
          fun (x3453 : Ojs.t) -> vscode_Memento_of_js x3453
        and t_to_js : t -> Ojs.t =
          fun (x3452 : vscode_Memento) -> vscode_Memento_to_js x3452
        let (get_ : t -> key:string -> 'T or_undefined) =
          fun (x3455 : t) ->
            fun ~key:(x3454 : string) ->
              or_undefined_of_js Obj.magic
                (Ojs.call (t_to_js x3455) "get" [|(Ojs.string_to_js x3454)|])
        let (get_' : t -> key:string -> defaultValue:'T -> 'T) =
          fun (x3459 : t) ->
            fun ~key:(x3457 : string) ->
              fun ~defaultValue:(x3458 : 'T) ->
                Obj.magic
                  (Ojs.call (t_to_js x3459) "get"
                     [|(Ojs.string_to_js x3457);(Obj.magic x3458)|])
        let (update : t -> key:string -> value:any -> unit _Thenable) =
          fun (x3462 : t) ->
            fun ~key:(x3460 : string) ->
              fun ~value:(x3461 : any) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x3462) "update"
                     [|(Ojs.string_to_js x3460);(any_to_js x3461)|])
      end
    module SecretStorageChangeEvent =
      struct
        type t = vscode_SecretStorageChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3465 : Ojs.t) -> vscode_SecretStorageChangeEvent_of_js x3465
        and t_to_js : t -> Ojs.t =
          fun (x3464 : vscode_SecretStorageChangeEvent) ->
            vscode_SecretStorageChangeEvent_to_js x3464
        let (get_key : t -> string) =
          fun (x3466 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3466) "key")
      end
    module SecretStorage =
      struct
        type t = vscode_SecretStorage
        let rec t_of_js : Ojs.t -> t =
          fun (x3468 : Ojs.t) -> vscode_SecretStorage_of_js x3468
        and t_to_js : t -> Ojs.t =
          fun (x3467 : vscode_SecretStorage) ->
            vscode_SecretStorage_to_js x3467
        let (get_ : t -> key:string -> string or_undefined _Thenable) =
          fun (x3470 : t) ->
            fun ~key:(x3469 : string) ->
              _Thenable_of_js
                (fun (x3471 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x3471)
                (Ojs.call (t_to_js x3470) "get" [|(Ojs.string_to_js x3469)|])
        let (store : t -> key:string -> value:string -> unit _Thenable) =
          fun (x3475 : t) ->
            fun ~key:(x3473 : string) ->
              fun ~value:(x3474 : string) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x3475) "store"
                     [|(Ojs.string_to_js x3473);(Ojs.string_to_js x3474)|])
        let (delete : t -> key:string -> unit _Thenable) =
          fun (x3478 : t) ->
            fun ~key:(x3477 : string) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x3478) "delete"
                   [|(Ojs.string_to_js x3477)|])
        let (get_onDidChange :
          t -> vscode_SecretStorageChangeEvent vscode_Event) =
          fun (x3480 : t) ->
            vscode_Event_of_js vscode_SecretStorageChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x3480) "onDidChange")
        let (set_onDidChange :
          t -> vscode_SecretStorageChangeEvent vscode_Event -> unit) =
          fun (x3482 : t) ->
            fun (x3483 : vscode_SecretStorageChangeEvent vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x3482) "onDidChange"
                (vscode_Event_to_js vscode_SecretStorageChangeEvent_to_js
                   x3483)
      end
    module ColorThemeKind =
      struct
        type t = vscode_ColorThemeKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3486 : Ojs.t) -> vscode_ColorThemeKind_of_js x3486
        and t_to_js : t -> Ojs.t =
          fun (x3485 : vscode_ColorThemeKind) ->
            vscode_ColorThemeKind_to_js x3485
      end
    module ColorTheme =
      struct
        type t = vscode_ColorTheme
        let rec t_of_js : Ojs.t -> t =
          fun (x3488 : Ojs.t) -> vscode_ColorTheme_of_js x3488
        and t_to_js : t -> Ojs.t =
          fun (x3487 : vscode_ColorTheme) -> vscode_ColorTheme_to_js x3487
        let (get_kind : t -> vscode_ColorThemeKind) =
          fun (x3489 : t) ->
            vscode_ColorThemeKind_of_js
              (Ojs.get_prop_ascii (t_to_js x3489) "kind")
      end
    module TaskRevealKind =
      struct
        type t = vscode_TaskRevealKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3491 : Ojs.t) -> vscode_TaskRevealKind_of_js x3491
        and t_to_js : t -> Ojs.t =
          fun (x3490 : vscode_TaskRevealKind) ->
            vscode_TaskRevealKind_to_js x3490
      end
    module TaskPanelKind =
      struct
        type t = vscode_TaskPanelKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3493 : Ojs.t) -> vscode_TaskPanelKind_of_js x3493
        and t_to_js : t -> Ojs.t =
          fun (x3492 : vscode_TaskPanelKind) ->
            vscode_TaskPanelKind_to_js x3492
      end
    module TaskPresentationOptions =
      struct
        type t = vscode_TaskPresentationOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3495 : Ojs.t) -> vscode_TaskPresentationOptions_of_js x3495
        and t_to_js : t -> Ojs.t =
          fun (x3494 : vscode_TaskPresentationOptions) ->
            vscode_TaskPresentationOptions_to_js x3494
        let (get_reveal : t -> vscode_TaskRevealKind) =
          fun (x3496 : t) ->
            vscode_TaskRevealKind_of_js
              (Ojs.get_prop_ascii (t_to_js x3496) "reveal")
        let (set_reveal : t -> vscode_TaskRevealKind -> unit) =
          fun (x3497 : t) ->
            fun (x3498 : vscode_TaskRevealKind) ->
              Ojs.set_prop_ascii (t_to_js x3497) "reveal"
                (vscode_TaskRevealKind_to_js x3498)
        let (get_echo : t -> bool) =
          fun (x3499 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3499) "echo")
        let (set_echo : t -> bool -> unit) =
          fun (x3500 : t) ->
            fun (x3501 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3500) "echo"
                (Ojs.bool_to_js x3501)
        let (get_focus : t -> bool) =
          fun (x3502 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3502) "focus")
        let (set_focus : t -> bool -> unit) =
          fun (x3503 : t) ->
            fun (x3504 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3503) "focus"
                (Ojs.bool_to_js x3504)
        let (get_panel : t -> vscode_TaskPanelKind) =
          fun (x3505 : t) ->
            vscode_TaskPanelKind_of_js
              (Ojs.get_prop_ascii (t_to_js x3505) "panel")
        let (set_panel : t -> vscode_TaskPanelKind -> unit) =
          fun (x3506 : t) ->
            fun (x3507 : vscode_TaskPanelKind) ->
              Ojs.set_prop_ascii (t_to_js x3506) "panel"
                (vscode_TaskPanelKind_to_js x3507)
        let (get_showReuseMessage : t -> bool) =
          fun (x3508 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3508) "showReuseMessage")
        let (set_showReuseMessage : t -> bool -> unit) =
          fun (x3509 : t) ->
            fun (x3510 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3509) "showReuseMessage"
                (Ojs.bool_to_js x3510)
        let (get_clear : t -> bool) =
          fun (x3511 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3511) "clear")
        let (set_clear : t -> bool -> unit) =
          fun (x3512 : t) ->
            fun (x3513 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3512) "clear"
                (Ojs.bool_to_js x3513)
      end
    module TaskGroup =
      struct
        type t = vscode_TaskGroup
        let rec t_of_js : Ojs.t -> t =
          fun (x3515 : Ojs.t) -> vscode_TaskGroup_of_js x3515
        and t_to_js : t -> Ojs.t =
          fun (x3514 : vscode_TaskGroup) -> vscode_TaskGroup_to_js x3514
        let (get_Clean : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Clean")
        let (set_Clean : t -> unit) =
          fun (x3516 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Clean" (t_to_js x3516)
        let (get_Build : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Build")
        let (set_Build : t -> unit) =
          fun (x3517 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Build" (t_to_js x3517)
        let (get_Rebuild : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Rebuild")
        let (set_Rebuild : t -> unit) =
          fun (x3518 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Rebuild" (t_to_js x3518)
        let (get_Test : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Test")
        let (set_Test : t -> unit) =
          fun (x3519 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Test" (t_to_js x3519)
        let (create : id:string -> label:string -> t) =
          fun ~id:(x3520 : string) ->
            fun ~label:(x3521 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TaskGroup")
                   [|(Ojs.string_to_js x3520);(Ojs.string_to_js x3521)|])
      end
    module TaskDefinition =
      struct
        type t = vscode_TaskDefinition
        let rec t_of_js : Ojs.t -> t =
          fun (x3523 : Ojs.t) -> vscode_TaskDefinition_of_js x3523
        and t_to_js : t -> Ojs.t =
          fun (x3522 : vscode_TaskDefinition) ->
            vscode_TaskDefinition_to_js x3522
        let (get_type : t -> string) =
          fun (x3524 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3524) "type")
        let (get : t -> string -> any) =
          fun (x3525 : t) ->
            fun (x3526 : string) ->
              any_of_js
                (Ojs.get_prop (t_to_js x3525) (Ojs.string_to_js x3526))
        let (set : t -> string -> any -> unit) =
          fun (x3527 : t) ->
            fun (x3528 : string) ->
              fun (x3529 : any) ->
                Ojs.set_prop (t_to_js x3527) (Ojs.string_to_js x3528)
                  (any_to_js x3529)
      end
    module ProcessExecutionOptions =
      struct
        type t = vscode_ProcessExecutionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3531 : Ojs.t) -> vscode_ProcessExecutionOptions_of_js x3531
        and t_to_js : t -> Ojs.t =
          fun (x3530 : vscode_ProcessExecutionOptions) ->
            vscode_ProcessExecutionOptions_to_js x3530
        let (get_cwd : t -> string) =
          fun (x3532 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3532) "cwd")
        let (set_cwd : t -> string -> unit) =
          fun (x3533 : t) ->
            fun (x3534 : string) ->
              Ojs.set_prop_ascii (t_to_js x3533) "cwd"
                (Ojs.string_to_js x3534)
        let (get_env : t -> anonymous_interface_44) =
          fun (x3535 : t) ->
            anonymous_interface_44_of_js
              (Ojs.get_prop_ascii (t_to_js x3535) "env")
        let (set_env : t -> anonymous_interface_44 -> unit) =
          fun (x3536 : t) ->
            fun (x3537 : anonymous_interface_44) ->
              Ojs.set_prop_ascii (t_to_js x3536) "env"
                (anonymous_interface_44_to_js x3537)
      end
    module ProcessExecution =
      struct
        type t = vscode_ProcessExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3539 : Ojs.t) -> vscode_ProcessExecution_of_js x3539
        and t_to_js : t -> Ojs.t =
          fun (x3538 : vscode_ProcessExecution) ->
            vscode_ProcessExecution_to_js x3538
        let (create :
          process:string ->
            ?options:vscode_ProcessExecutionOptions -> unit -> t)
          =
          fun ~process:(x3540 : string) ->
            fun ?options:(x3541 : vscode_ProcessExecutionOptions option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "ProcessExecution")
                     (let x3542 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3542 "push" [|(Ojs.string_to_js x3540)|]);
                      (match x3541 with
                       | Some x3543 ->
                           ignore
                             (Ojs.call x3542 "push"
                                [|(vscode_ProcessExecutionOptions_to_js x3543)|])
                       | None -> ());
                      x3542))
        let (create' :
          process:string ->
            args:string list ->
              ?options:vscode_ProcessExecutionOptions -> unit -> t)
          =
          fun ~process:(x3544 : string) ->
            fun ~args:(x3545 : string list) ->
              fun ?options:(x3546 : vscode_ProcessExecutionOptions option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "ProcessExecution")
                       (let x3547 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x3547 "push" [|(Ojs.string_to_js x3544)|]);
                        ignore
                          (Ojs.call x3547 "push"
                             [|(Ojs.list_to_js Ojs.string_to_js x3545)|]);
                        (match x3546 with
                         | Some x3548 ->
                             ignore
                               (Ojs.call x3547 "push"
                                  [|(vscode_ProcessExecutionOptions_to_js
                                       x3548)|])
                         | None -> ());
                        x3547))
        let (get_process : t -> string) =
          fun (x3550 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3550) "process")
        let (set_process : t -> string -> unit) =
          fun (x3551 : t) ->
            fun (x3552 : string) ->
              Ojs.set_prop_ascii (t_to_js x3551) "process"
                (Ojs.string_to_js x3552)
        let (get_args : t -> string list) =
          fun (x3553 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3553) "args")
        let (set_args : t -> string list -> unit) =
          fun (x3555 : t) ->
            fun (x3556 : string list) ->
              Ojs.set_prop_ascii (t_to_js x3555) "args"
                (Ojs.list_to_js Ojs.string_to_js x3556)
        let (get_options : t -> vscode_ProcessExecutionOptions) =
          fun (x3558 : t) ->
            vscode_ProcessExecutionOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3558) "options")
        let (set_options : t -> vscode_ProcessExecutionOptions -> unit) =
          fun (x3559 : t) ->
            fun (x3560 : vscode_ProcessExecutionOptions) ->
              Ojs.set_prop_ascii (t_to_js x3559) "options"
                (vscode_ProcessExecutionOptions_to_js x3560)
      end
    module ShellQuotingOptions =
      struct
        type t = vscode_ShellQuotingOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3562 : Ojs.t) -> vscode_ShellQuotingOptions_of_js x3562
        and t_to_js : t -> Ojs.t =
          fun (x3561 : vscode_ShellQuotingOptions) ->
            vscode_ShellQuotingOptions_to_js x3561
        let (get_escape : t -> anonymous_interface_7 or_string) =
          fun (x3563 : t) ->
            or_string_of_js anonymous_interface_7_of_js
              (Ojs.get_prop_ascii (t_to_js x3563) "escape")
        let (set_escape : t -> anonymous_interface_7 or_string -> unit) =
          fun (x3565 : t) ->
            fun (x3566 : anonymous_interface_7 or_string) ->
              Ojs.set_prop_ascii (t_to_js x3565) "escape"
                (or_string_to_js anonymous_interface_7_to_js x3566)
        let (get_strong : t -> string) =
          fun (x3568 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3568) "strong")
        let (set_strong : t -> string -> unit) =
          fun (x3569 : t) ->
            fun (x3570 : string) ->
              Ojs.set_prop_ascii (t_to_js x3569) "strong"
                (Ojs.string_to_js x3570)
        let (get_weak : t -> string) =
          fun (x3571 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3571) "weak")
        let (set_weak : t -> string -> unit) =
          fun (x3572 : t) ->
            fun (x3573 : string) ->
              Ojs.set_prop_ascii (t_to_js x3572) "weak"
                (Ojs.string_to_js x3573)
      end
    module ShellExecutionOptions =
      struct
        type t = vscode_ShellExecutionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3575 : Ojs.t) -> vscode_ShellExecutionOptions_of_js x3575
        and t_to_js : t -> Ojs.t =
          fun (x3574 : vscode_ShellExecutionOptions) ->
            vscode_ShellExecutionOptions_to_js x3574
        let (get_executable : t -> string) =
          fun (x3576 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3576) "executable")
        let (set_executable : t -> string -> unit) =
          fun (x3577 : t) ->
            fun (x3578 : string) ->
              Ojs.set_prop_ascii (t_to_js x3577) "executable"
                (Ojs.string_to_js x3578)
        let (get_shellArgs : t -> string list) =
          fun (x3579 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3579) "shellArgs")
        let (set_shellArgs : t -> string list -> unit) =
          fun (x3581 : t) ->
            fun (x3582 : string list) ->
              Ojs.set_prop_ascii (t_to_js x3581) "shellArgs"
                (Ojs.list_to_js Ojs.string_to_js x3582)
        let (get_shellQuoting : t -> vscode_ShellQuotingOptions) =
          fun (x3584 : t) ->
            vscode_ShellQuotingOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3584) "shellQuoting")
        let (set_shellQuoting : t -> vscode_ShellQuotingOptions -> unit) =
          fun (x3585 : t) ->
            fun (x3586 : vscode_ShellQuotingOptions) ->
              Ojs.set_prop_ascii (t_to_js x3585) "shellQuoting"
                (vscode_ShellQuotingOptions_to_js x3586)
        let (get_cwd : t -> string) =
          fun (x3587 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3587) "cwd")
        let (set_cwd : t -> string -> unit) =
          fun (x3588 : t) ->
            fun (x3589 : string) ->
              Ojs.set_prop_ascii (t_to_js x3588) "cwd"
                (Ojs.string_to_js x3589)
        let (get_env : t -> anonymous_interface_44) =
          fun (x3590 : t) ->
            anonymous_interface_44_of_js
              (Ojs.get_prop_ascii (t_to_js x3590) "env")
        let (set_env : t -> anonymous_interface_44 -> unit) =
          fun (x3591 : t) ->
            fun (x3592 : anonymous_interface_44) ->
              Ojs.set_prop_ascii (t_to_js x3591) "env"
                (anonymous_interface_44_to_js x3592)
      end
    module ShellQuoting =
      struct
        type t = vscode_ShellQuoting
        let rec t_of_js : Ojs.t -> t =
          fun (x3594 : Ojs.t) -> vscode_ShellQuoting_of_js x3594
        and t_to_js : t -> Ojs.t =
          fun (x3593 : vscode_ShellQuoting) ->
            vscode_ShellQuoting_to_js x3593
      end
    module ShellQuotedString =
      struct
        type t = vscode_ShellQuotedString
        let rec t_of_js : Ojs.t -> t =
          fun (x3596 : Ojs.t) -> vscode_ShellQuotedString_of_js x3596
        and t_to_js : t -> Ojs.t =
          fun (x3595 : vscode_ShellQuotedString) ->
            vscode_ShellQuotedString_to_js x3595
        let (get_value : t -> string) =
          fun (x3597 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3597) "value")
        let (set_value : t -> string -> unit) =
          fun (x3598 : t) ->
            fun (x3599 : string) ->
              Ojs.set_prop_ascii (t_to_js x3598) "value"
                (Ojs.string_to_js x3599)
        let (get_quoting : t -> vscode_ShellQuoting) =
          fun (x3600 : t) ->
            vscode_ShellQuoting_of_js
              (Ojs.get_prop_ascii (t_to_js x3600) "quoting")
        let (set_quoting : t -> vscode_ShellQuoting -> unit) =
          fun (x3601 : t) ->
            fun (x3602 : vscode_ShellQuoting) ->
              Ojs.set_prop_ascii (t_to_js x3601) "quoting"
                (vscode_ShellQuoting_to_js x3602)
      end
    module ShellExecution =
      struct
        type t = vscode_ShellExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3604 : Ojs.t) -> vscode_ShellExecution_of_js x3604
        and t_to_js : t -> Ojs.t =
          fun (x3603 : vscode_ShellExecution) ->
            vscode_ShellExecution_to_js x3603
        let (create :
          commandLine:string ->
            ?options:vscode_ShellExecutionOptions -> unit -> t)
          =
          fun ~commandLine:(x3605 : string) ->
            fun ?options:(x3606 : vscode_ShellExecutionOptions option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "ShellExecution")
                     (let x3607 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3607 "push" [|(Ojs.string_to_js x3605)|]);
                      (match x3606 with
                       | Some x3608 ->
                           ignore
                             (Ojs.call x3607 "push"
                                [|(vscode_ShellExecutionOptions_to_js x3608)|])
                       | None -> ());
                      x3607))
        let (create' :
          command:vscode_ShellQuotedString or_string ->
            args:vscode_ShellQuotedString or_string list ->
              ?options:vscode_ShellExecutionOptions -> unit -> t)
          =
          fun ~command:(x3609 : vscode_ShellQuotedString or_string) ->
            fun ~args:(x3610 : vscode_ShellQuotedString or_string list) ->
              fun ?options:(x3611 : vscode_ShellExecutionOptions option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "ShellExecution")
                       (let x3612 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x3612 "push"
                             [|(or_string_to_js
                                  vscode_ShellQuotedString_to_js x3609)|]);
                        ignore
                          (Ojs.call x3612 "push"
                             [|(Ojs.list_to_js
                                  (fun
                                     (x3614 :
                                       vscode_ShellQuotedString or_string)
                                     ->
                                     or_string_to_js
                                       vscode_ShellQuotedString_to_js x3614)
                                  x3610)|]);
                        (match x3611 with
                         | Some x3613 ->
                             ignore
                               (Ojs.call x3612 "push"
                                  [|(vscode_ShellExecutionOptions_to_js x3613)|])
                         | None -> ());
                        x3612))
        let (get_commandLine : t -> string or_undefined) =
          fun (x3617 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3617) "commandLine")
        let (set_commandLine : t -> string or_undefined -> unit) =
          fun (x3619 : t) ->
            fun (x3620 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3619) "commandLine"
                (or_undefined_to_js Ojs.string_to_js x3620)
        let (get_command : t -> vscode_ShellQuotedString or_string) =
          fun (x3622 : t) ->
            or_string_of_js vscode_ShellQuotedString_of_js
              (Ojs.get_prop_ascii (t_to_js x3622) "command")
        let (set_command : t -> vscode_ShellQuotedString or_string -> unit) =
          fun (x3624 : t) ->
            fun (x3625 : vscode_ShellQuotedString or_string) ->
              Ojs.set_prop_ascii (t_to_js x3624) "command"
                (or_string_to_js vscode_ShellQuotedString_to_js x3625)
        let (get_args : t -> vscode_ShellQuotedString or_string list) =
          fun (x3627 : t) ->
            Ojs.list_of_js
              (fun (x3628 : Ojs.t) ->
                 or_string_of_js vscode_ShellQuotedString_of_js x3628)
              (Ojs.get_prop_ascii (t_to_js x3627) "args")
        let (set_args : t -> vscode_ShellQuotedString or_string list -> unit)
          =
          fun (x3630 : t) ->
            fun (x3631 : vscode_ShellQuotedString or_string list) ->
              Ojs.set_prop_ascii (t_to_js x3630) "args"
                (Ojs.list_to_js
                   (fun (x3632 : vscode_ShellQuotedString or_string) ->
                      or_string_to_js vscode_ShellQuotedString_to_js x3632)
                   x3631)
        let (get_options : t -> vscode_ShellExecutionOptions) =
          fun (x3634 : t) ->
            vscode_ShellExecutionOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3634) "options")
        let (set_options : t -> vscode_ShellExecutionOptions -> unit) =
          fun (x3635 : t) ->
            fun (x3636 : vscode_ShellExecutionOptions) ->
              Ojs.set_prop_ascii (t_to_js x3635) "options"
                (vscode_ShellExecutionOptions_to_js x3636)
      end
    module CustomExecution =
      struct
        type t = vscode_CustomExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3638 : Ojs.t) -> vscode_CustomExecution_of_js x3638
        and t_to_js : t -> Ojs.t =
          fun (x3637 : vscode_CustomExecution) ->
            vscode_CustomExecution_to_js x3637
        let (create :
          callback:(resolvedDefinition:vscode_TaskDefinition ->
                      vscode_Pseudoterminal _Thenable)
            -> t)
          =
          fun
            ~callback:(x3639 :
                        resolvedDefinition:vscode_TaskDefinition ->
                          vscode_Pseudoterminal _Thenable)
            ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CustomExecution")
                 [|(Ojs.fun_to_js 1
                      (fun (x3640 : Ojs.t) ->
                         _Thenable_to_js vscode_Pseudoterminal_to_js
                           (x3639
                              ~resolvedDefinition:(vscode_TaskDefinition_of_js
                                                     x3640))))|])
      end
    module TaskScope =
      struct
        type t = vscode_TaskScope
        let rec t_of_js : Ojs.t -> t =
          fun (x3643 : Ojs.t) -> vscode_TaskScope_of_js x3643
        and t_to_js : t -> Ojs.t =
          fun (x3642 : vscode_TaskScope) -> vscode_TaskScope_to_js x3642
      end
    module RunOptions =
      struct
        type t = vscode_RunOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3645 : Ojs.t) -> vscode_RunOptions_of_js x3645
        and t_to_js : t -> Ojs.t =
          fun (x3644 : vscode_RunOptions) -> vscode_RunOptions_to_js x3644
        let (get_reevaluateOnRerun : t -> bool) =
          fun (x3646 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3646) "reevaluateOnRerun")
        let (set_reevaluateOnRerun : t -> bool -> unit) =
          fun (x3647 : t) ->
            fun (x3648 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3647) "reevaluateOnRerun"
                (Ojs.bool_to_js x3648)
      end
    module Task =
      struct
        type t = vscode_Task
        let rec t_of_js : Ojs.t -> t =
          fun (x3650 : Ojs.t) -> vscode_Task_of_js x3650
        and t_to_js : t -> Ojs.t =
          fun (x3649 : vscode_Task) -> vscode_Task_to_js x3649
        let (create :
          taskDefinition:vscode_TaskDefinition ->
            scope:((vscode_TaskScope_Global, vscode_TaskScope_Workspace,
                     vscode_WorkspaceFolder) union3,
              [ `Global  | `Workspace ]) or_enum ->
              name:string ->
                source:string ->
                  ?execution:(vscode_CustomExecution,
                    vscode_ProcessExecution, vscode_ShellExecution) union3 ->
                    ?problemMatchers:string list or_string -> unit -> t)
          =
          fun ~taskDefinition:(x3651 : vscode_TaskDefinition) ->
            fun
              ~scope:(x3652 :
                       ((vscode_TaskScope_Global, vscode_TaskScope_Workspace,
                          vscode_WorkspaceFolder) union3,
                         [ `Global  | `Workspace ]) or_enum)
              ->
              fun ~name:(x3653 : string) ->
                fun ~source:(x3654 : string) ->
                  fun
                    ?execution:(x3655 :
                                 (vscode_CustomExecution,
                                   vscode_ProcessExecution,
                                   vscode_ShellExecution) union3 option)
                    ->
                    fun
                      ?problemMatchers:(x3656 : string list or_string option)
                      ->
                      fun () ->
                        t_of_js
                          (Ojs.new_obj_arr
                             (Ojs.get_prop_ascii
                                (Ojs.get_prop_ascii Ojs.global "vscode")
                                "Task")
                             (let x3657 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x3657 "push"
                                   [|(vscode_TaskDefinition_to_js x3651)|]);
                              ignore
                                (Ojs.call x3657 "push"
                                   [|(or_enum_to_js
                                        (fun
                                           (x3665 :
                                             (vscode_TaskScope_Global,
                                               vscode_TaskScope_Workspace,
                                               vscode_WorkspaceFolder) union3)
                                           ->
                                           union3_to_js
                                             vscode_TaskScope_Global_to_js
                                             vscode_TaskScope_Workspace_to_js
                                             vscode_WorkspaceFolder_to_js
                                             x3665)
                                        (fun
                                           (x3669 :
                                             [ `Global  | `Workspace ])
                                           ->
                                           match x3669 with
                                           | `Global ->
                                               Ojs.string_to_js "Global"
                                           | `Workspace ->
                                               Ojs.string_to_js "Workspace")
                                        x3652)|]);
                              ignore
                                (Ojs.call x3657 "push"
                                   [|(Ojs.string_to_js x3653)|]);
                              ignore
                                (Ojs.call x3657 "push"
                                   [|(Ojs.string_to_js x3654)|]);
                              (match x3655 with
                               | Some x3661 ->
                                   ignore
                                     (Ojs.call x3657 "push"
                                        [|(union3_to_js
                                             vscode_CustomExecution_to_js
                                             vscode_ProcessExecution_to_js
                                             vscode_ShellExecution_to_js
                                             x3661)|])
                               | None -> ());
                              (match x3656 with
                               | Some x3658 ->
                                   ignore
                                     (Ojs.call x3657 "push"
                                        [|(or_string_to_js
                                             (fun (x3659 : string list) ->
                                                Ojs.list_to_js
                                                  Ojs.string_to_js x3659)
                                             x3658)|])
                               | None -> ());
                              x3657))
        let (create' :
          taskDefinition:vscode_TaskDefinition ->
            name:string ->
              source:string ->
                ?execution:(vscode_ProcessExecution, vscode_ShellExecution)
                  union2 ->
                  ?problemMatchers:string list or_string -> unit -> t)
          =
          fun ~taskDefinition:(x3670 : vscode_TaskDefinition) ->
            fun ~name:(x3671 : string) ->
              fun ~source:(x3672 : string) ->
                fun
                  ?execution:(x3673 :
                               (vscode_ProcessExecution,
                                 vscode_ShellExecution) union2 option)
                  ->
                  fun ?problemMatchers:(x3674 : string list or_string option)
                    ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode") "Task")
                           (let x3675 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x3675 "push"
                                 [|(vscode_TaskDefinition_to_js x3670)|]);
                            ignore
                              (Ojs.call x3675 "push"
                                 [|(Ojs.string_to_js x3671)|]);
                            ignore
                              (Ojs.call x3675 "push"
                                 [|(Ojs.string_to_js x3672)|]);
                            (match x3673 with
                             | Some x3679 ->
                                 ignore
                                   (Ojs.call x3675 "push"
                                      [|(union2_to_js
                                           vscode_ProcessExecution_to_js
                                           vscode_ShellExecution_to_js x3679)|])
                             | None -> ());
                            (match x3674 with
                             | Some x3676 ->
                                 ignore
                                   (Ojs.call x3675 "push"
                                      [|(or_string_to_js
                                           (fun (x3677 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x3677) x3676)|])
                             | None -> ());
                            x3675))
        let (get_definition : t -> vscode_TaskDefinition) =
          fun (x3682 : t) ->
            vscode_TaskDefinition_of_js
              (Ojs.get_prop_ascii (t_to_js x3682) "definition")
        let (set_definition : t -> vscode_TaskDefinition -> unit) =
          fun (x3683 : t) ->
            fun (x3684 : vscode_TaskDefinition) ->
              Ojs.set_prop_ascii (t_to_js x3683) "definition"
                (vscode_TaskDefinition_to_js x3684)
        let (get_scope :
          t ->
            ((vscode_TaskScope_Global, vscode_TaskScope_Workspace,
               vscode_WorkspaceFolder) union3,
              [ `Global  | `Workspace ]) or_enum)
          =
          fun (x3685 : t) ->
            or_enum_of_js
              (fun (x3686 : Ojs.t) ->
                 union3_of_js vscode_TaskScope_Global_of_js
                   vscode_TaskScope_Workspace_of_js
                   vscode_WorkspaceFolder_of_js x3686)
              (fun (x3690 : Ojs.t) ->
                 let x3691 = x3690 in
                 match Ojs.int_of_js x3691 with
                 | 1 -> `Global
                 | 2 -> `Workspace
                 | _ -> assert false)
              (Ojs.get_prop_ascii (t_to_js x3685) "scope")
        let (get_name : t -> string) =
          fun (x3692 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3692) "name")
        let (set_name : t -> string -> unit) =
          fun (x3693 : t) ->
            fun (x3694 : string) ->
              Ojs.set_prop_ascii (t_to_js x3693) "name"
                (Ojs.string_to_js x3694)
        let (get_detail : t -> string) =
          fun (x3695 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3695) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x3696 : t) ->
            fun (x3697 : string) ->
              Ojs.set_prop_ascii (t_to_js x3696) "detail"
                (Ojs.string_to_js x3697)
        let (get_execution :
          t ->
            (vscode_CustomExecution, vscode_ProcessExecution,
              vscode_ShellExecution) union3)
          =
          fun (x3698 : t) ->
            union3_of_js vscode_CustomExecution_of_js
              vscode_ProcessExecution_of_js vscode_ShellExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3698) "execution")
        let (set_execution :
          t ->
            (vscode_CustomExecution, vscode_ProcessExecution,
              vscode_ShellExecution) union3 -> unit)
          =
          fun (x3702 : t) ->
            fun
              (x3703 :
                (vscode_CustomExecution, vscode_ProcessExecution,
                  vscode_ShellExecution) union3)
              ->
              Ojs.set_prop_ascii (t_to_js x3702) "execution"
                (union3_to_js vscode_CustomExecution_to_js
                   vscode_ProcessExecution_to_js vscode_ShellExecution_to_js
                   x3703)
        let (get_isBackground : t -> bool) =
          fun (x3707 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3707) "isBackground")
        let (set_isBackground : t -> bool -> unit) =
          fun (x3708 : t) ->
            fun (x3709 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3708) "isBackground"
                (Ojs.bool_to_js x3709)
        let (get_source : t -> string) =
          fun (x3710 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3710) "source")
        let (set_source : t -> string -> unit) =
          fun (x3711 : t) ->
            fun (x3712 : string) ->
              Ojs.set_prop_ascii (t_to_js x3711) "source"
                (Ojs.string_to_js x3712)
        let (get_group : t -> vscode_TaskGroup) =
          fun (x3713 : t) ->
            vscode_TaskGroup_of_js
              (Ojs.get_prop_ascii (t_to_js x3713) "group")
        let (set_group : t -> vscode_TaskGroup -> unit) =
          fun (x3714 : t) ->
            fun (x3715 : vscode_TaskGroup) ->
              Ojs.set_prop_ascii (t_to_js x3714) "group"
                (vscode_TaskGroup_to_js x3715)
        let (get_presentationOptions : t -> vscode_TaskPresentationOptions) =
          fun (x3716 : t) ->
            vscode_TaskPresentationOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3716) "presentationOptions")
        let (set_presentationOptions :
          t -> vscode_TaskPresentationOptions -> unit) =
          fun (x3717 : t) ->
            fun (x3718 : vscode_TaskPresentationOptions) ->
              Ojs.set_prop_ascii (t_to_js x3717) "presentationOptions"
                (vscode_TaskPresentationOptions_to_js x3718)
        let (get_problemMatchers : t -> string list) =
          fun (x3719 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3719) "problemMatchers")
        let (set_problemMatchers : t -> string list -> unit) =
          fun (x3721 : t) ->
            fun (x3722 : string list) ->
              Ojs.set_prop_ascii (t_to_js x3721) "problemMatchers"
                (Ojs.list_to_js Ojs.string_to_js x3722)
        let (get_runOptions : t -> vscode_RunOptions) =
          fun (x3724 : t) ->
            vscode_RunOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3724) "runOptions")
        let (set_runOptions : t -> vscode_RunOptions -> unit) =
          fun (x3725 : t) ->
            fun (x3726 : vscode_RunOptions) ->
              Ojs.set_prop_ascii (t_to_js x3725) "runOptions"
                (vscode_RunOptions_to_js x3726)
      end
    module TaskProvider =
      struct
        type 'T t = 'T vscode_TaskProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3729 : Ojs.t) -> vscode_TaskProvider_of_js __T_of_js x3729
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3727 : __T vscode_TaskProvider) ->
              vscode_TaskProvider_to_js __T_to_js x3727
        let (provideTasks :
          'T t ->
            token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x3732 : 'T t) ->
            fun ~token:(x3731 : vscode_CancellationToken) ->
              vscode_ProviderResult_of_js
                (fun (x3734 : Ojs.t) -> Ojs.list_of_js Obj.magic x3734)
                (Ojs.call (t_to_js Obj.magic x3732) "provideTasks"
                   [|(vscode_CancellationToken_to_js x3731)|])
        let (resolveTask :
          'T t ->
            task:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x3738 : 'T t) ->
            fun ~task:(x3736 : 'T) ->
              fun ~token:(x3737 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x3738) "resolveTask"
                     [|(Obj.magic x3736);(vscode_CancellationToken_to_js
                                            x3737)|])
      end
    module TaskExecution =
      struct
        type t = vscode_TaskExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3742 : Ojs.t) -> vscode_TaskExecution_of_js x3742
        and t_to_js : t -> Ojs.t =
          fun (x3741 : vscode_TaskExecution) ->
            vscode_TaskExecution_to_js x3741
        let (get_task : t -> vscode_Task) =
          fun (x3743 : t) ->
            vscode_Task_of_js (Ojs.get_prop_ascii (t_to_js x3743) "task")
        let (set_task : t -> vscode_Task -> unit) =
          fun (x3744 : t) ->
            fun (x3745 : vscode_Task) ->
              Ojs.set_prop_ascii (t_to_js x3744) "task"
                (vscode_Task_to_js x3745)
        let (terminate : t -> unit) =
          fun (x3746 : t) ->
            ignore (Ojs.call (t_to_js x3746) "terminate" [||])
      end
    module TaskStartEvent =
      struct
        type t = vscode_TaskStartEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3748 : Ojs.t) -> vscode_TaskStartEvent_of_js x3748
        and t_to_js : t -> Ojs.t =
          fun (x3747 : vscode_TaskStartEvent) ->
            vscode_TaskStartEvent_to_js x3747
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3749 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3749) "execution")
      end
    module TaskEndEvent =
      struct
        type t = vscode_TaskEndEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3751 : Ojs.t) -> vscode_TaskEndEvent_of_js x3751
        and t_to_js : t -> Ojs.t =
          fun (x3750 : vscode_TaskEndEvent) ->
            vscode_TaskEndEvent_to_js x3750
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3752 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3752) "execution")
      end
    module TaskProcessStartEvent =
      struct
        type t = vscode_TaskProcessStartEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3754 : Ojs.t) -> vscode_TaskProcessStartEvent_of_js x3754
        and t_to_js : t -> Ojs.t =
          fun (x3753 : vscode_TaskProcessStartEvent) ->
            vscode_TaskProcessStartEvent_to_js x3753
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3755 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3755) "execution")
        let (get_processId : t -> float) =
          fun (x3756 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3756) "processId")
      end
    module TaskProcessEndEvent =
      struct
        type t = vscode_TaskProcessEndEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3758 : Ojs.t) -> vscode_TaskProcessEndEvent_of_js x3758
        and t_to_js : t -> Ojs.t =
          fun (x3757 : vscode_TaskProcessEndEvent) ->
            vscode_TaskProcessEndEvent_to_js x3757
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3759 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3759) "execution")
        let (get_exitCode : t -> float or_undefined) =
          fun (x3760 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x3760) "exitCode")
      end
    module TaskFilter =
      struct
        type t = vscode_TaskFilter
        let rec t_of_js : Ojs.t -> t =
          fun (x3763 : Ojs.t) -> vscode_TaskFilter_of_js x3763
        and t_to_js : t -> Ojs.t =
          fun (x3762 : vscode_TaskFilter) -> vscode_TaskFilter_to_js x3762
        let (get_version : t -> string) =
          fun (x3764 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3764) "version")
        let (set_version : t -> string -> unit) =
          fun (x3765 : t) ->
            fun (x3766 : string) ->
              Ojs.set_prop_ascii (t_to_js x3765) "version"
                (Ojs.string_to_js x3766)
        let (get_type : t -> string) =
          fun (x3767 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3767) "type")
        let (set_type : t -> string -> unit) =
          fun (x3768 : t) ->
            fun (x3769 : string) ->
              Ojs.set_prop_ascii (t_to_js x3768) "type"
                (Ojs.string_to_js x3769)
      end
    module Tasks =
      struct
        let (registerTaskProvider :
          type_:string ->
            provider:vscode_Task vscode_TaskProvider -> vscode_Disposable)
          =
          fun ~type_:(x3770 : string) ->
            fun ~provider:(x3771 : vscode_Task vscode_TaskProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "tasks")
                   "registerTaskProvider"
                   [|(Ojs.string_to_js x3770);(vscode_TaskProvider_to_js
                                                 vscode_Task_to_js x3771)|])
        let (fetchTasks :
          ?filter:vscode_TaskFilter -> unit -> vscode_Task list _Thenable) =
          fun ?filter:(x3773 : vscode_TaskFilter option) ->
            fun () ->
              _Thenable_of_js
                (fun (x3777 : Ojs.t) ->
                   Ojs.list_of_js vscode_Task_of_js x3777)
                (let x3776 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "tasks" in
                 Ojs.call (Ojs.get_prop_ascii x3776 "fetchTasks") "apply"
                   [|x3776;((let x3774 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3773 with
                              | Some x3775 ->
                                  ignore
                                    (Ojs.call x3774 "push"
                                       [|(vscode_TaskFilter_to_js x3775)|])
                              | None -> ());
                             x3774))|])
        let (executeTask :
          task:vscode_Task -> vscode_TaskExecution _Thenable) =
          fun ~task:(x3779 : vscode_Task) ->
            _Thenable_of_js vscode_TaskExecution_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "tasks") "executeTask" [|(vscode_Task_to_js x3779)|])
        let (taskExecutions : vscode_TaskExecution list) =
          Ojs.list_of_js vscode_TaskExecution_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "taskExecutions")
        let (onDidStartTask : vscode_TaskStartEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskStartEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidStartTask")
        let (onDidEndTask : vscode_TaskEndEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskEndEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidEndTask")
        let (onDidStartTaskProcess :
          vscode_TaskProcessStartEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskProcessStartEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidStartTaskProcess")
        let (onDidEndTaskProcess : vscode_TaskProcessEndEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskProcessEndEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidEndTaskProcess")
      end
    module FileType =
      struct
        type t = vscode_FileType
        let rec t_of_js : Ojs.t -> t =
          fun (x3787 : Ojs.t) -> vscode_FileType_of_js x3787
        and t_to_js : t -> Ojs.t =
          fun (x3786 : vscode_FileType) -> vscode_FileType_to_js x3786
      end
    module FileStat =
      struct
        type t = vscode_FileStat
        let rec t_of_js : Ojs.t -> t =
          fun (x3789 : Ojs.t) -> vscode_FileStat_of_js x3789
        and t_to_js : t -> Ojs.t =
          fun (x3788 : vscode_FileStat) -> vscode_FileStat_to_js x3788
        let (get_type : t -> vscode_FileType) =
          fun (x3790 : t) ->
            vscode_FileType_of_js (Ojs.get_prop_ascii (t_to_js x3790) "type")
        let (set_type : t -> vscode_FileType -> unit) =
          fun (x3791 : t) ->
            fun (x3792 : vscode_FileType) ->
              Ojs.set_prop_ascii (t_to_js x3791) "type"
                (vscode_FileType_to_js x3792)
        let (get_ctime : t -> float) =
          fun (x3793 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3793) "ctime")
        let (set_ctime : t -> float -> unit) =
          fun (x3794 : t) ->
            fun (x3795 : float) ->
              Ojs.set_prop_ascii (t_to_js x3794) "ctime"
                (Ojs.float_to_js x3795)
        let (get_mtime : t -> float) =
          fun (x3796 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3796) "mtime")
        let (set_mtime : t -> float -> unit) =
          fun (x3797 : t) ->
            fun (x3798 : float) ->
              Ojs.set_prop_ascii (t_to_js x3797) "mtime"
                (Ojs.float_to_js x3798)
        let (get_size : t -> float) =
          fun (x3799 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3799) "size")
        let (set_size : t -> float -> unit) =
          fun (x3800 : t) ->
            fun (x3801 : float) ->
              Ojs.set_prop_ascii (t_to_js x3800) "size"
                (Ojs.float_to_js x3801)
      end
    module FileSystemError =
      struct
        include struct include Error end
        let (fileNotFound : ?messageOrUri:vscode_Uri or_string -> unit -> t)
          =
          fun ?messageOrUri:(x3802 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3806 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3806 "FileNotFound") "apply"
                   [|x3806;((let x3803 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3802 with
                              | Some x3804 ->
                                  ignore
                                    (Ojs.call x3803 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3804)|])
                              | None -> ());
                             x3803))|])
        let (fileExists : ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3807 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3811 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3811 "FileExists") "apply"
                   [|x3811;((let x3808 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3807 with
                              | Some x3809 ->
                                  ignore
                                    (Ojs.call x3808 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3809)|])
                              | None -> ());
                             x3808))|])
        let (fileNotADirectory :
          ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3812 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3816 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3816 "FileNotADirectory")
                   "apply"
                   [|x3816;((let x3813 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3812 with
                              | Some x3814 ->
                                  ignore
                                    (Ojs.call x3813 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3814)|])
                              | None -> ());
                             x3813))|])
        let (fileIsADirectory :
          ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3817 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3821 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3821 "FileIsADirectory")
                   "apply"
                   [|x3821;((let x3818 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3817 with
                              | Some x3819 ->
                                  ignore
                                    (Ojs.call x3818 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3819)|])
                              | None -> ());
                             x3818))|])
        let (noPermissions : ?messageOrUri:vscode_Uri or_string -> unit -> t)
          =
          fun ?messageOrUri:(x3822 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3826 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3826 "NoPermissions") "apply"
                   [|x3826;((let x3823 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3822 with
                              | Some x3824 ->
                                  ignore
                                    (Ojs.call x3823 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3824)|])
                              | None -> ());
                             x3823))|])
        let (unavailable : ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3827 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3831 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3831 "Unavailable") "apply"
                   [|x3831;((let x3828 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3827 with
                              | Some x3829 ->
                                  ignore
                                    (Ojs.call x3828 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3829)|])
                              | None -> ());
                             x3828))|])
        let (create : ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3832 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "FileSystemError")
                   (let x3833 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x3832 with
                     | Some x3834 ->
                         ignore
                           (Ojs.call x3833 "push"
                              [|(or_string_to_js vscode_Uri_to_js x3834)|])
                     | None -> ());
                    x3833))
        let (get_code : t -> string) =
          fun (x3836 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3836) "code")
      end
    module FileChangeType =
      struct
        type t = vscode_FileChangeType
        let rec t_of_js : Ojs.t -> t =
          fun (x3838 : Ojs.t) -> vscode_FileChangeType_of_js x3838
        and t_to_js : t -> Ojs.t =
          fun (x3837 : vscode_FileChangeType) ->
            vscode_FileChangeType_to_js x3837
      end
    module FileChangeEvent =
      struct
        type t = vscode_FileChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3840 : Ojs.t) -> vscode_FileChangeEvent_of_js x3840
        and t_to_js : t -> Ojs.t =
          fun (x3839 : vscode_FileChangeEvent) ->
            vscode_FileChangeEvent_to_js x3839
        let (get_type : t -> vscode_FileChangeType) =
          fun (x3841 : t) ->
            vscode_FileChangeType_of_js
              (Ojs.get_prop_ascii (t_to_js x3841) "type")
        let (get_uri : t -> vscode_Uri) =
          fun (x3842 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3842) "uri")
      end
    module FileSystemProvider =
      struct
        type t = vscode_FileSystemProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x3844 : Ojs.t) -> vscode_FileSystemProvider_of_js x3844
        and t_to_js : t -> Ojs.t =
          fun (x3843 : vscode_FileSystemProvider) ->
            vscode_FileSystemProvider_to_js x3843
        let (get_onDidChangeFile :
          t -> vscode_FileChangeEvent list vscode_Event) =
          fun (x3845 : t) ->
            vscode_Event_of_js
              (fun (x3846 : Ojs.t) ->
                 Ojs.list_of_js vscode_FileChangeEvent_of_js x3846)
              (Ojs.get_prop_ascii (t_to_js x3845) "onDidChangeFile")
        let (watch :
          t ->
            uri:vscode_Uri ->
              options:anonymous_interface_26 -> vscode_Disposable)
          =
          fun (x3850 : t) ->
            fun ~uri:(x3848 : vscode_Uri) ->
              fun ~options:(x3849 : anonymous_interface_26) ->
                vscode_Disposable_of_js
                  (Ojs.call (t_to_js x3850) "watch"
                     [|(vscode_Uri_to_js x3848);(anonymous_interface_26_to_js
                                                   x3849)|])
        let (stat :
          t ->
            uri:vscode_Uri ->
              (vscode_FileStat, vscode_FileStat _Thenable) union2)
          =
          fun (x3852 : t) ->
            fun ~uri:(x3851 : vscode_Uri) ->
              union2_of_js vscode_FileStat_of_js
                (fun (x3854 : Ojs.t) ->
                   _Thenable_of_js vscode_FileStat_of_js x3854)
                (Ojs.call (t_to_js x3852) "stat" [|(vscode_Uri_to_js x3851)|])
        let (readDirectory :
          t ->
            uri:vscode_Uri ->
              ((string * vscode_FileType) list _Thenable,
                (string * vscode_FileType)) or_array)
          =
          fun (x3857 : t) ->
            fun ~uri:(x3856 : vscode_Uri) ->
              or_array_of_js
                (fun (x3858 : Ojs.t) ->
                   _Thenable_of_js
                     (fun (x3859 : Ojs.t) ->
                        Ojs.list_of_js
                          (fun (x3860 : Ojs.t) ->
                             let x3861 = x3860 in
                             ((Ojs.string_of_js (Ojs.array_get x3861 0)),
                               (vscode_FileType_of_js (Ojs.array_get x3861 1))))
                          x3859) x3858)
                (fun (x3862 : Ojs.t) ->
                   let x3863 = x3862 in
                   ((Ojs.string_of_js (Ojs.array_get x3863 0)),
                     (vscode_FileType_of_js (Ojs.array_get x3863 1))))
                (Ojs.call (t_to_js x3857) "readDirectory"
                   [|(vscode_Uri_to_js x3856)|])
        let (createDirectory :
          t -> uri:vscode_Uri -> (unit, unit _Thenable) union2) =
          fun (x3865 : t) ->
            fun ~uri:(x3864 : vscode_Uri) ->
              union2_of_js Ojs.unit_of_js
                (fun (x3867 : Ojs.t) -> _Thenable_of_js Ojs.unit_of_js x3867)
                (Ojs.call (t_to_js x3865) "createDirectory"
                   [|(vscode_Uri_to_js x3864)|])
        let (readFile :
          t ->
            uri:vscode_Uri -> (Uint8Array.t, Uint8Array.t _Thenable) union2)
          =
          fun (x3870 : t) ->
            fun ~uri:(x3869 : vscode_Uri) ->
              union2_of_js Uint8Array.t_of_js
                (fun (x3872 : Ojs.t) ->
                   _Thenable_of_js Uint8Array.t_of_js x3872)
                (Ojs.call (t_to_js x3870) "readFile"
                   [|(vscode_Uri_to_js x3869)|])
        let (writeFile :
          t ->
            uri:vscode_Uri ->
              content:Uint8Array.t ->
                options:anonymous_interface_3 ->
                  (unit, unit _Thenable) union2)
          =
          fun (x3877 : t) ->
            fun ~uri:(x3874 : vscode_Uri) ->
              fun ~content:(x3875 : Uint8Array.t) ->
                fun ~options:(x3876 : anonymous_interface_3) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x3879 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x3879)
                    (Ojs.call (t_to_js x3877) "writeFile"
                       [|(vscode_Uri_to_js x3874);(Uint8Array.t_to_js x3875);(
                         anonymous_interface_3_to_js x3876)|])
        let (delete :
          t ->
            uri:vscode_Uri ->
              options:anonymous_interface_25 -> (unit, unit _Thenable) union2)
          =
          fun (x3883 : t) ->
            fun ~uri:(x3881 : vscode_Uri) ->
              fun ~options:(x3882 : anonymous_interface_25) ->
                union2_of_js Ojs.unit_of_js
                  (fun (x3885 : Ojs.t) ->
                     _Thenable_of_js Ojs.unit_of_js x3885)
                  (Ojs.call (t_to_js x3883) "delete"
                     [|(vscode_Uri_to_js x3881);(anonymous_interface_25_to_js
                                                   x3882)|])
        let (rename :
          t ->
            oldUri:vscode_Uri ->
              newUri:vscode_Uri ->
                options:anonymous_interface_21 ->
                  (unit, unit _Thenable) union2)
          =
          fun (x3890 : t) ->
            fun ~oldUri:(x3887 : vscode_Uri) ->
              fun ~newUri:(x3888 : vscode_Uri) ->
                fun ~options:(x3889 : anonymous_interface_21) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x3892 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x3892)
                    (Ojs.call (t_to_js x3890) "rename"
                       [|(vscode_Uri_to_js x3887);(vscode_Uri_to_js x3888);(
                         anonymous_interface_21_to_js x3889)|])
        let (copy :
          t ->
            source:vscode_Uri ->
              destination:vscode_Uri ->
                options:anonymous_interface_21 ->
                  (unit, unit _Thenable) union2)
          =
          fun (x3897 : t) ->
            fun ~source:(x3894 : vscode_Uri) ->
              fun ~destination:(x3895 : vscode_Uri) ->
                fun ~options:(x3896 : anonymous_interface_21) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x3899 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x3899)
                    (Ojs.call (t_to_js x3897) "copy"
                       [|(vscode_Uri_to_js x3894);(vscode_Uri_to_js x3895);(
                         anonymous_interface_21_to_js x3896)|])
      end
    module FileSystem =
      struct
        type t = vscode_FileSystem
        let rec t_of_js : Ojs.t -> t =
          fun (x3902 : Ojs.t) -> vscode_FileSystem_of_js x3902
        and t_to_js : t -> Ojs.t =
          fun (x3901 : vscode_FileSystem) -> vscode_FileSystem_to_js x3901
        let (stat : t -> uri:vscode_Uri -> vscode_FileStat _Thenable) =
          fun (x3904 : t) ->
            fun ~uri:(x3903 : vscode_Uri) ->
              _Thenable_of_js vscode_FileStat_of_js
                (Ojs.call (t_to_js x3904) "stat" [|(vscode_Uri_to_js x3903)|])
        let (readDirectory :
          t -> uri:vscode_Uri -> (string * vscode_FileType) list _Thenable) =
          fun (x3907 : t) ->
            fun ~uri:(x3906 : vscode_Uri) ->
              _Thenable_of_js
                (fun (x3908 : Ojs.t) ->
                   Ojs.list_of_js
                     (fun (x3909 : Ojs.t) ->
                        let x3910 = x3909 in
                        ((Ojs.string_of_js (Ojs.array_get x3910 0)),
                          (vscode_FileType_of_js (Ojs.array_get x3910 1))))
                     x3908)
                (Ojs.call (t_to_js x3907) "readDirectory"
                   [|(vscode_Uri_to_js x3906)|])
        let (createDirectory : t -> uri:vscode_Uri -> unit _Thenable) =
          fun (x3912 : t) ->
            fun ~uri:(x3911 : vscode_Uri) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x3912) "createDirectory"
                   [|(vscode_Uri_to_js x3911)|])
        let (readFile : t -> uri:vscode_Uri -> Uint8Array.t _Thenable) =
          fun (x3915 : t) ->
            fun ~uri:(x3914 : vscode_Uri) ->
              _Thenable_of_js Uint8Array.t_of_js
                (Ojs.call (t_to_js x3915) "readFile"
                   [|(vscode_Uri_to_js x3914)|])
        let (writeFile :
          t -> uri:vscode_Uri -> content:Uint8Array.t -> unit _Thenable) =
          fun (x3919 : t) ->
            fun ~uri:(x3917 : vscode_Uri) ->
              fun ~content:(x3918 : Uint8Array.t) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x3919) "writeFile"
                     [|(vscode_Uri_to_js x3917);(Uint8Array.t_to_js x3918)|])
        let (delete :
          t ->
            uri:vscode_Uri ->
              ?options:anonymous_interface_28 -> unit -> unit _Thenable)
          =
          fun (x3925 : t) ->
            fun ~uri:(x3921 : vscode_Uri) ->
              fun ?options:(x3922 : anonymous_interface_28 option) ->
                fun () ->
                  _Thenable_of_js Ojs.unit_of_js
                    (let x3926 = t_to_js x3925 in
                     Ojs.call (Ojs.get_prop_ascii x3926 "delete") "apply"
                       [|x3926;((let x3923 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x3923 "push"
                                      [|(vscode_Uri_to_js x3921)|]);
                                 (match x3922 with
                                  | Some x3924 ->
                                      ignore
                                        (Ojs.call x3923 "push"
                                           [|(anonymous_interface_28_to_js
                                                x3924)|])
                                  | None -> ());
                                 x3923))|])
        let (rename :
          t ->
            source:vscode_Uri ->
              target:vscode_Uri ->
                ?options:anonymous_interface_21 -> unit -> unit _Thenable)
          =
          fun (x3933 : t) ->
            fun ~source:(x3928 : vscode_Uri) ->
              fun ~target:(x3929 : vscode_Uri) ->
                fun ?options:(x3930 : anonymous_interface_21 option) ->
                  fun () ->
                    _Thenable_of_js Ojs.unit_of_js
                      (let x3934 = t_to_js x3933 in
                       Ojs.call (Ojs.get_prop_ascii x3934 "rename") "apply"
                         [|x3934;((let x3931 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x3931 "push"
                                        [|(vscode_Uri_to_js x3928)|]);
                                   ignore
                                     (Ojs.call x3931 "push"
                                        [|(vscode_Uri_to_js x3929)|]);
                                   (match x3930 with
                                    | Some x3932 ->
                                        ignore
                                          (Ojs.call x3931 "push"
                                             [|(anonymous_interface_21_to_js
                                                  x3932)|])
                                    | None -> ());
                                   x3931))|])
        let (copy :
          t ->
            source:vscode_Uri ->
              target:vscode_Uri ->
                ?options:anonymous_interface_21 -> unit -> unit _Thenable)
          =
          fun (x3941 : t) ->
            fun ~source:(x3936 : vscode_Uri) ->
              fun ~target:(x3937 : vscode_Uri) ->
                fun ?options:(x3938 : anonymous_interface_21 option) ->
                  fun () ->
                    _Thenable_of_js Ojs.unit_of_js
                      (let x3942 = t_to_js x3941 in
                       Ojs.call (Ojs.get_prop_ascii x3942 "copy") "apply"
                         [|x3942;((let x3939 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x3939 "push"
                                        [|(vscode_Uri_to_js x3936)|]);
                                   ignore
                                     (Ojs.call x3939 "push"
                                        [|(vscode_Uri_to_js x3937)|]);
                                   (match x3938 with
                                    | Some x3940 ->
                                        ignore
                                          (Ojs.call x3939 "push"
                                             [|(anonymous_interface_21_to_js
                                                  x3940)|])
                                    | None -> ());
                                   x3939))|])
        let (isWritableFileSystem : t -> scheme:string -> bool or_undefined)
          =
          fun (x3945 : t) ->
            fun ~scheme:(x3944 : string) ->
              or_undefined_of_js Ojs.bool_of_js
                (Ojs.call (t_to_js x3945) "isWritableFileSystem"
                   [|(Ojs.string_to_js x3944)|])
      end
    module WebviewPortMapping =
      struct
        type t = vscode_WebviewPortMapping
        let rec t_of_js : Ojs.t -> t =
          fun (x3948 : Ojs.t) -> vscode_WebviewPortMapping_of_js x3948
        and t_to_js : t -> Ojs.t =
          fun (x3947 : vscode_WebviewPortMapping) ->
            vscode_WebviewPortMapping_to_js x3947
        let (get_webviewPort : t -> float) =
          fun (x3949 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x3949) "webviewPort")
        let (get_extensionHostPort : t -> float) =
          fun (x3950 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x3950) "extensionHostPort")
      end
    module WebviewOptions =
      struct
        type t = vscode_WebviewOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3952 : Ojs.t) -> vscode_WebviewOptions_of_js x3952
        and t_to_js : t -> Ojs.t =
          fun (x3951 : vscode_WebviewOptions) ->
            vscode_WebviewOptions_to_js x3951
        let (get_enableScripts : t -> bool) =
          fun (x3953 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3953) "enableScripts")
        let (get_enableCommandUris : t -> bool) =
          fun (x3954 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3954) "enableCommandUris")
        let (get_localResourceRoots : t -> vscode_Uri list) =
          fun (x3955 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3955) "localResourceRoots")
        let (get_portMapping : t -> vscode_WebviewPortMapping list) =
          fun (x3957 : t) ->
            Ojs.list_of_js vscode_WebviewPortMapping_of_js
              (Ojs.get_prop_ascii (t_to_js x3957) "portMapping")
      end
    module Webview =
      struct
        type t = vscode_Webview
        let rec t_of_js : Ojs.t -> t =
          fun (x3960 : Ojs.t) -> vscode_Webview_of_js x3960
        and t_to_js : t -> Ojs.t =
          fun (x3959 : vscode_Webview) -> vscode_Webview_to_js x3959
        let (get_options : t -> vscode_WebviewOptions) =
          fun (x3961 : t) ->
            vscode_WebviewOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3961) "options")
        let (set_options : t -> vscode_WebviewOptions -> unit) =
          fun (x3962 : t) ->
            fun (x3963 : vscode_WebviewOptions) ->
              Ojs.set_prop_ascii (t_to_js x3962) "options"
                (vscode_WebviewOptions_to_js x3963)
        let (get_html : t -> string) =
          fun (x3964 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3964) "html")
        let (set_html : t -> string -> unit) =
          fun (x3965 : t) ->
            fun (x3966 : string) ->
              Ojs.set_prop_ascii (t_to_js x3965) "html"
                (Ojs.string_to_js x3966)
        let (get_onDidReceiveMessage : t -> any vscode_Event) =
          fun (x3967 : t) ->
            vscode_Event_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x3967) "onDidReceiveMessage")
        let (postMessage : t -> message:any -> bool _Thenable) =
          fun (x3970 : t) ->
            fun ~message:(x3969 : any) ->
              _Thenable_of_js Ojs.bool_of_js
                (Ojs.call (t_to_js x3970) "postMessage" [|(any_to_js x3969)|])
        let (asWebviewUri : t -> localResource:vscode_Uri -> vscode_Uri) =
          fun (x3973 : t) ->
            fun ~localResource:(x3972 : vscode_Uri) ->
              vscode_Uri_of_js
                (Ojs.call (t_to_js x3973) "asWebviewUri"
                   [|(vscode_Uri_to_js x3972)|])
        let (get_cspSource : t -> string) =
          fun (x3974 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3974) "cspSource")
      end
    module WebviewPanelOptions =
      struct
        type t = vscode_WebviewPanelOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3976 : Ojs.t) -> vscode_WebviewPanelOptions_of_js x3976
        and t_to_js : t -> Ojs.t =
          fun (x3975 : vscode_WebviewPanelOptions) ->
            vscode_WebviewPanelOptions_to_js x3975
        let (get_enableFindWidget : t -> bool) =
          fun (x3977 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3977) "enableFindWidget")
        let (get_retainContextWhenHidden : t -> bool) =
          fun (x3978 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3978) "retainContextWhenHidden")
      end
    module WebviewPanel =
      struct
        type t = vscode_WebviewPanel
        let rec t_of_js : Ojs.t -> t =
          fun (x3980 : Ojs.t) -> vscode_WebviewPanel_of_js x3980
        and t_to_js : t -> Ojs.t =
          fun (x3979 : vscode_WebviewPanel) ->
            vscode_WebviewPanel_to_js x3979
        let (get_viewType : t -> string) =
          fun (x3981 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3981) "viewType")
        let (get_title : t -> string) =
          fun (x3982 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3982) "title")
        let (set_title : t -> string -> unit) =
          fun (x3983 : t) ->
            fun (x3984 : string) ->
              Ojs.set_prop_ascii (t_to_js x3983) "title"
                (Ojs.string_to_js x3984)
        let (get_iconPath : t -> (vscode_Uri, anonymous_interface_14) union2)
          =
          fun (x3985 : t) ->
            union2_of_js vscode_Uri_of_js anonymous_interface_14_of_js
              (Ojs.get_prop_ascii (t_to_js x3985) "iconPath")
        let (set_iconPath :
          t -> (vscode_Uri, anonymous_interface_14) union2 -> unit) =
          fun (x3988 : t) ->
            fun (x3989 : (vscode_Uri, anonymous_interface_14) union2) ->
              Ojs.set_prop_ascii (t_to_js x3988) "iconPath"
                (union2_to_js vscode_Uri_to_js anonymous_interface_14_to_js
                   x3989)
        let (get_webview : t -> vscode_Webview) =
          fun (x3992 : t) ->
            vscode_Webview_of_js
              (Ojs.get_prop_ascii (t_to_js x3992) "webview")
        let (get_options : t -> vscode_WebviewPanelOptions) =
          fun (x3993 : t) ->
            vscode_WebviewPanelOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3993) "options")
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x3994 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x3994) "viewColumn")
        let (get_active : t -> bool) =
          fun (x3995 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3995) "active")
        let (get_visible : t -> bool) =
          fun (x3996 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3996) "visible")
        let (get_onDidChangeViewState :
          t -> vscode_WebviewPanelOnDidChangeViewStateEvent vscode_Event) =
          fun (x3997 : t) ->
            vscode_Event_of_js
              vscode_WebviewPanelOnDidChangeViewStateEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x3997) "onDidChangeViewState")
        let (get_onDidDispose : t -> unit vscode_Event) =
          fun (x3999 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x3999) "onDidDispose")
        let (reveal :
          t ->
            ?viewColumn:vscode_ViewColumn ->
              ?preserveFocus:bool -> unit -> unit)
          =
          fun (x4006 : t) ->
            fun ?viewColumn:(x4001 : vscode_ViewColumn option) ->
              fun ?preserveFocus:(x4002 : bool option) ->
                fun () ->
                  ignore
                    (let x4007 = t_to_js x4006 in
                     Ojs.call (Ojs.get_prop_ascii x4007 "reveal") "apply"
                       [|x4007;((let x4003 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x4001 with
                                  | Some x4005 ->
                                      ignore
                                        (Ojs.call x4003 "push"
                                           [|(vscode_ViewColumn_to_js x4005)|])
                                  | None -> ());
                                 (match x4002 with
                                  | Some x4004 ->
                                      ignore
                                        (Ojs.call x4003 "push"
                                           [|(Ojs.bool_to_js x4004)|])
                                  | None -> ());
                                 x4003))|])
        let (dispose : t -> any) =
          fun (x4008 : t) ->
            any_of_js (Ojs.call (t_to_js x4008) "dispose" [||])
      end
    module WebviewPanelOnDidChangeViewStateEvent =
      struct
        type t = vscode_WebviewPanelOnDidChangeViewStateEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x4010 : Ojs.t) ->
            vscode_WebviewPanelOnDidChangeViewStateEvent_of_js x4010
        and t_to_js : t -> Ojs.t =
          fun (x4009 : vscode_WebviewPanelOnDidChangeViewStateEvent) ->
            vscode_WebviewPanelOnDidChangeViewStateEvent_to_js x4009
        let (get_webviewPanel : t -> vscode_WebviewPanel) =
          fun (x4011 : t) ->
            vscode_WebviewPanel_of_js
              (Ojs.get_prop_ascii (t_to_js x4011) "webviewPanel")
      end
    module WebviewPanelSerializer =
      struct
        type 'T t = 'T vscode_WebviewPanelSerializer
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4014 : Ojs.t) ->
              vscode_WebviewPanelSerializer_of_js __T_of_js x4014
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4012 : __T vscode_WebviewPanelSerializer) ->
              vscode_WebviewPanelSerializer_to_js __T_to_js x4012
        let (deserializeWebviewPanel :
          'T t ->
            webviewPanel:vscode_WebviewPanel -> state:'T -> unit _Thenable)
          =
          fun (x4018 : 'T t) ->
            fun ~webviewPanel:(x4016 : vscode_WebviewPanel) ->
              fun ~state:(x4017 : 'T) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js Obj.magic x4018)
                     "deserializeWebviewPanel"
                     [|(vscode_WebviewPanel_to_js x4016);(Obj.magic x4017)|])
      end
    module WebviewView =
      struct
        type t = vscode_WebviewView
        let rec t_of_js : Ojs.t -> t =
          fun (x4022 : Ojs.t) -> vscode_WebviewView_of_js x4022
        and t_to_js : t -> Ojs.t =
          fun (x4021 : vscode_WebviewView) -> vscode_WebviewView_to_js x4021
        let (get_viewType : t -> string) =
          fun (x4023 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4023) "viewType")
        let (get_webview : t -> vscode_Webview) =
          fun (x4024 : t) ->
            vscode_Webview_of_js
              (Ojs.get_prop_ascii (t_to_js x4024) "webview")
        let (get_title : t -> string) =
          fun (x4025 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4025) "title")
        let (set_title : t -> string -> unit) =
          fun (x4026 : t) ->
            fun (x4027 : string) ->
              Ojs.set_prop_ascii (t_to_js x4026) "title"
                (Ojs.string_to_js x4027)
        let (get_description : t -> string) =
          fun (x4028 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4028) "description")
        let (set_description : t -> string -> unit) =
          fun (x4029 : t) ->
            fun (x4030 : string) ->
              Ojs.set_prop_ascii (t_to_js x4029) "description"
                (Ojs.string_to_js x4030)
        let (get_onDidDispose : t -> unit vscode_Event) =
          fun (x4031 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4031) "onDidDispose")
        let (get_visible : t -> bool) =
          fun (x4033 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4033) "visible")
        let (get_onDidChangeVisibility : t -> unit vscode_Event) =
          fun (x4034 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4034) "onDidChangeVisibility")
        let (show : t -> ?preserveFocus:bool -> unit -> unit) =
          fun (x4039 : t) ->
            fun ?preserveFocus:(x4036 : bool option) ->
              fun () ->
                ignore
                  (let x4040 = t_to_js x4039 in
                   Ojs.call (Ojs.get_prop_ascii x4040 "show") "apply"
                     [|x4040;((let x4037 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4036 with
                                | Some x4038 ->
                                    ignore
                                      (Ojs.call x4037 "push"
                                         [|(Ojs.bool_to_js x4038)|])
                                | None -> ());
                               x4037))|])
      end
    module WebviewViewResolveContext =
      struct
        type 'T t = 'T vscode_WebviewViewResolveContext
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4043 : Ojs.t) ->
              vscode_WebviewViewResolveContext_of_js __T_of_js x4043
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4041 : __T vscode_WebviewViewResolveContext) ->
              vscode_WebviewViewResolveContext_to_js __T_to_js x4041
        let (get_state : 'T t -> 'T or_undefined) =
          fun (x4045 : 'T t) ->
            or_undefined_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4045) "state")
      end
    module WebviewViewProvider =
      struct
        type t = vscode_WebviewViewProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x4049 : Ojs.t) -> vscode_WebviewViewProvider_of_js x4049
        and t_to_js : t -> Ojs.t =
          fun (x4048 : vscode_WebviewViewProvider) ->
            vscode_WebviewViewProvider_to_js x4048
        let (resolveWebviewView :
          t ->
            webviewView:vscode_WebviewView ->
              context:unknown vscode_WebviewViewResolveContext ->
                token:vscode_CancellationToken ->
                  (unit, unit _Thenable) union2)
          =
          fun (x4054 : t) ->
            fun ~webviewView:(x4050 : vscode_WebviewView) ->
              fun ~context:(x4051 : unknown vscode_WebviewViewResolveContext)
                ->
                fun ~token:(x4053 : vscode_CancellationToken) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x4056 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x4056)
                    (Ojs.call (t_to_js x4054) "resolveWebviewView"
                       [|(vscode_WebviewView_to_js x4050);(vscode_WebviewViewResolveContext_to_js
                                                             unknown_to_js
                                                             x4051);(
                         vscode_CancellationToken_to_js x4053)|])
      end
    module CustomTextEditorProvider =
      struct
        type t = vscode_CustomTextEditorProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x4059 : Ojs.t) -> vscode_CustomTextEditorProvider_of_js x4059
        and t_to_js : t -> Ojs.t =
          fun (x4058 : vscode_CustomTextEditorProvider) ->
            vscode_CustomTextEditorProvider_to_js x4058
        let (resolveCustomTextEditor :
          t ->
            document:vscode_TextDocument ->
              webviewPanel:vscode_WebviewPanel ->
                token:vscode_CancellationToken ->
                  (unit, unit _Thenable) union2)
          =
          fun (x4063 : t) ->
            fun ~document:(x4060 : vscode_TextDocument) ->
              fun ~webviewPanel:(x4061 : vscode_WebviewPanel) ->
                fun ~token:(x4062 : vscode_CancellationToken) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x4065 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x4065)
                    (Ojs.call (t_to_js x4063) "resolveCustomTextEditor"
                       [|(vscode_TextDocument_to_js x4060);(vscode_WebviewPanel_to_js
                                                              x4061);(
                         vscode_CancellationToken_to_js x4062)|])
      end
    module CustomDocument =
      struct
        type t = vscode_CustomDocument
        let rec t_of_js : Ojs.t -> t =
          fun (x4068 : Ojs.t) -> vscode_CustomDocument_of_js x4068
        and t_to_js : t -> Ojs.t =
          fun (x4067 : vscode_CustomDocument) ->
            vscode_CustomDocument_to_js x4067
        let (get_uri : t -> vscode_Uri) =
          fun (x4069 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x4069) "uri")
        let (dispose : t -> unit) =
          fun (x4070 : t) -> ignore (Ojs.call (t_to_js x4070) "dispose" [||])
      end
    module CustomDocumentEditEvent =
      struct
        type 'T t = 'T vscode_CustomDocumentEditEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4073 : Ojs.t) ->
              vscode_CustomDocumentEditEvent_of_js __T_of_js x4073
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4071 : __T vscode_CustomDocumentEditEvent) ->
              vscode_CustomDocumentEditEvent_to_js __T_to_js x4071
        let (get_document : 'T t -> 'T) =
          fun (x4075 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4075) "document")
        let (undo : 'T t -> (unit, unit _Thenable) union2) =
          fun (x4077 : 'T t) ->
            union2_of_js Ojs.unit_of_js
              (fun (x4080 : Ojs.t) -> _Thenable_of_js Ojs.unit_of_js x4080)
              (Ojs.call (t_to_js Obj.magic x4077) "undo" [||])
        let (redo : 'T t -> (unit, unit _Thenable) union2) =
          fun (x4082 : 'T t) ->
            union2_of_js Ojs.unit_of_js
              (fun (x4085 : Ojs.t) -> _Thenable_of_js Ojs.unit_of_js x4085)
              (Ojs.call (t_to_js Obj.magic x4082) "redo" [||])
        let (get_label : 'T t -> string) =
          fun (x4087 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4087) "label")
      end
    module CustomDocumentContentChangeEvent =
      struct
        type 'T t = 'T vscode_CustomDocumentContentChangeEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4091 : Ojs.t) ->
              vscode_CustomDocumentContentChangeEvent_of_js __T_of_js x4091
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4089 : __T vscode_CustomDocumentContentChangeEvent) ->
              vscode_CustomDocumentContentChangeEvent_to_js __T_to_js x4089
        let (get_document : 'T t -> 'T) =
          fun (x4093 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4093) "document")
      end
    module CustomDocumentBackup =
      struct
        type t = vscode_CustomDocumentBackup
        let rec t_of_js : Ojs.t -> t =
          fun (x4096 : Ojs.t) -> vscode_CustomDocumentBackup_of_js x4096
        and t_to_js : t -> Ojs.t =
          fun (x4095 : vscode_CustomDocumentBackup) ->
            vscode_CustomDocumentBackup_to_js x4095
        let (get_id : t -> string) =
          fun (x4097 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4097) "id")
        let (delete : t -> unit) =
          fun (x4098 : t) -> ignore (Ojs.call (t_to_js x4098) "delete" [||])
      end
    module CustomDocumentBackupContext =
      struct
        type t = vscode_CustomDocumentBackupContext
        let rec t_of_js : Ojs.t -> t =
          fun (x4100 : Ojs.t) ->
            vscode_CustomDocumentBackupContext_of_js x4100
        and t_to_js : t -> Ojs.t =
          fun (x4099 : vscode_CustomDocumentBackupContext) ->
            vscode_CustomDocumentBackupContext_to_js x4099
        let (get_destination : t -> vscode_Uri) =
          fun (x4101 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x4101) "destination")
      end
    module CustomDocumentOpenContext =
      struct
        type t = vscode_CustomDocumentOpenContext
        let rec t_of_js : Ojs.t -> t =
          fun (x4103 : Ojs.t) -> vscode_CustomDocumentOpenContext_of_js x4103
        and t_to_js : t -> Ojs.t =
          fun (x4102 : vscode_CustomDocumentOpenContext) ->
            vscode_CustomDocumentOpenContext_to_js x4102
        let (get_backupId : t -> string) =
          fun (x4104 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4104) "backupId")
        let (get_untitledDocumentData : t -> Uint8Array.t) =
          fun (x4105 : t) ->
            Uint8Array.t_of_js
              (Ojs.get_prop_ascii (t_to_js x4105) "untitledDocumentData")
      end
    module CustomReadonlyEditorProvider =
      struct
        type 'T t = 'T vscode_CustomReadonlyEditorProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4108 : Ojs.t) ->
              vscode_CustomReadonlyEditorProvider_of_js __T_of_js x4108
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4106 : __T vscode_CustomReadonlyEditorProvider) ->
              vscode_CustomReadonlyEditorProvider_to_js __T_to_js x4106
        let (openCustomDocument :
          'T t ->
            uri:vscode_Uri ->
              openContext:vscode_CustomDocumentOpenContext ->
                token:vscode_CancellationToken -> ('T, 'T _Thenable) union2)
          =
          fun (x4113 : 'T t) ->
            fun ~uri:(x4110 : vscode_Uri) ->
              fun ~openContext:(x4111 : vscode_CustomDocumentOpenContext) ->
                fun ~token:(x4112 : vscode_CancellationToken) ->
                  union2_of_js Obj.magic
                    (fun (x4116 : Ojs.t) -> _Thenable_of_js Obj.magic x4116)
                    (Ojs.call (t_to_js Obj.magic x4113) "openCustomDocument"
                       [|(vscode_Uri_to_js x4110);(vscode_CustomDocumentOpenContext_to_js
                                                     x4111);(vscode_CancellationToken_to_js
                                                               x4112)|])
        let (resolveCustomEditor :
          'T t ->
            document:'T ->
              webviewPanel:vscode_WebviewPanel ->
                token:vscode_CancellationToken ->
                  (unit, unit _Thenable) union2)
          =
          fun (x4121 : 'T t) ->
            fun ~document:(x4118 : 'T) ->
              fun ~webviewPanel:(x4119 : vscode_WebviewPanel) ->
                fun ~token:(x4120 : vscode_CancellationToken) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x4124 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x4124)
                    (Ojs.call (t_to_js Obj.magic x4121) "resolveCustomEditor"
                       [|(Obj.magic x4118);(vscode_WebviewPanel_to_js x4119);(
                         vscode_CancellationToken_to_js x4120)|])
      end
    module CustomEditorProvider =
      struct
        include struct include CustomReadonlyEditorProvider end
        let (get_onDidChangeCustomDocument :
          'T t ->
            ('T vscode_CustomDocumentContentChangeEvent vscode_Event,
              'T vscode_CustomDocumentEditEvent vscode_Event) union2)
          =
          fun (x4126 : 'T t) ->
            union2_of_js
              (fun (x4128 : Ojs.t) ->
                 vscode_Event_of_js
                   (fun (x4129 : Ojs.t) ->
                      vscode_CustomDocumentContentChangeEvent_of_js Obj.magic
                        x4129) x4128)
              (fun (x4131 : Ojs.t) ->
                 vscode_Event_of_js
                   (fun (x4132 : Ojs.t) ->
                      vscode_CustomDocumentEditEvent_of_js Obj.magic x4132)
                   x4131)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4126)
                 "onDidChangeCustomDocument")
        let (saveCustomDocument :
          'T t ->
            document:'T ->
              cancellation:vscode_CancellationToken -> unit _Thenable)
          =
          fun (x4136 : 'T t) ->
            fun ~document:(x4134 : 'T) ->
              fun ~cancellation:(x4135 : vscode_CancellationToken) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js Obj.magic x4136) "saveCustomDocument"
                     [|(Obj.magic x4134);(vscode_CancellationToken_to_js
                                            x4135)|])
        let (saveCustomDocumentAs :
          'T t ->
            document:'T ->
              destination:vscode_Uri ->
                cancellation:vscode_CancellationToken -> unit _Thenable)
          =
          fun (x4142 : 'T t) ->
            fun ~document:(x4139 : 'T) ->
              fun ~destination:(x4140 : vscode_Uri) ->
                fun ~cancellation:(x4141 : vscode_CancellationToken) ->
                  _Thenable_of_js Ojs.unit_of_js
                    (Ojs.call (t_to_js Obj.magic x4142)
                       "saveCustomDocumentAs"
                       [|(Obj.magic x4139);(vscode_Uri_to_js x4140);(
                         vscode_CancellationToken_to_js x4141)|])
        let (revertCustomDocument :
          'T t ->
            document:'T ->
              cancellation:vscode_CancellationToken -> unit _Thenable)
          =
          fun (x4147 : 'T t) ->
            fun ~document:(x4145 : 'T) ->
              fun ~cancellation:(x4146 : vscode_CancellationToken) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js Obj.magic x4147) "revertCustomDocument"
                     [|(Obj.magic x4145);(vscode_CancellationToken_to_js
                                            x4146)|])
        let (backupCustomDocument :
          'T t ->
            document:'T ->
              context:vscode_CustomDocumentBackupContext ->
                cancellation:vscode_CancellationToken ->
                  vscode_CustomDocumentBackup _Thenable)
          =
          fun (x4153 : 'T t) ->
            fun ~document:(x4150 : 'T) ->
              fun ~context:(x4151 : vscode_CustomDocumentBackupContext) ->
                fun ~cancellation:(x4152 : vscode_CancellationToken) ->
                  _Thenable_of_js vscode_CustomDocumentBackup_of_js
                    (Ojs.call (t_to_js Obj.magic x4153)
                       "backupCustomDocument"
                       [|(Obj.magic x4150);(vscode_CustomDocumentBackupContext_to_js
                                              x4151);(vscode_CancellationToken_to_js
                                                        x4152)|])
        include struct include CustomReadonlyEditorProvider end
      end
    module Clipboard =
      struct
        type t = vscode_Clipboard
        let rec t_of_js : Ojs.t -> t =
          fun (x4157 : Ojs.t) -> vscode_Clipboard_of_js x4157
        and t_to_js : t -> Ojs.t =
          fun (x4156 : vscode_Clipboard) -> vscode_Clipboard_to_js x4156
        let (readText : t -> string _Thenable) =
          fun (x4158 : t) ->
            _Thenable_of_js Ojs.string_of_js
              (Ojs.call (t_to_js x4158) "readText" [||])
        let (writeText : t -> value:string -> unit _Thenable) =
          fun (x4161 : t) ->
            fun ~value:(x4160 : string) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x4161) "writeText"
                   [|(Ojs.string_to_js x4160)|])
      end
    module UIKind =
      struct
        type t = vscode_UIKind
        let rec t_of_js : Ojs.t -> t =
          fun (x4164 : Ojs.t) -> vscode_UIKind_of_js x4164
        and t_to_js : t -> Ojs.t =
          fun (x4163 : vscode_UIKind) -> vscode_UIKind_to_js x4163
      end
    module Env =
      struct
        let (appName : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "appName")
        let (appRoot : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "appRoot")
        let (uriScheme : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "uriScheme")
        let (language : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "language")
        let (clipboard : vscode_Clipboard) =
          vscode_Clipboard_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "clipboard")
        let (machineId : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "machineId")
        let (sessionId : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "sessionId")
        let (isNewAppInstall : bool) =
          Ojs.bool_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "isNewAppInstall")
        let (isTelemetryEnabled : bool) =
          Ojs.bool_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "isTelemetryEnabled")
        let (onDidChangeTelemetryEnabled : bool vscode_Event) =
          vscode_Event_of_js Ojs.bool_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "onDidChangeTelemetryEnabled")
        let (remoteName : string or_undefined) =
          or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "remoteName")
        let (shell : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "shell")
        let (uiKind : vscode_UIKind) =
          vscode_UIKind_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "uiKind")
        let (openExternal : target:vscode_Uri -> bool _Thenable) =
          fun ~target:(x4167 : vscode_Uri) ->
            _Thenable_of_js Ojs.bool_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "env") "openExternal" [|(vscode_Uri_to_js x4167)|])
        let (asExternalUri : target:vscode_Uri -> vscode_Uri _Thenable) =
          fun ~target:(x4169 : vscode_Uri) ->
            _Thenable_of_js vscode_Uri_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "env") "asExternalUri" [|(vscode_Uri_to_js x4169)|])
      end
    module Commands =
      struct
        let (registerCommand :
          command:string ->
            callback:(args:any list -> any) ->
              ?thisArg:any -> unit -> vscode_Disposable)
          =
          fun ~command:(x4171 : string) ->
            fun ~callback:(x4172 : args:any list -> any) ->
              fun ?thisArg:(x4173 : any option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4178 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                     Ojs.call (Ojs.get_prop_ascii x4178 "registerCommand")
                       "apply"
                       [|x4178;((let x4174 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4174 "push"
                                      [|(Ojs.string_to_js x4171)|]);
                                 ignore
                                   (Ojs.call x4174 "push"
                                      [|(Ojs.fun_to_js_args
                                           (fun (x4176 : _) ->
                                              any_to_js
                                                (x4172
                                                   ~args:(Ojs.list_of_js_from
                                                            any_of_js x4176 0))))|]);
                                 (match x4173 with
                                  | Some x4175 ->
                                      ignore
                                        (Ojs.call x4174 "push"
                                           [|(any_to_js x4175)|])
                                  | None -> ());
                                 x4174))|])
        let (registerTextEditorCommand :
          command:string ->
            callback:(textEditor:vscode_TextEditor ->
                        edit:vscode_TextEditorEdit -> args:any list -> unit)
              -> ?thisArg:any -> unit -> vscode_Disposable)
          =
          fun ~command:(x4179 : string) ->
            fun
              ~callback:(x4180 :
                          textEditor:vscode_TextEditor ->
                            edit:vscode_TextEditorEdit ->
                              args:any list -> unit)
              ->
              fun ?thisArg:(x4181 : any option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4186 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                     Ojs.call
                       (Ojs.get_prop_ascii x4186 "registerTextEditorCommand")
                       "apply"
                       [|x4186;((let x4182 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4182 "push"
                                      [|(Ojs.string_to_js x4179)|]);
                                 ignore
                                   (Ojs.call x4182 "push"
                                      [|(Ojs.fun_to_js_args
                                           (fun (x4184 : _) ->
                                              x4180
                                                ~textEditor:(vscode_TextEditor_of_js
                                                               (Ojs.array_get
                                                                  x4184 0))
                                                ~edit:(vscode_TextEditorEdit_of_js
                                                         (Ojs.array_get x4184
                                                            1))
                                                ~args:(Ojs.list_of_js_from
                                                         any_of_js x4184 2)))|]);
                                 (match x4181 with
                                  | Some x4183 ->
                                      ignore
                                        (Ojs.call x4182 "push"
                                           [|(any_to_js x4183)|])
                                  | None -> ());
                                 x4182))|])
        let (executeCommand :
          command:string -> rest:any list -> 'T or_undefined _Thenable) =
          fun ~command:(x4187 : string) ->
            fun ~rest:(x4188 : any list) ->
              _Thenable_of_js
                (fun (x4192 : Ojs.t) -> or_undefined_of_js Obj.magic x4192)
                (let x4191 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                 Ojs.call (Ojs.get_prop_ascii x4191 "executeCommand") "apply"
                   [|x4191;((let x4189 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4189 "push"
                                  [|(Ojs.string_to_js x4187)|]);
                             List.iter
                               (fun (x4190 : any) ->
                                  ignore
                                    (Ojs.call x4189 "push"
                                       [|(any_to_js x4190)|])) x4188;
                             x4189))|])
        let (getCommands :
          ?filterInternal:bool -> unit -> string list _Thenable) =
          fun ?filterInternal:(x4194 : bool option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4198 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4198)
                (let x4197 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                 Ojs.call (Ojs.get_prop_ascii x4197 "getCommands") "apply"
                   [|x4197;((let x4195 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4194 with
                              | Some x4196 ->
                                  ignore
                                    (Ojs.call x4195 "push"
                                       [|(Ojs.bool_to_js x4196)|])
                              | None -> ());
                             x4195))|])
      end
    module WindowState =
      struct
        type t = vscode_WindowState
        let rec t_of_js : Ojs.t -> t =
          fun (x4201 : Ojs.t) -> vscode_WindowState_of_js x4201
        and t_to_js : t -> Ojs.t =
          fun (x4200 : vscode_WindowState) -> vscode_WindowState_to_js x4200
        let (get_focused : t -> bool) =
          fun (x4202 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4202) "focused")
      end
    module UriHandler =
      struct
        type t = vscode_UriHandler
        let rec t_of_js : Ojs.t -> t =
          fun (x4204 : Ojs.t) -> vscode_UriHandler_of_js x4204
        and t_to_js : t -> Ojs.t =
          fun (x4203 : vscode_UriHandler) -> vscode_UriHandler_to_js x4203
        let (handleUri : t -> uri:vscode_Uri -> unit vscode_ProviderResult) =
          fun (x4206 : t) ->
            fun ~uri:(x4205 : vscode_Uri) ->
              vscode_ProviderResult_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x4206) "handleUri"
                   [|(vscode_Uri_to_js x4205)|])
      end
    module Window =
      struct
        let (activeTextEditor : vscode_TextEditor or_undefined) =
          or_undefined_of_js vscode_TextEditor_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "activeTextEditor")
        let (visibleTextEditors : vscode_TextEditor list) =
          Ojs.list_of_js vscode_TextEditor_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "visibleTextEditors")
        let (onDidChangeActiveTextEditor :
          vscode_TextEditor or_undefined vscode_Event) =
          vscode_Event_of_js
            (fun (x4210 : Ojs.t) ->
               or_undefined_of_js vscode_TextEditor_of_js x4210)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeActiveTextEditor")
        let (onDidChangeVisibleTextEditors :
          vscode_TextEditor list vscode_Event) =
          vscode_Event_of_js
            (fun (x4212 : Ojs.t) ->
               Ojs.list_of_js vscode_TextEditor_of_js x4212)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeVisibleTextEditors")
        let (onDidChangeTextEditorSelection :
          vscode_TextEditorSelectionChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorSelectionChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorSelection")
        let (onDidChangeTextEditorVisibleRanges :
          vscode_TextEditorVisibleRangesChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorVisibleRangesChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorVisibleRanges")
        let (onDidChangeTextEditorOptions :
          vscode_TextEditorOptionsChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorOptionsChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorOptions")
        let (onDidChangeTextEditorViewColumn :
          vscode_TextEditorViewColumnChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorViewColumnChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorViewColumn")
        let (terminals : vscode_Terminal list) =
          Ojs.list_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "terminals")
        let (activeTerminal : vscode_Terminal or_undefined) =
          or_undefined_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "activeTerminal")
        let (onDidChangeActiveTerminal :
          vscode_Terminal or_undefined vscode_Event) =
          vscode_Event_of_js
            (fun (x4220 : Ojs.t) ->
               or_undefined_of_js vscode_Terminal_of_js x4220)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeActiveTerminal")
        let (onDidOpenTerminal : vscode_Terminal vscode_Event) =
          vscode_Event_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidOpenTerminal")
        let (onDidCloseTerminal : vscode_Terminal vscode_Event) =
          vscode_Event_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidCloseTerminal")
        let (state : vscode_WindowState) =
          vscode_WindowState_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "state")
        let (onDidChangeWindowState : vscode_WindowState vscode_Event) =
          vscode_Event_of_js vscode_WindowState_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeWindowState")
        let (showTextDocument :
          document:vscode_TextDocument ->
            ?column:vscode_ViewColumn ->
              ?preserveFocus:bool -> unit -> vscode_TextEditor _Thenable)
          =
          fun ~document:(x4225 : vscode_TextDocument) ->
            fun ?column:(x4226 : vscode_ViewColumn option) ->
              fun ?preserveFocus:(x4227 : bool option) ->
                fun () ->
                  _Thenable_of_js vscode_TextEditor_of_js
                    (let x4231 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4231 "showTextDocument")
                       "apply"
                       [|x4231;((let x4228 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4228 "push"
                                      [|(vscode_TextDocument_to_js x4225)|]);
                                 (match x4226 with
                                  | Some x4230 ->
                                      ignore
                                        (Ojs.call x4228 "push"
                                           [|(vscode_ViewColumn_to_js x4230)|])
                                  | None -> ());
                                 (match x4227 with
                                  | Some x4229 ->
                                      ignore
                                        (Ojs.call x4228 "push"
                                           [|(Ojs.bool_to_js x4229)|])
                                  | None -> ());
                                 x4228))|])
        let (showTextDocument :
          document:vscode_TextDocument ->
            ?options:vscode_TextDocumentShowOptions ->
              unit -> vscode_TextEditor _Thenable)
          =
          fun ~document:(x4233 : vscode_TextDocument) ->
            fun ?options:(x4234 : vscode_TextDocumentShowOptions option) ->
              fun () ->
                _Thenable_of_js vscode_TextEditor_of_js
                  (let x4237 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4237 "showTextDocument")
                     "apply"
                     [|x4237;((let x4235 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4235 "push"
                                    [|(vscode_TextDocument_to_js x4233)|]);
                               (match x4234 with
                                | Some x4236 ->
                                    ignore
                                      (Ojs.call x4235 "push"
                                         [|(vscode_TextDocumentShowOptions_to_js
                                              x4236)|])
                                | None -> ());
                               x4235))|])
        let (showTextDocument :
          uri:vscode_Uri ->
            ?options:vscode_TextDocumentShowOptions ->
              unit -> vscode_TextEditor _Thenable)
          =
          fun ~uri:(x4239 : vscode_Uri) ->
            fun ?options:(x4240 : vscode_TextDocumentShowOptions option) ->
              fun () ->
                _Thenable_of_js vscode_TextEditor_of_js
                  (let x4243 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4243 "showTextDocument")
                     "apply"
                     [|x4243;((let x4241 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4241 "push"
                                    [|(vscode_Uri_to_js x4239)|]);
                               (match x4240 with
                                | Some x4242 ->
                                    ignore
                                      (Ojs.call x4241 "push"
                                         [|(vscode_TextDocumentShowOptions_to_js
                                              x4242)|])
                                | None -> ());
                               x4241))|])
        let (createTextEditorDecorationType :
          options:vscode_DecorationRenderOptions ->
            vscode_TextEditorDecorationType)
          =
          fun ~options:(x4245 : vscode_DecorationRenderOptions) ->
            vscode_TextEditorDecorationType_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createTextEditorDecorationType"
                 [|(vscode_DecorationRenderOptions_to_js x4245)|])
        let (showInformationMessage :
          message:string ->
            items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4246 : string) ->
            fun ~items:(x4247 : string list) ->
              _Thenable_of_js
                (fun (x4251 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x4251)
                (let x4250 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4250 "showInformationMessage")
                   "apply"
                   [|x4250;((let x4248 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4248 "push"
                                  [|(Ojs.string_to_js x4246)|]);
                             List.iter
                               (fun (x4249 : string) ->
                                  ignore
                                    (Ojs.call x4248 "push"
                                       [|(Ojs.string_to_js x4249)|])) x4247;
                             x4248))|])
        let (showInformationMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4253 : string) ->
            fun ~options:(x4254 : vscode_MessageOptions) ->
              fun ~items:(x4255 : string list) ->
                _Thenable_of_js
                  (fun (x4259 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4259)
                  (let x4258 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call
                     (Ojs.get_prop_ascii x4258 "showInformationMessage")
                     "apply"
                     [|x4258;((let x4256 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4256 "push"
                                    [|(Ojs.string_to_js x4253)|]);
                               ignore
                                 (Ojs.call x4256 "push"
                                    [|(vscode_MessageOptions_to_js x4254)|]);
                               List.iter
                                 (fun (x4257 : string) ->
                                    ignore
                                      (Ojs.call x4256 "push"
                                         [|(Ojs.string_to_js x4257)|])) x4255;
                               x4256))|])
        let (showInformationMessage :
          message:string -> items:'T list -> 'T or_undefined _Thenable) =
          fun ~message:(x4261 : string) ->
            fun ~items:(x4262 : 'T list) ->
              _Thenable_of_js
                (fun (x4266 : Ojs.t) -> or_undefined_of_js Obj.magic x4266)
                (let x4265 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4265 "showInformationMessage")
                   "apply"
                   [|x4265;((let x4263 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4263 "push"
                                  [|(Ojs.string_to_js x4261)|]);
                             List.iter
                               (fun (x4264 : 'T) ->
                                  ignore
                                    (Ojs.call x4263 "push"
                                       [|(Obj.magic x4264)|])) x4262;
                             x4263))|])
        let (showInformationMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:'T list -> 'T or_undefined _Thenable)
          =
          fun ~message:(x4268 : string) ->
            fun ~options:(x4269 : vscode_MessageOptions) ->
              fun ~items:(x4270 : 'T list) ->
                _Thenable_of_js
                  (fun (x4274 : Ojs.t) -> or_undefined_of_js Obj.magic x4274)
                  (let x4273 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call
                     (Ojs.get_prop_ascii x4273 "showInformationMessage")
                     "apply"
                     [|x4273;((let x4271 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4271 "push"
                                    [|(Ojs.string_to_js x4268)|]);
                               ignore
                                 (Ojs.call x4271 "push"
                                    [|(vscode_MessageOptions_to_js x4269)|]);
                               List.iter
                                 (fun (x4272 : 'T) ->
                                    ignore
                                      (Ojs.call x4271 "push"
                                         [|(Obj.magic x4272)|])) x4270;
                               x4271))|])
        let (showWarningMessage :
          message:string ->
            items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4276 : string) ->
            fun ~items:(x4277 : string list) ->
              _Thenable_of_js
                (fun (x4281 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x4281)
                (let x4280 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4280 "showWarningMessage")
                   "apply"
                   [|x4280;((let x4278 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4278 "push"
                                  [|(Ojs.string_to_js x4276)|]);
                             List.iter
                               (fun (x4279 : string) ->
                                  ignore
                                    (Ojs.call x4278 "push"
                                       [|(Ojs.string_to_js x4279)|])) x4277;
                             x4278))|])
        let (showWarningMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4283 : string) ->
            fun ~options:(x4284 : vscode_MessageOptions) ->
              fun ~items:(x4285 : string list) ->
                _Thenable_of_js
                  (fun (x4289 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4289)
                  (let x4288 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4288 "showWarningMessage")
                     "apply"
                     [|x4288;((let x4286 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4286 "push"
                                    [|(Ojs.string_to_js x4283)|]);
                               ignore
                                 (Ojs.call x4286 "push"
                                    [|(vscode_MessageOptions_to_js x4284)|]);
                               List.iter
                                 (fun (x4287 : string) ->
                                    ignore
                                      (Ojs.call x4286 "push"
                                         [|(Ojs.string_to_js x4287)|])) x4285;
                               x4286))|])
        let (showWarningMessage :
          message:string -> items:'T list -> 'T or_undefined _Thenable) =
          fun ~message:(x4291 : string) ->
            fun ~items:(x4292 : 'T list) ->
              _Thenable_of_js
                (fun (x4296 : Ojs.t) -> or_undefined_of_js Obj.magic x4296)
                (let x4295 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4295 "showWarningMessage")
                   "apply"
                   [|x4295;((let x4293 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4293 "push"
                                  [|(Ojs.string_to_js x4291)|]);
                             List.iter
                               (fun (x4294 : 'T) ->
                                  ignore
                                    (Ojs.call x4293 "push"
                                       [|(Obj.magic x4294)|])) x4292;
                             x4293))|])
        let (showWarningMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:'T list -> 'T or_undefined _Thenable)
          =
          fun ~message:(x4298 : string) ->
            fun ~options:(x4299 : vscode_MessageOptions) ->
              fun ~items:(x4300 : 'T list) ->
                _Thenable_of_js
                  (fun (x4304 : Ojs.t) -> or_undefined_of_js Obj.magic x4304)
                  (let x4303 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4303 "showWarningMessage")
                     "apply"
                     [|x4303;((let x4301 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4301 "push"
                                    [|(Ojs.string_to_js x4298)|]);
                               ignore
                                 (Ojs.call x4301 "push"
                                    [|(vscode_MessageOptions_to_js x4299)|]);
                               List.iter
                                 (fun (x4302 : 'T) ->
                                    ignore
                                      (Ojs.call x4301 "push"
                                         [|(Obj.magic x4302)|])) x4300;
                               x4301))|])
        let (showErrorMessage :
          message:string ->
            items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4306 : string) ->
            fun ~items:(x4307 : string list) ->
              _Thenable_of_js
                (fun (x4311 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x4311)
                (let x4310 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4310 "showErrorMessage")
                   "apply"
                   [|x4310;((let x4308 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4308 "push"
                                  [|(Ojs.string_to_js x4306)|]);
                             List.iter
                               (fun (x4309 : string) ->
                                  ignore
                                    (Ojs.call x4308 "push"
                                       [|(Ojs.string_to_js x4309)|])) x4307;
                             x4308))|])
        let (showErrorMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4313 : string) ->
            fun ~options:(x4314 : vscode_MessageOptions) ->
              fun ~items:(x4315 : string list) ->
                _Thenable_of_js
                  (fun (x4319 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4319)
                  (let x4318 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4318 "showErrorMessage")
                     "apply"
                     [|x4318;((let x4316 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4316 "push"
                                    [|(Ojs.string_to_js x4313)|]);
                               ignore
                                 (Ojs.call x4316 "push"
                                    [|(vscode_MessageOptions_to_js x4314)|]);
                               List.iter
                                 (fun (x4317 : string) ->
                                    ignore
                                      (Ojs.call x4316 "push"
                                         [|(Ojs.string_to_js x4317)|])) x4315;
                               x4316))|])
        let (showErrorMessage :
          message:string -> items:'T list -> 'T or_undefined _Thenable) =
          fun ~message:(x4321 : string) ->
            fun ~items:(x4322 : 'T list) ->
              _Thenable_of_js
                (fun (x4326 : Ojs.t) -> or_undefined_of_js Obj.magic x4326)
                (let x4325 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4325 "showErrorMessage")
                   "apply"
                   [|x4325;((let x4323 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4323 "push"
                                  [|(Ojs.string_to_js x4321)|]);
                             List.iter
                               (fun (x4324 : 'T) ->
                                  ignore
                                    (Ojs.call x4323 "push"
                                       [|(Obj.magic x4324)|])) x4322;
                             x4323))|])
        let (showErrorMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:'T list -> 'T or_undefined _Thenable)
          =
          fun ~message:(x4328 : string) ->
            fun ~options:(x4329 : vscode_MessageOptions) ->
              fun ~items:(x4330 : 'T list) ->
                _Thenable_of_js
                  (fun (x4334 : Ojs.t) -> or_undefined_of_js Obj.magic x4334)
                  (let x4333 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4333 "showErrorMessage")
                     "apply"
                     [|x4333;((let x4331 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4331 "push"
                                    [|(Ojs.string_to_js x4328)|]);
                               ignore
                                 (Ojs.call x4331 "push"
                                    [|(vscode_MessageOptions_to_js x4329)|]);
                               List.iter
                                 (fun (x4332 : 'T) ->
                                    ignore
                                      (Ojs.call x4331 "push"
                                         [|(Obj.magic x4332)|])) x4330;
                               x4331))|])
        let (showQuickPick :
          items:(string list _Thenable, string) or_array ->
            options:(vscode_QuickPickOptions, anonymous_interface_2)
              intersection2 ->
              ?token:vscode_CancellationToken ->
                unit -> string list or_undefined _Thenable)
          =
          fun ~items:(x4336 : (string list _Thenable, string) or_array) ->
            fun
              ~options:(x4337 :
                         (vscode_QuickPickOptions, anonymous_interface_2)
                           intersection2)
              ->
              fun ?token:(x4338 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4348 : Ojs.t) ->
                       or_undefined_of_js
                         (fun (x4349 : Ojs.t) ->
                            Ojs.list_of_js Ojs.string_of_js x4349) x4348)
                    (let x4347 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4347 "showQuickPick")
                       "apply"
                       [|x4347;((let x4339 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4339 "push"
                                      [|(or_array_to_js
                                           (fun
                                              (x4343 : string list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4344 : string list) ->
                                                   Ojs.list_to_js
                                                     Ojs.string_to_js x4344)
                                                x4343) Ojs.string_to_js x4336)|]);
                                 ignore
                                   (Ojs.call x4339 "push"
                                      [|(intersection2_to_js
                                           vscode_QuickPickOptions_to_js
                                           anonymous_interface_2_to_js x4337)|]);
                                 (match x4338 with
                                  | Some x4340 ->
                                      ignore
                                        (Ojs.call x4339 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4340)|])
                                  | None -> ());
                                 x4339))|])
        let (showQuickPick :
          items:(string list _Thenable, string) or_array ->
            ?options:vscode_QuickPickOptions ->
              ?token:vscode_CancellationToken ->
                unit -> string or_undefined _Thenable)
          =
          fun ~items:(x4351 : (string list _Thenable, string) or_array) ->
            fun ?options:(x4352 : vscode_QuickPickOptions option) ->
              fun ?token:(x4353 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4362 : Ojs.t) ->
                       or_undefined_of_js Ojs.string_of_js x4362)
                    (let x4361 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4361 "showQuickPick")
                       "apply"
                       [|x4361;((let x4354 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4354 "push"
                                      [|(or_array_to_js
                                           (fun
                                              (x4357 : string list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4358 : string list) ->
                                                   Ojs.list_to_js
                                                     Ojs.string_to_js x4358)
                                                x4357) Ojs.string_to_js x4351)|]);
                                 (match x4352 with
                                  | Some x4356 ->
                                      ignore
                                        (Ojs.call x4354 "push"
                                           [|(vscode_QuickPickOptions_to_js
                                                x4356)|])
                                  | None -> ());
                                 (match x4353 with
                                  | Some x4355 ->
                                      ignore
                                        (Ojs.call x4354 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4355)|])
                                  | None -> ());
                                 x4354))|])
        let (showQuickPick :
          items:('T list _Thenable, 'T) or_array ->
            options:(vscode_QuickPickOptions, anonymous_interface_2)
              intersection2 ->
              ?token:vscode_CancellationToken ->
                unit -> 'T list or_undefined _Thenable)
          =
          fun ~items:(x4364 : ('T list _Thenable, 'T) or_array) ->
            fun
              ~options:(x4365 :
                         (vscode_QuickPickOptions, anonymous_interface_2)
                           intersection2)
              ->
              fun ?token:(x4366 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4376 : Ojs.t) ->
                       or_undefined_of_js
                         (fun (x4377 : Ojs.t) ->
                            Ojs.list_of_js Obj.magic x4377) x4376)
                    (let x4375 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4375 "showQuickPick")
                       "apply"
                       [|x4375;((let x4367 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4367 "push"
                                      [|(or_array_to_js
                                           (fun (x4371 : 'T list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4372 : 'T list) ->
                                                   Ojs.list_to_js Obj.magic
                                                     x4372) x4371) Obj.magic
                                           x4364)|]);
                                 ignore
                                   (Ojs.call x4367 "push"
                                      [|(intersection2_to_js
                                           vscode_QuickPickOptions_to_js
                                           anonymous_interface_2_to_js x4365)|]);
                                 (match x4366 with
                                  | Some x4368 ->
                                      ignore
                                        (Ojs.call x4367 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4368)|])
                                  | None -> ());
                                 x4367))|])
        let (showQuickPick :
          items:('T list _Thenable, 'T) or_array ->
            ?options:vscode_QuickPickOptions ->
              ?token:vscode_CancellationToken ->
                unit -> 'T or_undefined _Thenable)
          =
          fun ~items:(x4379 : ('T list _Thenable, 'T) or_array) ->
            fun ?options:(x4380 : vscode_QuickPickOptions option) ->
              fun ?token:(x4381 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4390 : Ojs.t) ->
                       or_undefined_of_js Obj.magic x4390)
                    (let x4389 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4389 "showQuickPick")
                       "apply"
                       [|x4389;((let x4382 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4382 "push"
                                      [|(or_array_to_js
                                           (fun (x4385 : 'T list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4386 : 'T list) ->
                                                   Ojs.list_to_js Obj.magic
                                                     x4386) x4385) Obj.magic
                                           x4379)|]);
                                 (match x4380 with
                                  | Some x4384 ->
                                      ignore
                                        (Ojs.call x4382 "push"
                                           [|(vscode_QuickPickOptions_to_js
                                                x4384)|])
                                  | None -> ());
                                 (match x4381 with
                                  | Some x4383 ->
                                      ignore
                                        (Ojs.call x4382 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4383)|])
                                  | None -> ());
                                 x4382))|])
        let (showWorkspaceFolderPick :
          ?options:vscode_WorkspaceFolderPickOptions ->
            unit -> vscode_WorkspaceFolder or_undefined _Thenable)
          =
          fun ?options:(x4392 : vscode_WorkspaceFolderPickOptions option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4396 : Ojs.t) ->
                   or_undefined_of_js vscode_WorkspaceFolder_of_js x4396)
                (let x4395 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call
                   (Ojs.get_prop_ascii x4395 "showWorkspaceFolderPick")
                   "apply"
                   [|x4395;((let x4393 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4392 with
                              | Some x4394 ->
                                  ignore
                                    (Ojs.call x4393 "push"
                                       [|(vscode_WorkspaceFolderPickOptions_to_js
                                            x4394)|])
                              | None -> ());
                             x4393))|])
        let (showOpenDialog :
          ?options:vscode_OpenDialogOptions ->
            unit -> vscode_Uri list or_undefined _Thenable)
          =
          fun ?options:(x4398 : vscode_OpenDialogOptions option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4402 : Ojs.t) ->
                   or_undefined_of_js
                     (fun (x4403 : Ojs.t) ->
                        Ojs.list_of_js vscode_Uri_of_js x4403) x4402)
                (let x4401 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4401 "showOpenDialog") "apply"
                   [|x4401;((let x4399 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4398 with
                              | Some x4400 ->
                                  ignore
                                    (Ojs.call x4399 "push"
                                       [|(vscode_OpenDialogOptions_to_js
                                            x4400)|])
                              | None -> ());
                             x4399))|])
        let (showSaveDialog :
          ?options:vscode_SaveDialogOptions ->
            unit -> vscode_Uri or_undefined _Thenable)
          =
          fun ?options:(x4405 : vscode_SaveDialogOptions option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4409 : Ojs.t) ->
                   or_undefined_of_js vscode_Uri_of_js x4409)
                (let x4408 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4408 "showSaveDialog") "apply"
                   [|x4408;((let x4406 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4405 with
                              | Some x4407 ->
                                  ignore
                                    (Ojs.call x4406 "push"
                                       [|(vscode_SaveDialogOptions_to_js
                                            x4407)|])
                              | None -> ());
                             x4406))|])
        let (showInputBox :
          ?options:vscode_InputBoxOptions ->
            ?token:vscode_CancellationToken ->
              unit -> string or_undefined _Thenable)
          =
          fun ?options:(x4411 : vscode_InputBoxOptions option) ->
            fun ?token:(x4412 : vscode_CancellationToken option) ->
              fun () ->
                _Thenable_of_js
                  (fun (x4417 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4417)
                  (let x4416 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4416 "showInputBox") "apply"
                     [|x4416;((let x4413 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4411 with
                                | Some x4415 ->
                                    ignore
                                      (Ojs.call x4413 "push"
                                         [|(vscode_InputBoxOptions_to_js
                                              x4415)|])
                                | None -> ());
                               (match x4412 with
                                | Some x4414 ->
                                    ignore
                                      (Ojs.call x4413 "push"
                                         [|(vscode_CancellationToken_to_js
                                              x4414)|])
                                | None -> ());
                               x4413))|])
        let (createQuickPick : unit -> 'T vscode_QuickPick) =
          fun () ->
            vscode_QuickPick_of_js Obj.magic
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createQuickPick" [||])
        let (createInputBox : unit -> vscode_InputBox) =
          fun () ->
            vscode_InputBox_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createInputBox" [||])
        let (createOutputChannel : name:string -> vscode_OutputChannel) =
          fun ~name:(x4420 : string) ->
            vscode_OutputChannel_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createOutputChannel"
                 [|(Ojs.string_to_js x4420)|])
        let (createWebviewPanel :
          viewType:string ->
            title:string ->
              showOptions:((vscode_ViewColumn, anonymous_interface_38) union2,
                [ `Active  | `Beside  | `Eight  | `Five  | `Four  | `Nine 
                | `One  | `Seven  | `Six  | `Three  | `Two ]) or_enum ->
                ?options:(vscode_WebviewPanelOptions, vscode_WebviewOptions)
                  intersection2 -> unit -> vscode_WebviewPanel)
          =
          fun ~viewType:(x4421 : string) ->
            fun ~title:(x4422 : string) ->
              fun
                ~showOptions:(x4423 :
                               ((vscode_ViewColumn, anonymous_interface_38)
                                  union2,
                                 [ `Active  | `Beside  | `Eight  | `Five 
                                 | `Four  | `Nine  | `One  | `Seven  | 
                                   `Six 
                                 | `Three  | `Two ]) or_enum)
                ->
                fun
                  ?options:(x4424 :
                             (vscode_WebviewPanelOptions,
                               vscode_WebviewOptions) intersection2 option)
                  ->
                  fun () ->
                    vscode_WebviewPanel_of_js
                      (let x4433 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                       Ojs.call
                         (Ojs.get_prop_ascii x4433 "createWebviewPanel")
                         "apply"
                         [|x4433;((let x4425 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x4425 "push"
                                        [|(Ojs.string_to_js x4421)|]);
                                   ignore
                                     (Ojs.call x4425 "push"
                                        [|(Ojs.string_to_js x4422)|]);
                                   ignore
                                     (Ojs.call x4425 "push"
                                        [|(or_enum_to_js
                                             (fun
                                                (x4429 :
                                                  (vscode_ViewColumn,
                                                    anonymous_interface_38)
                                                    union2)
                                                ->
                                                union2_to_js
                                                  vscode_ViewColumn_to_js
                                                  anonymous_interface_38_to_js
                                                  x4429)
                                             (fun
                                                (x4432 :
                                                  [ `Active  | `Beside 
                                                  | `Eight  | `Five  | 
                                                    `Four 
                                                  | `Nine  | `One  | 
                                                    `Seven 
                                                  | `Six  | `Three  | 
                                                    `Two ])
                                                ->
                                                match x4432 with
                                                | `Active ->
                                                    Ojs.string_to_js "Active"
                                                | `Beside ->
                                                    Ojs.string_to_js "Beside"
                                                | `Eight ->
                                                    Ojs.string_to_js "Eight"
                                                | `Five ->
                                                    Ojs.string_to_js "Five"
                                                | `Four ->
                                                    Ojs.string_to_js "Four"
                                                | `Nine ->
                                                    Ojs.string_to_js "Nine"
                                                | `One ->
                                                    Ojs.string_to_js "One"
                                                | `Seven ->
                                                    Ojs.string_to_js "Seven"
                                                | `Six ->
                                                    Ojs.string_to_js "Six"
                                                | `Three ->
                                                    Ojs.string_to_js "Three"
                                                | `Two ->
                                                    Ojs.string_to_js "Two")
                                             x4423)|]);
                                   (match x4424 with
                                    | Some x4426 ->
                                        ignore
                                          (Ojs.call x4425 "push"
                                             [|(intersection2_to_js
                                                  vscode_WebviewPanelOptions_to_js
                                                  vscode_WebviewOptions_to_js
                                                  x4426)|])
                                    | None -> ());
                                   x4425))|])
        let (setStatusBarMessage :
          text:string -> hideAfterTimeout:float -> vscode_Disposable) =
          fun ~text:(x4434 : string) ->
            fun ~hideAfterTimeout:(x4435 : float) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "setStatusBarMessage"
                   [|(Ojs.string_to_js x4434);(Ojs.float_to_js x4435)|])
        let (setStatusBarMessage :
          text:string -> hideWhenDone:any _Thenable -> vscode_Disposable) =
          fun ~text:(x4436 : string) ->
            fun ~hideWhenDone:(x4437 : any _Thenable) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "setStatusBarMessage"
                   [|(Ojs.string_to_js x4436);(_Thenable_to_js any_to_js
                                                 x4437)|])
        let (setStatusBarMessage : text:string -> vscode_Disposable) =
          fun ~text:(x4439 : string) ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "setStatusBarMessage"
                 [|(Ojs.string_to_js x4439)|])
        let (withScmProgress :
          task:(progress:float vscode_Progress -> 'R _Thenable) ->
            'R _Thenable)
          =
          fun ~task:(x4440 : progress:float vscode_Progress -> 'R _Thenable)
            ->
            _Thenable_of_js Obj.magic
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "withScmProgress"
                 [|(Ojs.fun_to_js 1
                      (fun (x4441 : Ojs.t) ->
                         _Thenable_to_js Obj.magic
                           (x4440
                              ~progress:(vscode_Progress_of_js
                                           Ojs.float_of_js x4441))))|])
        let (withProgress :
          options:vscode_ProgressOptions ->
            task:(progress:anonymous_interface_18 vscode_Progress ->
                    token:vscode_CancellationToken -> 'R _Thenable)
              -> 'R _Thenable)
          =
          fun ~options:(x4445 : vscode_ProgressOptions) ->
            fun
              ~task:(x4446 :
                      progress:anonymous_interface_18 vscode_Progress ->
                        token:vscode_CancellationToken -> 'R _Thenable)
              ->
              _Thenable_of_js Obj.magic
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "withProgress"
                   [|(vscode_ProgressOptions_to_js x4445);(Ojs.fun_to_js 2
                                                             (fun
                                                                (x4447 :
                                                                  Ojs.t)
                                                                ->
                                                                fun
                                                                  (x4449 :
                                                                    Ojs.t)
                                                                  ->
                                                                  _Thenable_to_js
                                                                    Obj.magic
                                                                    (
                                                                    x4446
                                                                    ~progress:(
                                                                    vscode_Progress_of_js
                                                                    anonymous_interface_18_of_js
                                                                    x4447)
                                                                    ~token:(
                                                                    vscode_CancellationToken_of_js
                                                                    x4449))))|])
        let (createStatusBarItem :
          ?alignment:vscode_StatusBarAlignment ->
            ?priority:float -> unit -> vscode_StatusBarItem)
          =
          fun ?alignment:(x4452 : vscode_StatusBarAlignment option) ->
            fun ?priority:(x4453 : float option) ->
              fun () ->
                vscode_StatusBarItem_of_js
                  (let x4457 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4457 "createStatusBarItem")
                     "apply"
                     [|x4457;((let x4454 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4452 with
                                | Some x4456 ->
                                    ignore
                                      (Ojs.call x4454 "push"
                                         [|(vscode_StatusBarAlignment_to_js
                                              x4456)|])
                                | None -> ());
                               (match x4453 with
                                | Some x4455 ->
                                    ignore
                                      (Ojs.call x4454 "push"
                                         [|(Ojs.float_to_js x4455)|])
                                | None -> ());
                               x4454))|])
        let (createTerminal :
          ?name:string ->
            ?shellPath:string ->
              ?shellArgs:string list or_string -> unit -> vscode_Terminal)
          =
          fun ?name:(x4458 : string option) ->
            fun ?shellPath:(x4459 : string option) ->
              fun ?shellArgs:(x4460 : string list or_string option) ->
                fun () ->
                  vscode_Terminal_of_js
                    (let x4467 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4467 "createTerminal")
                       "apply"
                       [|x4467;((let x4461 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x4458 with
                                  | Some x4466 ->
                                      ignore
                                        (Ojs.call x4461 "push"
                                           [|(Ojs.string_to_js x4466)|])
                                  | None -> ());
                                 (match x4459 with
                                  | Some x4465 ->
                                      ignore
                                        (Ojs.call x4461 "push"
                                           [|(Ojs.string_to_js x4465)|])
                                  | None -> ());
                                 (match x4460 with
                                  | Some x4462 ->
                                      ignore
                                        (Ojs.call x4461 "push"
                                           [|(or_string_to_js
                                                (fun (x4463 : string list) ->
                                                   Ojs.list_to_js
                                                     Ojs.string_to_js x4463)
                                                x4462)|])
                                  | None -> ());
                                 x4461))|])
        let (createTerminal :
          options:vscode_TerminalOptions -> vscode_Terminal) =
          fun ~options:(x4468 : vscode_TerminalOptions) ->
            vscode_Terminal_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createTerminal"
                 [|(vscode_TerminalOptions_to_js x4468)|])
        let (createTerminal :
          options:vscode_ExtensionTerminalOptions -> vscode_Terminal) =
          fun ~options:(x4469 : vscode_ExtensionTerminalOptions) ->
            vscode_Terminal_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createTerminal"
                 [|(vscode_ExtensionTerminalOptions_to_js x4469)|])
        let (registerTreeDataProvider :
          viewId:string ->
            treeDataProvider:'T vscode_TreeDataProvider -> vscode_Disposable)
          =
          fun ~viewId:(x4470 : string) ->
            fun ~treeDataProvider:(x4471 : 'T vscode_TreeDataProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "registerTreeDataProvider"
                   [|(Ojs.string_to_js x4470);(vscode_TreeDataProvider_to_js
                                                 Obj.magic x4471)|])
        let (createTreeView :
          viewId:string ->
            options:'T vscode_TreeViewOptions -> 'T vscode_TreeView)
          =
          fun ~viewId:(x4473 : string) ->
            fun ~options:(x4474 : 'T vscode_TreeViewOptions) ->
              vscode_TreeView_of_js Obj.magic
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "createTreeView"
                   [|(Ojs.string_to_js x4473);(vscode_TreeViewOptions_to_js
                                                 Obj.magic x4474)|])
        let (registerUriHandler :
          handler:vscode_UriHandler -> vscode_Disposable) =
          fun ~handler:(x4477 : vscode_UriHandler) ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "registerUriHandler"
                 [|(vscode_UriHandler_to_js x4477)|])
        let (registerWebviewPanelSerializer :
          viewType:string ->
            serializer:unknown vscode_WebviewPanelSerializer ->
              vscode_Disposable)
          =
          fun ~viewType:(x4478 : string) ->
            fun ~serializer:(x4479 : unknown vscode_WebviewPanelSerializer)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "registerWebviewPanelSerializer"
                   [|(Ojs.string_to_js x4478);(vscode_WebviewPanelSerializer_to_js
                                                 unknown_to_js x4479)|])
        let (registerWebviewViewProvider :
          viewId:string ->
            provider:vscode_WebviewViewProvider ->
              ?options:anonymous_interface_41 -> unit -> vscode_Disposable)
          =
          fun ~viewId:(x4481 : string) ->
            fun ~provider:(x4482 : vscode_WebviewViewProvider) ->
              fun ?options:(x4483 : anonymous_interface_41 option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4486 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call
                       (Ojs.get_prop_ascii x4486
                          "registerWebviewViewProvider") "apply"
                       [|x4486;((let x4484 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4484 "push"
                                      [|(Ojs.string_to_js x4481)|]);
                                 ignore
                                   (Ojs.call x4484 "push"
                                      [|(vscode_WebviewViewProvider_to_js
                                           x4482)|]);
                                 (match x4483 with
                                  | Some x4485 ->
                                      ignore
                                        (Ojs.call x4484 "push"
                                           [|(anonymous_interface_41_to_js
                                                x4485)|])
                                  | None -> ());
                                 x4484))|])
        let (registerCustomEditorProvider :
          viewType:string ->
            provider:(vscode_CustomDocument vscode_CustomEditorProvider,
              vscode_CustomDocument vscode_CustomReadonlyEditorProvider,
              vscode_CustomTextEditorProvider) union3 ->
              ?options:anonymous_interface_40 -> unit -> vscode_Disposable)
          =
          fun ~viewType:(x4487 : string) ->
            fun
              ~provider:(x4488 :
                          (vscode_CustomDocument vscode_CustomEditorProvider,
                            vscode_CustomDocument
                              vscode_CustomReadonlyEditorProvider,
                            vscode_CustomTextEditorProvider) union3)
              ->
              fun ?options:(x4489 : anonymous_interface_40 option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4497 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call
                       (Ojs.get_prop_ascii x4497
                          "registerCustomEditorProvider") "apply"
                       [|x4497;((let x4490 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4490 "push"
                                      [|(Ojs.string_to_js x4487)|]);
                                 ignore
                                   (Ojs.call x4490 "push"
                                      [|(union3_to_js
                                           (fun
                                              (x4492 :
                                                vscode_CustomDocument
                                                  vscode_CustomEditorProvider)
                                              ->
                                              vscode_CustomEditorProvider_to_js
                                                vscode_CustomDocument_to_js
                                                x4492)
                                           (fun
                                              (x4494 :
                                                vscode_CustomDocument
                                                  vscode_CustomReadonlyEditorProvider)
                                              ->
                                              vscode_CustomReadonlyEditorProvider_to_js
                                                vscode_CustomDocument_to_js
                                                x4494)
                                           vscode_CustomTextEditorProvider_to_js
                                           x4488)|]);
                                 (match x4489 with
                                  | Some x4491 ->
                                      ignore
                                        (Ojs.call x4490 "push"
                                           [|(anonymous_interface_40_to_js
                                                x4491)|])
                                  | None -> ());
                                 x4490))|])
        let (registerTerminalLinkProvider :
          provider:vscode_TerminalLink vscode_TerminalLinkProvider ->
            vscode_Disposable)
          =
          fun
            ~provider:(x4498 :
                        vscode_TerminalLink vscode_TerminalLinkProvider)
            ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "registerTerminalLinkProvider"
                 [|(vscode_TerminalLinkProvider_to_js
                      vscode_TerminalLink_to_js x4498)|])
        let (registerFileDecorationProvider :
          provider:vscode_FileDecorationProvider -> vscode_Disposable) =
          fun ~provider:(x4500 : vscode_FileDecorationProvider) ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "registerFileDecorationProvider"
                 [|(vscode_FileDecorationProvider_to_js x4500)|])
        let (activeColorTheme : vscode_ColorTheme) =
          vscode_ColorTheme_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "activeColorTheme")
        let (onDidChangeActiveColorTheme : vscode_ColorTheme vscode_Event) =
          vscode_Event_of_js vscode_ColorTheme_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeActiveColorTheme")
      end
    module TreeViewOptions =
      struct
        type 'T t = 'T vscode_TreeViewOptions
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4504 : Ojs.t) ->
              vscode_TreeViewOptions_of_js __T_of_js x4504
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4502 : __T vscode_TreeViewOptions) ->
              vscode_TreeViewOptions_to_js __T_to_js x4502
        let (get_treeDataProvider : 'T t -> 'T vscode_TreeDataProvider) =
          fun (x4506 : 'T t) ->
            vscode_TreeDataProvider_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4506)
                 "treeDataProvider")
        let (set_treeDataProvider :
          'T t -> 'T vscode_TreeDataProvider -> unit) =
          fun (x4509 : 'T t) ->
            fun (x4510 : 'T vscode_TreeDataProvider) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4509) "treeDataProvider"
                (vscode_TreeDataProvider_to_js Obj.magic x4510)
        let (get_showCollapseAll : 'T t -> bool) =
          fun (x4513 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4513) "showCollapseAll")
        let (set_showCollapseAll : 'T t -> bool -> unit) =
          fun (x4515 : 'T t) ->
            fun (x4516 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4515) "showCollapseAll"
                (Ojs.bool_to_js x4516)
        let (get_canSelectMany : 'T t -> bool) =
          fun (x4518 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4518) "canSelectMany")
        let (set_canSelectMany : 'T t -> bool -> unit) =
          fun (x4520 : 'T t) ->
            fun (x4521 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4520) "canSelectMany"
                (Ojs.bool_to_js x4521)
      end
    module TreeViewExpansionEvent =
      struct
        type 'T t = 'T vscode_TreeViewExpansionEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4525 : Ojs.t) ->
              vscode_TreeViewExpansionEvent_of_js __T_of_js x4525
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4523 : __T vscode_TreeViewExpansionEvent) ->
              vscode_TreeViewExpansionEvent_to_js __T_to_js x4523
        let (get_element : 'T t -> 'T) =
          fun (x4527 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4527) "element")
      end
    module TreeViewSelectionChangeEvent =
      struct
        type 'T t = 'T vscode_TreeViewSelectionChangeEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4531 : Ojs.t) ->
              vscode_TreeViewSelectionChangeEvent_of_js __T_of_js x4531
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4529 : __T vscode_TreeViewSelectionChangeEvent) ->
              vscode_TreeViewSelectionChangeEvent_to_js __T_to_js x4529
        let (get_selection : 'T t -> 'T list) =
          fun (x4533 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4533) "selection")
      end
    module TreeViewVisibilityChangeEvent =
      struct
        type t = vscode_TreeViewVisibilityChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x4537 : Ojs.t) ->
            vscode_TreeViewVisibilityChangeEvent_of_js x4537
        and t_to_js : t -> Ojs.t =
          fun (x4536 : vscode_TreeViewVisibilityChangeEvent) ->
            vscode_TreeViewVisibilityChangeEvent_to_js x4536
        let (get_visible : t -> bool) =
          fun (x4538 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4538) "visible")
      end
    module TreeView =
      struct
        include struct include Disposable end
        type 'T t = Disposable.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4540 : Ojs.t) -> Disposable.t_of_js x4540
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4539 : Disposable.t) -> Disposable.t_to_js x4539
        let (get_onDidExpandElement :
          'T t -> 'T vscode_TreeViewExpansionEvent vscode_Event) =
          fun (x4541 : 'T t) ->
            vscode_Event_of_js
              (fun (x4543 : Ojs.t) ->
                 vscode_TreeViewExpansionEvent_of_js Obj.magic x4543)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4541)
                 "onDidExpandElement")
        let (get_onDidCollapseElement :
          'T t -> 'T vscode_TreeViewExpansionEvent vscode_Event) =
          fun (x4545 : 'T t) ->
            vscode_Event_of_js
              (fun (x4547 : Ojs.t) ->
                 vscode_TreeViewExpansionEvent_of_js Obj.magic x4547)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4545)
                 "onDidCollapseElement")
        let (get_selection : 'T t -> 'T list) =
          fun (x4549 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4549) "selection")
        let (get_onDidChangeSelection :
          'T t -> 'T vscode_TreeViewSelectionChangeEvent vscode_Event) =
          fun (x4552 : 'T t) ->
            vscode_Event_of_js
              (fun (x4554 : Ojs.t) ->
                 vscode_TreeViewSelectionChangeEvent_of_js Obj.magic x4554)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4552)
                 "onDidChangeSelection")
        let (get_visible : 'T t -> bool) =
          fun (x4556 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4556) "visible")
        let (get_onDidChangeVisibility :
          'T t -> vscode_TreeViewVisibilityChangeEvent vscode_Event) =
          fun (x4558 : 'T t) ->
            vscode_Event_of_js vscode_TreeViewVisibilityChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4558)
                 "onDidChangeVisibility")
        let (get_message : 'T t -> string) =
          fun (x4561 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4561) "message")
        let (set_message : 'T t -> string -> unit) =
          fun (x4563 : 'T t) ->
            fun (x4564 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4563) "message"
                (Ojs.string_to_js x4564)
        let (get_title : 'T t -> string) =
          fun (x4566 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4566) "title")
        let (set_title : 'T t -> string -> unit) =
          fun (x4568 : 'T t) ->
            fun (x4569 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4568) "title"
                (Ojs.string_to_js x4569)
        let (get_description : 'T t -> string) =
          fun (x4571 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4571) "description")
        let (set_description : 'T t -> string -> unit) =
          fun (x4573 : 'T t) ->
            fun (x4574 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4573) "description"
                (Ojs.string_to_js x4574)
        let (reveal :
          'T t ->
            element:'T ->
              ?options:anonymous_interface_32 -> unit -> unit _Thenable)
          =
          fun (x4580 : 'T t) ->
            fun ~element:(x4576 : 'T) ->
              fun ?options:(x4577 : anonymous_interface_32 option) ->
                fun () ->
                  _Thenable_of_js Ojs.unit_of_js
                    (let x4582 = t_to_js Obj.magic x4580 in
                     Ojs.call (Ojs.get_prop_ascii x4582 "reveal") "apply"
                       [|x4582;((let x4578 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4578 "push"
                                      [|(Obj.magic x4576)|]);
                                 (match x4577 with
                                  | Some x4579 ->
                                      ignore
                                        (Ojs.call x4578 "push"
                                           [|(anonymous_interface_32_to_js
                                                x4579)|])
                                  | None -> ());
                                 x4578))|])
      end
    module TreeDataProvider =
      struct
        type 'T t = 'T vscode_TreeDataProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4586 : Ojs.t) ->
              vscode_TreeDataProvider_of_js __T_of_js x4586
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4584 : __T vscode_TreeDataProvider) ->
              vscode_TreeDataProvider_to_js __T_to_js x4584
        let (get_onDidChangeTreeData :
          'T t -> ('T, unit) union2 or_null_or_undefined vscode_Event) =
          fun (x4588 : 'T t) ->
            vscode_Event_of_js
              (fun (x4590 : Ojs.t) ->
                 or_null_or_undefined_of_js
                   (fun (x4591 : Ojs.t) ->
                      union2_of_js Obj.magic Ojs.unit_of_js x4591) x4590)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4588)
                 "onDidChangeTreeData")
        let (set_onDidChangeTreeData :
          'T t -> ('T, unit) union2 or_null_or_undefined vscode_Event -> unit)
          =
          fun (x4594 : 'T t) ->
            fun (x4595 : ('T, unit) union2 or_null_or_undefined vscode_Event)
              ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4594)
                "onDidChangeTreeData"
                (vscode_Event_to_js
                   (fun (x4596 : ('T, unit) union2 or_null_or_undefined) ->
                      or_null_or_undefined_to_js
                        (fun (x4597 : ('T, unit) union2) ->
                           union2_to_js Obj.magic Ojs.unit_to_js x4597) x4596)
                   x4595)
        let (getTreeItem :
          'T t ->
            element:'T -> (vscode_TreeItem, vscode_TreeItem _Thenable) union2)
          =
          fun (x4602 : 'T t) ->
            fun ~element:(x4601 : 'T) ->
              union2_of_js vscode_TreeItem_of_js
                (fun (x4605 : Ojs.t) ->
                   _Thenable_of_js vscode_TreeItem_of_js x4605)
                (Ojs.call (t_to_js Obj.magic x4602) "getTreeItem"
                   [|(Obj.magic x4601)|])
        let (getChildren :
          'T t -> ?element:'T -> unit -> 'T list vscode_ProviderResult) =
          fun (x4610 : 'T t) ->
            fun ?element:(x4607 : 'T option) ->
              fun () ->
                vscode_ProviderResult_of_js
                  (fun (x4613 : Ojs.t) -> Ojs.list_of_js Obj.magic x4613)
                  (let x4612 = t_to_js Obj.magic x4610 in
                   Ojs.call (Ojs.get_prop_ascii x4612 "getChildren") "apply"
                     [|x4612;((let x4608 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4607 with
                                | Some x4609 ->
                                    ignore
                                      (Ojs.call x4608 "push"
                                         [|(Obj.magic x4609)|])
                                | None -> ());
                               x4608))|])
        let (getParent : 'T t -> element:'T -> 'T vscode_ProviderResult) =
          fun (x4616 : 'T t) ->
            fun ~element:(x4615 : 'T) ->
              vscode_ProviderResult_of_js Obj.magic
                (Ojs.call (t_to_js Obj.magic x4616) "getParent"
                   [|(Obj.magic x4615)|])
        let (resolveTreeItem :
          'T t ->
            item:vscode_TreeItem ->
              element:'T ->
                token:vscode_CancellationToken ->
                  vscode_TreeItem vscode_ProviderResult)
          =
          fun (x4622 : 'T t) ->
            fun ~item:(x4619 : vscode_TreeItem) ->
              fun ~element:(x4620 : 'T) ->
                fun ~token:(x4621 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_TreeItem_of_js
                    (Ojs.call (t_to_js Obj.magic x4622) "resolveTreeItem"
                       [|(vscode_TreeItem_to_js x4619);(Obj.magic x4620);(
                         vscode_CancellationToken_to_js x4621)|])
      end
    module TreeItem =
      struct
        type t = vscode_TreeItem
        let rec t_of_js : Ojs.t -> t =
          fun (x4626 : Ojs.t) -> vscode_TreeItem_of_js x4626
        and t_to_js : t -> Ojs.t =
          fun (x4625 : vscode_TreeItem) -> vscode_TreeItem_to_js x4625
        let (get_label : t -> vscode_TreeItemLabel or_string) =
          fun (x4627 : t) ->
            or_string_of_js vscode_TreeItemLabel_of_js
              (Ojs.get_prop_ascii (t_to_js x4627) "label")
        let (set_label : t -> vscode_TreeItemLabel or_string -> unit) =
          fun (x4629 : t) ->
            fun (x4630 : vscode_TreeItemLabel or_string) ->
              Ojs.set_prop_ascii (t_to_js x4629) "label"
                (or_string_to_js vscode_TreeItemLabel_to_js x4630)
        let (get_id : t -> string) =
          fun (x4632 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4632) "id")
        let (set_id : t -> string -> unit) =
          fun (x4633 : t) ->
            fun (x4634 : string) ->
              Ojs.set_prop_ascii (t_to_js x4633) "id"
                (Ojs.string_to_js x4634)
        let (get_iconPath :
          t ->
            (vscode_ThemeIcon, vscode_Uri, anonymous_interface_15) union3
              or_string)
          =
          fun (x4635 : t) ->
            or_string_of_js
              (fun (x4636 : Ojs.t) ->
                 union3_of_js vscode_ThemeIcon_of_js vscode_Uri_of_js
                   anonymous_interface_15_of_js x4636)
              (Ojs.get_prop_ascii (t_to_js x4635) "iconPath")
        let (set_iconPath :
          t ->
            (vscode_ThemeIcon, vscode_Uri, anonymous_interface_15) union3
              or_string -> unit)
          =
          fun (x4640 : t) ->
            fun
              (x4641 :
                (vscode_ThemeIcon, vscode_Uri, anonymous_interface_15) union3
                  or_string)
              ->
              Ojs.set_prop_ascii (t_to_js x4640) "iconPath"
                (or_string_to_js
                   (fun
                      (x4642 :
                        (vscode_ThemeIcon, vscode_Uri,
                          anonymous_interface_15) union3)
                      ->
                      union3_to_js vscode_ThemeIcon_to_js vscode_Uri_to_js
                        anonymous_interface_15_to_js x4642) x4641)
        let (get_description : t -> bool or_string) =
          fun (x4646 : t) ->
            or_string_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4646) "description")
        let (set_description : t -> bool or_string -> unit) =
          fun (x4648 : t) ->
            fun (x4649 : bool or_string) ->
              Ojs.set_prop_ascii (t_to_js x4648) "description"
                (or_string_to_js Ojs.bool_to_js x4649)
        let (get_resourceUri : t -> vscode_Uri) =
          fun (x4651 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x4651) "resourceUri")
        let (set_resourceUri : t -> vscode_Uri -> unit) =
          fun (x4652 : t) ->
            fun (x4653 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x4652) "resourceUri"
                (vscode_Uri_to_js x4653)
        let (get_tooltip : t -> vscode_MarkdownString or_string or_undefined)
          =
          fun (x4654 : t) ->
            or_undefined_of_js
              (fun (x4655 : Ojs.t) ->
                 or_string_of_js vscode_MarkdownString_of_js x4655)
              (Ojs.get_prop_ascii (t_to_js x4654) "tooltip")
        let (set_tooltip :
          t -> vscode_MarkdownString or_string or_undefined -> unit) =
          fun (x4657 : t) ->
            fun (x4658 : vscode_MarkdownString or_string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4657) "tooltip"
                (or_undefined_to_js
                   (fun (x4659 : vscode_MarkdownString or_string) ->
                      or_string_to_js vscode_MarkdownString_to_js x4659)
                   x4658)
        let (get_command : t -> vscode_Command) =
          fun (x4661 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x4661) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x4662 : t) ->
            fun (x4663 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x4662) "command"
                (vscode_Command_to_js x4663)
        let (get_collapsibleState : t -> vscode_TreeItemCollapsibleState) =
          fun (x4664 : t) ->
            vscode_TreeItemCollapsibleState_of_js
              (Ojs.get_prop_ascii (t_to_js x4664) "collapsibleState")
        let (set_collapsibleState :
          t -> vscode_TreeItemCollapsibleState -> unit) =
          fun (x4665 : t) ->
            fun (x4666 : vscode_TreeItemCollapsibleState) ->
              Ojs.set_prop_ascii (t_to_js x4665) "collapsibleState"
                (vscode_TreeItemCollapsibleState_to_js x4666)
        let (get_contextValue : t -> string) =
          fun (x4667 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4667) "contextValue")
        let (set_contextValue : t -> string -> unit) =
          fun (x4668 : t) ->
            fun (x4669 : string) ->
              Ojs.set_prop_ascii (t_to_js x4668) "contextValue"
                (Ojs.string_to_js x4669)
        let (get_accessibilityInformation :
          t -> vscode_AccessibilityInformation) =
          fun (x4670 : t) ->
            vscode_AccessibilityInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x4670) "accessibilityInformation")
        let (set_accessibilityInformation :
          t -> vscode_AccessibilityInformation -> unit) =
          fun (x4671 : t) ->
            fun (x4672 : vscode_AccessibilityInformation) ->
              Ojs.set_prop_ascii (t_to_js x4671) "accessibilityInformation"
                (vscode_AccessibilityInformation_to_js x4672)
        let (create :
          label:vscode_TreeItemLabel or_string ->
            ?collapsibleState:vscode_TreeItemCollapsibleState -> unit -> t)
          =
          fun ~label:(x4673 : vscode_TreeItemLabel or_string) ->
            fun
              ?collapsibleState:(x4674 :
                                  vscode_TreeItemCollapsibleState option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "TreeItem")
                     (let x4675 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4675 "push"
                           [|(or_string_to_js vscode_TreeItemLabel_to_js
                                x4673)|]);
                      (match x4674 with
                       | Some x4676 ->
                           ignore
                             (Ojs.call x4675 "push"
                                [|(vscode_TreeItemCollapsibleState_to_js
                                     x4676)|])
                       | None -> ());
                      x4675))
        let (create' :
          resourceUri:vscode_Uri ->
            ?collapsibleState:vscode_TreeItemCollapsibleState -> unit -> t)
          =
          fun ~resourceUri:(x4678 : vscode_Uri) ->
            fun
              ?collapsibleState:(x4679 :
                                  vscode_TreeItemCollapsibleState option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "TreeItem")
                     (let x4680 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4680 "push" [|(vscode_Uri_to_js x4678)|]);
                      (match x4679 with
                       | Some x4681 ->
                           ignore
                             (Ojs.call x4680 "push"
                                [|(vscode_TreeItemCollapsibleState_to_js
                                     x4681)|])
                       | None -> ());
                      x4680))
      end
    module TreeItemCollapsibleState =
      struct
        type t = vscode_TreeItemCollapsibleState
        let rec t_of_js : Ojs.t -> t =
          fun (x4683 : Ojs.t) -> vscode_TreeItemCollapsibleState_of_js x4683
        and t_to_js : t -> Ojs.t =
          fun (x4682 : vscode_TreeItemCollapsibleState) ->
            vscode_TreeItemCollapsibleState_to_js x4682
      end
    module TreeItemLabel =
      struct
        type t = vscode_TreeItemLabel
        let rec t_of_js : Ojs.t -> t =
          fun (x4685 : Ojs.t) -> vscode_TreeItemLabel_of_js x4685
        and t_to_js : t -> Ojs.t =
          fun (x4684 : vscode_TreeItemLabel) ->
            vscode_TreeItemLabel_to_js x4684
        let (get_label : t -> string) =
          fun (x4686 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4686) "label")
        let (set_label : t -> string -> unit) =
          fun (x4687 : t) ->
            fun (x4688 : string) ->
              Ojs.set_prop_ascii (t_to_js x4687) "label"
                (Ojs.string_to_js x4688)
        let (get_highlights : t -> (float * float) list) =
          fun (x4689 : t) ->
            Ojs.list_of_js
              (fun (x4690 : Ojs.t) ->
                 let x4691 = x4690 in
                 ((Ojs.float_of_js (Ojs.array_get x4691 0)),
                   (Ojs.float_of_js (Ojs.array_get x4691 1))))
              (Ojs.get_prop_ascii (t_to_js x4689) "highlights")
        let (set_highlights : t -> (float * float) list -> unit) =
          fun (x4692 : t) ->
            fun (x4693 : (float * float) list) ->
              Ojs.set_prop_ascii (t_to_js x4692) "highlights"
                (Ojs.list_to_js
                   (fun (x4694 : (float * float)) ->
                      let (x4695, x4696) = x4694 in
                      let x4697 = Ojs.array_make 2 in
                      Ojs.array_set x4697 0 (Ojs.float_to_js x4695);
                      Ojs.array_set x4697 1 (Ojs.float_to_js x4696);
                      x4697) x4693)
      end
    module TerminalOptions =
      struct
        type t = vscode_TerminalOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4699 : Ojs.t) -> vscode_TerminalOptions_of_js x4699
        and t_to_js : t -> Ojs.t =
          fun (x4698 : vscode_TerminalOptions) ->
            vscode_TerminalOptions_to_js x4698
        let (get_name : t -> string) =
          fun (x4700 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4700) "name")
        let (set_name : t -> string -> unit) =
          fun (x4701 : t) ->
            fun (x4702 : string) ->
              Ojs.set_prop_ascii (t_to_js x4701) "name"
                (Ojs.string_to_js x4702)
        let (get_shellPath : t -> string) =
          fun (x4703 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4703) "shellPath")
        let (set_shellPath : t -> string -> unit) =
          fun (x4704 : t) ->
            fun (x4705 : string) ->
              Ojs.set_prop_ascii (t_to_js x4704) "shellPath"
                (Ojs.string_to_js x4705)
        let (get_shellArgs : t -> string list or_string) =
          fun (x4706 : t) ->
            or_string_of_js
              (fun (x4707 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4707)
              (Ojs.get_prop_ascii (t_to_js x4706) "shellArgs")
        let (set_shellArgs : t -> string list or_string -> unit) =
          fun (x4709 : t) ->
            fun (x4710 : string list or_string) ->
              Ojs.set_prop_ascii (t_to_js x4709) "shellArgs"
                (or_string_to_js
                   (fun (x4711 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x4711) x4710)
        let (get_cwd : t -> vscode_Uri or_string) =
          fun (x4713 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x4713) "cwd")
        let (set_cwd : t -> vscode_Uri or_string -> unit) =
          fun (x4715 : t) ->
            fun (x4716 : vscode_Uri or_string) ->
              Ojs.set_prop_ascii (t_to_js x4715) "cwd"
                (or_string_to_js vscode_Uri_to_js x4716)
        let (get_env : t -> anonymous_interface_45) =
          fun (x4718 : t) ->
            anonymous_interface_45_of_js
              (Ojs.get_prop_ascii (t_to_js x4718) "env")
        let (set_env : t -> anonymous_interface_45 -> unit) =
          fun (x4719 : t) ->
            fun (x4720 : anonymous_interface_45) ->
              Ojs.set_prop_ascii (t_to_js x4719) "env"
                (anonymous_interface_45_to_js x4720)
        let (get_strictEnv : t -> bool) =
          fun (x4721 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4721) "strictEnv")
        let (set_strictEnv : t -> bool -> unit) =
          fun (x4722 : t) ->
            fun (x4723 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4722) "strictEnv"
                (Ojs.bool_to_js x4723)
        let (get_hideFromUser : t -> bool) =
          fun (x4724 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4724) "hideFromUser")
        let (set_hideFromUser : t -> bool -> unit) =
          fun (x4725 : t) ->
            fun (x4726 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4725) "hideFromUser"
                (Ojs.bool_to_js x4726)
      end
    module ExtensionTerminalOptions =
      struct
        type t = vscode_ExtensionTerminalOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4728 : Ojs.t) -> vscode_ExtensionTerminalOptions_of_js x4728
        and t_to_js : t -> Ojs.t =
          fun (x4727 : vscode_ExtensionTerminalOptions) ->
            vscode_ExtensionTerminalOptions_to_js x4727
        let (get_name : t -> string) =
          fun (x4729 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4729) "name")
        let (set_name : t -> string -> unit) =
          fun (x4730 : t) ->
            fun (x4731 : string) ->
              Ojs.set_prop_ascii (t_to_js x4730) "name"
                (Ojs.string_to_js x4731)
        let (get_pty : t -> vscode_Pseudoterminal) =
          fun (x4732 : t) ->
            vscode_Pseudoterminal_of_js
              (Ojs.get_prop_ascii (t_to_js x4732) "pty")
        let (set_pty : t -> vscode_Pseudoterminal -> unit) =
          fun (x4733 : t) ->
            fun (x4734 : vscode_Pseudoterminal) ->
              Ojs.set_prop_ascii (t_to_js x4733) "pty"
                (vscode_Pseudoterminal_to_js x4734)
      end
    module Pseudoterminal =
      struct
        type t = vscode_Pseudoterminal
        let rec t_of_js : Ojs.t -> t =
          fun (x4736 : Ojs.t) -> vscode_Pseudoterminal_of_js x4736
        and t_to_js : t -> Ojs.t =
          fun (x4735 : vscode_Pseudoterminal) ->
            vscode_Pseudoterminal_to_js x4735
        let (get_onDidWrite : t -> string vscode_Event) =
          fun (x4737 : t) ->
            vscode_Event_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4737) "onDidWrite")
        let (set_onDidWrite : t -> string vscode_Event -> unit) =
          fun (x4739 : t) ->
            fun (x4740 : string vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x4739) "onDidWrite"
                (vscode_Event_to_js Ojs.string_to_js x4740)
        let (get_onDidOverrideDimensions :
          t -> vscode_TerminalDimensions or_undefined vscode_Event) =
          fun (x4742 : t) ->
            vscode_Event_of_js
              (fun (x4743 : Ojs.t) ->
                 or_undefined_of_js vscode_TerminalDimensions_of_js x4743)
              (Ojs.get_prop_ascii (t_to_js x4742) "onDidOverrideDimensions")
        let (set_onDidOverrideDimensions :
          t -> vscode_TerminalDimensions or_undefined vscode_Event -> unit) =
          fun (x4745 : t) ->
            fun (x4746 : vscode_TerminalDimensions or_undefined vscode_Event)
              ->
              Ojs.set_prop_ascii (t_to_js x4745) "onDidOverrideDimensions"
                (vscode_Event_to_js
                   (fun (x4747 : vscode_TerminalDimensions or_undefined) ->
                      or_undefined_to_js vscode_TerminalDimensions_to_js
                        x4747) x4746)
        let (get_onDidClose : t -> unit or_number vscode_Event) =
          fun (x4749 : t) ->
            vscode_Event_of_js
              (fun (x4750 : Ojs.t) -> or_number_of_js Ojs.unit_of_js x4750)
              (Ojs.get_prop_ascii (t_to_js x4749) "onDidClose")
        let (set_onDidClose : t -> unit or_number vscode_Event -> unit) =
          fun (x4752 : t) ->
            fun (x4753 : unit or_number vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x4752) "onDidClose"
                (vscode_Event_to_js
                   (fun (x4754 : unit or_number) ->
                      or_number_to_js Ojs.unit_to_js x4754) x4753)
        let (open_ :
          t ->
            initialDimensions:vscode_TerminalDimensions or_undefined -> unit)
          =
          fun (x4758 : t) ->
            fun
              ~initialDimensions:(x4756 :
                                   vscode_TerminalDimensions or_undefined)
              ->
              ignore
                (Ojs.call (t_to_js x4758) "open"
                   [|(or_undefined_to_js vscode_TerminalDimensions_to_js
                        x4756)|])
        let (close : t -> unit) =
          fun (x4759 : t) -> ignore (Ojs.call (t_to_js x4759) "close" [||])
        let (handleInput : t -> data:string -> unit) =
          fun (x4761 : t) ->
            fun ~data:(x4760 : string) ->
              ignore
                (Ojs.call (t_to_js x4761) "handleInput"
                   [|(Ojs.string_to_js x4760)|])
        let (setDimensions :
          t -> dimensions:vscode_TerminalDimensions -> unit) =
          fun (x4763 : t) ->
            fun ~dimensions:(x4762 : vscode_TerminalDimensions) ->
              ignore
                (Ojs.call (t_to_js x4763) "setDimensions"
                   [|(vscode_TerminalDimensions_to_js x4762)|])
      end
    module TerminalDimensions =
      struct
        type t = vscode_TerminalDimensions
        let rec t_of_js : Ojs.t -> t =
          fun (x4765 : Ojs.t) -> vscode_TerminalDimensions_of_js x4765
        and t_to_js : t -> Ojs.t =
          fun (x4764 : vscode_TerminalDimensions) ->
            vscode_TerminalDimensions_to_js x4764
        let (get_columns : t -> float) =
          fun (x4766 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4766) "columns")
        let (get_rows : t -> float) =
          fun (x4767 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4767) "rows")
      end
    module TerminalExitStatus =
      struct
        type t = vscode_TerminalExitStatus
        let rec t_of_js : Ojs.t -> t =
          fun (x4769 : Ojs.t) -> vscode_TerminalExitStatus_of_js x4769
        and t_to_js : t -> Ojs.t =
          fun (x4768 : vscode_TerminalExitStatus) ->
            vscode_TerminalExitStatus_to_js x4768
        let (get_code : t -> float or_undefined) =
          fun (x4770 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4770) "code")
      end
    module EnvironmentVariableMutatorType =
      struct
        type t = vscode_EnvironmentVariableMutatorType
        let rec t_of_js : Ojs.t -> t =
          fun (x4773 : Ojs.t) ->
            vscode_EnvironmentVariableMutatorType_of_js x4773
        and t_to_js : t -> Ojs.t =
          fun (x4772 : vscode_EnvironmentVariableMutatorType) ->
            vscode_EnvironmentVariableMutatorType_to_js x4772
      end
    module EnvironmentVariableMutator =
      struct
        type t = vscode_EnvironmentVariableMutator
        let rec t_of_js : Ojs.t -> t =
          fun (x4775 : Ojs.t) ->
            vscode_EnvironmentVariableMutator_of_js x4775
        and t_to_js : t -> Ojs.t =
          fun (x4774 : vscode_EnvironmentVariableMutator) ->
            vscode_EnvironmentVariableMutator_to_js x4774
        let (get_type : t -> vscode_EnvironmentVariableMutatorType) =
          fun (x4776 : t) ->
            vscode_EnvironmentVariableMutatorType_of_js
              (Ojs.get_prop_ascii (t_to_js x4776) "type")
        let (get_value : t -> string) =
          fun (x4777 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4777) "value")
      end
    module EnvironmentVariableCollection =
      struct
        type t = vscode_EnvironmentVariableCollection
        let rec t_of_js : Ojs.t -> t =
          fun (x4779 : Ojs.t) ->
            vscode_EnvironmentVariableCollection_of_js x4779
        and t_to_js : t -> Ojs.t =
          fun (x4778 : vscode_EnvironmentVariableCollection) ->
            vscode_EnvironmentVariableCollection_to_js x4778
        let (get_persistent : t -> bool) =
          fun (x4780 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4780) "persistent")
        let (set_persistent : t -> bool -> unit) =
          fun (x4781 : t) ->
            fun (x4782 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4781) "persistent"
                (Ojs.bool_to_js x4782)
        let (replace : t -> variable:string -> value:string -> unit) =
          fun (x4785 : t) ->
            fun ~variable:(x4783 : string) ->
              fun ~value:(x4784 : string) ->
                ignore
                  (Ojs.call (t_to_js x4785) "replace"
                     [|(Ojs.string_to_js x4783);(Ojs.string_to_js x4784)|])
        let (append : t -> variable:string -> value:string -> unit) =
          fun (x4788 : t) ->
            fun ~variable:(x4786 : string) ->
              fun ~value:(x4787 : string) ->
                ignore
                  (Ojs.call (t_to_js x4788) "append"
                     [|(Ojs.string_to_js x4786);(Ojs.string_to_js x4787)|])
        let (prepend : t -> variable:string -> value:string -> unit) =
          fun (x4791 : t) ->
            fun ~variable:(x4789 : string) ->
              fun ~value:(x4790 : string) ->
                ignore
                  (Ojs.call (t_to_js x4791) "prepend"
                     [|(Ojs.string_to_js x4789);(Ojs.string_to_js x4790)|])
        let (get_ :
          t ->
            variable:string -> vscode_EnvironmentVariableMutator or_undefined)
          =
          fun (x4793 : t) ->
            fun ~variable:(x4792 : string) ->
              or_undefined_of_js vscode_EnvironmentVariableMutator_of_js
                (Ojs.call (t_to_js x4793) "get" [|(Ojs.string_to_js x4792)|])
        let (forEach :
          t ->
            callback:(variable:string ->
                        mutator:vscode_EnvironmentVariableMutator ->
                          collection:t -> any)
              -> ?thisArg:any -> unit -> unit)
          =
          fun (x4802 : t) ->
            fun
              ~callback:(x4795 :
                          variable:string ->
                            mutator:vscode_EnvironmentVariableMutator ->
                              collection:t -> any)
              ->
              fun ?thisArg:(x4796 : any option) ->
                fun () ->
                  ignore
                    (let x4803 = t_to_js x4802 in
                     Ojs.call (Ojs.get_prop_ascii x4803 "forEach") "apply"
                       [|x4803;((let x4797 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4797 "push"
                                      [|(Ojs.fun_to_js 3
                                           (fun (x4799 : Ojs.t) ->
                                              fun (x4800 : Ojs.t) ->
                                                fun (x4801 : Ojs.t) ->
                                                  any_to_js
                                                    (x4795
                                                       ~variable:(Ojs.string_of_js
                                                                    x4799)
                                                       ~mutator:(vscode_EnvironmentVariableMutator_of_js
                                                                   x4800)
                                                       ~collection:(t_of_js
                                                                    x4801))))|]);
                                 (match x4796 with
                                  | Some x4798 ->
                                      ignore
                                        (Ojs.call x4797 "push"
                                           [|(any_to_js x4798)|])
                                  | None -> ());
                                 x4797))|])
        let (delete : t -> variable:string -> unit) =
          fun (x4805 : t) ->
            fun ~variable:(x4804 : string) ->
              ignore
                (Ojs.call (t_to_js x4805) "delete"
                   [|(Ojs.string_to_js x4804)|])
        let (clear : t -> unit) =
          fun (x4806 : t) -> ignore (Ojs.call (t_to_js x4806) "clear" [||])
      end
    module ProgressLocation =
      struct
        type t = vscode_ProgressLocation
        let rec t_of_js : Ojs.t -> t =
          fun (x4808 : Ojs.t) -> vscode_ProgressLocation_of_js x4808
        and t_to_js : t -> Ojs.t =
          fun (x4807 : vscode_ProgressLocation) ->
            vscode_ProgressLocation_to_js x4807
      end
    module ProgressOptions =
      struct
        type t = vscode_ProgressOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4810 : Ojs.t) -> vscode_ProgressOptions_of_js x4810
        and t_to_js : t -> Ojs.t =
          fun (x4809 : vscode_ProgressOptions) ->
            vscode_ProgressOptions_to_js x4809
        let (get_location :
          t ->
            ((vscode_ProgressLocation, anonymous_interface_39) union2,
              [ `Notification  | `SourceControl  | `Window ]) or_enum)
          =
          fun (x4811 : t) ->
            or_enum_of_js
              (fun (x4812 : Ojs.t) ->
                 union2_of_js vscode_ProgressLocation_of_js
                   anonymous_interface_39_of_js x4812)
              (fun (x4815 : Ojs.t) ->
                 let x4816 = x4815 in
                 match Ojs.int_of_js x4816 with
                 | 15 -> `Notification
                 | 1 -> `SourceControl
                 | 10 -> `Window
                 | _ -> assert false)
              (Ojs.get_prop_ascii (t_to_js x4811) "location")
        let (set_location :
          t ->
            ((vscode_ProgressLocation, anonymous_interface_39) union2,
              [ `Notification  | `SourceControl  | `Window ]) or_enum -> 
              unit)
          =
          fun (x4817 : t) ->
            fun
              (x4818 :
                ((vscode_ProgressLocation, anonymous_interface_39) union2,
                  [ `Notification  | `SourceControl  | `Window ]) or_enum)
              ->
              Ojs.set_prop_ascii (t_to_js x4817) "location"
                (or_enum_to_js
                   (fun
                      (x4819 :
                        (vscode_ProgressLocation, anonymous_interface_39)
                          union2)
                      ->
                      union2_to_js vscode_ProgressLocation_to_js
                        anonymous_interface_39_to_js x4819)
                   (fun
                      (x4822 :
                        [ `Notification  | `SourceControl  | `Window ])
                      ->
                      match x4822 with
                      | `Notification -> Ojs.string_to_js "Notification"
                      | `SourceControl -> Ojs.string_to_js "SourceControl"
                      | `Window -> Ojs.string_to_js "Window") x4818)
        let (get_title : t -> string) =
          fun (x4823 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4823) "title")
        let (set_title : t -> string -> unit) =
          fun (x4824 : t) ->
            fun (x4825 : string) ->
              Ojs.set_prop_ascii (t_to_js x4824) "title"
                (Ojs.string_to_js x4825)
        let (get_cancellable : t -> bool) =
          fun (x4826 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4826) "cancellable")
        let (set_cancellable : t -> bool -> unit) =
          fun (x4827 : t) ->
            fun (x4828 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4827) "cancellable"
                (Ojs.bool_to_js x4828)
      end
    module QuickInput =
      struct
        type t = vscode_QuickInput
        let rec t_of_js : Ojs.t -> t =
          fun (x4830 : Ojs.t) -> vscode_QuickInput_of_js x4830
        and t_to_js : t -> Ojs.t =
          fun (x4829 : vscode_QuickInput) -> vscode_QuickInput_to_js x4829
        let (get_title : t -> string or_undefined) =
          fun (x4831 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4831) "title")
        let (set_title : t -> string or_undefined -> unit) =
          fun (x4833 : t) ->
            fun (x4834 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4833) "title"
                (or_undefined_to_js Ojs.string_to_js x4834)
        let (get_step : t -> float or_undefined) =
          fun (x4836 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4836) "step")
        let (set_step : t -> float or_undefined -> unit) =
          fun (x4838 : t) ->
            fun (x4839 : float or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4838) "step"
                (or_undefined_to_js Ojs.float_to_js x4839)
        let (get_totalSteps : t -> float or_undefined) =
          fun (x4841 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4841) "totalSteps")
        let (set_totalSteps : t -> float or_undefined -> unit) =
          fun (x4843 : t) ->
            fun (x4844 : float or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4843) "totalSteps"
                (or_undefined_to_js Ojs.float_to_js x4844)
        let (get_enabled : t -> bool) =
          fun (x4846 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4846) "enabled")
        let (set_enabled : t -> bool -> unit) =
          fun (x4847 : t) ->
            fun (x4848 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4847) "enabled"
                (Ojs.bool_to_js x4848)
        let (get_busy : t -> bool) =
          fun (x4849 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4849) "busy")
        let (set_busy : t -> bool -> unit) =
          fun (x4850 : t) ->
            fun (x4851 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4850) "busy"
                (Ojs.bool_to_js x4851)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x4852 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4852) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x4853 : t) ->
            fun (x4854 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4853) "ignoreFocusOut"
                (Ojs.bool_to_js x4854)
        let (show : t -> unit) =
          fun (x4855 : t) -> ignore (Ojs.call (t_to_js x4855) "show" [||])
        let (hide : t -> unit) =
          fun (x4856 : t) -> ignore (Ojs.call (t_to_js x4856) "hide" [||])
        let (get_onDidHide : t -> unit vscode_Event) =
          fun (x4857 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4857) "onDidHide")
        let (set_onDidHide : t -> unit vscode_Event -> unit) =
          fun (x4859 : t) ->
            fun (x4860 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x4859) "onDidHide"
                (vscode_Event_to_js Ojs.unit_to_js x4860)
        let (dispose : t -> unit) =
          fun (x4862 : t) -> ignore (Ojs.call (t_to_js x4862) "dispose" [||])
      end
    module QuickPick =
      struct
        include struct include QuickInput end
        type 'T t = QuickInput.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4864 : Ojs.t) -> QuickInput.t_of_js x4864
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4863 : QuickInput.t) -> QuickInput.t_to_js x4863
        let (get_value : 'T t -> string) =
          fun (x4865 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4865) "value")
        let (set_value : 'T t -> string -> unit) =
          fun (x4867 : 'T t) ->
            fun (x4868 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4867) "value"
                (Ojs.string_to_js x4868)
        let (get_placeholder : 'T t -> string or_undefined) =
          fun (x4870 : 'T t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4870) "placeholder")
        let (set_placeholder : 'T t -> string or_undefined -> unit) =
          fun (x4873 : 'T t) ->
            fun (x4874 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4873) "placeholder"
                (or_undefined_to_js Ojs.string_to_js x4874)
        let (get_onDidChangeValue : 'T t -> string vscode_Event) =
          fun (x4877 : 'T t) ->
            vscode_Event_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4877)
                 "onDidChangeValue")
        let (get_onDidAccept : 'T t -> unit vscode_Event) =
          fun (x4880 : 'T t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4880) "onDidAccept")
        let (get_buttons : 'T t -> vscode_QuickInputButton list) =
          fun (x4883 : 'T t) ->
            Ojs.list_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4883) "buttons")
        let (set_buttons : 'T t -> vscode_QuickInputButton list -> unit) =
          fun (x4886 : 'T t) ->
            fun (x4887 : vscode_QuickInputButton list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4886) "buttons"
                (Ojs.list_to_js vscode_QuickInputButton_to_js x4887)
        let (get_onDidTriggerButton :
          'T t -> vscode_QuickInputButton vscode_Event) =
          fun (x4890 : 'T t) ->
            vscode_Event_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4890)
                 "onDidTriggerButton")
        let (get_items : 'T t -> 'T list) =
          fun (x4893 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4893) "items")
        let (set_items : 'T t -> 'T list -> unit) =
          fun (x4896 : 'T t) ->
            fun (x4897 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4896) "items"
                (Ojs.list_to_js Obj.magic x4897)
        let (get_canSelectMany : 'T t -> bool) =
          fun (x4900 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4900) "canSelectMany")
        let (set_canSelectMany : 'T t -> bool -> unit) =
          fun (x4902 : 'T t) ->
            fun (x4903 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4902) "canSelectMany"
                (Ojs.bool_to_js x4903)
        let (get_matchOnDescription : 'T t -> bool) =
          fun (x4905 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4905)
                 "matchOnDescription")
        let (set_matchOnDescription : 'T t -> bool -> unit) =
          fun (x4907 : 'T t) ->
            fun (x4908 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4907)
                "matchOnDescription" (Ojs.bool_to_js x4908)
        let (get_matchOnDetail : 'T t -> bool) =
          fun (x4910 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4910) "matchOnDetail")
        let (set_matchOnDetail : 'T t -> bool -> unit) =
          fun (x4912 : 'T t) ->
            fun (x4913 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4912) "matchOnDetail"
                (Ojs.bool_to_js x4913)
        let (get_activeItems : 'T t -> 'T list) =
          fun (x4915 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4915) "activeItems")
        let (set_activeItems : 'T t -> 'T list -> unit) =
          fun (x4918 : 'T t) ->
            fun (x4919 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4918) "activeItems"
                (Ojs.list_to_js Obj.magic x4919)
        let (get_onDidChangeActive : 'T t -> 'T list vscode_Event) =
          fun (x4922 : 'T t) ->
            vscode_Event_of_js
              (fun (x4924 : Ojs.t) -> Ojs.list_of_js Obj.magic x4924)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4922)
                 "onDidChangeActive")
        let (get_selectedItems : 'T t -> 'T list) =
          fun (x4926 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4926) "selectedItems")
        let (set_selectedItems : 'T t -> 'T list -> unit) =
          fun (x4929 : 'T t) ->
            fun (x4930 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4929) "selectedItems"
                (Ojs.list_to_js Obj.magic x4930)
        let (get_onDidChangeSelection : 'T t -> 'T list vscode_Event) =
          fun (x4933 : 'T t) ->
            vscode_Event_of_js
              (fun (x4935 : Ojs.t) -> Ojs.list_of_js Obj.magic x4935)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4933)
                 "onDidChangeSelection")
      end
    module InputBox =
      struct
        include struct include QuickInput end
        let (get_value : t -> string) =
          fun (x4937 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4937) "value")
        let (set_value : t -> string -> unit) =
          fun (x4938 : t) ->
            fun (x4939 : string) ->
              Ojs.set_prop_ascii (t_to_js x4938) "value"
                (Ojs.string_to_js x4939)
        let (get_placeholder : t -> string or_undefined) =
          fun (x4940 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4940) "placeholder")
        let (set_placeholder : t -> string or_undefined -> unit) =
          fun (x4942 : t) ->
            fun (x4943 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4942) "placeholder"
                (or_undefined_to_js Ojs.string_to_js x4943)
        let (get_password : t -> bool) =
          fun (x4945 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4945) "password")
        let (set_password : t -> bool -> unit) =
          fun (x4946 : t) ->
            fun (x4947 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4946) "password"
                (Ojs.bool_to_js x4947)
        let (get_onDidChangeValue : t -> string vscode_Event) =
          fun (x4948 : t) ->
            vscode_Event_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4948) "onDidChangeValue")
        let (get_onDidAccept : t -> unit vscode_Event) =
          fun (x4950 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4950) "onDidAccept")
        let (get_buttons : t -> vscode_QuickInputButton list) =
          fun (x4952 : t) ->
            Ojs.list_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js x4952) "buttons")
        let (set_buttons : t -> vscode_QuickInputButton list -> unit) =
          fun (x4954 : t) ->
            fun (x4955 : vscode_QuickInputButton list) ->
              Ojs.set_prop_ascii (t_to_js x4954) "buttons"
                (Ojs.list_to_js vscode_QuickInputButton_to_js x4955)
        let (get_onDidTriggerButton :
          t -> vscode_QuickInputButton vscode_Event) =
          fun (x4957 : t) ->
            vscode_Event_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js x4957) "onDidTriggerButton")
        let (get_prompt : t -> string or_undefined) =
          fun (x4959 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4959) "prompt")
        let (set_prompt : t -> string or_undefined -> unit) =
          fun (x4961 : t) ->
            fun (x4962 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4961) "prompt"
                (or_undefined_to_js Ojs.string_to_js x4962)
        let (get_validationMessage : t -> string or_undefined) =
          fun (x4964 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4964) "validationMessage")
        let (set_validationMessage : t -> string or_undefined -> unit) =
          fun (x4966 : t) ->
            fun (x4967 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4966) "validationMessage"
                (or_undefined_to_js Ojs.string_to_js x4967)
      end
    module QuickInputButton =
      struct
        type t = vscode_QuickInputButton
        let rec t_of_js : Ojs.t -> t =
          fun (x4970 : Ojs.t) -> vscode_QuickInputButton_of_js x4970
        and t_to_js : t -> Ojs.t =
          fun (x4969 : vscode_QuickInputButton) ->
            vscode_QuickInputButton_to_js x4969
        let (get_iconPath :
          t -> (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3)
          =
          fun (x4971 : t) ->
            union3_of_js vscode_ThemeIcon_of_js vscode_Uri_of_js
              anonymous_interface_14_of_js
              (Ojs.get_prop_ascii (t_to_js x4971) "iconPath")
        let (get_tooltip : t -> string or_undefined) =
          fun (x4975 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4975) "tooltip")
      end
    module QuickInputButtons =
      struct
        type t = vscode_QuickInputButtons
        let rec t_of_js : Ojs.t -> t =
          fun (x4978 : Ojs.t) -> vscode_QuickInputButtons_of_js x4978
        and t_to_js : t -> Ojs.t =
          fun (x4977 : vscode_QuickInputButtons) ->
            vscode_QuickInputButtons_to_js x4977
        let (get_Back : unit -> vscode_QuickInputButton) =
          fun () ->
            vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "QuickInputButtons") "Back")
        let (create : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "QuickInputButtons") [||])
      end
    module TextDocumentContentChangeEvent =
      struct
        type t = vscode_TextDocumentContentChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x4980 : Ojs.t) ->
            vscode_TextDocumentContentChangeEvent_of_js x4980
        and t_to_js : t -> Ojs.t =
          fun (x4979 : vscode_TextDocumentContentChangeEvent) ->
            vscode_TextDocumentContentChangeEvent_to_js x4979
        let (get_range : t -> vscode_Range) =
          fun (x4981 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x4981) "range")
        let (get_rangeOffset : t -> float) =
          fun (x4982 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4982) "rangeOffset")
        let (get_rangeLength : t -> float) =
          fun (x4983 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4983) "rangeLength")
        let (get_text : t -> string) =
          fun (x4984 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4984) "text")
      end
    module TextDocumentChangeEvent =
      struct
        type t = vscode_TextDocumentChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x4986 : Ojs.t) -> vscode_TextDocumentChangeEvent_of_js x4986
        and t_to_js : t -> Ojs.t =
          fun (x4985 : vscode_TextDocumentChangeEvent) ->
            vscode_TextDocumentChangeEvent_to_js x4985
        let (get_document : t -> vscode_TextDocument) =
          fun (x4987 : t) ->
            vscode_TextDocument_of_js
              (Ojs.get_prop_ascii (t_to_js x4987) "document")
        let (get_contentChanges :
          t -> vscode_TextDocumentContentChangeEvent list) =
          fun (x4988 : t) ->
            Ojs.list_of_js vscode_TextDocumentContentChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x4988) "contentChanges")
      end
    module TextDocumentSaveReason =
      struct
        type t = vscode_TextDocumentSaveReason
        let rec t_of_js : Ojs.t -> t =
          fun (x4991 : Ojs.t) -> vscode_TextDocumentSaveReason_of_js x4991
        and t_to_js : t -> Ojs.t =
          fun (x4990 : vscode_TextDocumentSaveReason) ->
            vscode_TextDocumentSaveReason_to_js x4990
      end
    module TextDocumentWillSaveEvent =
      struct
        type t = vscode_TextDocumentWillSaveEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x4993 : Ojs.t) -> vscode_TextDocumentWillSaveEvent_of_js x4993
        and t_to_js : t -> Ojs.t =
          fun (x4992 : vscode_TextDocumentWillSaveEvent) ->
            vscode_TextDocumentWillSaveEvent_to_js x4992
        let (get_document : t -> vscode_TextDocument) =
          fun (x4994 : t) ->
            vscode_TextDocument_of_js
              (Ojs.get_prop_ascii (t_to_js x4994) "document")
        let (get_reason : t -> vscode_TextDocumentSaveReason) =
          fun (x4995 : t) ->
            vscode_TextDocumentSaveReason_of_js
              (Ojs.get_prop_ascii (t_to_js x4995) "reason")
        let (waitUntil :
          t -> thenable:vscode_TextEdit list _Thenable -> unit) =
          fun (x4999 : t) ->
            fun ~thenable:(x4996 : vscode_TextEdit list _Thenable) ->
              ignore
                (Ojs.call (t_to_js x4999) "waitUntil"
                   [|(_Thenable_to_js
                        (fun (x4997 : vscode_TextEdit list) ->
                           Ojs.list_to_js vscode_TextEdit_to_js x4997) x4996)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5002 : t) ->
            fun ~thenable:(x5000 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5002) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5000)|])
      end
    module FileWillCreateEvent =
      struct
        type t = vscode_FileWillCreateEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5004 : Ojs.t) -> vscode_FileWillCreateEvent_of_js x5004
        and t_to_js : t -> Ojs.t =
          fun (x5003 : vscode_FileWillCreateEvent) ->
            vscode_FileWillCreateEvent_to_js x5003
        let (get_files : t -> vscode_Uri list) =
          fun (x5005 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5005) "files")
        let (waitUntil :
          t -> thenable:vscode_WorkspaceEdit _Thenable -> unit) =
          fun (x5009 : t) ->
            fun ~thenable:(x5007 : vscode_WorkspaceEdit _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5009) "waitUntil"
                   [|(_Thenable_to_js vscode_WorkspaceEdit_to_js x5007)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5012 : t) ->
            fun ~thenable:(x5010 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5012) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5010)|])
      end
    module FileCreateEvent =
      struct
        type t = vscode_FileCreateEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5014 : Ojs.t) -> vscode_FileCreateEvent_of_js x5014
        and t_to_js : t -> Ojs.t =
          fun (x5013 : vscode_FileCreateEvent) ->
            vscode_FileCreateEvent_to_js x5013
        let (get_files : t -> vscode_Uri list) =
          fun (x5015 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5015) "files")
      end
    module FileWillDeleteEvent =
      struct
        type t = vscode_FileWillDeleteEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5018 : Ojs.t) -> vscode_FileWillDeleteEvent_of_js x5018
        and t_to_js : t -> Ojs.t =
          fun (x5017 : vscode_FileWillDeleteEvent) ->
            vscode_FileWillDeleteEvent_to_js x5017
        let (get_files : t -> vscode_Uri list) =
          fun (x5019 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5019) "files")
        let (waitUntil :
          t -> thenable:vscode_WorkspaceEdit _Thenable -> unit) =
          fun (x5023 : t) ->
            fun ~thenable:(x5021 : vscode_WorkspaceEdit _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5023) "waitUntil"
                   [|(_Thenable_to_js vscode_WorkspaceEdit_to_js x5021)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5026 : t) ->
            fun ~thenable:(x5024 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5026) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5024)|])
      end
    module FileDeleteEvent =
      struct
        type t = vscode_FileDeleteEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5028 : Ojs.t) -> vscode_FileDeleteEvent_of_js x5028
        and t_to_js : t -> Ojs.t =
          fun (x5027 : vscode_FileDeleteEvent) ->
            vscode_FileDeleteEvent_to_js x5027
        let (get_files : t -> vscode_Uri list) =
          fun (x5029 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5029) "files")
      end
    module FileWillRenameEvent =
      struct
        type t = vscode_FileWillRenameEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5032 : Ojs.t) -> vscode_FileWillRenameEvent_of_js x5032
        and t_to_js : t -> Ojs.t =
          fun (x5031 : vscode_FileWillRenameEvent) ->
            vscode_FileWillRenameEvent_to_js x5031
        let (get_files : t -> anonymous_interface_19 list) =
          fun (x5033 : t) ->
            Ojs.list_of_js anonymous_interface_19_of_js
              (Ojs.get_prop_ascii (t_to_js x5033) "files")
        let (waitUntil :
          t -> thenable:vscode_WorkspaceEdit _Thenable -> unit) =
          fun (x5037 : t) ->
            fun ~thenable:(x5035 : vscode_WorkspaceEdit _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5037) "waitUntil"
                   [|(_Thenable_to_js vscode_WorkspaceEdit_to_js x5035)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5040 : t) ->
            fun ~thenable:(x5038 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5040) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5038)|])
      end
    module FileRenameEvent =
      struct
        type t = vscode_FileRenameEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5042 : Ojs.t) -> vscode_FileRenameEvent_of_js x5042
        and t_to_js : t -> Ojs.t =
          fun (x5041 : vscode_FileRenameEvent) ->
            vscode_FileRenameEvent_to_js x5041
        let (get_files : t -> anonymous_interface_19 list) =
          fun (x5043 : t) ->
            Ojs.list_of_js anonymous_interface_19_of_js
              (Ojs.get_prop_ascii (t_to_js x5043) "files")
      end
    module WorkspaceFoldersChangeEvent =
      struct
        type t = vscode_WorkspaceFoldersChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5046 : Ojs.t) ->
            vscode_WorkspaceFoldersChangeEvent_of_js x5046
        and t_to_js : t -> Ojs.t =
          fun (x5045 : vscode_WorkspaceFoldersChangeEvent) ->
            vscode_WorkspaceFoldersChangeEvent_to_js x5045
        let (get_added : t -> vscode_WorkspaceFolder list) =
          fun (x5047 : t) ->
            Ojs.list_of_js vscode_WorkspaceFolder_of_js
              (Ojs.get_prop_ascii (t_to_js x5047) "added")
        let (get_removed : t -> vscode_WorkspaceFolder list) =
          fun (x5049 : t) ->
            Ojs.list_of_js vscode_WorkspaceFolder_of_js
              (Ojs.get_prop_ascii (t_to_js x5049) "removed")
      end
    module WorkspaceFolder =
      struct
        type t = vscode_WorkspaceFolder
        let rec t_of_js : Ojs.t -> t =
          fun (x5052 : Ojs.t) -> vscode_WorkspaceFolder_of_js x5052
        and t_to_js : t -> Ojs.t =
          fun (x5051 : vscode_WorkspaceFolder) ->
            vscode_WorkspaceFolder_to_js x5051
        let (get_uri : t -> vscode_Uri) =
          fun (x5053 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x5053) "uri")
        let (get_name : t -> string) =
          fun (x5054 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5054) "name")
        let (get_index : t -> int) =
          fun (x5055 : t) ->
            Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x5055) "index")
      end
    module Workspace =
      struct
        let (fs : vscode_FileSystem) =
          vscode_FileSystem_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "fs")
        let (rootPath : string or_undefined) =
          or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "rootPath")
        let (workspaceFolders : vscode_WorkspaceFolder list or_undefined) =
          or_undefined_of_js
            (fun (x5057 : Ojs.t) ->
               Ojs.list_of_js vscode_WorkspaceFolder_of_js x5057)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "workspaceFolders")
        let (name : string or_undefined) =
          or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "name")
        let (workspaceFile : vscode_Uri or_undefined) =
          or_undefined_of_js vscode_Uri_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "workspaceFile")
        let (onDidChangeWorkspaceFolders :
          vscode_WorkspaceFoldersChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_WorkspaceFoldersChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidChangeWorkspaceFolders")
        let (getWorkspaceFolder :
          uri:vscode_Uri -> vscode_WorkspaceFolder or_undefined) =
          fun ~uri:(x5062 : vscode_Uri) ->
            or_undefined_of_js vscode_WorkspaceFolder_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "getWorkspaceFolder"
                 [|(vscode_Uri_to_js x5062)|])
        let (asRelativePath :
          pathOrUri:vscode_Uri or_string ->
            ?includeWorkspaceFolder:bool -> unit -> string)
          =
          fun ~pathOrUri:(x5064 : vscode_Uri or_string) ->
            fun ?includeWorkspaceFolder:(x5065 : bool option) ->
              fun () ->
                Ojs.string_of_js
                  (let x5069 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                   Ojs.call (Ojs.get_prop_ascii x5069 "asRelativePath")
                     "apply"
                     [|x5069;((let x5066 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5066 "push"
                                    [|(or_string_to_js vscode_Uri_to_js x5064)|]);
                               (match x5065 with
                                | Some x5067 ->
                                    ignore
                                      (Ojs.call x5066 "push"
                                         [|(Ojs.bool_to_js x5067)|])
                                | None -> ());
                               x5066))|])
        let (updateWorkspaceFolders :
          start:float ->
            deleteCount:float or_null_or_undefined ->
              workspaceFoldersToAdd:anonymous_interface_36 list -> bool)
          =
          fun ~start:(x5070 : float) ->
            fun ~deleteCount:(x5071 : float or_null_or_undefined) ->
              fun
                ~workspaceFoldersToAdd:(x5072 : anonymous_interface_36 list)
                ->
                Ojs.bool_of_js
                  (let x5076 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                   Ojs.call
                     (Ojs.get_prop_ascii x5076 "updateWorkspaceFolders")
                     "apply"
                     [|x5076;((let x5073 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5073 "push"
                                    [|(Ojs.float_to_js x5070)|]);
                               ignore
                                 (Ojs.call x5073 "push"
                                    [|(or_null_or_undefined_to_js
                                         Ojs.float_to_js x5071)|]);
                               List.iter
                                 (fun (x5074 : anonymous_interface_36) ->
                                    ignore
                                      (Ojs.call x5073 "push"
                                         [|(anonymous_interface_36_to_js
                                              x5074)|])) x5072;
                               x5073))|])
        let (createFileSystemWatcher :
          globPattern:vscode_GlobPattern ->
            ?ignoreCreateEvents:bool ->
              ?ignoreChangeEvents:bool ->
                ?ignoreDeleteEvents:bool -> unit -> vscode_FileSystemWatcher)
          =
          fun ~globPattern:(x5077 : vscode_GlobPattern) ->
            fun ?ignoreCreateEvents:(x5078 : bool option) ->
              fun ?ignoreChangeEvents:(x5079 : bool option) ->
                fun ?ignoreDeleteEvents:(x5080 : bool option) ->
                  fun () ->
                    vscode_FileSystemWatcher_of_js
                      (let x5085 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "workspace" in
                       Ojs.call
                         (Ojs.get_prop_ascii x5085 "createFileSystemWatcher")
                         "apply"
                         [|x5085;((let x5081 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5081 "push"
                                        [|(vscode_GlobPattern_to_js x5077)|]);
                                   (match x5078 with
                                    | Some x5084 ->
                                        ignore
                                          (Ojs.call x5081 "push"
                                             [|(Ojs.bool_to_js x5084)|])
                                    | None -> ());
                                   (match x5079 with
                                    | Some x5083 ->
                                        ignore
                                          (Ojs.call x5081 "push"
                                             [|(Ojs.bool_to_js x5083)|])
                                    | None -> ());
                                   (match x5080 with
                                    | Some x5082 ->
                                        ignore
                                          (Ojs.call x5081 "push"
                                             [|(Ojs.bool_to_js x5082)|])
                                    | None -> ());
                                   x5081))|])
        let (findFiles :
          include_:vscode_GlobPattern ->
            ?exclude:vscode_GlobPattern or_null ->
              ?maxResults:float ->
                ?token:vscode_CancellationToken ->
                  unit -> vscode_Uri list _Thenable)
          =
          fun ~include_:(x5086 : vscode_GlobPattern) ->
            fun ?exclude:(x5087 : vscode_GlobPattern or_null option) ->
              fun ?maxResults:(x5088 : float option) ->
                fun ?token:(x5089 : vscode_CancellationToken option) ->
                  fun () ->
                    _Thenable_of_js
                      (fun (x5096 : Ojs.t) ->
                         Ojs.list_of_js vscode_Uri_of_js x5096)
                      (let x5095 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "workspace" in
                       Ojs.call (Ojs.get_prop_ascii x5095 "findFiles")
                         "apply"
                         [|x5095;((let x5090 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5090 "push"
                                        [|(vscode_GlobPattern_to_js x5086)|]);
                                   (match x5087 with
                                    | Some x5093 ->
                                        ignore
                                          (Ojs.call x5090 "push"
                                             [|(or_null_to_js
                                                  vscode_GlobPattern_to_js
                                                  x5093)|])
                                    | None -> ());
                                   (match x5088 with
                                    | Some x5092 ->
                                        ignore
                                          (Ojs.call x5090 "push"
                                             [|(Ojs.float_to_js x5092)|])
                                    | None -> ());
                                   (match x5089 with
                                    | Some x5091 ->
                                        ignore
                                          (Ojs.call x5090 "push"
                                             [|(vscode_CancellationToken_to_js
                                                  x5091)|])
                                    | None -> ());
                                   x5090))|])
        let (saveAll : ?includeUntitled:bool -> unit -> bool _Thenable) =
          fun ?includeUntitled:(x5098 : bool option) ->
            fun () ->
              _Thenable_of_js Ojs.bool_of_js
                (let x5101 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                 Ojs.call (Ojs.get_prop_ascii x5101 "saveAll") "apply"
                   [|x5101;((let x5099 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5098 with
                              | Some x5100 ->
                                  ignore
                                    (Ojs.call x5099 "push"
                                       [|(Ojs.bool_to_js x5100)|])
                              | None -> ());
                             x5099))|])
        let (applyEdit : edit:vscode_WorkspaceEdit -> bool _Thenable) =
          fun ~edit:(x5103 : vscode_WorkspaceEdit) ->
            _Thenable_of_js Ojs.bool_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "applyEdit"
                 [|(vscode_WorkspaceEdit_to_js x5103)|])
        let (textDocuments : vscode_TextDocument list) =
          Ojs.list_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "textDocuments")
        let (openTextDocument :
          uri:vscode_Uri -> vscode_TextDocument _Thenable) =
          fun ~uri:(x5106 : vscode_Uri) ->
            _Thenable_of_js vscode_TextDocument_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "openTextDocument"
                 [|(vscode_Uri_to_js x5106)|])
        let (openTextDocument :
          fileName:string -> vscode_TextDocument _Thenable) =
          fun ~fileName:(x5108 : string) ->
            _Thenable_of_js vscode_TextDocument_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "openTextDocument"
                 [|(Ojs.string_to_js x5108)|])
        let (openTextDocument :
          ?options:anonymous_interface_12 ->
            unit -> vscode_TextDocument _Thenable)
          =
          fun ?options:(x5110 : anonymous_interface_12 option) ->
            fun () ->
              _Thenable_of_js vscode_TextDocument_of_js
                (let x5113 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                 Ojs.call (Ojs.get_prop_ascii x5113 "openTextDocument")
                   "apply"
                   [|x5113;((let x5111 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5110 with
                              | Some x5112 ->
                                  ignore
                                    (Ojs.call x5111 "push"
                                       [|(anonymous_interface_12_to_js x5112)|])
                              | None -> ());
                             x5111))|])
        let (registerTextDocumentContentProvider :
          scheme:string ->
            provider:vscode_TextDocumentContentProvider -> vscode_Disposable)
          =
          fun ~scheme:(x5115 : string) ->
            fun ~provider:(x5116 : vscode_TextDocumentContentProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "registerTextDocumentContentProvider"
                   [|(Ojs.string_to_js x5115);(vscode_TextDocumentContentProvider_to_js
                                                 x5116)|])
        let (onDidOpenTextDocument : vscode_TextDocument vscode_Event) =
          vscode_Event_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidOpenTextDocument")
        let (onDidCloseTextDocument : vscode_TextDocument vscode_Event) =
          vscode_Event_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidCloseTextDocument")
        let (onDidChangeTextDocument :
          vscode_TextDocumentChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextDocumentChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidChangeTextDocument")
        let (onWillSaveTextDocument :
          vscode_TextDocumentWillSaveEvent vscode_Event) =
          vscode_Event_of_js vscode_TextDocumentWillSaveEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillSaveTextDocument")
        let (onDidSaveTextDocument : vscode_TextDocument vscode_Event) =
          vscode_Event_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidSaveTextDocument")
        let (onWillCreateFiles : vscode_FileWillCreateEvent vscode_Event) =
          vscode_Event_of_js vscode_FileWillCreateEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillCreateFiles")
        let (onDidCreateFiles : vscode_FileCreateEvent vscode_Event) =
          vscode_Event_of_js vscode_FileCreateEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidCreateFiles")
        let (onWillDeleteFiles : vscode_FileWillDeleteEvent vscode_Event) =
          vscode_Event_of_js vscode_FileWillDeleteEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillDeleteFiles")
        let (onDidDeleteFiles : vscode_FileDeleteEvent vscode_Event) =
          vscode_Event_of_js vscode_FileDeleteEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidDeleteFiles")
        let (onWillRenameFiles : vscode_FileWillRenameEvent vscode_Event) =
          vscode_Event_of_js vscode_FileWillRenameEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillRenameFiles")
        let (onDidRenameFiles : vscode_FileRenameEvent vscode_Event) =
          vscode_Event_of_js vscode_FileRenameEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidRenameFiles")
        let (getConfiguration :
          ?section:string or_undefined ->
            ?scope:vscode_ConfigurationScope or_null ->
              unit -> vscode_WorkspaceConfiguration)
          =
          fun ?section:(x5128 : string or_undefined option) ->
            fun ?scope:(x5129 : vscode_ConfigurationScope or_null option) ->
              fun () ->
                vscode_WorkspaceConfiguration_of_js
                  (let x5135 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                   Ojs.call (Ojs.get_prop_ascii x5135 "getConfiguration")
                     "apply"
                     [|x5135;((let x5130 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x5128 with
                                | Some x5133 ->
                                    ignore
                                      (Ojs.call x5130 "push"
                                         [|(or_undefined_to_js
                                              Ojs.string_to_js x5133)|])
                                | None -> ());
                               (match x5129 with
                                | Some x5131 ->
                                    ignore
                                      (Ojs.call x5130 "push"
                                         [|(or_null_to_js
                                              vscode_ConfigurationScope_to_js
                                              x5131)|])
                                | None -> ());
                               x5130))|])
        let (onDidChangeConfiguration :
          vscode_ConfigurationChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_ConfigurationChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidChangeConfiguration")
        let (registerTaskProvider :
          type_:string ->
            provider:vscode_Task vscode_TaskProvider -> vscode_Disposable)
          =
          fun ~type_:(x5137 : string) ->
            fun ~provider:(x5138 : vscode_Task vscode_TaskProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "registerTaskProvider"
                   [|(Ojs.string_to_js x5137);(vscode_TaskProvider_to_js
                                                 vscode_Task_to_js x5138)|])
        let (registerFileSystemProvider :
          scheme:string ->
            provider:vscode_FileSystemProvider ->
              ?options:anonymous_interface_9 -> unit -> vscode_Disposable)
          =
          fun ~scheme:(x5140 : string) ->
            fun ~provider:(x5141 : vscode_FileSystemProvider) ->
              fun ?options:(x5142 : anonymous_interface_9 option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5145 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5145 "registerFileSystemProvider")
                       "apply"
                       [|x5145;((let x5143 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5143 "push"
                                      [|(Ojs.string_to_js x5140)|]);
                                 ignore
                                   (Ojs.call x5143 "push"
                                      [|(vscode_FileSystemProvider_to_js
                                           x5141)|]);
                                 (match x5142 with
                                  | Some x5144 ->
                                      ignore
                                        (Ojs.call x5143 "push"
                                           [|(anonymous_interface_9_to_js
                                                x5144)|])
                                  | None -> ());
                                 x5143))|])
      end
    module ConfigurationScope =
      struct
        type t = vscode_ConfigurationScope
        let rec t_of_js : Ojs.t -> t =
          fun (x5147 : Ojs.t) -> vscode_ConfigurationScope_of_js x5147
        and t_to_js : t -> Ojs.t =
          fun (x5146 : vscode_ConfigurationScope) ->
            vscode_ConfigurationScope_to_js x5146
      end
    module ConfigurationChangeEvent =
      struct
        type t = vscode_ConfigurationChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5149 : Ojs.t) -> vscode_ConfigurationChangeEvent_of_js x5149
        and t_to_js : t -> Ojs.t =
          fun (x5148 : vscode_ConfigurationChangeEvent) ->
            vscode_ConfigurationChangeEvent_to_js x5148
        let (affectsConfiguration :
          t ->
            section:string ->
              ?scope:vscode_ConfigurationScope -> unit -> bool)
          =
          fun (x5154 : t) ->
            fun ~section:(x5150 : string) ->
              fun ?scope:(x5151 : vscode_ConfigurationScope option) ->
                fun () ->
                  Ojs.bool_of_js
                    (let x5155 = t_to_js x5154 in
                     Ojs.call
                       (Ojs.get_prop_ascii x5155 "affectsConfiguration")
                       "apply"
                       [|x5155;((let x5152 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5152 "push"
                                      [|(Ojs.string_to_js x5150)|]);
                                 (match x5151 with
                                  | Some x5153 ->
                                      ignore
                                        (Ojs.call x5152 "push"
                                           [|(vscode_ConfigurationScope_to_js
                                                x5153)|])
                                  | None -> ());
                                 x5152))|])
      end
    module Languages =
      struct
        let (getLanguages : unit -> string list _Thenable) =
          fun () ->
            _Thenable_of_js
              (fun (x5156 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x5156)
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "getLanguages" [||])
        let (setTextDocumentLanguage :
          document:vscode_TextDocument ->
            languageId:string -> vscode_TextDocument _Thenable)
          =
          fun ~document:(x5158 : vscode_TextDocument) ->
            fun ~languageId:(x5159 : string) ->
              _Thenable_of_js vscode_TextDocument_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "setTextDocumentLanguage"
                   [|(vscode_TextDocument_to_js x5158);(Ojs.string_to_js
                                                          x5159)|])
        let (match_ :
          selector:vscode_DocumentSelector ->
            document:vscode_TextDocument -> float)
          =
          fun ~selector:(x5161 : vscode_DocumentSelector) ->
            fun ~document:(x5162 : vscode_TextDocument) ->
              Ojs.float_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "match"
                   [|(vscode_DocumentSelector_to_js x5161);(vscode_TextDocument_to_js
                                                              x5162)|])
        let (onDidChangeDiagnostics :
          vscode_DiagnosticChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_DiagnosticChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "languages") "onDidChangeDiagnostics")
        let (getDiagnostics : resource:vscode_Uri -> vscode_Diagnostic list)
          =
          fun ~resource:(x5164 : vscode_Uri) ->
            Ojs.list_of_js vscode_Diagnostic_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "getDiagnostics"
                 [|(vscode_Uri_to_js x5164)|])
        let (getDiagnostics :
          unit -> (vscode_Uri * vscode_Diagnostic list) list) =
          fun () ->
            Ojs.list_of_js
              (fun (x5166 : Ojs.t) ->
                 let x5167 = x5166 in
                 ((vscode_Uri_of_js (Ojs.array_get x5167 0)),
                   (Ojs.list_of_js vscode_Diagnostic_of_js
                      (Ojs.array_get x5167 1))))
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "getDiagnostics" [||])
        let (createDiagnosticCollection :
          ?name:string -> unit -> vscode_DiagnosticCollection) =
          fun ?name:(x5169 : string option) ->
            fun () ->
              vscode_DiagnosticCollection_of_js
                (let x5172 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                 Ojs.call
                   (Ojs.get_prop_ascii x5172 "createDiagnosticCollection")
                   "apply"
                   [|x5172;((let x5170 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5169 with
                              | Some x5171 ->
                                  ignore
                                    (Ojs.call x5170 "push"
                                       [|(Ojs.string_to_js x5171)|])
                              | None -> ());
                             x5170))|])
        let (registerCompletionItemProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CompletionItem vscode_CompletionItemProvider ->
              triggerCharacters:string list -> vscode_Disposable)
          =
          fun ~selector:(x5173 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5174 :
                          vscode_CompletionItem vscode_CompletionItemProvider)
              ->
              fun ~triggerCharacters:(x5175 : string list) ->
                vscode_Disposable_of_js
                  (let x5179 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                   Ojs.call
                     (Ojs.get_prop_ascii x5179
                        "registerCompletionItemProvider") "apply"
                     [|x5179;((let x5176 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5176 "push"
                                    [|(vscode_DocumentSelector_to_js x5173)|]);
                               ignore
                                 (Ojs.call x5176 "push"
                                    [|(vscode_CompletionItemProvider_to_js
                                         vscode_CompletionItem_to_js x5174)|]);
                               List.iter
                                 (fun (x5177 : string) ->
                                    ignore
                                      (Ojs.call x5176 "push"
                                         [|(Ojs.string_to_js x5177)|])) x5175;
                               x5176))|])
        let (registerCodeActionsProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CodeAction vscode_CodeActionProvider ->
              ?metadata:vscode_CodeActionProviderMetadata ->
                unit -> vscode_Disposable)
          =
          fun ~selector:(x5180 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5181 : vscode_CodeAction vscode_CodeActionProvider)
              ->
              fun
                ?metadata:(x5182 : vscode_CodeActionProviderMetadata option)
                ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5186 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5186
                          "registerCodeActionsProvider") "apply"
                       [|x5186;((let x5183 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5183 "push"
                                      [|(vscode_DocumentSelector_to_js x5180)|]);
                                 ignore
                                   (Ojs.call x5183 "push"
                                      [|(vscode_CodeActionProvider_to_js
                                           vscode_CodeAction_to_js x5181)|]);
                                 (match x5182 with
                                  | Some x5184 ->
                                      ignore
                                        (Ojs.call x5183 "push"
                                           [|(vscode_CodeActionProviderMetadata_to_js
                                                x5184)|])
                                  | None -> ());
                                 x5183))|])
        let (registerCodeLensProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CodeLens vscode_CodeLensProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5187 : vscode_DocumentSelector) ->
            fun ~provider:(x5188 : vscode_CodeLens vscode_CodeLensProvider)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerCodeLensProvider"
                   [|(vscode_DocumentSelector_to_js x5187);(vscode_CodeLensProvider_to_js
                                                              vscode_CodeLens_to_js
                                                              x5188)|])
        let (registerDefinitionProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DefinitionProvider -> vscode_Disposable)
          =
          fun ~selector:(x5190 : vscode_DocumentSelector) ->
            fun ~provider:(x5191 : vscode_DefinitionProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDefinitionProvider"
                   [|(vscode_DocumentSelector_to_js x5190);(vscode_DefinitionProvider_to_js
                                                              x5191)|])
        let (registerImplementationProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_ImplementationProvider -> vscode_Disposable)
          =
          fun ~selector:(x5192 : vscode_DocumentSelector) ->
            fun ~provider:(x5193 : vscode_ImplementationProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerImplementationProvider"
                   [|(vscode_DocumentSelector_to_js x5192);(vscode_ImplementationProvider_to_js
                                                              x5193)|])
        let (registerTypeDefinitionProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_TypeDefinitionProvider -> vscode_Disposable)
          =
          fun ~selector:(x5194 : vscode_DocumentSelector) ->
            fun ~provider:(x5195 : vscode_TypeDefinitionProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerTypeDefinitionProvider"
                   [|(vscode_DocumentSelector_to_js x5194);(vscode_TypeDefinitionProvider_to_js
                                                              x5195)|])
        let (registerDeclarationProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DeclarationProvider -> vscode_Disposable)
          =
          fun ~selector:(x5196 : vscode_DocumentSelector) ->
            fun ~provider:(x5197 : vscode_DeclarationProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDeclarationProvider"
                   [|(vscode_DocumentSelector_to_js x5196);(vscode_DeclarationProvider_to_js
                                                              x5197)|])
        let (registerHoverProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_HoverProvider -> vscode_Disposable)
          =
          fun ~selector:(x5198 : vscode_DocumentSelector) ->
            fun ~provider:(x5199 : vscode_HoverProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerHoverProvider"
                   [|(vscode_DocumentSelector_to_js x5198);(vscode_HoverProvider_to_js
                                                              x5199)|])
        let (registerEvaluatableExpressionProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_EvaluatableExpressionProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5200 : vscode_DocumentSelector) ->
            fun ~provider:(x5201 : vscode_EvaluatableExpressionProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerEvaluatableExpressionProvider"
                   [|(vscode_DocumentSelector_to_js x5200);(vscode_EvaluatableExpressionProvider_to_js
                                                              x5201)|])
        let (registerInlineValuesProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_InlineValuesProvider -> vscode_Disposable)
          =
          fun ~selector:(x5202 : vscode_DocumentSelector) ->
            fun ~provider:(x5203 : vscode_InlineValuesProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerInlineValuesProvider"
                   [|(vscode_DocumentSelector_to_js x5202);(vscode_InlineValuesProvider_to_js
                                                              x5203)|])
        let (registerDocumentHighlightProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentHighlightProvider -> vscode_Disposable)
          =
          fun ~selector:(x5204 : vscode_DocumentSelector) ->
            fun ~provider:(x5205 : vscode_DocumentHighlightProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentHighlightProvider"
                   [|(vscode_DocumentSelector_to_js x5204);(vscode_DocumentHighlightProvider_to_js
                                                              x5205)|])
        let (registerDocumentSymbolProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentSymbolProvider ->
              ?metaData:vscode_DocumentSymbolProviderMetadata ->
                unit -> vscode_Disposable)
          =
          fun ~selector:(x5206 : vscode_DocumentSelector) ->
            fun ~provider:(x5207 : vscode_DocumentSymbolProvider) ->
              fun
                ?metaData:(x5208 :
                            vscode_DocumentSymbolProviderMetadata option)
                ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5211 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5211
                          "registerDocumentSymbolProvider") "apply"
                       [|x5211;((let x5209 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5209 "push"
                                      [|(vscode_DocumentSelector_to_js x5206)|]);
                                 ignore
                                   (Ojs.call x5209 "push"
                                      [|(vscode_DocumentSymbolProvider_to_js
                                           x5207)|]);
                                 (match x5208 with
                                  | Some x5210 ->
                                      ignore
                                        (Ojs.call x5209 "push"
                                           [|(vscode_DocumentSymbolProviderMetadata_to_js
                                                x5210)|])
                                  | None -> ());
                                 x5209))|])
        let (registerWorkspaceSymbolProvider :
          provider:vscode_SymbolInformation vscode_WorkspaceSymbolProvider ->
            vscode_Disposable)
          =
          fun
            ~provider:(x5212 :
                        vscode_SymbolInformation
                          vscode_WorkspaceSymbolProvider)
            ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "registerWorkspaceSymbolProvider"
                 [|(vscode_WorkspaceSymbolProvider_to_js
                      vscode_SymbolInformation_to_js x5212)|])
        let (registerReferenceProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_ReferenceProvider -> vscode_Disposable)
          =
          fun ~selector:(x5214 : vscode_DocumentSelector) ->
            fun ~provider:(x5215 : vscode_ReferenceProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerReferenceProvider"
                   [|(vscode_DocumentSelector_to_js x5214);(vscode_ReferenceProvider_to_js
                                                              x5215)|])
        let (registerRenameProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_RenameProvider -> vscode_Disposable)
          =
          fun ~selector:(x5216 : vscode_DocumentSelector) ->
            fun ~provider:(x5217 : vscode_RenameProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerRenameProvider"
                   [|(vscode_DocumentSelector_to_js x5216);(vscode_RenameProvider_to_js
                                                              x5217)|])
        let (registerDocumentSemanticTokensProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentSemanticTokensProvider ->
              legend:vscode_SemanticTokensLegend -> vscode_Disposable)
          =
          fun ~selector:(x5218 : vscode_DocumentSelector) ->
            fun ~provider:(x5219 : vscode_DocumentSemanticTokensProvider) ->
              fun ~legend:(x5220 : vscode_SemanticTokensLegend) ->
                vscode_Disposable_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                     "registerDocumentSemanticTokensProvider"
                     [|(vscode_DocumentSelector_to_js x5218);(vscode_DocumentSemanticTokensProvider_to_js
                                                                x5219);(
                       vscode_SemanticTokensLegend_to_js x5220)|])
        let (registerDocumentRangeSemanticTokensProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentRangeSemanticTokensProvider ->
              legend:vscode_SemanticTokensLegend -> vscode_Disposable)
          =
          fun ~selector:(x5221 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5222 : vscode_DocumentRangeSemanticTokensProvider)
              ->
              fun ~legend:(x5223 : vscode_SemanticTokensLegend) ->
                vscode_Disposable_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                     "registerDocumentRangeSemanticTokensProvider"
                     [|(vscode_DocumentSelector_to_js x5221);(vscode_DocumentRangeSemanticTokensProvider_to_js
                                                                x5222);(
                       vscode_SemanticTokensLegend_to_js x5223)|])
        let (registerDocumentFormattingEditProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentFormattingEditProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5224 : vscode_DocumentSelector) ->
            fun ~provider:(x5225 : vscode_DocumentFormattingEditProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentFormattingEditProvider"
                   [|(vscode_DocumentSelector_to_js x5224);(vscode_DocumentFormattingEditProvider_to_js
                                                              x5225)|])
        let (registerDocumentRangeFormattingEditProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentRangeFormattingEditProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5226 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5227 : vscode_DocumentRangeFormattingEditProvider)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentRangeFormattingEditProvider"
                   [|(vscode_DocumentSelector_to_js x5226);(vscode_DocumentRangeFormattingEditProvider_to_js
                                                              x5227)|])
        let (registerOnTypeFormattingEditProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_OnTypeFormattingEditProvider ->
              firstTriggerCharacter:string ->
                moreTriggerCharacter:string list -> vscode_Disposable)
          =
          fun ~selector:(x5228 : vscode_DocumentSelector) ->
            fun ~provider:(x5229 : vscode_OnTypeFormattingEditProvider) ->
              fun ~firstTriggerCharacter:(x5230 : string) ->
                fun ~moreTriggerCharacter:(x5231 : string list) ->
                  vscode_Disposable_of_js
                    (let x5234 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5234
                          "registerOnTypeFormattingEditProvider") "apply"
                       [|x5234;((let x5232 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5232 "push"
                                      [|(vscode_DocumentSelector_to_js x5228)|]);
                                 ignore
                                   (Ojs.call x5232 "push"
                                      [|(vscode_OnTypeFormattingEditProvider_to_js
                                           x5229)|]);
                                 ignore
                                   (Ojs.call x5232 "push"
                                      [|(Ojs.string_to_js x5230)|]);
                                 List.iter
                                   (fun (x5233 : string) ->
                                      ignore
                                        (Ojs.call x5232 "push"
                                           [|(Ojs.string_to_js x5233)|]))
                                   x5231;
                                 x5232))|])
        let (registerSignatureHelpProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_SignatureHelpProvider ->
              triggerCharacters:string list -> vscode_Disposable)
          =
          fun ~selector:(x5235 : vscode_DocumentSelector) ->
            fun ~provider:(x5236 : vscode_SignatureHelpProvider) ->
              fun ~triggerCharacters:(x5237 : string list) ->
                vscode_Disposable_of_js
                  (let x5240 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                   Ojs.call
                     (Ojs.get_prop_ascii x5240
                        "registerSignatureHelpProvider") "apply"
                     [|x5240;((let x5238 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5238 "push"
                                    [|(vscode_DocumentSelector_to_js x5235)|]);
                               ignore
                                 (Ojs.call x5238 "push"
                                    [|(vscode_SignatureHelpProvider_to_js
                                         x5236)|]);
                               List.iter
                                 (fun (x5239 : string) ->
                                    ignore
                                      (Ojs.call x5238 "push"
                                         [|(Ojs.string_to_js x5239)|])) x5237;
                               x5238))|])
        let (registerSignatureHelpProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_SignatureHelpProvider ->
              metadata:vscode_SignatureHelpProviderMetadata ->
                vscode_Disposable)
          =
          fun ~selector:(x5241 : vscode_DocumentSelector) ->
            fun ~provider:(x5242 : vscode_SignatureHelpProvider) ->
              fun ~metadata:(x5243 : vscode_SignatureHelpProviderMetadata) ->
                vscode_Disposable_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                     "registerSignatureHelpProvider"
                     [|(vscode_DocumentSelector_to_js x5241);(vscode_SignatureHelpProvider_to_js
                                                                x5242);(
                       vscode_SignatureHelpProviderMetadata_to_js x5243)|])
        let (registerDocumentLinkProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentLink vscode_DocumentLinkProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5244 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5245 :
                          vscode_DocumentLink vscode_DocumentLinkProvider)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentLinkProvider"
                   [|(vscode_DocumentSelector_to_js x5244);(vscode_DocumentLinkProvider_to_js
                                                              vscode_DocumentLink_to_js
                                                              x5245)|])
        let (registerColorProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentColorProvider -> vscode_Disposable)
          =
          fun ~selector:(x5247 : vscode_DocumentSelector) ->
            fun ~provider:(x5248 : vscode_DocumentColorProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerColorProvider"
                   [|(vscode_DocumentSelector_to_js x5247);(vscode_DocumentColorProvider_to_js
                                                              x5248)|])
        let (registerFoldingRangeProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_FoldingRangeProvider -> vscode_Disposable)
          =
          fun ~selector:(x5249 : vscode_DocumentSelector) ->
            fun ~provider:(x5250 : vscode_FoldingRangeProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerFoldingRangeProvider"
                   [|(vscode_DocumentSelector_to_js x5249);(vscode_FoldingRangeProvider_to_js
                                                              x5250)|])
        let (registerSelectionRangeProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_SelectionRangeProvider -> vscode_Disposable)
          =
          fun ~selector:(x5251 : vscode_DocumentSelector) ->
            fun ~provider:(x5252 : vscode_SelectionRangeProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerSelectionRangeProvider"
                   [|(vscode_DocumentSelector_to_js x5251);(vscode_SelectionRangeProvider_to_js
                                                              x5252)|])
        let (registerCallHierarchyProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CallHierarchyProvider -> vscode_Disposable)
          =
          fun ~selector:(x5253 : vscode_DocumentSelector) ->
            fun ~provider:(x5254 : vscode_CallHierarchyProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerCallHierarchyProvider"
                   [|(vscode_DocumentSelector_to_js x5253);(vscode_CallHierarchyProvider_to_js
                                                              x5254)|])
        let (registerLinkedEditingRangeProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_LinkedEditingRangeProvider -> vscode_Disposable)
          =
          fun ~selector:(x5255 : vscode_DocumentSelector) ->
            fun ~provider:(x5256 : vscode_LinkedEditingRangeProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerLinkedEditingRangeProvider"
                   [|(vscode_DocumentSelector_to_js x5255);(vscode_LinkedEditingRangeProvider_to_js
                                                              x5256)|])
        let (setLanguageConfiguration :
          language:string ->
            configuration:vscode_LanguageConfiguration -> vscode_Disposable)
          =
          fun ~language:(x5257 : string) ->
            fun ~configuration:(x5258 : vscode_LanguageConfiguration) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "setLanguageConfiguration"
                   [|(Ojs.string_to_js x5257);(vscode_LanguageConfiguration_to_js
                                                 x5258)|])
      end
    module SourceControlInputBox =
      struct
        type t = vscode_SourceControlInputBox
        let rec t_of_js : Ojs.t -> t =
          fun (x5260 : Ojs.t) -> vscode_SourceControlInputBox_of_js x5260
        and t_to_js : t -> Ojs.t =
          fun (x5259 : vscode_SourceControlInputBox) ->
            vscode_SourceControlInputBox_to_js x5259
        let (get_value : t -> string) =
          fun (x5261 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5261) "value")
        let (set_value : t -> string -> unit) =
          fun (x5262 : t) ->
            fun (x5263 : string) ->
              Ojs.set_prop_ascii (t_to_js x5262) "value"
                (Ojs.string_to_js x5263)
        let (get_placeholder : t -> string) =
          fun (x5264 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5264) "placeholder")
        let (set_placeholder : t -> string -> unit) =
          fun (x5265 : t) ->
            fun (x5266 : string) ->
              Ojs.set_prop_ascii (t_to_js x5265) "placeholder"
                (Ojs.string_to_js x5266)
        let (get_visible : t -> bool) =
          fun (x5267 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5267) "visible")
        let (set_visible : t -> bool -> unit) =
          fun (x5268 : t) ->
            fun (x5269 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5268) "visible"
                (Ojs.bool_to_js x5269)
      end
    module QuickDiffProvider =
      struct
        type t = vscode_QuickDiffProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5271 : Ojs.t) -> vscode_QuickDiffProvider_of_js x5271
        and t_to_js : t -> Ojs.t =
          fun (x5270 : vscode_QuickDiffProvider) ->
            vscode_QuickDiffProvider_to_js x5270
        let (provideOriginalResource :
          t ->
            uri:vscode_Uri ->
              token:vscode_CancellationToken ->
                vscode_Uri vscode_ProviderResult)
          =
          fun (x5274 : t) ->
            fun ~uri:(x5272 : vscode_Uri) ->
              fun ~token:(x5273 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js vscode_Uri_of_js
                  (Ojs.call (t_to_js x5274) "provideOriginalResource"
                     [|(vscode_Uri_to_js x5272);(vscode_CancellationToken_to_js
                                                   x5273)|])
      end
    module SourceControlResourceThemableDecorations =
      struct
        type t = vscode_SourceControlResourceThemableDecorations
        let rec t_of_js : Ojs.t -> t =
          fun (x5277 : Ojs.t) ->
            vscode_SourceControlResourceThemableDecorations_of_js x5277
        and t_to_js : t -> Ojs.t =
          fun (x5276 : vscode_SourceControlResourceThemableDecorations) ->
            vscode_SourceControlResourceThemableDecorations_to_js x5276
        let (get_iconPath : t -> vscode_Uri or_string) =
          fun (x5278 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5278) "iconPath")
      end
    module SourceControlResourceDecorations =
      struct
        include struct include SourceControlResourceThemableDecorations end
        let (get_strikeThrough : t -> bool) =
          fun (x5280 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5280) "strikeThrough")
        let (get_faded : t -> bool) =
          fun (x5281 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5281) "faded")
        let (get_tooltip : t -> string) =
          fun (x5282 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5282) "tooltip")
        let (get_light :
          t -> vscode_SourceControlResourceThemableDecorations) =
          fun (x5283 : t) ->
            vscode_SourceControlResourceThemableDecorations_of_js
              (Ojs.get_prop_ascii (t_to_js x5283) "light")
        let (get_dark : t -> vscode_SourceControlResourceThemableDecorations)
          =
          fun (x5284 : t) ->
            vscode_SourceControlResourceThemableDecorations_of_js
              (Ojs.get_prop_ascii (t_to_js x5284) "dark")
      end
    module SourceControlResourceState =
      struct
        type t = vscode_SourceControlResourceState
        let rec t_of_js : Ojs.t -> t =
          fun (x5286 : Ojs.t) ->
            vscode_SourceControlResourceState_of_js x5286
        and t_to_js : t -> Ojs.t =
          fun (x5285 : vscode_SourceControlResourceState) ->
            vscode_SourceControlResourceState_to_js x5285
        let (get_resourceUri : t -> vscode_Uri) =
          fun (x5287 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5287) "resourceUri")
        let (get_command : t -> vscode_Command) =
          fun (x5288 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x5288) "command")
        let (get_decorations : t -> vscode_SourceControlResourceDecorations)
          =
          fun (x5289 : t) ->
            vscode_SourceControlResourceDecorations_of_js
              (Ojs.get_prop_ascii (t_to_js x5289) "decorations")
        let (get_contextValue : t -> string) =
          fun (x5290 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5290) "contextValue")
      end
    module SourceControlResourceGroup =
      struct
        type t = vscode_SourceControlResourceGroup
        let rec t_of_js : Ojs.t -> t =
          fun (x5292 : Ojs.t) ->
            vscode_SourceControlResourceGroup_of_js x5292
        and t_to_js : t -> Ojs.t =
          fun (x5291 : vscode_SourceControlResourceGroup) ->
            vscode_SourceControlResourceGroup_to_js x5291
        let (get_id : t -> string) =
          fun (x5293 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5293) "id")
        let (get_label : t -> string) =
          fun (x5294 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5294) "label")
        let (set_label : t -> string -> unit) =
          fun (x5295 : t) ->
            fun (x5296 : string) ->
              Ojs.set_prop_ascii (t_to_js x5295) "label"
                (Ojs.string_to_js x5296)
        let (get_hideWhenEmpty : t -> bool) =
          fun (x5297 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5297) "hideWhenEmpty")
        let (set_hideWhenEmpty : t -> bool -> unit) =
          fun (x5298 : t) ->
            fun (x5299 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5298) "hideWhenEmpty"
                (Ojs.bool_to_js x5299)
        let (get_resourceStates :
          t -> vscode_SourceControlResourceState list) =
          fun (x5300 : t) ->
            Ojs.list_of_js vscode_SourceControlResourceState_of_js
              (Ojs.get_prop_ascii (t_to_js x5300) "resourceStates")
        let (set_resourceStates :
          t -> vscode_SourceControlResourceState list -> unit) =
          fun (x5302 : t) ->
            fun (x5303 : vscode_SourceControlResourceState list) ->
              Ojs.set_prop_ascii (t_to_js x5302) "resourceStates"
                (Ojs.list_to_js vscode_SourceControlResourceState_to_js x5303)
        let (dispose : t -> unit) =
          fun (x5305 : t) -> ignore (Ojs.call (t_to_js x5305) "dispose" [||])
      end
    module SourceControl =
      struct
        type t = vscode_SourceControl
        let rec t_of_js : Ojs.t -> t =
          fun (x5307 : Ojs.t) -> vscode_SourceControl_of_js x5307
        and t_to_js : t -> Ojs.t =
          fun (x5306 : vscode_SourceControl) ->
            vscode_SourceControl_to_js x5306
        let (get_id : t -> string) =
          fun (x5308 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5308) "id")
        let (get_label : t -> string) =
          fun (x5309 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5309) "label")
        let (get_rootUri : t -> vscode_Uri or_undefined) =
          fun (x5310 : t) ->
            or_undefined_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5310) "rootUri")
        let (get_inputBox : t -> vscode_SourceControlInputBox) =
          fun (x5312 : t) ->
            vscode_SourceControlInputBox_of_js
              (Ojs.get_prop_ascii (t_to_js x5312) "inputBox")
        let (get_count : t -> float) =
          fun (x5313 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x5313) "count")
        let (set_count : t -> float -> unit) =
          fun (x5314 : t) ->
            fun (x5315 : float) ->
              Ojs.set_prop_ascii (t_to_js x5314) "count"
                (Ojs.float_to_js x5315)
        let (get_quickDiffProvider : t -> vscode_QuickDiffProvider) =
          fun (x5316 : t) ->
            vscode_QuickDiffProvider_of_js
              (Ojs.get_prop_ascii (t_to_js x5316) "quickDiffProvider")
        let (set_quickDiffProvider : t -> vscode_QuickDiffProvider -> unit) =
          fun (x5317 : t) ->
            fun (x5318 : vscode_QuickDiffProvider) ->
              Ojs.set_prop_ascii (t_to_js x5317) "quickDiffProvider"
                (vscode_QuickDiffProvider_to_js x5318)
        let (get_commitTemplate : t -> string) =
          fun (x5319 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5319) "commitTemplate")
        let (set_commitTemplate : t -> string -> unit) =
          fun (x5320 : t) ->
            fun (x5321 : string) ->
              Ojs.set_prop_ascii (t_to_js x5320) "commitTemplate"
                (Ojs.string_to_js x5321)
        let (get_acceptInputCommand : t -> vscode_Command) =
          fun (x5322 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x5322) "acceptInputCommand")
        let (set_acceptInputCommand : t -> vscode_Command -> unit) =
          fun (x5323 : t) ->
            fun (x5324 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x5323) "acceptInputCommand"
                (vscode_Command_to_js x5324)
        let (get_statusBarCommands : t -> vscode_Command list) =
          fun (x5325 : t) ->
            Ojs.list_of_js vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x5325) "statusBarCommands")
        let (set_statusBarCommands : t -> vscode_Command list -> unit) =
          fun (x5327 : t) ->
            fun (x5328 : vscode_Command list) ->
              Ojs.set_prop_ascii (t_to_js x5327) "statusBarCommands"
                (Ojs.list_to_js vscode_Command_to_js x5328)
        let (createResourceGroup :
          t -> id:string -> label:string -> vscode_SourceControlResourceGroup)
          =
          fun (x5332 : t) ->
            fun ~id:(x5330 : string) ->
              fun ~label:(x5331 : string) ->
                vscode_SourceControlResourceGroup_of_js
                  (Ojs.call (t_to_js x5332) "createResourceGroup"
                     [|(Ojs.string_to_js x5330);(Ojs.string_to_js x5331)|])
        let (dispose : t -> unit) =
          fun (x5333 : t) -> ignore (Ojs.call (t_to_js x5333) "dispose" [||])
      end
    module Scm =
      struct
        let (inputBox : vscode_SourceControlInputBox) =
          vscode_SourceControlInputBox_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "scm") "inputBox")
        let (createSourceControl :
          id:string ->
            label:string ->
              ?rootUri:vscode_Uri -> unit -> vscode_SourceControl)
          =
          fun ~id:(x5334 : string) ->
            fun ~label:(x5335 : string) ->
              fun ?rootUri:(x5336 : vscode_Uri option) ->
                fun () ->
                  vscode_SourceControl_of_js
                    (let x5339 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "scm" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5339 "createSourceControl")
                       "apply"
                       [|x5339;((let x5337 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5337 "push"
                                      [|(Ojs.string_to_js x5334)|]);
                                 ignore
                                   (Ojs.call x5337 "push"
                                      [|(Ojs.string_to_js x5335)|]);
                                 (match x5336 with
                                  | Some x5338 ->
                                      ignore
                                        (Ojs.call x5337 "push"
                                           [|(vscode_Uri_to_js x5338)|])
                                  | None -> ());
                                 x5337))|])
      end
    module DebugProtocolMessage =
      struct
        type t = vscode_DebugProtocolMessage
        let rec t_of_js : Ojs.t -> t =
          fun (x5341 : Ojs.t) -> vscode_DebugProtocolMessage_of_js x5341
        and t_to_js : t -> Ojs.t =
          fun (x5340 : vscode_DebugProtocolMessage) ->
            vscode_DebugProtocolMessage_to_js x5340
      end
    module DebugProtocolSource =
      struct
        type t = vscode_DebugProtocolSource
        let rec t_of_js : Ojs.t -> t =
          fun (x5343 : Ojs.t) -> vscode_DebugProtocolSource_of_js x5343
        and t_to_js : t -> Ojs.t =
          fun (x5342 : vscode_DebugProtocolSource) ->
            vscode_DebugProtocolSource_to_js x5342
      end
    module DebugProtocolBreakpoint =
      struct
        type t = vscode_DebugProtocolBreakpoint
        let rec t_of_js : Ojs.t -> t =
          fun (x5345 : Ojs.t) -> vscode_DebugProtocolBreakpoint_of_js x5345
        and t_to_js : t -> Ojs.t =
          fun (x5344 : vscode_DebugProtocolBreakpoint) ->
            vscode_DebugProtocolBreakpoint_to_js x5344
      end
    module DebugConfiguration =
      struct
        type t = vscode_DebugConfiguration
        let rec t_of_js : Ojs.t -> t =
          fun (x5347 : Ojs.t) -> vscode_DebugConfiguration_of_js x5347
        and t_to_js : t -> Ojs.t =
          fun (x5346 : vscode_DebugConfiguration) ->
            vscode_DebugConfiguration_to_js x5346
        let (get_type : t -> string) =
          fun (x5348 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5348) "type")
        let (set_type : t -> string -> unit) =
          fun (x5349 : t) ->
            fun (x5350 : string) ->
              Ojs.set_prop_ascii (t_to_js x5349) "type"
                (Ojs.string_to_js x5350)
        let (get_name : t -> string) =
          fun (x5351 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5351) "name")
        let (set_name : t -> string -> unit) =
          fun (x5352 : t) ->
            fun (x5353 : string) ->
              Ojs.set_prop_ascii (t_to_js x5352) "name"
                (Ojs.string_to_js x5353)
        let (get_request : t -> string) =
          fun (x5354 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5354) "request")
        let (set_request : t -> string -> unit) =
          fun (x5355 : t) ->
            fun (x5356 : string) ->
              Ojs.set_prop_ascii (t_to_js x5355) "request"
                (Ojs.string_to_js x5356)
        let (get : t -> string -> any) =
          fun (x5357 : t) ->
            fun (x5358 : string) ->
              any_of_js
                (Ojs.get_prop (t_to_js x5357) (Ojs.string_to_js x5358))
        let (set : t -> string -> any -> unit) =
          fun (x5359 : t) ->
            fun (x5360 : string) ->
              fun (x5361 : any) ->
                Ojs.set_prop (t_to_js x5359) (Ojs.string_to_js x5360)
                  (any_to_js x5361)
      end
    module DebugSession =
      struct
        type t = vscode_DebugSession
        let rec t_of_js : Ojs.t -> t =
          fun (x5363 : Ojs.t) -> vscode_DebugSession_of_js x5363
        and t_to_js : t -> Ojs.t =
          fun (x5362 : vscode_DebugSession) ->
            vscode_DebugSession_to_js x5362
        let (get_id : t -> string) =
          fun (x5364 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5364) "id")
        let (get_type : t -> string) =
          fun (x5365 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5365) "type")
        let (get_name : t -> string) =
          fun (x5366 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5366) "name")
        let (set_name : t -> string -> unit) =
          fun (x5367 : t) ->
            fun (x5368 : string) ->
              Ojs.set_prop_ascii (t_to_js x5367) "name"
                (Ojs.string_to_js x5368)
        let (get_workspaceFolder : t -> vscode_WorkspaceFolder or_undefined)
          =
          fun (x5369 : t) ->
            or_undefined_of_js vscode_WorkspaceFolder_of_js
              (Ojs.get_prop_ascii (t_to_js x5369) "workspaceFolder")
        let (get_configuration : t -> vscode_DebugConfiguration) =
          fun (x5371 : t) ->
            vscode_DebugConfiguration_of_js
              (Ojs.get_prop_ascii (t_to_js x5371) "configuration")
        let (customRequest :
          t -> command:string -> ?args:any -> unit -> any _Thenable) =
          fun (x5376 : t) ->
            fun ~command:(x5372 : string) ->
              fun ?args:(x5373 : any option) ->
                fun () ->
                  _Thenable_of_js any_of_js
                    (let x5377 = t_to_js x5376 in
                     Ojs.call (Ojs.get_prop_ascii x5377 "customRequest")
                       "apply"
                       [|x5377;((let x5374 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5374 "push"
                                      [|(Ojs.string_to_js x5372)|]);
                                 (match x5373 with
                                  | Some x5375 ->
                                      ignore
                                        (Ojs.call x5374 "push"
                                           [|(any_to_js x5375)|])
                                  | None -> ());
                                 x5374))|])
        let (getDebugProtocolBreakpoint :
          t ->
            breakpoint:vscode_Breakpoint ->
              vscode_DebugProtocolBreakpoint or_undefined _Thenable)
          =
          fun (x5380 : t) ->
            fun ~breakpoint:(x5379 : vscode_Breakpoint) ->
              _Thenable_of_js
                (fun (x5381 : Ojs.t) ->
                   or_undefined_of_js vscode_DebugProtocolBreakpoint_of_js
                     x5381)
                (Ojs.call (t_to_js x5380) "getDebugProtocolBreakpoint"
                   [|(vscode_Breakpoint_to_js x5379)|])
      end
    module DebugSessionCustomEvent =
      struct
        type t = vscode_DebugSessionCustomEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5384 : Ojs.t) -> vscode_DebugSessionCustomEvent_of_js x5384
        and t_to_js : t -> Ojs.t =
          fun (x5383 : vscode_DebugSessionCustomEvent) ->
            vscode_DebugSessionCustomEvent_to_js x5383
        let (get_session : t -> vscode_DebugSession) =
          fun (x5385 : t) ->
            vscode_DebugSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5385) "session")
        let (get_event : t -> string) =
          fun (x5386 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5386) "event")
        let (get_body : t -> any) =
          fun (x5387 : t) ->
            any_of_js (Ojs.get_prop_ascii (t_to_js x5387) "body")
      end
    module DebugConfigurationProvider =
      struct
        type t = vscode_DebugConfigurationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5389 : Ojs.t) ->
            vscode_DebugConfigurationProvider_of_js x5389
        and t_to_js : t -> Ojs.t =
          fun (x5388 : vscode_DebugConfigurationProvider) ->
            vscode_DebugConfigurationProvider_to_js x5388
        let (provideDebugConfigurations :
          t ->
            folder:vscode_WorkspaceFolder or_undefined ->
              ?token:vscode_CancellationToken ->
                unit -> vscode_DebugConfiguration list vscode_ProviderResult)
          =
          fun (x5395 : t) ->
            fun ~folder:(x5390 : vscode_WorkspaceFolder or_undefined) ->
              fun ?token:(x5391 : vscode_CancellationToken option) ->
                fun () ->
                  vscode_ProviderResult_of_js
                    (fun (x5397 : Ojs.t) ->
                       Ojs.list_of_js vscode_DebugConfiguration_of_js x5397)
                    (let x5396 = t_to_js x5395 in
                     Ojs.call
                       (Ojs.get_prop_ascii x5396 "provideDebugConfigurations")
                       "apply"
                       [|x5396;((let x5392 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5392 "push"
                                      [|(or_undefined_to_js
                                           vscode_WorkspaceFolder_to_js x5390)|]);
                                 (match x5391 with
                                  | Some x5393 ->
                                      ignore
                                        (Ojs.call x5392 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x5393)|])
                                  | None -> ());
                                 x5392))|])
        let (resolveDebugConfiguration :
          t ->
            folder:vscode_WorkspaceFolder or_undefined ->
              debugConfiguration:vscode_DebugConfiguration ->
                ?token:vscode_CancellationToken ->
                  unit -> vscode_DebugConfiguration vscode_ProviderResult)
          =
          fun (x5405 : t) ->
            fun ~folder:(x5399 : vscode_WorkspaceFolder or_undefined) ->
              fun ~debugConfiguration:(x5400 : vscode_DebugConfiguration) ->
                fun ?token:(x5401 : vscode_CancellationToken option) ->
                  fun () ->
                    vscode_ProviderResult_of_js
                      vscode_DebugConfiguration_of_js
                      (let x5406 = t_to_js x5405 in
                       Ojs.call
                         (Ojs.get_prop_ascii x5406
                            "resolveDebugConfiguration") "apply"
                         [|x5406;((let x5402 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5402 "push"
                                        [|(or_undefined_to_js
                                             vscode_WorkspaceFolder_to_js
                                             x5399)|]);
                                   ignore
                                     (Ojs.call x5402 "push"
                                        [|(vscode_DebugConfiguration_to_js
                                             x5400)|]);
                                   (match x5401 with
                                    | Some x5403 ->
                                        ignore
                                          (Ojs.call x5402 "push"
                                             [|(vscode_CancellationToken_to_js
                                                  x5403)|])
                                    | None -> ());
                                   x5402))|])
        let (resolveDebugConfigurationWithSubstitutedVariables :
          t ->
            folder:vscode_WorkspaceFolder or_undefined ->
              debugConfiguration:vscode_DebugConfiguration ->
                ?token:vscode_CancellationToken ->
                  unit -> vscode_DebugConfiguration vscode_ProviderResult)
          =
          fun (x5414 : t) ->
            fun ~folder:(x5408 : vscode_WorkspaceFolder or_undefined) ->
              fun ~debugConfiguration:(x5409 : vscode_DebugConfiguration) ->
                fun ?token:(x5410 : vscode_CancellationToken option) ->
                  fun () ->
                    vscode_ProviderResult_of_js
                      vscode_DebugConfiguration_of_js
                      (let x5415 = t_to_js x5414 in
                       Ojs.call
                         (Ojs.get_prop_ascii x5415
                            "resolveDebugConfigurationWithSubstitutedVariables")
                         "apply"
                         [|x5415;((let x5411 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5411 "push"
                                        [|(or_undefined_to_js
                                             vscode_WorkspaceFolder_to_js
                                             x5408)|]);
                                   ignore
                                     (Ojs.call x5411 "push"
                                        [|(vscode_DebugConfiguration_to_js
                                             x5409)|]);
                                   (match x5410 with
                                    | Some x5412 ->
                                        ignore
                                          (Ojs.call x5411 "push"
                                             [|(vscode_CancellationToken_to_js
                                                  x5412)|])
                                    | None -> ());
                                   x5411))|])
      end
    module DebugAdapterExecutable =
      struct
        type t = vscode_DebugAdapterExecutable
        let rec t_of_js : Ojs.t -> t =
          fun (x5418 : Ojs.t) -> vscode_DebugAdapterExecutable_of_js x5418
        and t_to_js : t -> Ojs.t =
          fun (x5417 : vscode_DebugAdapterExecutable) ->
            vscode_DebugAdapterExecutable_to_js x5417
        let (create :
          command:string ->
            ?args:string list ->
              ?options:vscode_DebugAdapterExecutableOptions -> unit -> t)
          =
          fun ~command:(x5419 : string) ->
            fun ?args:(x5420 : string list option) ->
              fun
                ?options:(x5421 :
                           vscode_DebugAdapterExecutableOptions option)
                ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "DebugAdapterExecutable")
                       (let x5422 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x5422 "push" [|(Ojs.string_to_js x5419)|]);
                        (match x5420 with
                         | Some x5424 ->
                             ignore
                               (Ojs.call x5422 "push"
                                  [|(Ojs.list_to_js Ojs.string_to_js x5424)|])
                         | None -> ());
                        (match x5421 with
                         | Some x5423 ->
                             ignore
                               (Ojs.call x5422 "push"
                                  [|(vscode_DebugAdapterExecutableOptions_to_js
                                       x5423)|])
                         | None -> ());
                        x5422))
        let (get_command : t -> string) =
          fun (x5426 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5426) "command")
        let (get_args : t -> string list) =
          fun (x5427 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5427) "args")
        let (get_options : t -> vscode_DebugAdapterExecutableOptions) =
          fun (x5429 : t) ->
            vscode_DebugAdapterExecutableOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x5429) "options")
      end
    module DebugAdapterExecutableOptions =
      struct
        type t = vscode_DebugAdapterExecutableOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5431 : Ojs.t) ->
            vscode_DebugAdapterExecutableOptions_of_js x5431
        and t_to_js : t -> Ojs.t =
          fun (x5430 : vscode_DebugAdapterExecutableOptions) ->
            vscode_DebugAdapterExecutableOptions_to_js x5430
        let (get_env : t -> anonymous_interface_44) =
          fun (x5432 : t) ->
            anonymous_interface_44_of_js
              (Ojs.get_prop_ascii (t_to_js x5432) "env")
        let (set_env : t -> anonymous_interface_44 -> unit) =
          fun (x5433 : t) ->
            fun (x5434 : anonymous_interface_44) ->
              Ojs.set_prop_ascii (t_to_js x5433) "env"
                (anonymous_interface_44_to_js x5434)
        let (get_cwd : t -> string) =
          fun (x5435 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5435) "cwd")
        let (set_cwd : t -> string -> unit) =
          fun (x5436 : t) ->
            fun (x5437 : string) ->
              Ojs.set_prop_ascii (t_to_js x5436) "cwd"
                (Ojs.string_to_js x5437)
      end
    module DebugAdapterServer =
      struct
        type t = vscode_DebugAdapterServer
        let rec t_of_js : Ojs.t -> t =
          fun (x5439 : Ojs.t) -> vscode_DebugAdapterServer_of_js x5439
        and t_to_js : t -> Ojs.t =
          fun (x5438 : vscode_DebugAdapterServer) ->
            vscode_DebugAdapterServer_to_js x5438
        let (get_port : t -> float) =
          fun (x5440 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x5440) "port")
        let (get_host : t -> string) =
          fun (x5441 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5441) "host")
        let (create : port:float -> ?host:string -> unit -> t) =
          fun ~port:(x5442 : float) ->
            fun ?host:(x5443 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "DebugAdapterServer")
                     (let x5444 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x5444 "push" [|(Ojs.float_to_js x5442)|]);
                      (match x5443 with
                       | Some x5445 ->
                           ignore
                             (Ojs.call x5444 "push"
                                [|(Ojs.string_to_js x5445)|])
                       | None -> ());
                      x5444))
      end
    module DebugAdapterNamedPipeServer =
      struct
        type t = vscode_DebugAdapterNamedPipeServer
        let rec t_of_js : Ojs.t -> t =
          fun (x5447 : Ojs.t) ->
            vscode_DebugAdapterNamedPipeServer_of_js x5447
        and t_to_js : t -> Ojs.t =
          fun (x5446 : vscode_DebugAdapterNamedPipeServer) ->
            vscode_DebugAdapterNamedPipeServer_to_js x5446
        let (get_path : t -> string) =
          fun (x5448 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5448) "path")
        let (create : path:string -> t) =
          fun ~path:(x5449 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "DebugAdapterNamedPipeServer")
                 [|(Ojs.string_to_js x5449)|])
      end
    module DebugAdapter =
      struct
        include struct include Disposable end
        let (get_onDidSendMessage :
          t -> vscode_DebugProtocolMessage vscode_Event) =
          fun (x5450 : t) ->
            vscode_Event_of_js vscode_DebugProtocolMessage_of_js
              (Ojs.get_prop_ascii (t_to_js x5450) "onDidSendMessage")
        let (handleMessage :
          t -> message:vscode_DebugProtocolMessage -> unit) =
          fun (x5453 : t) ->
            fun ~message:(x5452 : vscode_DebugProtocolMessage) ->
              ignore
                (Ojs.call (t_to_js x5453) "handleMessage"
                   [|(vscode_DebugProtocolMessage_to_js x5452)|])
      end
    module DebugAdapterInlineImplementation =
      struct
        type t = vscode_DebugAdapterInlineImplementation
        let rec t_of_js : Ojs.t -> t =
          fun (x5455 : Ojs.t) ->
            vscode_DebugAdapterInlineImplementation_of_js x5455
        and t_to_js : t -> Ojs.t =
          fun (x5454 : vscode_DebugAdapterInlineImplementation) ->
            vscode_DebugAdapterInlineImplementation_to_js x5454
        let (create : implementation:vscode_DebugAdapter -> t) =
          fun ~implementation:(x5456 : vscode_DebugAdapter) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "DebugAdapterInlineImplementation")
                 [|(vscode_DebugAdapter_to_js x5456)|])
      end
    module DebugAdapterDescriptor =
      struct
        type t = vscode_DebugAdapterDescriptor
        let rec t_of_js : Ojs.t -> t =
          fun (x5458 : Ojs.t) -> vscode_DebugAdapterDescriptor_of_js x5458
        and t_to_js : t -> Ojs.t =
          fun (x5457 : vscode_DebugAdapterDescriptor) ->
            vscode_DebugAdapterDescriptor_to_js x5457
      end
    module DebugAdapterDescriptorFactory =
      struct
        type t = vscode_DebugAdapterDescriptorFactory
        let rec t_of_js : Ojs.t -> t =
          fun (x5460 : Ojs.t) ->
            vscode_DebugAdapterDescriptorFactory_of_js x5460
        and t_to_js : t -> Ojs.t =
          fun (x5459 : vscode_DebugAdapterDescriptorFactory) ->
            vscode_DebugAdapterDescriptorFactory_to_js x5459
        let (createDebugAdapterDescriptor :
          t ->
            session:vscode_DebugSession ->
              executable:vscode_DebugAdapterExecutable or_undefined ->
                vscode_DebugAdapterDescriptor vscode_ProviderResult)
          =
          fun (x5464 : t) ->
            fun ~session:(x5461 : vscode_DebugSession) ->
              fun
                ~executable:(x5462 :
                              vscode_DebugAdapterExecutable or_undefined)
                ->
                vscode_ProviderResult_of_js
                  vscode_DebugAdapterDescriptor_of_js
                  (Ojs.call (t_to_js x5464) "createDebugAdapterDescriptor"
                     [|(vscode_DebugSession_to_js x5461);(or_undefined_to_js
                                                            vscode_DebugAdapterExecutable_to_js
                                                            x5462)|])
      end
    module DebugAdapterTracker =
      struct
        type t = vscode_DebugAdapterTracker
        let rec t_of_js : Ojs.t -> t =
          fun (x5467 : Ojs.t) -> vscode_DebugAdapterTracker_of_js x5467
        and t_to_js : t -> Ojs.t =
          fun (x5466 : vscode_DebugAdapterTracker) ->
            vscode_DebugAdapterTracker_to_js x5466
        let (onWillStartSession : t -> unit) =
          fun (x5468 : t) ->
            ignore (Ojs.call (t_to_js x5468) "onWillStartSession" [||])
        let (onWillReceiveMessage : t -> message:any -> unit) =
          fun (x5470 : t) ->
            fun ~message:(x5469 : any) ->
              ignore
                (Ojs.call (t_to_js x5470) "onWillReceiveMessage"
                   [|(any_to_js x5469)|])
        let (onDidSendMessage : t -> message:any -> unit) =
          fun (x5472 : t) ->
            fun ~message:(x5471 : any) ->
              ignore
                (Ojs.call (t_to_js x5472) "onDidSendMessage"
                   [|(any_to_js x5471)|])
        let (onWillStopSession : t -> unit) =
          fun (x5473 : t) ->
            ignore (Ojs.call (t_to_js x5473) "onWillStopSession" [||])
        let (onError : t -> error:Error.t -> unit) =
          fun (x5475 : t) ->
            fun ~error:(x5474 : Error.t) ->
              ignore
                (Ojs.call (t_to_js x5475) "onError" [|(Error.t_to_js x5474)|])
        let (onExit :
          t -> code:float or_undefined -> signal:string or_undefined -> unit)
          =
          fun (x5480 : t) ->
            fun ~code:(x5476 : float or_undefined) ->
              fun ~signal:(x5478 : string or_undefined) ->
                ignore
                  (Ojs.call (t_to_js x5480) "onExit"
                     [|(or_undefined_to_js Ojs.float_to_js x5476);(or_undefined_to_js
                                                                    Ojs.string_to_js
                                                                    x5478)|])
      end
    module DebugAdapterTrackerFactory =
      struct
        type t = vscode_DebugAdapterTrackerFactory
        let rec t_of_js : Ojs.t -> t =
          fun (x5482 : Ojs.t) ->
            vscode_DebugAdapterTrackerFactory_of_js x5482
        and t_to_js : t -> Ojs.t =
          fun (x5481 : vscode_DebugAdapterTrackerFactory) ->
            vscode_DebugAdapterTrackerFactory_to_js x5481
        let (createDebugAdapterTracker :
          t ->
            session:vscode_DebugSession ->
              vscode_DebugAdapterTracker vscode_ProviderResult)
          =
          fun (x5484 : t) ->
            fun ~session:(x5483 : vscode_DebugSession) ->
              vscode_ProviderResult_of_js vscode_DebugAdapterTracker_of_js
                (Ojs.call (t_to_js x5484) "createDebugAdapterTracker"
                   [|(vscode_DebugSession_to_js x5483)|])
      end
    module DebugConsole =
      struct
        type t = vscode_DebugConsole
        let rec t_of_js : Ojs.t -> t =
          fun (x5487 : Ojs.t) -> vscode_DebugConsole_of_js x5487
        and t_to_js : t -> Ojs.t =
          fun (x5486 : vscode_DebugConsole) ->
            vscode_DebugConsole_to_js x5486
        let (append : t -> value:string -> unit) =
          fun (x5489 : t) ->
            fun ~value:(x5488 : string) ->
              ignore
                (Ojs.call (t_to_js x5489) "append"
                   [|(Ojs.string_to_js x5488)|])
        let (appendLine : t -> value:string -> unit) =
          fun (x5491 : t) ->
            fun ~value:(x5490 : string) ->
              ignore
                (Ojs.call (t_to_js x5491) "appendLine"
                   [|(Ojs.string_to_js x5490)|])
      end
    module BreakpointsChangeEvent =
      struct
        type t = vscode_BreakpointsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5493 : Ojs.t) -> vscode_BreakpointsChangeEvent_of_js x5493
        and t_to_js : t -> Ojs.t =
          fun (x5492 : vscode_BreakpointsChangeEvent) ->
            vscode_BreakpointsChangeEvent_to_js x5492
        let (get_added : t -> vscode_Breakpoint list) =
          fun (x5494 : t) ->
            Ojs.list_of_js vscode_Breakpoint_of_js
              (Ojs.get_prop_ascii (t_to_js x5494) "added")
        let (get_removed : t -> vscode_Breakpoint list) =
          fun (x5496 : t) ->
            Ojs.list_of_js vscode_Breakpoint_of_js
              (Ojs.get_prop_ascii (t_to_js x5496) "removed")
        let (get_changed : t -> vscode_Breakpoint list) =
          fun (x5498 : t) ->
            Ojs.list_of_js vscode_Breakpoint_of_js
              (Ojs.get_prop_ascii (t_to_js x5498) "changed")
      end
    module Breakpoint =
      struct
        type t = vscode_Breakpoint
        let rec t_of_js : Ojs.t -> t =
          fun (x5501 : Ojs.t) -> vscode_Breakpoint_of_js x5501
        and t_to_js : t -> Ojs.t =
          fun (x5500 : vscode_Breakpoint) -> vscode_Breakpoint_to_js x5500
        let (get_id : t -> string) =
          fun (x5502 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5502) "id")
        let (get_enabled : t -> bool) =
          fun (x5503 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5503) "enabled")
        let (get_condition : t -> string) =
          fun (x5504 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5504) "condition")
        let (get_hitCondition : t -> string) =
          fun (x5505 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5505) "hitCondition")
        let (get_logMessage : t -> string) =
          fun (x5506 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5506) "logMessage")
        let (create :
          ?enabled:bool ->
            ?condition:string ->
              ?hitCondition:string -> ?logMessage:string -> unit -> t)
          =
          fun ?enabled:(x5507 : bool option) ->
            fun ?condition:(x5508 : string option) ->
              fun ?hitCondition:(x5509 : string option) ->
                fun ?logMessage:(x5510 : string option) ->
                  fun () ->
                    t_of_js
                      (Ojs.new_obj_arr
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "Breakpoint")
                         (let x5511 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x5507 with
                           | Some x5515 ->
                               ignore
                                 (Ojs.call x5511 "push"
                                    [|(Ojs.bool_to_js x5515)|])
                           | None -> ());
                          (match x5508 with
                           | Some x5514 ->
                               ignore
                                 (Ojs.call x5511 "push"
                                    [|(Ojs.string_to_js x5514)|])
                           | None -> ());
                          (match x5509 with
                           | Some x5513 ->
                               ignore
                                 (Ojs.call x5511 "push"
                                    [|(Ojs.string_to_js x5513)|])
                           | None -> ());
                          (match x5510 with
                           | Some x5512 ->
                               ignore
                                 (Ojs.call x5511 "push"
                                    [|(Ojs.string_to_js x5512)|])
                           | None -> ());
                          x5511))
      end
    module SourceBreakpoint =
      struct
        include struct include Breakpoint end
        let (get_location : t -> vscode_Location) =
          fun (x5516 : t) ->
            vscode_Location_of_js
              (Ojs.get_prop_ascii (t_to_js x5516) "location")
        let (create :
          location:vscode_Location ->
            ?enabled:bool ->
              ?condition:string ->
                ?hitCondition:string -> ?logMessage:string -> unit -> t)
          =
          fun ~location:(x5517 : vscode_Location) ->
            fun ?enabled:(x5518 : bool option) ->
              fun ?condition:(x5519 : string option) ->
                fun ?hitCondition:(x5520 : string option) ->
                  fun ?logMessage:(x5521 : string option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "SourceBreakpoint")
                           (let x5522 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5522 "push"
                                 [|(vscode_Location_to_js x5517)|]);
                            (match x5518 with
                             | Some x5526 ->
                                 ignore
                                   (Ojs.call x5522 "push"
                                      [|(Ojs.bool_to_js x5526)|])
                             | None -> ());
                            (match x5519 with
                             | Some x5525 ->
                                 ignore
                                   (Ojs.call x5522 "push"
                                      [|(Ojs.string_to_js x5525)|])
                             | None -> ());
                            (match x5520 with
                             | Some x5524 ->
                                 ignore
                                   (Ojs.call x5522 "push"
                                      [|(Ojs.string_to_js x5524)|])
                             | None -> ());
                            (match x5521 with
                             | Some x5523 ->
                                 ignore
                                   (Ojs.call x5522 "push"
                                      [|(Ojs.string_to_js x5523)|])
                             | None -> ());
                            x5522))
      end
    module FunctionBreakpoint =
      struct
        include struct include Breakpoint end
        let (get_functionName : t -> string) =
          fun (x5527 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5527) "functionName")
        let (create :
          functionName:string ->
            ?enabled:bool ->
              ?condition:string ->
                ?hitCondition:string -> ?logMessage:string -> unit -> t)
          =
          fun ~functionName:(x5528 : string) ->
            fun ?enabled:(x5529 : bool option) ->
              fun ?condition:(x5530 : string option) ->
                fun ?hitCondition:(x5531 : string option) ->
                  fun ?logMessage:(x5532 : string option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "FunctionBreakpoint")
                           (let x5533 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5533 "push"
                                 [|(Ojs.string_to_js x5528)|]);
                            (match x5529 with
                             | Some x5537 ->
                                 ignore
                                   (Ojs.call x5533 "push"
                                      [|(Ojs.bool_to_js x5537)|])
                             | None -> ());
                            (match x5530 with
                             | Some x5536 ->
                                 ignore
                                   (Ojs.call x5533 "push"
                                      [|(Ojs.string_to_js x5536)|])
                             | None -> ());
                            (match x5531 with
                             | Some x5535 ->
                                 ignore
                                   (Ojs.call x5533 "push"
                                      [|(Ojs.string_to_js x5535)|])
                             | None -> ());
                            (match x5532 with
                             | Some x5534 ->
                                 ignore
                                   (Ojs.call x5533 "push"
                                      [|(Ojs.string_to_js x5534)|])
                             | None -> ());
                            x5533))
        include struct include Breakpoint end
      end
    module DebugConsoleMode =
      struct
        type t = vscode_DebugConsoleMode
        let rec t_of_js : Ojs.t -> t =
          fun (x5539 : Ojs.t) -> vscode_DebugConsoleMode_of_js x5539
        and t_to_js : t -> Ojs.t =
          fun (x5538 : vscode_DebugConsoleMode) ->
            vscode_DebugConsoleMode_to_js x5538
      end
    module DebugSessionOptions =
      struct
        type t = vscode_DebugSessionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5541 : Ojs.t) -> vscode_DebugSessionOptions_of_js x5541
        and t_to_js : t -> Ojs.t =
          fun (x5540 : vscode_DebugSessionOptions) ->
            vscode_DebugSessionOptions_to_js x5540
        let (get_parentSession : t -> vscode_DebugSession) =
          fun (x5542 : t) ->
            vscode_DebugSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5542) "parentSession")
        let (set_parentSession : t -> vscode_DebugSession -> unit) =
          fun (x5543 : t) ->
            fun (x5544 : vscode_DebugSession) ->
              Ojs.set_prop_ascii (t_to_js x5543) "parentSession"
                (vscode_DebugSession_to_js x5544)
        let (get_consoleMode : t -> vscode_DebugConsoleMode) =
          fun (x5545 : t) ->
            vscode_DebugConsoleMode_of_js
              (Ojs.get_prop_ascii (t_to_js x5545) "consoleMode")
        let (set_consoleMode : t -> vscode_DebugConsoleMode -> unit) =
          fun (x5546 : t) ->
            fun (x5547 : vscode_DebugConsoleMode) ->
              Ojs.set_prop_ascii (t_to_js x5546) "consoleMode"
                (vscode_DebugConsoleMode_to_js x5547)
        let (get_noDebug : t -> bool) =
          fun (x5548 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5548) "noDebug")
        let (set_noDebug : t -> bool -> unit) =
          fun (x5549 : t) ->
            fun (x5550 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5549) "noDebug"
                (Ojs.bool_to_js x5550)
        let (get_compact : t -> bool) =
          fun (x5551 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5551) "compact")
        let (set_compact : t -> bool -> unit) =
          fun (x5552 : t) ->
            fun (x5553 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5552) "compact"
                (Ojs.bool_to_js x5553)
      end
    module DebugConfigurationProviderTriggerKind =
      struct
        type t = vscode_DebugConfigurationProviderTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x5555 : Ojs.t) ->
            vscode_DebugConfigurationProviderTriggerKind_of_js x5555
        and t_to_js : t -> Ojs.t =
          fun (x5554 : vscode_DebugConfigurationProviderTriggerKind) ->
            vscode_DebugConfigurationProviderTriggerKind_to_js x5554
      end
    module Debug =
      struct
        let (activeDebugSession : vscode_DebugSession or_undefined) =
          or_undefined_of_js vscode_DebugSession_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "activeDebugSession")
        let (activeDebugConsole : vscode_DebugConsole) =
          vscode_DebugConsole_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "activeDebugConsole")
        let (breakpoints : vscode_Breakpoint list) =
          Ojs.list_of_js vscode_Breakpoint_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "breakpoints")
        let (onDidChangeActiveDebugSession :
          vscode_DebugSession or_undefined vscode_Event) =
          vscode_Event_of_js
            (fun (x5558 : Ojs.t) ->
               or_undefined_of_js vscode_DebugSession_of_js x5558)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidChangeActiveDebugSession")
        let (onDidStartDebugSession : vscode_DebugSession vscode_Event) =
          vscode_Event_of_js vscode_DebugSession_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidStartDebugSession")
        let (onDidReceiveDebugSessionCustomEvent :
          vscode_DebugSessionCustomEvent vscode_Event) =
          vscode_Event_of_js vscode_DebugSessionCustomEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidReceiveDebugSessionCustomEvent")
        let (onDidTerminateDebugSession : vscode_DebugSession vscode_Event) =
          vscode_Event_of_js vscode_DebugSession_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidTerminateDebugSession")
        let (onDidChangeBreakpoints :
          vscode_BreakpointsChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_BreakpointsChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidChangeBreakpoints")
        let (registerDebugConfigurationProvider :
          debugType:string ->
            provider:vscode_DebugConfigurationProvider ->
              ?triggerKind:vscode_DebugConfigurationProviderTriggerKind ->
                unit -> vscode_Disposable)
          =
          fun ~debugType:(x5564 : string) ->
            fun ~provider:(x5565 : vscode_DebugConfigurationProvider) ->
              fun
                ?triggerKind:(x5566 :
                               vscode_DebugConfigurationProviderTriggerKind
                                 option)
                ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5569 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5569
                          "registerDebugConfigurationProvider") "apply"
                       [|x5569;((let x5567 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5567 "push"
                                      [|(Ojs.string_to_js x5564)|]);
                                 ignore
                                   (Ojs.call x5567 "push"
                                      [|(vscode_DebugConfigurationProvider_to_js
                                           x5565)|]);
                                 (match x5566 with
                                  | Some x5568 ->
                                      ignore
                                        (Ojs.call x5567 "push"
                                           [|(vscode_DebugConfigurationProviderTriggerKind_to_js
                                                x5568)|])
                                  | None -> ());
                                 x5567))|])
        let (registerDebugAdapterDescriptorFactory :
          debugType:string ->
            factory:vscode_DebugAdapterDescriptorFactory -> vscode_Disposable)
          =
          fun ~debugType:(x5570 : string) ->
            fun ~factory:(x5571 : vscode_DebugAdapterDescriptorFactory) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "debug")
                   "registerDebugAdapterDescriptorFactory"
                   [|(Ojs.string_to_js x5570);(vscode_DebugAdapterDescriptorFactory_to_js
                                                 x5571)|])
        let (registerDebugAdapterTrackerFactory :
          debugType:string ->
            factory:vscode_DebugAdapterTrackerFactory -> vscode_Disposable)
          =
          fun ~debugType:(x5572 : string) ->
            fun ~factory:(x5573 : vscode_DebugAdapterTrackerFactory) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "debug")
                   "registerDebugAdapterTrackerFactory"
                   [|(Ojs.string_to_js x5572);(vscode_DebugAdapterTrackerFactory_to_js
                                                 x5573)|])
        let (startDebugging :
          folder:vscode_WorkspaceFolder or_undefined ->
            nameOrConfiguration:vscode_DebugConfiguration or_string ->
              ?parentSessionOrOptions:(vscode_DebugSession,
                vscode_DebugSessionOptions) union2 -> unit -> bool _Thenable)
          =
          fun ~folder:(x5574 : vscode_WorkspaceFolder or_undefined) ->
            fun
              ~nameOrConfiguration:(x5575 :
                                     vscode_DebugConfiguration or_string)
              ->
              fun
                ?parentSessionOrOptions:(x5576 :
                                          (vscode_DebugSession,
                                            vscode_DebugSessionOptions)
                                            union2 option)
                ->
                fun () ->
                  _Thenable_of_js Ojs.bool_of_js
                    (let x5583 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                     Ojs.call (Ojs.get_prop_ascii x5583 "startDebugging")
                       "apply"
                       [|x5583;((let x5577 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5577 "push"
                                      [|(or_undefined_to_js
                                           vscode_WorkspaceFolder_to_js x5574)|]);
                                 ignore
                                   (Ojs.call x5577 "push"
                                      [|(or_string_to_js
                                           vscode_DebugConfiguration_to_js
                                           x5575)|]);
                                 (match x5576 with
                                  | Some x5578 ->
                                      ignore
                                        (Ojs.call x5577 "push"
                                           [|(union2_to_js
                                                vscode_DebugSession_to_js
                                                vscode_DebugSessionOptions_to_js
                                                x5578)|])
                                  | None -> ());
                                 x5577))|])
        let (stopDebugging :
          ?session:vscode_DebugSession -> unit -> unit _Thenable) =
          fun ?session:(x5585 : vscode_DebugSession option) ->
            fun () ->
              _Thenable_of_js Ojs.unit_of_js
                (let x5588 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                 Ojs.call (Ojs.get_prop_ascii x5588 "stopDebugging") "apply"
                   [|x5588;((let x5586 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5585 with
                              | Some x5587 ->
                                  ignore
                                    (Ojs.call x5586 "push"
                                       [|(vscode_DebugSession_to_js x5587)|])
                              | None -> ());
                             x5586))|])
        let (addBreakpoints : breakpoints:vscode_Breakpoint list -> unit) =
          fun ~breakpoints:(x5590 : vscode_Breakpoint list) ->
            ignore
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "debug") "addBreakpoints"
                 [|(Ojs.list_to_js vscode_Breakpoint_to_js x5590)|])
        let (removeBreakpoints : breakpoints:vscode_Breakpoint list -> unit)
          =
          fun ~breakpoints:(x5592 : vscode_Breakpoint list) ->
            ignore
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "debug") "removeBreakpoints"
                 [|(Ojs.list_to_js vscode_Breakpoint_to_js x5592)|])
        let (asDebugSourceUri :
          source:vscode_DebugProtocolSource ->
            ?session:vscode_DebugSession -> unit -> vscode_Uri)
          =
          fun ~source:(x5594 : vscode_DebugProtocolSource) ->
            fun ?session:(x5595 : vscode_DebugSession option) ->
              fun () ->
                vscode_Uri_of_js
                  (let x5598 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                   Ojs.call (Ojs.get_prop_ascii x5598 "asDebugSourceUri")
                     "apply"
                     [|x5598;((let x5596 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5596 "push"
                                    [|(vscode_DebugProtocolSource_to_js x5594)|]);
                               (match x5595 with
                                | Some x5597 ->
                                    ignore
                                      (Ojs.call x5596 "push"
                                         [|(vscode_DebugSession_to_js x5597)|])
                                | None -> ());
                               x5596))|])
      end
    module Extensions =
      struct
        let (getExtension :
          extensionId:string -> any vscode_Extension or_undefined) =
          fun ~extensionId:(x5599 : string) ->
            or_undefined_of_js
              (fun (x5600 : Ojs.t) -> vscode_Extension_of_js any_of_js x5600)
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "extensions") "getExtension" [|(Ojs.string_to_js x5599)|])
        let (getExtension :
          extensionId:string -> 'T vscode_Extension or_undefined) =
          fun ~extensionId:(x5602 : string) ->
            or_undefined_of_js
              (fun (x5603 : Ojs.t) -> vscode_Extension_of_js Obj.magic x5603)
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "extensions") "getExtension" [|(Ojs.string_to_js x5602)|])
        let (all : any vscode_Extension list) =
          Ojs.list_of_js
            (fun (x5605 : Ojs.t) -> vscode_Extension_of_js any_of_js x5605)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "extensions") "all")
        let (onDidChange : unit vscode_Event) =
          vscode_Event_of_js Ojs.unit_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "extensions") "onDidChange")
      end
    module CommentThreadCollapsibleState =
      struct
        type t = vscode_CommentThreadCollapsibleState
        let rec t_of_js : Ojs.t -> t =
          fun (x5609 : Ojs.t) ->
            vscode_CommentThreadCollapsibleState_of_js x5609
        and t_to_js : t -> Ojs.t =
          fun (x5608 : vscode_CommentThreadCollapsibleState) ->
            vscode_CommentThreadCollapsibleState_to_js x5608
      end
    module CommentMode =
      struct
        type t = vscode_CommentMode
        let rec t_of_js : Ojs.t -> t =
          fun (x5611 : Ojs.t) -> vscode_CommentMode_of_js x5611
        and t_to_js : t -> Ojs.t =
          fun (x5610 : vscode_CommentMode) -> vscode_CommentMode_to_js x5610
      end
    module CommentThread =
      struct
        type t = vscode_CommentThread
        let rec t_of_js : Ojs.t -> t =
          fun (x5613 : Ojs.t) -> vscode_CommentThread_of_js x5613
        and t_to_js : t -> Ojs.t =
          fun (x5612 : vscode_CommentThread) ->
            vscode_CommentThread_to_js x5612
        let (get_uri : t -> vscode_Uri) =
          fun (x5614 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x5614) "uri")
        let (get_range : t -> vscode_Range) =
          fun (x5615 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x5615) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x5616 : t) ->
            fun (x5617 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x5616) "range"
                (vscode_Range_to_js x5617)
        let (get_comments : t -> vscode_Comment list) =
          fun (x5618 : t) ->
            Ojs.list_of_js vscode_Comment_of_js
              (Ojs.get_prop_ascii (t_to_js x5618) "comments")
        let (set_comments : t -> vscode_Comment list -> unit) =
          fun (x5620 : t) ->
            fun (x5621 : vscode_Comment list) ->
              Ojs.set_prop_ascii (t_to_js x5620) "comments"
                (Ojs.list_to_js vscode_Comment_to_js x5621)
        let (get_collapsibleState :
          t -> vscode_CommentThreadCollapsibleState) =
          fun (x5623 : t) ->
            vscode_CommentThreadCollapsibleState_of_js
              (Ojs.get_prop_ascii (t_to_js x5623) "collapsibleState")
        let (set_collapsibleState :
          t -> vscode_CommentThreadCollapsibleState -> unit) =
          fun (x5624 : t) ->
            fun (x5625 : vscode_CommentThreadCollapsibleState) ->
              Ojs.set_prop_ascii (t_to_js x5624) "collapsibleState"
                (vscode_CommentThreadCollapsibleState_to_js x5625)
        let (get_canReply : t -> bool) =
          fun (x5626 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5626) "canReply")
        let (set_canReply : t -> bool -> unit) =
          fun (x5627 : t) ->
            fun (x5628 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5627) "canReply"
                (Ojs.bool_to_js x5628)
        let (get_contextValue : t -> string) =
          fun (x5629 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5629) "contextValue")
        let (set_contextValue : t -> string -> unit) =
          fun (x5630 : t) ->
            fun (x5631 : string) ->
              Ojs.set_prop_ascii (t_to_js x5630) "contextValue"
                (Ojs.string_to_js x5631)
        let (get_label : t -> string) =
          fun (x5632 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5632) "label")
        let (set_label : t -> string -> unit) =
          fun (x5633 : t) ->
            fun (x5634 : string) ->
              Ojs.set_prop_ascii (t_to_js x5633) "label"
                (Ojs.string_to_js x5634)
        let (dispose : t -> unit) =
          fun (x5635 : t) -> ignore (Ojs.call (t_to_js x5635) "dispose" [||])
      end
    module CommentAuthorInformation =
      struct
        type t = vscode_CommentAuthorInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x5637 : Ojs.t) -> vscode_CommentAuthorInformation_of_js x5637
        and t_to_js : t -> Ojs.t =
          fun (x5636 : vscode_CommentAuthorInformation) ->
            vscode_CommentAuthorInformation_to_js x5636
        let (get_name : t -> string) =
          fun (x5638 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5638) "name")
        let (set_name : t -> string -> unit) =
          fun (x5639 : t) ->
            fun (x5640 : string) ->
              Ojs.set_prop_ascii (t_to_js x5639) "name"
                (Ojs.string_to_js x5640)
        let (get_iconPath : t -> vscode_Uri) =
          fun (x5641 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x5641) "iconPath")
        let (set_iconPath : t -> vscode_Uri -> unit) =
          fun (x5642 : t) ->
            fun (x5643 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x5642) "iconPath"
                (vscode_Uri_to_js x5643)
      end
    module CommentReaction =
      struct
        type t = vscode_CommentReaction
        let rec t_of_js : Ojs.t -> t =
          fun (x5645 : Ojs.t) -> vscode_CommentReaction_of_js x5645
        and t_to_js : t -> Ojs.t =
          fun (x5644 : vscode_CommentReaction) ->
            vscode_CommentReaction_to_js x5644
        let (get_label : t -> string) =
          fun (x5646 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5646) "label")
        let (get_iconPath : t -> vscode_Uri or_string) =
          fun (x5647 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5647) "iconPath")
        let (get_count : t -> float) =
          fun (x5649 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x5649) "count")
        let (get_authorHasReacted : t -> bool) =
          fun (x5650 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5650) "authorHasReacted")
      end
    module Comment =
      struct
        type t = vscode_Comment
        let rec t_of_js : Ojs.t -> t =
          fun (x5652 : Ojs.t) -> vscode_Comment_of_js x5652
        and t_to_js : t -> Ojs.t =
          fun (x5651 : vscode_Comment) -> vscode_Comment_to_js x5651
        let (get_body : t -> vscode_MarkdownString or_string) =
          fun (x5653 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x5653) "body")
        let (set_body : t -> vscode_MarkdownString or_string -> unit) =
          fun (x5655 : t) ->
            fun (x5656 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x5655) "body"
                (or_string_to_js vscode_MarkdownString_to_js x5656)
        let (get_mode : t -> vscode_CommentMode) =
          fun (x5658 : t) ->
            vscode_CommentMode_of_js
              (Ojs.get_prop_ascii (t_to_js x5658) "mode")
        let (set_mode : t -> vscode_CommentMode -> unit) =
          fun (x5659 : t) ->
            fun (x5660 : vscode_CommentMode) ->
              Ojs.set_prop_ascii (t_to_js x5659) "mode"
                (vscode_CommentMode_to_js x5660)
        let (get_author : t -> vscode_CommentAuthorInformation) =
          fun (x5661 : t) ->
            vscode_CommentAuthorInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x5661) "author")
        let (set_author : t -> vscode_CommentAuthorInformation -> unit) =
          fun (x5662 : t) ->
            fun (x5663 : vscode_CommentAuthorInformation) ->
              Ojs.set_prop_ascii (t_to_js x5662) "author"
                (vscode_CommentAuthorInformation_to_js x5663)
        let (get_contextValue : t -> string) =
          fun (x5664 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5664) "contextValue")
        let (set_contextValue : t -> string -> unit) =
          fun (x5665 : t) ->
            fun (x5666 : string) ->
              Ojs.set_prop_ascii (t_to_js x5665) "contextValue"
                (Ojs.string_to_js x5666)
        let (get_reactions : t -> vscode_CommentReaction list) =
          fun (x5667 : t) ->
            Ojs.list_of_js vscode_CommentReaction_of_js
              (Ojs.get_prop_ascii (t_to_js x5667) "reactions")
        let (set_reactions : t -> vscode_CommentReaction list -> unit) =
          fun (x5669 : t) ->
            fun (x5670 : vscode_CommentReaction list) ->
              Ojs.set_prop_ascii (t_to_js x5669) "reactions"
                (Ojs.list_to_js vscode_CommentReaction_to_js x5670)
        let (get_label : t -> string) =
          fun (x5672 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5672) "label")
        let (set_label : t -> string -> unit) =
          fun (x5673 : t) ->
            fun (x5674 : string) ->
              Ojs.set_prop_ascii (t_to_js x5673) "label"
                (Ojs.string_to_js x5674)
      end
    module CommentReply =
      struct
        type t = vscode_CommentReply
        let rec t_of_js : Ojs.t -> t =
          fun (x5676 : Ojs.t) -> vscode_CommentReply_of_js x5676
        and t_to_js : t -> Ojs.t =
          fun (x5675 : vscode_CommentReply) ->
            vscode_CommentReply_to_js x5675
        let (get_thread : t -> vscode_CommentThread) =
          fun (x5677 : t) ->
            vscode_CommentThread_of_js
              (Ojs.get_prop_ascii (t_to_js x5677) "thread")
        let (set_thread : t -> vscode_CommentThread -> unit) =
          fun (x5678 : t) ->
            fun (x5679 : vscode_CommentThread) ->
              Ojs.set_prop_ascii (t_to_js x5678) "thread"
                (vscode_CommentThread_to_js x5679)
        let (get_text : t -> string) =
          fun (x5680 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5680) "text")
        let (set_text : t -> string -> unit) =
          fun (x5681 : t) ->
            fun (x5682 : string) ->
              Ojs.set_prop_ascii (t_to_js x5681) "text"
                (Ojs.string_to_js x5682)
      end
    module CommentingRangeProvider =
      struct
        type t = vscode_CommentingRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5684 : Ojs.t) -> vscode_CommentingRangeProvider_of_js x5684
        and t_to_js : t -> Ojs.t =
          fun (x5683 : vscode_CommentingRangeProvider) ->
            vscode_CommentingRangeProvider_to_js x5683
        let (provideCommentingRanges :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                vscode_Range list vscode_ProviderResult)
          =
          fun (x5687 : t) ->
            fun ~document:(x5685 : vscode_TextDocument) ->
              fun ~token:(x5686 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x5688 : Ojs.t) ->
                     Ojs.list_of_js vscode_Range_of_js x5688)
                  (Ojs.call (t_to_js x5687) "provideCommentingRanges"
                     [|(vscode_TextDocument_to_js x5685);(vscode_CancellationToken_to_js
                                                            x5686)|])
      end
    module CommentOptions =
      struct
        type t = vscode_CommentOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5691 : Ojs.t) -> vscode_CommentOptions_of_js x5691
        and t_to_js : t -> Ojs.t =
          fun (x5690 : vscode_CommentOptions) ->
            vscode_CommentOptions_to_js x5690
        let (get_prompt : t -> string) =
          fun (x5692 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5692) "prompt")
        let (set_prompt : t -> string -> unit) =
          fun (x5693 : t) ->
            fun (x5694 : string) ->
              Ojs.set_prop_ascii (t_to_js x5693) "prompt"
                (Ojs.string_to_js x5694)
        let (get_placeHolder : t -> string) =
          fun (x5695 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5695) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x5696 : t) ->
            fun (x5697 : string) ->
              Ojs.set_prop_ascii (t_to_js x5696) "placeHolder"
                (Ojs.string_to_js x5697)
      end
    module CommentController =
      struct
        type t = vscode_CommentController
        let rec t_of_js : Ojs.t -> t =
          fun (x5699 : Ojs.t) -> vscode_CommentController_of_js x5699
        and t_to_js : t -> Ojs.t =
          fun (x5698 : vscode_CommentController) ->
            vscode_CommentController_to_js x5698
        let (get_id : t -> string) =
          fun (x5700 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5700) "id")
        let (get_label : t -> string) =
          fun (x5701 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5701) "label")
        let (get_options : t -> vscode_CommentOptions) =
          fun (x5702 : t) ->
            vscode_CommentOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x5702) "options")
        let (set_options : t -> vscode_CommentOptions -> unit) =
          fun (x5703 : t) ->
            fun (x5704 : vscode_CommentOptions) ->
              Ojs.set_prop_ascii (t_to_js x5703) "options"
                (vscode_CommentOptions_to_js x5704)
        let (get_commentingRangeProvider :
          t -> vscode_CommentingRangeProvider) =
          fun (x5705 : t) ->
            vscode_CommentingRangeProvider_of_js
              (Ojs.get_prop_ascii (t_to_js x5705) "commentingRangeProvider")
        let (set_commentingRangeProvider :
          t -> vscode_CommentingRangeProvider -> unit) =
          fun (x5706 : t) ->
            fun (x5707 : vscode_CommentingRangeProvider) ->
              Ojs.set_prop_ascii (t_to_js x5706) "commentingRangeProvider"
                (vscode_CommentingRangeProvider_to_js x5707)
        let (createCommentThread :
          t ->
            uri:vscode_Uri ->
              range:vscode_Range ->
                comments:vscode_Comment list -> vscode_CommentThread)
          =
          fun (x5712 : t) ->
            fun ~uri:(x5708 : vscode_Uri) ->
              fun ~range:(x5709 : vscode_Range) ->
                fun ~comments:(x5710 : vscode_Comment list) ->
                  vscode_CommentThread_of_js
                    (Ojs.call (t_to_js x5712) "createCommentThread"
                       [|(vscode_Uri_to_js x5708);(vscode_Range_to_js x5709);(
                         Ojs.list_to_js vscode_Comment_to_js x5710)|])
        let (reactionHandler :
          t ->
            comment:vscode_Comment ->
              reaction:vscode_CommentReaction -> unit _Thenable)
          =
          fun (x5715 : t) ->
            fun ~comment:(x5713 : vscode_Comment) ->
              fun ~reaction:(x5714 : vscode_CommentReaction) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x5715) "reactionHandler"
                     [|(vscode_Comment_to_js x5713);(vscode_CommentReaction_to_js
                                                       x5714)|])
        let (dispose : t -> unit) =
          fun (x5717 : t) -> ignore (Ojs.call (t_to_js x5717) "dispose" [||])
      end
    module Comments =
      struct
        let (createCommentController :
          id:string -> label:string -> vscode_CommentController) =
          fun ~id:(x5718 : string) ->
            fun ~label:(x5719 : string) ->
              vscode_CommentController_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "comments")
                   "createCommentController"
                   [|(Ojs.string_to_js x5718);(Ojs.string_to_js x5719)|])
      end
    module AuthenticationSession =
      struct
        type t = vscode_AuthenticationSession
        let rec t_of_js : Ojs.t -> t =
          fun (x5721 : Ojs.t) -> vscode_AuthenticationSession_of_js x5721
        and t_to_js : t -> Ojs.t =
          fun (x5720 : vscode_AuthenticationSession) ->
            vscode_AuthenticationSession_to_js x5720
        let (get_id : t -> string) =
          fun (x5722 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5722) "id")
        let (get_accessToken : t -> string) =
          fun (x5723 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5723) "accessToken")
        let (get_account :
          t -> vscode_AuthenticationSessionAccountInformation) =
          fun (x5724 : t) ->
            vscode_AuthenticationSessionAccountInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x5724) "account")
        let (get_scopes : t -> string list) =
          fun (x5725 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5725) "scopes")
      end
    module AuthenticationSessionAccountInformation =
      struct
        type t = vscode_AuthenticationSessionAccountInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x5728 : Ojs.t) ->
            vscode_AuthenticationSessionAccountInformation_of_js x5728
        and t_to_js : t -> Ojs.t =
          fun (x5727 : vscode_AuthenticationSessionAccountInformation) ->
            vscode_AuthenticationSessionAccountInformation_to_js x5727
        let (get_id : t -> string) =
          fun (x5729 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5729) "id")
        let (get_label : t -> string) =
          fun (x5730 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5730) "label")
      end
    module AuthenticationGetSessionOptions =
      struct
        type t = vscode_AuthenticationGetSessionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5732 : Ojs.t) ->
            vscode_AuthenticationGetSessionOptions_of_js x5732
        and t_to_js : t -> Ojs.t =
          fun (x5731 : vscode_AuthenticationGetSessionOptions) ->
            vscode_AuthenticationGetSessionOptions_to_js x5731
        let (get_createIfNone : t -> bool) =
          fun (x5733 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5733) "createIfNone")
        let (set_createIfNone : t -> bool -> unit) =
          fun (x5734 : t) ->
            fun (x5735 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5734) "createIfNone"
                (Ojs.bool_to_js x5735)
        let (get_clearSessionPreference : t -> bool) =
          fun (x5736 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5736) "clearSessionPreference")
        let (set_clearSessionPreference : t -> bool -> unit) =
          fun (x5737 : t) ->
            fun (x5738 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5737) "clearSessionPreference"
                (Ojs.bool_to_js x5738)
      end
    module AuthenticationProviderInformation =
      struct
        type t = vscode_AuthenticationProviderInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x5740 : Ojs.t) ->
            vscode_AuthenticationProviderInformation_of_js x5740
        and t_to_js : t -> Ojs.t =
          fun (x5739 : vscode_AuthenticationProviderInformation) ->
            vscode_AuthenticationProviderInformation_to_js x5739
        let (get_id : t -> string) =
          fun (x5741 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5741) "id")
        let (get_label : t -> string) =
          fun (x5742 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5742) "label")
      end
    module AuthenticationSessionsChangeEvent =
      struct
        type t = vscode_AuthenticationSessionsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5744 : Ojs.t) ->
            vscode_AuthenticationSessionsChangeEvent_of_js x5744
        and t_to_js : t -> Ojs.t =
          fun (x5743 : vscode_AuthenticationSessionsChangeEvent) ->
            vscode_AuthenticationSessionsChangeEvent_to_js x5743
        let (get_provider : t -> vscode_AuthenticationProviderInformation) =
          fun (x5745 : t) ->
            vscode_AuthenticationProviderInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x5745) "provider")
      end
    module AuthenticationProviderOptions =
      struct
        type t = vscode_AuthenticationProviderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5747 : Ojs.t) ->
            vscode_AuthenticationProviderOptions_of_js x5747
        and t_to_js : t -> Ojs.t =
          fun (x5746 : vscode_AuthenticationProviderOptions) ->
            vscode_AuthenticationProviderOptions_to_js x5746
        let (get_supportsMultipleAccounts : t -> bool) =
          fun (x5748 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5748) "supportsMultipleAccounts")
      end
    module AuthenticationProviderAuthenticationSessionsChangeEvent =
      struct
        type t =
          vscode_AuthenticationProviderAuthenticationSessionsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5750 : Ojs.t) ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_of_js
              x5750
        and t_to_js : t -> Ojs.t =
          fun
            (x5749 :
              vscode_AuthenticationProviderAuthenticationSessionsChangeEvent)
            ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_to_js
              x5749
        let (get_added : t -> vscode_AuthenticationSession list) =
          fun (x5751 : t) ->
            Ojs.list_of_js vscode_AuthenticationSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5751) "added")
        let (get_removed : t -> vscode_AuthenticationSession list) =
          fun (x5753 : t) ->
            Ojs.list_of_js vscode_AuthenticationSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5753) "removed")
        let (get_changed : t -> vscode_AuthenticationSession list) =
          fun (x5755 : t) ->
            Ojs.list_of_js vscode_AuthenticationSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5755) "changed")
      end
    module AuthenticationProvider =
      struct
        type t = vscode_AuthenticationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5758 : Ojs.t) -> vscode_AuthenticationProvider_of_js x5758
        and t_to_js : t -> Ojs.t =
          fun (x5757 : vscode_AuthenticationProvider) ->
            vscode_AuthenticationProvider_to_js x5757
        let (get_onDidChangeSessions :
          t ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent
              vscode_Event)
          =
          fun (x5759 : t) ->
            vscode_Event_of_js
              vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x5759) "onDidChangeSessions")
        let (getSessions :
          t ->
            ?scopes:string list ->
              unit -> vscode_AuthenticationSession list _Thenable)
          =
          fun (x5765 : t) ->
            fun ?scopes:(x5761 : string list option) ->
              fun () ->
                _Thenable_of_js
                  (fun (x5767 : Ojs.t) ->
                     Ojs.list_of_js vscode_AuthenticationSession_of_js x5767)
                  (let x5766 = t_to_js x5765 in
                   Ojs.call (Ojs.get_prop_ascii x5766 "getSessions") "apply"
                     [|x5766;((let x5762 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x5761 with
                                | Some x5763 ->
                                    ignore
                                      (Ojs.call x5762 "push"
                                         [|(Ojs.list_to_js Ojs.string_to_js
                                              x5763)|])
                                | None -> ());
                               x5762))|])
        let (createSession :
          t -> scopes:string list -> vscode_AuthenticationSession _Thenable)
          =
          fun (x5771 : t) ->
            fun ~scopes:(x5769 : string list) ->
              _Thenable_of_js vscode_AuthenticationSession_of_js
                (Ojs.call (t_to_js x5771) "createSession"
                   [|(Ojs.list_to_js Ojs.string_to_js x5769)|])
        let (removeSession : t -> sessionId:string -> unit _Thenable) =
          fun (x5774 : t) ->
            fun ~sessionId:(x5773 : string) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x5774) "removeSession"
                   [|(Ojs.string_to_js x5773)|])
      end
    module Authentication =
      struct
        let (getSession :
          providerId:string ->
            scopes:string list ->
              options:(vscode_AuthenticationGetSessionOptions,
                anonymous_interface_4) intersection2 ->
                vscode_AuthenticationSession _Thenable)
          =
          fun ~providerId:(x5776 : string) ->
            fun ~scopes:(x5777 : string list) ->
              fun
                ~options:(x5779 :
                           (vscode_AuthenticationGetSessionOptions,
                             anonymous_interface_4) intersection2)
                ->
                _Thenable_of_js vscode_AuthenticationSession_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "authentication") "getSession"
                     [|(Ojs.string_to_js x5776);(Ojs.list_to_js
                                                   Ojs.string_to_js x5777);(
                       intersection2_to_js
                         vscode_AuthenticationGetSessionOptions_to_js
                         anonymous_interface_4_to_js x5779)|])
        let (getSession :
          providerId:string ->
            scopes:string list ->
              ?options:vscode_AuthenticationGetSessionOptions ->
                unit -> vscode_AuthenticationSession or_undefined _Thenable)
          =
          fun ~providerId:(x5783 : string) ->
            fun ~scopes:(x5784 : string list) ->
              fun
                ?options:(x5785 :
                           vscode_AuthenticationGetSessionOptions option)
                ->
                fun () ->
                  _Thenable_of_js
                    (fun (x5790 : Ojs.t) ->
                       or_undefined_of_js vscode_AuthenticationSession_of_js
                         x5790)
                    (let x5789 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode")
                         "authentication" in
                     Ojs.call (Ojs.get_prop_ascii x5789 "getSession") "apply"
                       [|x5789;((let x5786 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5786 "push"
                                      [|(Ojs.string_to_js x5783)|]);
                                 ignore
                                   (Ojs.call x5786 "push"
                                      [|(Ojs.list_to_js Ojs.string_to_js
                                           x5784)|]);
                                 (match x5785 with
                                  | Some x5787 ->
                                      ignore
                                        (Ojs.call x5786 "push"
                                           [|(vscode_AuthenticationGetSessionOptions_to_js
                                                x5787)|])
                                  | None -> ());
                                 x5786))|])
        let (onDidChangeSessions :
          vscode_AuthenticationSessionsChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_AuthenticationSessionsChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "authentication") "onDidChangeSessions")
        let (registerAuthenticationProvider :
          id:string ->
            label:string ->
              provider:vscode_AuthenticationProvider ->
                ?options:vscode_AuthenticationProviderOptions ->
                  unit -> vscode_Disposable)
          =
          fun ~id:(x5793 : string) ->
            fun ~label:(x5794 : string) ->
              fun ~provider:(x5795 : vscode_AuthenticationProvider) ->
                fun
                  ?options:(x5796 :
                             vscode_AuthenticationProviderOptions option)
                  ->
                  fun () ->
                    vscode_Disposable_of_js
                      (let x5799 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "authentication" in
                       Ojs.call
                         (Ojs.get_prop_ascii x5799
                            "registerAuthenticationProvider") "apply"
                         [|x5799;((let x5797 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5797 "push"
                                        [|(Ojs.string_to_js x5793)|]);
                                   ignore
                                     (Ojs.call x5797 "push"
                                        [|(Ojs.string_to_js x5794)|]);
                                   ignore
                                     (Ojs.call x5797 "push"
                                        [|(vscode_AuthenticationProvider_to_js
                                             x5795)|]);
                                   (match x5796 with
                                    | Some x5798 ->
                                        ignore
                                          (Ojs.call x5797 "push"
                                             [|(vscode_AuthenticationProviderOptions_to_js
                                                  x5798)|])
                                    | None -> ());
                                   x5797))|])
      end
  end
module Proposed =
  struct
    include struct include Vscode end
    module Internal =
      struct
        module AnonymousInterfaces =
          struct
            type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
            let rec anonymous_interface_0_of_js :
              Ojs.t -> anonymous_interface_0 = Obj.magic
            and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t
              = Obj.magic
            type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
            let rec anonymous_interface_1_of_js :
              Ojs.t -> anonymous_interface_1 = Obj.magic
            and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t
              = Obj.magic
            type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
            let rec anonymous_interface_2_of_js :
              Ojs.t -> anonymous_interface_2 = Obj.magic
            and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t
              = Obj.magic
            type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
            let rec anonymous_interface_3_of_js :
              Ojs.t -> anonymous_interface_3 = Obj.magic
            and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t
              = Obj.magic
            type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
            let rec anonymous_interface_4_of_js :
              Ojs.t -> anonymous_interface_4 = Obj.magic
            and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t
              = Obj.magic
            type anonymous_interface_5 = [ `anonymous_interface_5 ] intf
            let rec anonymous_interface_5_of_js :
              Ojs.t -> anonymous_interface_5 = Obj.magic
            and anonymous_interface_5_to_js : anonymous_interface_5 -> Ojs.t
              = Obj.magic
            type anonymous_interface_6 = [ `anonymous_interface_6 ] intf
            let rec anonymous_interface_6_of_js :
              Ojs.t -> anonymous_interface_6 = Obj.magic
            and anonymous_interface_6_to_js : anonymous_interface_6 -> Ojs.t
              = Obj.magic
            type anonymous_interface_7 = [ `anonymous_interface_7 ] intf
            let rec anonymous_interface_7_of_js :
              Ojs.t -> anonymous_interface_7 = Obj.magic
            and anonymous_interface_7_to_js : anonymous_interface_7 -> Ojs.t
              = Obj.magic
            type anonymous_interface_8 = [ `anonymous_interface_8 ] intf
            let rec anonymous_interface_8_of_js :
              Ojs.t -> anonymous_interface_8 = Obj.magic
            and anonymous_interface_8_to_js : anonymous_interface_8 -> Ojs.t
              = Obj.magic
            type anonymous_interface_9 = [ `anonymous_interface_9 ] intf
            let rec anonymous_interface_9_of_js :
              Ojs.t -> anonymous_interface_9 = Obj.magic
            and anonymous_interface_9_to_js : anonymous_interface_9 -> Ojs.t
              = Obj.magic
            type anonymous_interface_10 = [ `anonymous_interface_10 ] intf
            let rec anonymous_interface_10_of_js :
              Ojs.t -> anonymous_interface_10 = Obj.magic
            and anonymous_interface_10_to_js :
              anonymous_interface_10 -> Ojs.t = Obj.magic
            type anonymous_interface_11 = [ `anonymous_interface_11 ] intf
            let rec anonymous_interface_11_of_js :
              Ojs.t -> anonymous_interface_11 = Obj.magic
            and anonymous_interface_11_to_js :
              anonymous_interface_11 -> Ojs.t = Obj.magic
            type anonymous_interface_12 = [ `anonymous_interface_12 ] intf
            let rec anonymous_interface_12_of_js :
              Ojs.t -> anonymous_interface_12 = Obj.magic
            and anonymous_interface_12_to_js :
              anonymous_interface_12 -> Ojs.t = Obj.magic
            type anonymous_interface_13 = [ `anonymous_interface_13 ] intf
            let rec anonymous_interface_13_of_js :
              Ojs.t -> anonymous_interface_13 = Obj.magic
            and anonymous_interface_13_to_js :
              anonymous_interface_13 -> Ojs.t = Obj.magic
            type anonymous_interface_14 = [ `anonymous_interface_14 ] intf
            let rec anonymous_interface_14_of_js :
              Ojs.t -> anonymous_interface_14 = Obj.magic
            and anonymous_interface_14_to_js :
              anonymous_interface_14 -> Ojs.t = Obj.magic
            type anonymous_interface_15 = [ `anonymous_interface_15 ] intf
            let rec anonymous_interface_15_of_js :
              Ojs.t -> anonymous_interface_15 = Obj.magic
            and anonymous_interface_15_to_js :
              anonymous_interface_15 -> Ojs.t = Obj.magic
            type anonymous_interface_16 = [ `anonymous_interface_16 ] intf
            let rec anonymous_interface_16_of_js :
              Ojs.t -> anonymous_interface_16 = Obj.magic
            and anonymous_interface_16_to_js :
              anonymous_interface_16 -> Ojs.t = Obj.magic
            type anonymous_interface_17 = [ `anonymous_interface_17 ] intf
            let rec anonymous_interface_17_of_js :
              Ojs.t -> anonymous_interface_17 = Obj.magic
            and anonymous_interface_17_to_js :
              anonymous_interface_17 -> Ojs.t = Obj.magic
          end
        module Types =
          struct
            open AnonymousInterfaces
            type vscode_AuthenticationProvidersChangeEvent =
              [ `Vscode_AuthenticationProvidersChangeEvent ] intf
            and vscode_CandidatePortSource = [ `None  | `Process  | `Output ]
            and vscode_CandidatePortSource_None = [ `None ]
            and vscode_CandidatePortSource_Process = [ `Process ]
            and vscode_CandidatePortSource_Output = [ `Output ]
            and vscode_CompletionItem = [ `Vscode_CompletionItem ] intf
            and vscode_CompletionItemLabel =
              [ `Vscode_CompletionItemLabel ] intf
            and vscode_CustomTextEditorProvider =
              [ `Vscode_CustomTextEditorProvider ] intf
            and vscode_DebugProtocolVariable =
              [ `Vscode_DebugProtocolVariable ] intf
            and vscode_DebugProtocolVariableContainer =
              [ `Vscode_DebugProtocolVariableContainer ] intf
            and vscode_DocumentFilter = [ `Vscode_DocumentFilter ] intf
            and vscode_ExtensionContext = [ `Vscode_ExtensionContext ] intf
            and vscode_ExtensionRuntime = [ `Node  | `Webworker ]
            and vscode_ExtensionRuntime_Node = [ `Node ]
            and vscode_ExtensionRuntime_Webworker = [ `Webworker ]
            and vscode_ExternalUriOpener = [ `Vscode_ExternalUriOpener ] intf
            and vscode_ExternalUriOpenerMetadata =
              [ `Vscode_ExternalUriOpenerMetadata ] intf
            and vscode_ExternalUriOpenerPriority =
              [ `None  | `Option  | `Default  | `Preferred ]
            and vscode_ExternalUriOpenerPriority_None = [ `None ]
            and vscode_ExternalUriOpenerPriority_Option = [ `Option ]
            and vscode_ExternalUriOpenerPriority_Default = [ `Default ]
            and vscode_ExternalUriOpenerPriority_Preferred = [ `Preferred ]
            and vscode_FileSearchOptions =
              [ `Vscode_FileSearchOptions  | `Vscode_SearchOptions ] intf
            and vscode_FileSearchProvider =
              [ `Vscode_FileSearchProvider ] intf
            and vscode_FileSearchQuery = [ `Vscode_FileSearchQuery ] intf
            and vscode_FileSystemProvider =
              [ `Vscode_FileSystemProvider ] intf
            and vscode_FindTextInFilesOptions =
              [ `Vscode_FindTextInFilesOptions ] intf
            and vscode_GlobString = string
            and vscode_InlineHint = [ `Vscode_InlineHint ] intf
            and vscode_InlineHintKind = [ `Other  | `Type  | `Parameter ]
            and vscode_InlineHintKind_Other = [ `Other ]
            and vscode_InlineHintKind_Type = [ `Type ]
            and vscode_InlineHintKind_Parameter = [ `Parameter ]
            and vscode_InlineHintsProvider =
              [ `Vscode_InlineHintsProvider ] intf
            and vscode_InputBoxOptions = [ `Vscode_InputBoxOptions ] intf
            and vscode_LineChange = [ `Vscode_LineChange ] intf
            and vscode_MessageOptions = [ `Vscode_MessageOptions ] intf
            and vscode_NotebookCell = [ `Vscode_NotebookCell ] intf
            and vscode_NotebookCellData = [ `Vscode_NotebookCellData ] intf
            and vscode_NotebookCellExecuteEndContext =
              [ `Vscode_NotebookCellExecuteEndContext ] intf
            and vscode_NotebookCellExecuteStartContext =
              [ `Vscode_NotebookCellExecuteStartContext ] intf
            and vscode_NotebookCellExecutionState =
              [ `Idle  | `Pending  | `Executing ]
            and vscode_NotebookCellExecutionState_Idle = [ `Idle ]
            and vscode_NotebookCellExecutionState_Pending = [ `Pending ]
            and vscode_NotebookCellExecutionState_Executing = [ `Executing ]
            and vscode_NotebookCellExecutionStateChangeEvent =
              [ `Vscode_NotebookCellExecutionStateChangeEvent ] intf
            and vscode_NotebookCellExecutionSummary =
              [ `Vscode_NotebookCellExecutionSummary ] intf
            and vscode_NotebookCellExecutionTask =
              [ `Vscode_NotebookCellExecutionTask ] intf
            and vscode_NotebookCellKind = [ `Markdown  | `Code ]
            and vscode_NotebookCellKind_Markdown = [ `Markdown ]
            and vscode_NotebookCellKind_Code = [ `Code ]
            and vscode_NotebookCellMetadata =
              [ `Vscode_NotebookCellMetadata ] intf
            and vscode_NotebookCellMetadataChangeEvent =
              [ `Vscode_NotebookCellMetadataChangeEvent ] intf
            and vscode_NotebookCellOutput =
              [ `Vscode_NotebookCellOutput ] intf
            and vscode_NotebookCellOutputItem =
              [ `Vscode_NotebookCellOutputItem ] intf
            and vscode_NotebookCellOutputsChangeEvent =
              [ `Vscode_NotebookCellOutputsChangeEvent ] intf
            and vscode_NotebookCellRange = [ `Vscode_NotebookCellRange ] intf
            and vscode_NotebookCellStatusBarAlignment = [ `Left  | `Right ]
            and vscode_NotebookCellStatusBarAlignment_Left = [ `Left ]
            and vscode_NotebookCellStatusBarAlignment_Right = [ `Right ]
            and vscode_NotebookCellStatusBarItem =
              [ `Vscode_NotebookCellStatusBarItem ] intf
            and vscode_NotebookCellsChangeData =
              [ `Vscode_NotebookCellsChangeData ] intf
            and vscode_NotebookCellsChangeEvent =
              [ `Vscode_NotebookCellsChangeEvent ] intf
            and vscode_NotebookCommunication =
              [ `Vscode_NotebookCommunication ] intf
            and vscode_NotebookConcatTextDocument =
              [ `Vscode_NotebookConcatTextDocument ] intf
            and vscode_NotebookContentProvider =
              [ `Vscode_NotebookContentProvider ] intf
            and vscode_NotebookData = [ `Vscode_NotebookData ] intf
            and vscode_NotebookDecorationRenderOptions =
              [ `Vscode_NotebookDecorationRenderOptions ] intf
            and vscode_NotebookDocument = [ `Vscode_NotebookDocument ] intf
            and vscode_NotebookDocumentBackup =
              [ `Vscode_NotebookDocumentBackup ] intf
            and vscode_NotebookDocumentBackupContext =
              [ `Vscode_NotebookDocumentBackupContext ] intf
            and vscode_NotebookDocumentContentOptions =
              [ `Vscode_NotebookDocumentContentOptions ] intf
            and vscode_NotebookDocumentFilter =
              [ `Vscode_NotebookDocumentFilter ] intf
            and vscode_NotebookDocumentMetadata =
              [ `Vscode_NotebookDocumentMetadata ] intf
            and vscode_NotebookDocumentMetadataChangeEvent =
              [ `Vscode_NotebookDocumentMetadataChangeEvent ] intf
            and vscode_NotebookDocumentOpenContext =
              [ `Vscode_NotebookDocumentOpenContext ] intf
            and vscode_NotebookDocumentShowOptions =
              [ `Vscode_NotebookDocumentShowOptions ] intf
            and vscode_NotebookEditor = [ `Vscode_NotebookEditor ] intf
            and vscode_NotebookEditorDecorationType =
              [ `Vscode_NotebookEditorDecorationType ] intf
            and vscode_NotebookEditorEdit =
              [ `Vscode_NotebookEditorEdit ] intf
            and vscode_NotebookEditorRevealType =
              [ `Default  | `InCenter  | `InCenterIfOutsideViewport 
              | `AtTop ]
            and vscode_NotebookEditorRevealType_Default = [ `Default ]
            and vscode_NotebookEditorRevealType_InCenter = [ `InCenter ]
            and vscode_NotebookEditorRevealType_InCenterIfOutsideViewport =
              [ `InCenterIfOutsideViewport ]
            and vscode_NotebookEditorRevealType_AtTop = [ `AtTop ]
            and vscode_NotebookEditorSelectionChangeEvent =
              [ `Vscode_NotebookEditorSelectionChangeEvent ] intf
            and vscode_NotebookEditorVisibleRangesChangeEvent =
              [ `Vscode_NotebookEditorVisibleRangesChangeEvent ] intf
            and vscode_NotebookFilenamePattern =
              (GlobPattern.t, anonymous_interface_8) union2
            and vscode_NotebookFilter = [ `Vscode_NotebookFilter ] intf
            and vscode_NotebookKernel = [ `Vscode_NotebookKernel ] intf
            and vscode_NotebookKernel2 = [ `Vscode_NotebookKernel2 ] intf
            and vscode_NotebookKernelOptions =
              [ `Vscode_NotebookKernelOptions ] intf
            and 'T vscode_NotebookKernelProvider =
              [ `Vscode_NotebookKernelProvider of 'T ] intf
            and vscode_NotebookSelector =
              (vscode_NotebookFilter, vscode_NotebookFilter or_string list)
                union2 or_string
            and vscode_NotebookSerializer =
              [ `Vscode_NotebookSerializer ] intf
            and vscode_OpenEditorInfo = [ `Vscode_OpenEditorInfo ] intf
            and vscode_OpenExternalOptions =
              [ `Vscode_OpenExternalOptions ] intf
            and vscode_OpenExternalUriContext =
              [ `Vscode_OpenExternalUriContext ] intf
            and vscode_PortAttributes = [ `Vscode_PortAttributes ] intf
            and vscode_PortAttributesProvider =
              [ `Vscode_PortAttributesProvider ] intf
            and vscode_PortAutoForwardAction =
              [ `Notify  | `OpenBrowser  | `OpenPreview  | `Silent 
              | `Ignore ]
            and vscode_PortAutoForwardAction_Notify = [ `Notify ]
            and vscode_PortAutoForwardAction_OpenBrowser = [ `OpenBrowser ]
            and vscode_PortAutoForwardAction_OpenPreview = [ `OpenPreview ]
            and vscode_PortAutoForwardAction_Silent = [ `Silent ]
            and vscode_PortAutoForwardAction_Ignore = [ `Ignore ]
            and 'T vscode_QuickPick = [ `Vscode_QuickPick of 'T ] intf
            and vscode_QuickPickOptions = [ `Vscode_QuickPickOptions ] intf
            and vscode_RemoteAuthorityResolver =
              [ `Vscode_RemoteAuthorityResolver ] intf
            and vscode_RemoteAuthorityResolverContext =
              [ `Vscode_RemoteAuthorityResolverContext ] intf
            and vscode_RemoteAuthorityResolverError =
              [ `Vscode_RemoteAuthorityResolverError ] intf
            and vscode_ResolvedAuthority = [ `Vscode_ResolvedAuthority ] intf
            and vscode_ResolvedOptions = [ `Vscode_ResolvedOptions ] intf
            and vscode_ResolverResult =
              (vscode_ResolvedAuthority, vscode_ResolvedOptions,
                vscode_TunnelInformation) intersection3
            and vscode_ResourceLabelFormatter =
              [ `Vscode_ResourceLabelFormatter ] intf
            and vscode_ResourceLabelFormatting =
              [ `Vscode_ResourceLabelFormatting ] intf
            and vscode_SearchOptions = [ `Vscode_SearchOptions ] intf
            and vscode_SourceControl = [ `Vscode_SourceControl ] intf
            and vscode_SourceControlInputBox =
              [ `Vscode_SourceControlInputBox ] intf
            and vscode_SourceControlInputBoxValidation =
              [ `Vscode_SourceControlInputBoxValidation ] intf
            and vscode_SourceControlInputBoxValidationType =
              [ `Error  | `Warning  | `Information ]
            and vscode_SourceControlInputBoxValidationType_Error = [ `Error ]
            and vscode_SourceControlInputBoxValidationType_Warning =
              [ `Warning ]
            and vscode_SourceControlInputBoxValidationType_Information =
              [ `Information ]
            and vscode_StandardTokenType =
              [ `Other  | `Comment  | `String  | `RegEx ]
            and vscode_StandardTokenType_Other = [ `Other ]
            and vscode_StandardTokenType_Comment = [ `Comment ]
            and vscode_StandardTokenType_String = [ `String ]
            and vscode_StandardTokenType_RegEx = [ `RegEx ]
            and vscode_StatusBarItemOptions =
              [ `Vscode_StatusBarItemOptions ] intf
            and vscode_TaskPresentationOptions =
              [ `Vscode_TaskPresentationOptions ] intf
            and vscode_Terminal = [ `Vscode_Terminal ] intf
            and vscode_TerminalDataWriteEvent =
              [ `Vscode_TerminalDataWriteEvent ] intf
            and vscode_TerminalDimensionsChangeEvent =
              [ `Vscode_TerminalDimensionsChangeEvent ] intf
            and vscode_TerminalOptions = [ `Vscode_TerminalOptions ] intf
            and 'T vscode_TestChildrenCollection =
              [ `Vscode_TestChildrenCollection of 'T ] intf
            and 'TChildren vscode_TestItem =
              [ `Vscode_TestItem of 'TChildren ] intf
            and vscode_TestMessage = [ `Vscode_TestMessage ] intf
            and vscode_TestMessageSeverity =
              [ `Error  | `Warning  | `Information  | `Hint ]
            and vscode_TestMessageSeverity_Error = [ `Error ]
            and vscode_TestMessageSeverity_Warning = [ `Warning ]
            and vscode_TestMessageSeverity_Information = [ `Information ]
            and vscode_TestMessageSeverity_Hint = [ `Hint ]
            and vscode_TestObserver = [ `Vscode_TestObserver ] intf
            and 'T vscode_TestProvider = [ `Vscode_TestProvider of 'T ] intf
            and vscode_TestResultSnapshot =
              [ `Vscode_TestResultSnapshot ] intf
            and vscode_TestResultState =
              [ `Unset  | `Queued  | `Running  | `Passed  | `Failed 
              | `Skipped  | `Errored ]
            and vscode_TestResultState_Unset = [ `Unset ]
            and vscode_TestResultState_Queued = [ `Queued ]
            and vscode_TestResultState_Running = [ `Running ]
            and vscode_TestResultState_Passed = [ `Passed ]
            and vscode_TestResultState_Failed = [ `Failed ]
            and vscode_TestResultState_Skipped = [ `Skipped ]
            and vscode_TestResultState_Errored = [ `Errored ]
            and 'T vscode_TestRunOptions =
              [ `Vscode_TestRunOptions of 'T 
              | `Vscode_TestRunRequest of 'T ] intf
            and 'T vscode_TestRunRequest =
              [ `Vscode_TestRunRequest of 'T ] intf
            and vscode_TestRunResult = [ `Vscode_TestRunResult ] intf
            and vscode_TestsChangeEvent = [ `Vscode_TestsChangeEvent ] intf
            and vscode_TextDocument = [ `Vscode_TextDocument ] intf
            and vscode_TextSearchComplete =
              [ `Vscode_TextSearchComplete ] intf
            and vscode_TextSearchContext = [ `Vscode_TextSearchContext ] intf
            and vscode_TextSearchMatch = [ `Vscode_TextSearchMatch ] intf
            and vscode_TextSearchMatchPreview =
              [ `Vscode_TextSearchMatchPreview ] intf
            and vscode_TextSearchOptions =
              [ `Vscode_TextSearchOptions  | `Vscode_SearchOptions ] intf
            and vscode_TextSearchPreviewOptions =
              [ `Vscode_TextSearchPreviewOptions ] intf
            and vscode_TextSearchProvider =
              [ `Vscode_TextSearchProvider ] intf
            and vscode_TextSearchQuery = [ `Vscode_TextSearchQuery ] intf
            and vscode_TextSearchResult =
              (vscode_TextSearchContext, vscode_TextSearchMatch) union2
            and vscode_Timeline = [ `Vscode_Timeline ] intf
            and vscode_TimelineChangeEvent =
              [ `Vscode_TimelineChangeEvent ] intf
            and vscode_TimelineItem = [ `Vscode_TimelineItem ] intf
            and vscode_TimelineOptions = [ `Vscode_TimelineOptions ] intf
            and vscode_TimelineProvider = [ `Vscode_TimelineProvider ] intf
            and vscode_TokenInformation = [ `Vscode_TokenInformation ] intf
            and 'T vscode_TreeView = [ `Vscode_TreeView of 'T ] intf
            and vscode_Tunnel =
              [ `Vscode_Tunnel  | `Vscode_TunnelDescription ] intf
            and vscode_TunnelCreationOptions =
              [ `Vscode_TunnelCreationOptions ] intf
            and vscode_TunnelDescription = [ `Vscode_TunnelDescription ] intf
            and vscode_TunnelInformation = [ `Vscode_TunnelInformation ] intf
            and vscode_TunnelOptions = [ `Vscode_TunnelOptions ] intf
            and vscode_Webview = [ `Vscode_Webview ] intf
            and vscode_WebviewEditorInset =
              [ `Vscode_WebviewEditorInset ] intf
            and vscode_WorkspaceEdit = [ `Vscode_WorkspaceEdit ] intf
            and vscode_WorkspaceTrustRequestOptions =
              [ `Vscode_WorkspaceTrustRequestOptions ] intf
            and vscode_WorkspaceTrustState =
              [ `Untrusted  | `Trusted  | `Unspecified ]
            and vscode_WorkspaceTrustState_Untrusted = [ `Untrusted ]
            and vscode_WorkspaceTrustState_Trusted = [ `Trusted ]
            and vscode_WorkspaceTrustState_Unspecified = [ `Unspecified ]
            and vscode_WorkspaceTrustStateChangeEvent =
              [ `Vscode_WorkspaceTrustStateChangeEvent ] intf
            let rec vscode_AuthenticationProvidersChangeEvent_of_js :
              Ojs.t -> vscode_AuthenticationProvidersChangeEvent = Obj.magic
            and vscode_AuthenticationProvidersChangeEvent_to_js :
              vscode_AuthenticationProvidersChangeEvent -> Ojs.t = Obj.magic
            and vscode_CandidatePortSource_of_js :
              Ojs.t -> vscode_CandidatePortSource =
              fun (x5801 : Ojs.t) ->
                let x5802 = x5801 in
                match Ojs.int_of_js x5802 with
                | 0 -> `None
                | 1 -> `Process
                | 2 -> `Output
                | _ -> assert false
            and vscode_CandidatePortSource_to_js :
              vscode_CandidatePortSource -> Ojs.t =
              fun (x5800 : [ `None  | `Process  | `Output ]) ->
                match x5800 with
                | `None -> Ojs.int_to_js 0
                | `Process -> Ojs.int_to_js 1
                | `Output -> Ojs.int_to_js 2
            and vscode_CandidatePortSource_None_of_js :
              Ojs.t -> vscode_CandidatePortSource_None =
              fun (x5804 : Ojs.t) ->
                let x5805 = x5804 in
                match Ojs.int_of_js x5805 with
                | 0 -> `None
                | _ -> assert false
            and vscode_CandidatePortSource_None_to_js :
              vscode_CandidatePortSource_None -> Ojs.t =
              fun (x5803 : [ `None ]) ->
                match x5803 with | `None -> Ojs.int_to_js 0
            and vscode_CandidatePortSource_Process_of_js :
              Ojs.t -> vscode_CandidatePortSource_Process =
              fun (x5807 : Ojs.t) ->
                let x5808 = x5807 in
                match Ojs.int_of_js x5808 with
                | 1 -> `Process
                | _ -> assert false
            and vscode_CandidatePortSource_Process_to_js :
              vscode_CandidatePortSource_Process -> Ojs.t =
              fun (x5806 : [ `Process ]) ->
                match x5806 with | `Process -> Ojs.int_to_js 1
            and vscode_CandidatePortSource_Output_of_js :
              Ojs.t -> vscode_CandidatePortSource_Output =
              fun (x5810 : Ojs.t) ->
                let x5811 = x5810 in
                match Ojs.int_of_js x5811 with
                | 2 -> `Output
                | _ -> assert false
            and vscode_CandidatePortSource_Output_to_js :
              vscode_CandidatePortSource_Output -> Ojs.t =
              fun (x5809 : [ `Output ]) ->
                match x5809 with | `Output -> Ojs.int_to_js 2
            and vscode_CompletionItem_of_js : Ojs.t -> vscode_CompletionItem
              = Obj.magic
            and vscode_CompletionItem_to_js : vscode_CompletionItem -> Ojs.t
              = Obj.magic
            and vscode_CompletionItemLabel_of_js :
              Ojs.t -> vscode_CompletionItemLabel = Obj.magic
            and vscode_CompletionItemLabel_to_js :
              vscode_CompletionItemLabel -> Ojs.t = Obj.magic
            and vscode_CustomTextEditorProvider_of_js :
              Ojs.t -> vscode_CustomTextEditorProvider = Obj.magic
            and vscode_CustomTextEditorProvider_to_js :
              vscode_CustomTextEditorProvider -> Ojs.t = Obj.magic
            and vscode_DebugProtocolVariable_of_js :
              Ojs.t -> vscode_DebugProtocolVariable = Obj.magic
            and vscode_DebugProtocolVariable_to_js :
              vscode_DebugProtocolVariable -> Ojs.t = Obj.magic
            and vscode_DebugProtocolVariableContainer_of_js :
              Ojs.t -> vscode_DebugProtocolVariableContainer = Obj.magic
            and vscode_DebugProtocolVariableContainer_to_js :
              vscode_DebugProtocolVariableContainer -> Ojs.t = Obj.magic
            and vscode_DocumentFilter_of_js : Ojs.t -> vscode_DocumentFilter
              = Obj.magic
            and vscode_DocumentFilter_to_js : vscode_DocumentFilter -> Ojs.t
              = Obj.magic
            and vscode_ExtensionContext_of_js :
              Ojs.t -> vscode_ExtensionContext = Obj.magic
            and vscode_ExtensionContext_to_js :
              vscode_ExtensionContext -> Ojs.t = Obj.magic
            and vscode_ExtensionRuntime_of_js :
              Ojs.t -> vscode_ExtensionRuntime =
              fun (x5813 : Ojs.t) ->
                let x5814 = x5813 in
                match Ojs.int_of_js x5814 with
                | 1 -> `Node
                | 2 -> `Webworker
                | _ -> assert false
            and vscode_ExtensionRuntime_to_js :
              vscode_ExtensionRuntime -> Ojs.t =
              fun (x5812 : [ `Node  | `Webworker ]) ->
                match x5812 with
                | `Node -> Ojs.int_to_js 1
                | `Webworker -> Ojs.int_to_js 2
            and vscode_ExtensionRuntime_Node_of_js :
              Ojs.t -> vscode_ExtensionRuntime_Node =
              fun (x5816 : Ojs.t) ->
                let x5817 = x5816 in
                match Ojs.int_of_js x5817 with
                | 1 -> `Node
                | _ -> assert false
            and vscode_ExtensionRuntime_Node_to_js :
              vscode_ExtensionRuntime_Node -> Ojs.t =
              fun (x5815 : [ `Node ]) ->
                match x5815 with | `Node -> Ojs.int_to_js 1
            and vscode_ExtensionRuntime_Webworker_of_js :
              Ojs.t -> vscode_ExtensionRuntime_Webworker =
              fun (x5819 : Ojs.t) ->
                let x5820 = x5819 in
                match Ojs.int_of_js x5820 with
                | 2 -> `Webworker
                | _ -> assert false
            and vscode_ExtensionRuntime_Webworker_to_js :
              vscode_ExtensionRuntime_Webworker -> Ojs.t =
              fun (x5818 : [ `Webworker ]) ->
                match x5818 with | `Webworker -> Ojs.int_to_js 2
            and vscode_ExternalUriOpener_of_js :
              Ojs.t -> vscode_ExternalUriOpener = Obj.magic
            and vscode_ExternalUriOpener_to_js :
              vscode_ExternalUriOpener -> Ojs.t = Obj.magic
            and vscode_ExternalUriOpenerMetadata_of_js :
              Ojs.t -> vscode_ExternalUriOpenerMetadata = Obj.magic
            and vscode_ExternalUriOpenerMetadata_to_js :
              vscode_ExternalUriOpenerMetadata -> Ojs.t = Obj.magic
            and vscode_ExternalUriOpenerPriority_of_js :
              Ojs.t -> vscode_ExternalUriOpenerPriority =
              fun (x5822 : Ojs.t) ->
                let x5823 = x5822 in
                match Ojs.int_of_js x5823 with
                | 0 -> `None
                | 1 -> `Option
                | 2 -> `Default
                | 3 -> `Preferred
                | _ -> assert false
            and vscode_ExternalUriOpenerPriority_to_js :
              vscode_ExternalUriOpenerPriority -> Ojs.t =
              fun (x5821 : [ `None  | `Option  | `Default  | `Preferred ]) ->
                match x5821 with
                | `None -> Ojs.int_to_js 0
                | `Option -> Ojs.int_to_js 1
                | `Default -> Ojs.int_to_js 2
                | `Preferred -> Ojs.int_to_js 3
            and vscode_ExternalUriOpenerPriority_None_of_js :
              Ojs.t -> vscode_ExternalUriOpenerPriority_None =
              fun (x5825 : Ojs.t) ->
                let x5826 = x5825 in
                match Ojs.int_of_js x5826 with
                | 0 -> `None
                | _ -> assert false
            and vscode_ExternalUriOpenerPriority_None_to_js :
              vscode_ExternalUriOpenerPriority_None -> Ojs.t =
              fun (x5824 : [ `None ]) ->
                match x5824 with | `None -> Ojs.int_to_js 0
            and vscode_ExternalUriOpenerPriority_Option_of_js :
              Ojs.t -> vscode_ExternalUriOpenerPriority_Option =
              fun (x5828 : Ojs.t) ->
                let x5829 = x5828 in
                match Ojs.int_of_js x5829 with
                | 1 -> `Option
                | _ -> assert false
            and vscode_ExternalUriOpenerPriority_Option_to_js :
              vscode_ExternalUriOpenerPriority_Option -> Ojs.t =
              fun (x5827 : [ `Option ]) ->
                match x5827 with | `Option -> Ojs.int_to_js 1
            and vscode_ExternalUriOpenerPriority_Default_of_js :
              Ojs.t -> vscode_ExternalUriOpenerPriority_Default =
              fun (x5831 : Ojs.t) ->
                let x5832 = x5831 in
                match Ojs.int_of_js x5832 with
                | 2 -> `Default
                | _ -> assert false
            and vscode_ExternalUriOpenerPriority_Default_to_js :
              vscode_ExternalUriOpenerPriority_Default -> Ojs.t =
              fun (x5830 : [ `Default ]) ->
                match x5830 with | `Default -> Ojs.int_to_js 2
            and vscode_ExternalUriOpenerPriority_Preferred_of_js :
              Ojs.t -> vscode_ExternalUriOpenerPriority_Preferred =
              fun (x5834 : Ojs.t) ->
                let x5835 = x5834 in
                match Ojs.int_of_js x5835 with
                | 3 -> `Preferred
                | _ -> assert false
            and vscode_ExternalUriOpenerPriority_Preferred_to_js :
              vscode_ExternalUriOpenerPriority_Preferred -> Ojs.t =
              fun (x5833 : [ `Preferred ]) ->
                match x5833 with | `Preferred -> Ojs.int_to_js 3
            and vscode_FileSearchOptions_of_js :
              Ojs.t -> vscode_FileSearchOptions = Obj.magic
            and vscode_FileSearchOptions_to_js :
              vscode_FileSearchOptions -> Ojs.t = Obj.magic
            and vscode_FileSearchProvider_of_js :
              Ojs.t -> vscode_FileSearchProvider = Obj.magic
            and vscode_FileSearchProvider_to_js :
              vscode_FileSearchProvider -> Ojs.t = Obj.magic
            and vscode_FileSearchQuery_of_js :
              Ojs.t -> vscode_FileSearchQuery = Obj.magic
            and vscode_FileSearchQuery_to_js :
              vscode_FileSearchQuery -> Ojs.t = Obj.magic
            and vscode_FileSystemProvider_of_js :
              Ojs.t -> vscode_FileSystemProvider = Obj.magic
            and vscode_FileSystemProvider_to_js :
              vscode_FileSystemProvider -> Ojs.t = Obj.magic
            and vscode_FindTextInFilesOptions_of_js :
              Ojs.t -> vscode_FindTextInFilesOptions = Obj.magic
            and vscode_FindTextInFilesOptions_to_js :
              vscode_FindTextInFilesOptions -> Ojs.t = Obj.magic
            and vscode_GlobString_of_js : Ojs.t -> vscode_GlobString =
              fun (x5837 : Ojs.t) -> Ojs.string_of_js x5837
            and vscode_GlobString_to_js : vscode_GlobString -> Ojs.t =
              fun (x5836 : string) -> Ojs.string_to_js x5836
            and vscode_InlineHint_of_js : Ojs.t -> vscode_InlineHint =
              Obj.magic
            and vscode_InlineHint_to_js : vscode_InlineHint -> Ojs.t =
              Obj.magic
            and vscode_InlineHintKind_of_js : Ojs.t -> vscode_InlineHintKind
              =
              fun (x5839 : Ojs.t) ->
                let x5840 = x5839 in
                match Ojs.int_of_js x5840 with
                | 0 -> `Other
                | 1 -> `Type
                | 2 -> `Parameter
                | _ -> assert false
            and vscode_InlineHintKind_to_js : vscode_InlineHintKind -> Ojs.t
              =
              fun (x5838 : [ `Other  | `Type  | `Parameter ]) ->
                match x5838 with
                | `Other -> Ojs.int_to_js 0
                | `Type -> Ojs.int_to_js 1
                | `Parameter -> Ojs.int_to_js 2
            and vscode_InlineHintKind_Other_of_js :
              Ojs.t -> vscode_InlineHintKind_Other =
              fun (x5842 : Ojs.t) ->
                let x5843 = x5842 in
                match Ojs.int_of_js x5843 with
                | 0 -> `Other
                | _ -> assert false
            and vscode_InlineHintKind_Other_to_js :
              vscode_InlineHintKind_Other -> Ojs.t =
              fun (x5841 : [ `Other ]) ->
                match x5841 with | `Other -> Ojs.int_to_js 0
            and vscode_InlineHintKind_Type_of_js :
              Ojs.t -> vscode_InlineHintKind_Type =
              fun (x5845 : Ojs.t) ->
                let x5846 = x5845 in
                match Ojs.int_of_js x5846 with
                | 1 -> `Type
                | _ -> assert false
            and vscode_InlineHintKind_Type_to_js :
              vscode_InlineHintKind_Type -> Ojs.t =
              fun (x5844 : [ `Type ]) ->
                match x5844 with | `Type -> Ojs.int_to_js 1
            and vscode_InlineHintKind_Parameter_of_js :
              Ojs.t -> vscode_InlineHintKind_Parameter =
              fun (x5848 : Ojs.t) ->
                let x5849 = x5848 in
                match Ojs.int_of_js x5849 with
                | 2 -> `Parameter
                | _ -> assert false
            and vscode_InlineHintKind_Parameter_to_js :
              vscode_InlineHintKind_Parameter -> Ojs.t =
              fun (x5847 : [ `Parameter ]) ->
                match x5847 with | `Parameter -> Ojs.int_to_js 2
            and vscode_InlineHintsProvider_of_js :
              Ojs.t -> vscode_InlineHintsProvider = Obj.magic
            and vscode_InlineHintsProvider_to_js :
              vscode_InlineHintsProvider -> Ojs.t = Obj.magic
            and vscode_InputBoxOptions_of_js :
              Ojs.t -> vscode_InputBoxOptions = Obj.magic
            and vscode_InputBoxOptions_to_js :
              vscode_InputBoxOptions -> Ojs.t = Obj.magic
            and vscode_LineChange_of_js : Ojs.t -> vscode_LineChange =
              Obj.magic
            and vscode_LineChange_to_js : vscode_LineChange -> Ojs.t =
              Obj.magic
            and vscode_MessageOptions_of_js : Ojs.t -> vscode_MessageOptions
              = Obj.magic
            and vscode_MessageOptions_to_js : vscode_MessageOptions -> Ojs.t
              = Obj.magic
            and vscode_NotebookCell_of_js : Ojs.t -> vscode_NotebookCell =
              Obj.magic
            and vscode_NotebookCell_to_js : vscode_NotebookCell -> Ojs.t =
              Obj.magic
            and vscode_NotebookCellData_of_js :
              Ojs.t -> vscode_NotebookCellData = Obj.magic
            and vscode_NotebookCellData_to_js :
              vscode_NotebookCellData -> Ojs.t = Obj.magic
            and vscode_NotebookCellExecuteEndContext_of_js :
              Ojs.t -> vscode_NotebookCellExecuteEndContext = Obj.magic
            and vscode_NotebookCellExecuteEndContext_to_js :
              vscode_NotebookCellExecuteEndContext -> Ojs.t = Obj.magic
            and vscode_NotebookCellExecuteStartContext_of_js :
              Ojs.t -> vscode_NotebookCellExecuteStartContext = Obj.magic
            and vscode_NotebookCellExecuteStartContext_to_js :
              vscode_NotebookCellExecuteStartContext -> Ojs.t = Obj.magic
            and vscode_NotebookCellExecutionState_of_js :
              Ojs.t -> vscode_NotebookCellExecutionState =
              fun (x5851 : Ojs.t) ->
                let x5852 = x5851 in
                match Ojs.int_of_js x5852 with
                | 1 -> `Idle
                | 2 -> `Pending
                | 3 -> `Executing
                | _ -> assert false
            and vscode_NotebookCellExecutionState_to_js :
              vscode_NotebookCellExecutionState -> Ojs.t =
              fun (x5850 : [ `Idle  | `Pending  | `Executing ]) ->
                match x5850 with
                | `Idle -> Ojs.int_to_js 1
                | `Pending -> Ojs.int_to_js 2
                | `Executing -> Ojs.int_to_js 3
            and vscode_NotebookCellExecutionState_Idle_of_js :
              Ojs.t -> vscode_NotebookCellExecutionState_Idle =
              fun (x5854 : Ojs.t) ->
                let x5855 = x5854 in
                match Ojs.int_of_js x5855 with
                | 1 -> `Idle
                | _ -> assert false
            and vscode_NotebookCellExecutionState_Idle_to_js :
              vscode_NotebookCellExecutionState_Idle -> Ojs.t =
              fun (x5853 : [ `Idle ]) ->
                match x5853 with | `Idle -> Ojs.int_to_js 1
            and vscode_NotebookCellExecutionState_Pending_of_js :
              Ojs.t -> vscode_NotebookCellExecutionState_Pending =
              fun (x5857 : Ojs.t) ->
                let x5858 = x5857 in
                match Ojs.int_of_js x5858 with
                | 2 -> `Pending
                | _ -> assert false
            and vscode_NotebookCellExecutionState_Pending_to_js :
              vscode_NotebookCellExecutionState_Pending -> Ojs.t =
              fun (x5856 : [ `Pending ]) ->
                match x5856 with | `Pending -> Ojs.int_to_js 2
            and vscode_NotebookCellExecutionState_Executing_of_js :
              Ojs.t -> vscode_NotebookCellExecutionState_Executing =
              fun (x5860 : Ojs.t) ->
                let x5861 = x5860 in
                match Ojs.int_of_js x5861 with
                | 3 -> `Executing
                | _ -> assert false
            and vscode_NotebookCellExecutionState_Executing_to_js :
              vscode_NotebookCellExecutionState_Executing -> Ojs.t =
              fun (x5859 : [ `Executing ]) ->
                match x5859 with | `Executing -> Ojs.int_to_js 3
            and vscode_NotebookCellExecutionStateChangeEvent_of_js :
              Ojs.t -> vscode_NotebookCellExecutionStateChangeEvent =
              Obj.magic
            and vscode_NotebookCellExecutionStateChangeEvent_to_js :
              vscode_NotebookCellExecutionStateChangeEvent -> Ojs.t =
              Obj.magic
            and vscode_NotebookCellExecutionSummary_of_js :
              Ojs.t -> vscode_NotebookCellExecutionSummary = Obj.magic
            and vscode_NotebookCellExecutionSummary_to_js :
              vscode_NotebookCellExecutionSummary -> Ojs.t = Obj.magic
            and vscode_NotebookCellExecutionTask_of_js :
              Ojs.t -> vscode_NotebookCellExecutionTask = Obj.magic
            and vscode_NotebookCellExecutionTask_to_js :
              vscode_NotebookCellExecutionTask -> Ojs.t = Obj.magic
            and vscode_NotebookCellKind_of_js :
              Ojs.t -> vscode_NotebookCellKind =
              fun (x5863 : Ojs.t) ->
                let x5864 = x5863 in
                match Ojs.int_of_js x5864 with
                | 1 -> `Markdown
                | 2 -> `Code
                | _ -> assert false
            and vscode_NotebookCellKind_to_js :
              vscode_NotebookCellKind -> Ojs.t =
              fun (x5862 : [ `Markdown  | `Code ]) ->
                match x5862 with
                | `Markdown -> Ojs.int_to_js 1
                | `Code -> Ojs.int_to_js 2
            and vscode_NotebookCellKind_Markdown_of_js :
              Ojs.t -> vscode_NotebookCellKind_Markdown =
              fun (x5866 : Ojs.t) ->
                let x5867 = x5866 in
                match Ojs.int_of_js x5867 with
                | 1 -> `Markdown
                | _ -> assert false
            and vscode_NotebookCellKind_Markdown_to_js :
              vscode_NotebookCellKind_Markdown -> Ojs.t =
              fun (x5865 : [ `Markdown ]) ->
                match x5865 with | `Markdown -> Ojs.int_to_js 1
            and vscode_NotebookCellKind_Code_of_js :
              Ojs.t -> vscode_NotebookCellKind_Code =
              fun (x5869 : Ojs.t) ->
                let x5870 = x5869 in
                match Ojs.int_of_js x5870 with
                | 2 -> `Code
                | _ -> assert false
            and vscode_NotebookCellKind_Code_to_js :
              vscode_NotebookCellKind_Code -> Ojs.t =
              fun (x5868 : [ `Code ]) ->
                match x5868 with | `Code -> Ojs.int_to_js 2
            and vscode_NotebookCellMetadata_of_js :
              Ojs.t -> vscode_NotebookCellMetadata = Obj.magic
            and vscode_NotebookCellMetadata_to_js :
              vscode_NotebookCellMetadata -> Ojs.t = Obj.magic
            and vscode_NotebookCellMetadataChangeEvent_of_js :
              Ojs.t -> vscode_NotebookCellMetadataChangeEvent = Obj.magic
            and vscode_NotebookCellMetadataChangeEvent_to_js :
              vscode_NotebookCellMetadataChangeEvent -> Ojs.t = Obj.magic
            and vscode_NotebookCellOutput_of_js :
              Ojs.t -> vscode_NotebookCellOutput = Obj.magic
            and vscode_NotebookCellOutput_to_js :
              vscode_NotebookCellOutput -> Ojs.t = Obj.magic
            and vscode_NotebookCellOutputItem_of_js :
              Ojs.t -> vscode_NotebookCellOutputItem = Obj.magic
            and vscode_NotebookCellOutputItem_to_js :
              vscode_NotebookCellOutputItem -> Ojs.t = Obj.magic
            and vscode_NotebookCellOutputsChangeEvent_of_js :
              Ojs.t -> vscode_NotebookCellOutputsChangeEvent = Obj.magic
            and vscode_NotebookCellOutputsChangeEvent_to_js :
              vscode_NotebookCellOutputsChangeEvent -> Ojs.t = Obj.magic
            and vscode_NotebookCellRange_of_js :
              Ojs.t -> vscode_NotebookCellRange = Obj.magic
            and vscode_NotebookCellRange_to_js :
              vscode_NotebookCellRange -> Ojs.t = Obj.magic
            and vscode_NotebookCellStatusBarAlignment_of_js :
              Ojs.t -> vscode_NotebookCellStatusBarAlignment =
              fun (x5872 : Ojs.t) ->
                let x5873 = x5872 in
                match Ojs.int_of_js x5873 with
                | 1 -> `Left
                | 2 -> `Right
                | _ -> assert false
            and vscode_NotebookCellStatusBarAlignment_to_js :
              vscode_NotebookCellStatusBarAlignment -> Ojs.t =
              fun (x5871 : [ `Left  | `Right ]) ->
                match x5871 with
                | `Left -> Ojs.int_to_js 1
                | `Right -> Ojs.int_to_js 2
            and vscode_NotebookCellStatusBarAlignment_Left_of_js :
              Ojs.t -> vscode_NotebookCellStatusBarAlignment_Left =
              fun (x5875 : Ojs.t) ->
                let x5876 = x5875 in
                match Ojs.int_of_js x5876 with
                | 1 -> `Left
                | _ -> assert false
            and vscode_NotebookCellStatusBarAlignment_Left_to_js :
              vscode_NotebookCellStatusBarAlignment_Left -> Ojs.t =
              fun (x5874 : [ `Left ]) ->
                match x5874 with | `Left -> Ojs.int_to_js 1
            and vscode_NotebookCellStatusBarAlignment_Right_of_js :
              Ojs.t -> vscode_NotebookCellStatusBarAlignment_Right =
              fun (x5878 : Ojs.t) ->
                let x5879 = x5878 in
                match Ojs.int_of_js x5879 with
                | 2 -> `Right
                | _ -> assert false
            and vscode_NotebookCellStatusBarAlignment_Right_to_js :
              vscode_NotebookCellStatusBarAlignment_Right -> Ojs.t =
              fun (x5877 : [ `Right ]) ->
                match x5877 with | `Right -> Ojs.int_to_js 2
            and vscode_NotebookCellStatusBarItem_of_js :
              Ojs.t -> vscode_NotebookCellStatusBarItem = Obj.magic
            and vscode_NotebookCellStatusBarItem_to_js :
              vscode_NotebookCellStatusBarItem -> Ojs.t = Obj.magic
            and vscode_NotebookCellsChangeData_of_js :
              Ojs.t -> vscode_NotebookCellsChangeData = Obj.magic
            and vscode_NotebookCellsChangeData_to_js :
              vscode_NotebookCellsChangeData -> Ojs.t = Obj.magic
            and vscode_NotebookCellsChangeEvent_of_js :
              Ojs.t -> vscode_NotebookCellsChangeEvent = Obj.magic
            and vscode_NotebookCellsChangeEvent_to_js :
              vscode_NotebookCellsChangeEvent -> Ojs.t = Obj.magic
            and vscode_NotebookCommunication_of_js :
              Ojs.t -> vscode_NotebookCommunication = Obj.magic
            and vscode_NotebookCommunication_to_js :
              vscode_NotebookCommunication -> Ojs.t = Obj.magic
            and vscode_NotebookConcatTextDocument_of_js :
              Ojs.t -> vscode_NotebookConcatTextDocument = Obj.magic
            and vscode_NotebookConcatTextDocument_to_js :
              vscode_NotebookConcatTextDocument -> Ojs.t = Obj.magic
            and vscode_NotebookContentProvider_of_js :
              Ojs.t -> vscode_NotebookContentProvider = Obj.magic
            and vscode_NotebookContentProvider_to_js :
              vscode_NotebookContentProvider -> Ojs.t = Obj.magic
            and vscode_NotebookData_of_js : Ojs.t -> vscode_NotebookData =
              Obj.magic
            and vscode_NotebookData_to_js : vscode_NotebookData -> Ojs.t =
              Obj.magic
            and vscode_NotebookDecorationRenderOptions_of_js :
              Ojs.t -> vscode_NotebookDecorationRenderOptions = Obj.magic
            and vscode_NotebookDecorationRenderOptions_to_js :
              vscode_NotebookDecorationRenderOptions -> Ojs.t = Obj.magic
            and vscode_NotebookDocument_of_js :
              Ojs.t -> vscode_NotebookDocument = Obj.magic
            and vscode_NotebookDocument_to_js :
              vscode_NotebookDocument -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentBackup_of_js :
              Ojs.t -> vscode_NotebookDocumentBackup = Obj.magic
            and vscode_NotebookDocumentBackup_to_js :
              vscode_NotebookDocumentBackup -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentBackupContext_of_js :
              Ojs.t -> vscode_NotebookDocumentBackupContext = Obj.magic
            and vscode_NotebookDocumentBackupContext_to_js :
              vscode_NotebookDocumentBackupContext -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentContentOptions_of_js :
              Ojs.t -> vscode_NotebookDocumentContentOptions = Obj.magic
            and vscode_NotebookDocumentContentOptions_to_js :
              vscode_NotebookDocumentContentOptions -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentFilter_of_js :
              Ojs.t -> vscode_NotebookDocumentFilter = Obj.magic
            and vscode_NotebookDocumentFilter_to_js :
              vscode_NotebookDocumentFilter -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentMetadata_of_js :
              Ojs.t -> vscode_NotebookDocumentMetadata = Obj.magic
            and vscode_NotebookDocumentMetadata_to_js :
              vscode_NotebookDocumentMetadata -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentMetadataChangeEvent_of_js :
              Ojs.t -> vscode_NotebookDocumentMetadataChangeEvent = Obj.magic
            and vscode_NotebookDocumentMetadataChangeEvent_to_js :
              vscode_NotebookDocumentMetadataChangeEvent -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentOpenContext_of_js :
              Ojs.t -> vscode_NotebookDocumentOpenContext = Obj.magic
            and vscode_NotebookDocumentOpenContext_to_js :
              vscode_NotebookDocumentOpenContext -> Ojs.t = Obj.magic
            and vscode_NotebookDocumentShowOptions_of_js :
              Ojs.t -> vscode_NotebookDocumentShowOptions = Obj.magic
            and vscode_NotebookDocumentShowOptions_to_js :
              vscode_NotebookDocumentShowOptions -> Ojs.t = Obj.magic
            and vscode_NotebookEditor_of_js : Ojs.t -> vscode_NotebookEditor
              = Obj.magic
            and vscode_NotebookEditor_to_js : vscode_NotebookEditor -> Ojs.t
              = Obj.magic
            and vscode_NotebookEditorDecorationType_of_js :
              Ojs.t -> vscode_NotebookEditorDecorationType = Obj.magic
            and vscode_NotebookEditorDecorationType_to_js :
              vscode_NotebookEditorDecorationType -> Ojs.t = Obj.magic
            and vscode_NotebookEditorEdit_of_js :
              Ojs.t -> vscode_NotebookEditorEdit = Obj.magic
            and vscode_NotebookEditorEdit_to_js :
              vscode_NotebookEditorEdit -> Ojs.t = Obj.magic
            and vscode_NotebookEditorRevealType_of_js :
              Ojs.t -> vscode_NotebookEditorRevealType =
              fun (x5881 : Ojs.t) ->
                let x5882 = x5881 in
                match Ojs.int_of_js x5882 with
                | 0 -> `Default
                | 1 -> `InCenter
                | 2 -> `InCenterIfOutsideViewport
                | 3 -> `AtTop
                | _ -> assert false
            and vscode_NotebookEditorRevealType_to_js :
              vscode_NotebookEditorRevealType -> Ojs.t =
              fun
                (x5880 :
                  [ `Default  | `InCenter  | `InCenterIfOutsideViewport 
                  | `AtTop ])
                ->
                match x5880 with
                | `Default -> Ojs.int_to_js 0
                | `InCenter -> Ojs.int_to_js 1
                | `InCenterIfOutsideViewport -> Ojs.int_to_js 2
                | `AtTop -> Ojs.int_to_js 3
            and vscode_NotebookEditorRevealType_Default_of_js :
              Ojs.t -> vscode_NotebookEditorRevealType_Default =
              fun (x5884 : Ojs.t) ->
                let x5885 = x5884 in
                match Ojs.int_of_js x5885 with
                | 0 -> `Default
                | _ -> assert false
            and vscode_NotebookEditorRevealType_Default_to_js :
              vscode_NotebookEditorRevealType_Default -> Ojs.t =
              fun (x5883 : [ `Default ]) ->
                match x5883 with | `Default -> Ojs.int_to_js 0
            and vscode_NotebookEditorRevealType_InCenter_of_js :
              Ojs.t -> vscode_NotebookEditorRevealType_InCenter =
              fun (x5887 : Ojs.t) ->
                let x5888 = x5887 in
                match Ojs.int_of_js x5888 with
                | 1 -> `InCenter
                | _ -> assert false
            and vscode_NotebookEditorRevealType_InCenter_to_js :
              vscode_NotebookEditorRevealType_InCenter -> Ojs.t =
              fun (x5886 : [ `InCenter ]) ->
                match x5886 with | `InCenter -> Ojs.int_to_js 1
            and vscode_NotebookEditorRevealType_InCenterIfOutsideViewport_of_js
              :
              Ojs.t ->
                vscode_NotebookEditorRevealType_InCenterIfOutsideViewport
              =
              fun (x5890 : Ojs.t) ->
                let x5891 = x5890 in
                match Ojs.int_of_js x5891 with
                | 2 -> `InCenterIfOutsideViewport
                | _ -> assert false
            and vscode_NotebookEditorRevealType_InCenterIfOutsideViewport_to_js
              :
              vscode_NotebookEditorRevealType_InCenterIfOutsideViewport ->
                Ojs.t
              =
              fun (x5889 : [ `InCenterIfOutsideViewport ]) ->
                match x5889 with
                | `InCenterIfOutsideViewport -> Ojs.int_to_js 2
            and vscode_NotebookEditorRevealType_AtTop_of_js :
              Ojs.t -> vscode_NotebookEditorRevealType_AtTop =
              fun (x5893 : Ojs.t) ->
                let x5894 = x5893 in
                match Ojs.int_of_js x5894 with
                | 3 -> `AtTop
                | _ -> assert false
            and vscode_NotebookEditorRevealType_AtTop_to_js :
              vscode_NotebookEditorRevealType_AtTop -> Ojs.t =
              fun (x5892 : [ `AtTop ]) ->
                match x5892 with | `AtTop -> Ojs.int_to_js 3
            and vscode_NotebookEditorSelectionChangeEvent_of_js :
              Ojs.t -> vscode_NotebookEditorSelectionChangeEvent = Obj.magic
            and vscode_NotebookEditorSelectionChangeEvent_to_js :
              vscode_NotebookEditorSelectionChangeEvent -> Ojs.t = Obj.magic
            and vscode_NotebookEditorVisibleRangesChangeEvent_of_js :
              Ojs.t -> vscode_NotebookEditorVisibleRangesChangeEvent =
              Obj.magic
            and vscode_NotebookEditorVisibleRangesChangeEvent_to_js :
              vscode_NotebookEditorVisibleRangesChangeEvent -> Ojs.t =
              Obj.magic
            and vscode_NotebookFilenamePattern_of_js :
              Ojs.t -> vscode_NotebookFilenamePattern =
              fun (x5898 : Ojs.t) ->
                union2_of_js GlobPattern.t_of_js anonymous_interface_8_of_js
                  x5898
            and vscode_NotebookFilenamePattern_to_js :
              vscode_NotebookFilenamePattern -> Ojs.t =
              fun (x5895 : (GlobPattern.t, anonymous_interface_8) union2) ->
                union2_to_js GlobPattern.t_to_js anonymous_interface_8_to_js
                  x5895
            and vscode_NotebookFilter_of_js : Ojs.t -> vscode_NotebookFilter
              = Obj.magic
            and vscode_NotebookFilter_to_js : vscode_NotebookFilter -> Ojs.t
              = Obj.magic
            and vscode_NotebookKernel_of_js : Ojs.t -> vscode_NotebookKernel
              = Obj.magic
            and vscode_NotebookKernel_to_js : vscode_NotebookKernel -> Ojs.t
              = Obj.magic
            and vscode_NotebookKernel2_of_js :
              Ojs.t -> vscode_NotebookKernel2 = Obj.magic
            and vscode_NotebookKernel2_to_js :
              vscode_NotebookKernel2 -> Ojs.t = Obj.magic
            and vscode_NotebookKernelOptions_of_js :
              Ojs.t -> vscode_NotebookKernelOptions = Obj.magic
            and vscode_NotebookKernelOptions_to_js :
              vscode_NotebookKernelOptions -> Ojs.t = Obj.magic
            and vscode_NotebookKernelProvider_of_js :
              'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_NotebookKernelProvider
              = fun _T -> Obj.magic
            and vscode_NotebookKernelProvider_to_js :
              'T . ('T -> Ojs.t) -> 'T vscode_NotebookKernelProvider -> Ojs.t
              = fun _T -> Obj.magic
            and vscode_NotebookSelector_of_js :
              Ojs.t -> vscode_NotebookSelector =
              fun (x5907 : Ojs.t) ->
                or_string_of_js
                  (fun (x5908 : Ojs.t) ->
                     union2_of_js vscode_NotebookFilter_of_js
                       (fun (x5910 : Ojs.t) ->
                          Ojs.list_of_js
                            (fun (x5911 : Ojs.t) ->
                               or_string_of_js vscode_NotebookFilter_of_js
                                 x5911) x5910) x5908) x5907
            and vscode_NotebookSelector_to_js :
              vscode_NotebookSelector -> Ojs.t =
              fun
                (x5901 :
                  (vscode_NotebookFilter,
                    vscode_NotebookFilter or_string list) union2 or_string)
                ->
                or_string_to_js
                  (fun
                     (x5902 :
                       (vscode_NotebookFilter,
                         vscode_NotebookFilter or_string list) union2)
                     ->
                     union2_to_js vscode_NotebookFilter_to_js
                       (fun (x5904 : vscode_NotebookFilter or_string list) ->
                          Ojs.list_to_js
                            (fun (x5905 : vscode_NotebookFilter or_string) ->
                               or_string_to_js vscode_NotebookFilter_to_js
                                 x5905) x5904) x5902) x5901
            and vscode_NotebookSerializer_of_js :
              Ojs.t -> vscode_NotebookSerializer = Obj.magic
            and vscode_NotebookSerializer_to_js :
              vscode_NotebookSerializer -> Ojs.t = Obj.magic
            and vscode_OpenEditorInfo_of_js : Ojs.t -> vscode_OpenEditorInfo
              = Obj.magic
            and vscode_OpenEditorInfo_to_js : vscode_OpenEditorInfo -> Ojs.t
              = Obj.magic
            and vscode_OpenExternalOptions_of_js :
              Ojs.t -> vscode_OpenExternalOptions = Obj.magic
            and vscode_OpenExternalOptions_to_js :
              vscode_OpenExternalOptions -> Ojs.t = Obj.magic
            and vscode_OpenExternalUriContext_of_js :
              Ojs.t -> vscode_OpenExternalUriContext = Obj.magic
            and vscode_OpenExternalUriContext_to_js :
              vscode_OpenExternalUriContext -> Ojs.t = Obj.magic
            and vscode_PortAttributes_of_js : Ojs.t -> vscode_PortAttributes
              = Obj.magic
            and vscode_PortAttributes_to_js : vscode_PortAttributes -> Ojs.t
              = Obj.magic
            and vscode_PortAttributesProvider_of_js :
              Ojs.t -> vscode_PortAttributesProvider = Obj.magic
            and vscode_PortAttributesProvider_to_js :
              vscode_PortAttributesProvider -> Ojs.t = Obj.magic
            and vscode_PortAutoForwardAction_of_js :
              Ojs.t -> vscode_PortAutoForwardAction =
              fun (x5914 : Ojs.t) ->
                let x5915 = x5914 in
                match Ojs.int_of_js x5915 with
                | 1 -> `Notify
                | 2 -> `OpenBrowser
                | 3 -> `OpenPreview
                | 4 -> `Silent
                | 5 -> `Ignore
                | _ -> assert false
            and vscode_PortAutoForwardAction_to_js :
              vscode_PortAutoForwardAction -> Ojs.t =
              fun
                (x5913 :
                  [ `Notify  | `OpenBrowser  | `OpenPreview  | `Silent 
                  | `Ignore ])
                ->
                match x5913 with
                | `Notify -> Ojs.int_to_js 1
                | `OpenBrowser -> Ojs.int_to_js 2
                | `OpenPreview -> Ojs.int_to_js 3
                | `Silent -> Ojs.int_to_js 4
                | `Ignore -> Ojs.int_to_js 5
            and vscode_PortAutoForwardAction_Notify_of_js :
              Ojs.t -> vscode_PortAutoForwardAction_Notify =
              fun (x5917 : Ojs.t) ->
                let x5918 = x5917 in
                match Ojs.int_of_js x5918 with
                | 1 -> `Notify
                | _ -> assert false
            and vscode_PortAutoForwardAction_Notify_to_js :
              vscode_PortAutoForwardAction_Notify -> Ojs.t =
              fun (x5916 : [ `Notify ]) ->
                match x5916 with | `Notify -> Ojs.int_to_js 1
            and vscode_PortAutoForwardAction_OpenBrowser_of_js :
              Ojs.t -> vscode_PortAutoForwardAction_OpenBrowser =
              fun (x5920 : Ojs.t) ->
                let x5921 = x5920 in
                match Ojs.int_of_js x5921 with
                | 2 -> `OpenBrowser
                | _ -> assert false
            and vscode_PortAutoForwardAction_OpenBrowser_to_js :
              vscode_PortAutoForwardAction_OpenBrowser -> Ojs.t =
              fun (x5919 : [ `OpenBrowser ]) ->
                match x5919 with | `OpenBrowser -> Ojs.int_to_js 2
            and vscode_PortAutoForwardAction_OpenPreview_of_js :
              Ojs.t -> vscode_PortAutoForwardAction_OpenPreview =
              fun (x5923 : Ojs.t) ->
                let x5924 = x5923 in
                match Ojs.int_of_js x5924 with
                | 3 -> `OpenPreview
                | _ -> assert false
            and vscode_PortAutoForwardAction_OpenPreview_to_js :
              vscode_PortAutoForwardAction_OpenPreview -> Ojs.t =
              fun (x5922 : [ `OpenPreview ]) ->
                match x5922 with | `OpenPreview -> Ojs.int_to_js 3
            and vscode_PortAutoForwardAction_Silent_of_js :
              Ojs.t -> vscode_PortAutoForwardAction_Silent =
              fun (x5926 : Ojs.t) ->
                let x5927 = x5926 in
                match Ojs.int_of_js x5927 with
                | 4 -> `Silent
                | _ -> assert false
            and vscode_PortAutoForwardAction_Silent_to_js :
              vscode_PortAutoForwardAction_Silent -> Ojs.t =
              fun (x5925 : [ `Silent ]) ->
                match x5925 with | `Silent -> Ojs.int_to_js 4
            and vscode_PortAutoForwardAction_Ignore_of_js :
              Ojs.t -> vscode_PortAutoForwardAction_Ignore =
              fun (x5929 : Ojs.t) ->
                let x5930 = x5929 in
                match Ojs.int_of_js x5930 with
                | 5 -> `Ignore
                | _ -> assert false
            and vscode_PortAutoForwardAction_Ignore_to_js :
              vscode_PortAutoForwardAction_Ignore -> Ojs.t =
              fun (x5928 : [ `Ignore ]) ->
                match x5928 with | `Ignore -> Ojs.int_to_js 5
            and vscode_QuickPick_of_js :
              'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_QuickPick =
              fun _T -> Obj.magic
            and vscode_QuickPick_to_js :
              'T . ('T -> Ojs.t) -> 'T vscode_QuickPick -> Ojs.t =
              fun _T -> Obj.magic
            and vscode_QuickPickOptions_of_js :
              Ojs.t -> vscode_QuickPickOptions = Obj.magic
            and vscode_QuickPickOptions_to_js :
              vscode_QuickPickOptions -> Ojs.t = Obj.magic
            and vscode_RemoteAuthorityResolver_of_js :
              Ojs.t -> vscode_RemoteAuthorityResolver = Obj.magic
            and vscode_RemoteAuthorityResolver_to_js :
              vscode_RemoteAuthorityResolver -> Ojs.t = Obj.magic
            and vscode_RemoteAuthorityResolverContext_of_js :
              Ojs.t -> vscode_RemoteAuthorityResolverContext = Obj.magic
            and vscode_RemoteAuthorityResolverContext_to_js :
              vscode_RemoteAuthorityResolverContext -> Ojs.t = Obj.magic
            and vscode_RemoteAuthorityResolverError_of_js :
              Ojs.t -> vscode_RemoteAuthorityResolverError = Obj.magic
            and vscode_RemoteAuthorityResolverError_to_js :
              vscode_RemoteAuthorityResolverError -> Ojs.t = Obj.magic
            and vscode_ResolvedAuthority_of_js :
              Ojs.t -> vscode_ResolvedAuthority = Obj.magic
            and vscode_ResolvedAuthority_to_js :
              vscode_ResolvedAuthority -> Ojs.t = Obj.magic
            and vscode_ResolvedOptions_of_js :
              Ojs.t -> vscode_ResolvedOptions = Obj.magic
            and vscode_ResolvedOptions_to_js :
              vscode_ResolvedOptions -> Ojs.t = Obj.magic
            and vscode_ResolverResult_of_js : Ojs.t -> vscode_ResolverResult
              =
              fun (x5935 : Ojs.t) ->
                intersection3_of_js vscode_ResolvedAuthority_of_js
                  vscode_ResolvedOptions_of_js vscode_TunnelInformation_of_js
                  x5935
            and vscode_ResolverResult_to_js : vscode_ResolverResult -> Ojs.t
              =
              fun
                (x5931 :
                  (vscode_ResolvedAuthority, vscode_ResolvedOptions,
                    vscode_TunnelInformation) intersection3)
                ->
                intersection3_to_js vscode_ResolvedAuthority_to_js
                  vscode_ResolvedOptions_to_js vscode_TunnelInformation_to_js
                  x5931
            and vscode_ResourceLabelFormatter_of_js :
              Ojs.t -> vscode_ResourceLabelFormatter = Obj.magic
            and vscode_ResourceLabelFormatter_to_js :
              vscode_ResourceLabelFormatter -> Ojs.t = Obj.magic
            and vscode_ResourceLabelFormatting_of_js :
              Ojs.t -> vscode_ResourceLabelFormatting = Obj.magic
            and vscode_ResourceLabelFormatting_to_js :
              vscode_ResourceLabelFormatting -> Ojs.t = Obj.magic
            and vscode_SearchOptions_of_js : Ojs.t -> vscode_SearchOptions =
              Obj.magic
            and vscode_SearchOptions_to_js : vscode_SearchOptions -> Ojs.t =
              Obj.magic
            and vscode_SourceControl_of_js : Ojs.t -> vscode_SourceControl =
              Obj.magic
            and vscode_SourceControl_to_js : vscode_SourceControl -> Ojs.t =
              Obj.magic
            and vscode_SourceControlInputBox_of_js :
              Ojs.t -> vscode_SourceControlInputBox = Obj.magic
            and vscode_SourceControlInputBox_to_js :
              vscode_SourceControlInputBox -> Ojs.t = Obj.magic
            and vscode_SourceControlInputBoxValidation_of_js :
              Ojs.t -> vscode_SourceControlInputBoxValidation = Obj.magic
            and vscode_SourceControlInputBoxValidation_to_js :
              vscode_SourceControlInputBoxValidation -> Ojs.t = Obj.magic
            and vscode_SourceControlInputBoxValidationType_of_js :
              Ojs.t -> vscode_SourceControlInputBoxValidationType =
              fun (x5940 : Ojs.t) ->
                let x5941 = x5940 in
                match Ojs.int_of_js x5941 with
                | 0 -> `Error
                | 1 -> `Warning
                | 2 -> `Information
                | _ -> assert false
            and vscode_SourceControlInputBoxValidationType_to_js :
              vscode_SourceControlInputBoxValidationType -> Ojs.t =
              fun (x5939 : [ `Error  | `Warning  | `Information ]) ->
                match x5939 with
                | `Error -> Ojs.int_to_js 0
                | `Warning -> Ojs.int_to_js 1
                | `Information -> Ojs.int_to_js 2
            and vscode_SourceControlInputBoxValidationType_Error_of_js :
              Ojs.t -> vscode_SourceControlInputBoxValidationType_Error =
              fun (x5943 : Ojs.t) ->
                let x5944 = x5943 in
                match Ojs.int_of_js x5944 with
                | 0 -> `Error
                | _ -> assert false
            and vscode_SourceControlInputBoxValidationType_Error_to_js :
              vscode_SourceControlInputBoxValidationType_Error -> Ojs.t =
              fun (x5942 : [ `Error ]) ->
                match x5942 with | `Error -> Ojs.int_to_js 0
            and vscode_SourceControlInputBoxValidationType_Warning_of_js :
              Ojs.t -> vscode_SourceControlInputBoxValidationType_Warning =
              fun (x5946 : Ojs.t) ->
                let x5947 = x5946 in
                match Ojs.int_of_js x5947 with
                | 1 -> `Warning
                | _ -> assert false
            and vscode_SourceControlInputBoxValidationType_Warning_to_js :
              vscode_SourceControlInputBoxValidationType_Warning -> Ojs.t =
              fun (x5945 : [ `Warning ]) ->
                match x5945 with | `Warning -> Ojs.int_to_js 1
            and vscode_SourceControlInputBoxValidationType_Information_of_js
              :
              Ojs.t -> vscode_SourceControlInputBoxValidationType_Information
              =
              fun (x5949 : Ojs.t) ->
                let x5950 = x5949 in
                match Ojs.int_of_js x5950 with
                | 2 -> `Information
                | _ -> assert false
            and vscode_SourceControlInputBoxValidationType_Information_to_js
              :
              vscode_SourceControlInputBoxValidationType_Information -> Ojs.t
              =
              fun (x5948 : [ `Information ]) ->
                match x5948 with | `Information -> Ojs.int_to_js 2
            and vscode_StandardTokenType_of_js :
              Ojs.t -> vscode_StandardTokenType =
              fun (x5952 : Ojs.t) ->
                let x5953 = x5952 in
                match Ojs.int_of_js x5953 with
                | 0 -> `Other
                | 1 -> `Comment
                | 2 -> `String
                | 4 -> `RegEx
                | _ -> assert false
            and vscode_StandardTokenType_to_js :
              vscode_StandardTokenType -> Ojs.t =
              fun (x5951 : [ `Other  | `Comment  | `String  | `RegEx ]) ->
                match x5951 with
                | `Other -> Ojs.int_to_js 0
                | `Comment -> Ojs.int_to_js 1
                | `String -> Ojs.int_to_js 2
                | `RegEx -> Ojs.int_to_js 4
            and vscode_StandardTokenType_Other_of_js :
              Ojs.t -> vscode_StandardTokenType_Other =
              fun (x5955 : Ojs.t) ->
                let x5956 = x5955 in
                match Ojs.int_of_js x5956 with
                | 0 -> `Other
                | _ -> assert false
            and vscode_StandardTokenType_Other_to_js :
              vscode_StandardTokenType_Other -> Ojs.t =
              fun (x5954 : [ `Other ]) ->
                match x5954 with | `Other -> Ojs.int_to_js 0
            and vscode_StandardTokenType_Comment_of_js :
              Ojs.t -> vscode_StandardTokenType_Comment =
              fun (x5958 : Ojs.t) ->
                let x5959 = x5958 in
                match Ojs.int_of_js x5959 with
                | 1 -> `Comment
                | _ -> assert false
            and vscode_StandardTokenType_Comment_to_js :
              vscode_StandardTokenType_Comment -> Ojs.t =
              fun (x5957 : [ `Comment ]) ->
                match x5957 with | `Comment -> Ojs.int_to_js 1
            and vscode_StandardTokenType_String_of_js :
              Ojs.t -> vscode_StandardTokenType_String =
              fun (x5961 : Ojs.t) ->
                let x5962 = x5961 in
                match Ojs.int_of_js x5962 with
                | 2 -> `String
                | _ -> assert false
            and vscode_StandardTokenType_String_to_js :
              vscode_StandardTokenType_String -> Ojs.t =
              fun (x5960 : [ `String ]) ->
                match x5960 with | `String -> Ojs.int_to_js 2
            and vscode_StandardTokenType_RegEx_of_js :
              Ojs.t -> vscode_StandardTokenType_RegEx =
              fun (x5964 : Ojs.t) ->
                let x5965 = x5964 in
                match Ojs.int_of_js x5965 with
                | 4 -> `RegEx
                | _ -> assert false
            and vscode_StandardTokenType_RegEx_to_js :
              vscode_StandardTokenType_RegEx -> Ojs.t =
              fun (x5963 : [ `RegEx ]) ->
                match x5963 with | `RegEx -> Ojs.int_to_js 4
            and vscode_StatusBarItemOptions_of_js :
              Ojs.t -> vscode_StatusBarItemOptions = Obj.magic
            and vscode_StatusBarItemOptions_to_js :
              vscode_StatusBarItemOptions -> Ojs.t = Obj.magic
            and vscode_TaskPresentationOptions_of_js :
              Ojs.t -> vscode_TaskPresentationOptions = Obj.magic
            and vscode_TaskPresentationOptions_to_js :
              vscode_TaskPresentationOptions -> Ojs.t = Obj.magic
            and vscode_Terminal_of_js : Ojs.t -> vscode_Terminal = Obj.magic
            and vscode_Terminal_to_js : vscode_Terminal -> Ojs.t = Obj.magic
            and vscode_TerminalDataWriteEvent_of_js :
              Ojs.t -> vscode_TerminalDataWriteEvent = Obj.magic
            and vscode_TerminalDataWriteEvent_to_js :
              vscode_TerminalDataWriteEvent -> Ojs.t = Obj.magic
            and vscode_TerminalDimensionsChangeEvent_of_js :
              Ojs.t -> vscode_TerminalDimensionsChangeEvent = Obj.magic
            and vscode_TerminalDimensionsChangeEvent_to_js :
              vscode_TerminalDimensionsChangeEvent -> Ojs.t = Obj.magic
            and vscode_TerminalOptions_of_js :
              Ojs.t -> vscode_TerminalOptions = Obj.magic
            and vscode_TerminalOptions_to_js :
              vscode_TerminalOptions -> Ojs.t = Obj.magic
            and vscode_TestChildrenCollection_of_js :
              'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TestChildrenCollection
              = fun _T -> Obj.magic
            and vscode_TestChildrenCollection_to_js :
              'T . ('T -> Ojs.t) -> 'T vscode_TestChildrenCollection -> Ojs.t
              = fun _T -> Obj.magic
            and vscode_TestItem_of_js :
              'TChildren .
                (Ojs.t -> 'TChildren) -> Ojs.t -> 'TChildren vscode_TestItem
              = fun _TChildren -> Obj.magic
            and vscode_TestItem_to_js :
              'TChildren .
                ('TChildren -> Ojs.t) -> 'TChildren vscode_TestItem -> Ojs.t
              = fun _TChildren -> Obj.magic
            and vscode_TestMessage_of_js : Ojs.t -> vscode_TestMessage =
              Obj.magic
            and vscode_TestMessage_to_js : vscode_TestMessage -> Ojs.t =
              Obj.magic
            and vscode_TestMessageSeverity_of_js :
              Ojs.t -> vscode_TestMessageSeverity =
              fun (x5967 : Ojs.t) ->
                let x5968 = x5967 in
                match Ojs.int_of_js x5968 with
                | 0 -> `Error
                | 1 -> `Warning
                | 2 -> `Information
                | 3 -> `Hint
                | _ -> assert false
            and vscode_TestMessageSeverity_to_js :
              vscode_TestMessageSeverity -> Ojs.t =
              fun (x5966 : [ `Error  | `Warning  | `Information  | `Hint ])
                ->
                match x5966 with
                | `Error -> Ojs.int_to_js 0
                | `Warning -> Ojs.int_to_js 1
                | `Information -> Ojs.int_to_js 2
                | `Hint -> Ojs.int_to_js 3
            and vscode_TestMessageSeverity_Error_of_js :
              Ojs.t -> vscode_TestMessageSeverity_Error =
              fun (x5970 : Ojs.t) ->
                let x5971 = x5970 in
                match Ojs.int_of_js x5971 with
                | 0 -> `Error
                | _ -> assert false
            and vscode_TestMessageSeverity_Error_to_js :
              vscode_TestMessageSeverity_Error -> Ojs.t =
              fun (x5969 : [ `Error ]) ->
                match x5969 with | `Error -> Ojs.int_to_js 0
            and vscode_TestMessageSeverity_Warning_of_js :
              Ojs.t -> vscode_TestMessageSeverity_Warning =
              fun (x5973 : Ojs.t) ->
                let x5974 = x5973 in
                match Ojs.int_of_js x5974 with
                | 1 -> `Warning
                | _ -> assert false
            and vscode_TestMessageSeverity_Warning_to_js :
              vscode_TestMessageSeverity_Warning -> Ojs.t =
              fun (x5972 : [ `Warning ]) ->
                match x5972 with | `Warning -> Ojs.int_to_js 1
            and vscode_TestMessageSeverity_Information_of_js :
              Ojs.t -> vscode_TestMessageSeverity_Information =
              fun (x5976 : Ojs.t) ->
                let x5977 = x5976 in
                match Ojs.int_of_js x5977 with
                | 2 -> `Information
                | _ -> assert false
            and vscode_TestMessageSeverity_Information_to_js :
              vscode_TestMessageSeverity_Information -> Ojs.t =
              fun (x5975 : [ `Information ]) ->
                match x5975 with | `Information -> Ojs.int_to_js 2
            and vscode_TestMessageSeverity_Hint_of_js :
              Ojs.t -> vscode_TestMessageSeverity_Hint =
              fun (x5979 : Ojs.t) ->
                let x5980 = x5979 in
                match Ojs.int_of_js x5980 with
                | 3 -> `Hint
                | _ -> assert false
            and vscode_TestMessageSeverity_Hint_to_js :
              vscode_TestMessageSeverity_Hint -> Ojs.t =
              fun (x5978 : [ `Hint ]) ->
                match x5978 with | `Hint -> Ojs.int_to_js 3
            and vscode_TestObserver_of_js : Ojs.t -> vscode_TestObserver =
              Obj.magic
            and vscode_TestObserver_to_js : vscode_TestObserver -> Ojs.t =
              Obj.magic
            and vscode_TestProvider_of_js :
              'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TestProvider =
              fun _T -> Obj.magic
            and vscode_TestProvider_to_js :
              'T . ('T -> Ojs.t) -> 'T vscode_TestProvider -> Ojs.t =
              fun _T -> Obj.magic
            and vscode_TestResultSnapshot_of_js :
              Ojs.t -> vscode_TestResultSnapshot = Obj.magic
            and vscode_TestResultSnapshot_to_js :
              vscode_TestResultSnapshot -> Ojs.t = Obj.magic
            and vscode_TestResultState_of_js :
              Ojs.t -> vscode_TestResultState =
              fun (x5982 : Ojs.t) ->
                let x5983 = x5982 in
                match Ojs.int_of_js x5983 with
                | 0 -> `Unset
                | 1 -> `Queued
                | 2 -> `Running
                | 3 -> `Passed
                | 4 -> `Failed
                | 5 -> `Skipped
                | 6 -> `Errored
                | _ -> assert false
            and vscode_TestResultState_to_js :
              vscode_TestResultState -> Ojs.t =
              fun
                (x5981 :
                  [ `Unset  | `Queued  | `Running  | `Passed  | `Failed 
                  | `Skipped  | `Errored ])
                ->
                match x5981 with
                | `Unset -> Ojs.int_to_js 0
                | `Queued -> Ojs.int_to_js 1
                | `Running -> Ojs.int_to_js 2
                | `Passed -> Ojs.int_to_js 3
                | `Failed -> Ojs.int_to_js 4
                | `Skipped -> Ojs.int_to_js 5
                | `Errored -> Ojs.int_to_js 6
            and vscode_TestResultState_Unset_of_js :
              Ojs.t -> vscode_TestResultState_Unset =
              fun (x5985 : Ojs.t) ->
                let x5986 = x5985 in
                match Ojs.int_of_js x5986 with
                | 0 -> `Unset
                | _ -> assert false
            and vscode_TestResultState_Unset_to_js :
              vscode_TestResultState_Unset -> Ojs.t =
              fun (x5984 : [ `Unset ]) ->
                match x5984 with | `Unset -> Ojs.int_to_js 0
            and vscode_TestResultState_Queued_of_js :
              Ojs.t -> vscode_TestResultState_Queued =
              fun (x5988 : Ojs.t) ->
                let x5989 = x5988 in
                match Ojs.int_of_js x5989 with
                | 1 -> `Queued
                | _ -> assert false
            and vscode_TestResultState_Queued_to_js :
              vscode_TestResultState_Queued -> Ojs.t =
              fun (x5987 : [ `Queued ]) ->
                match x5987 with | `Queued -> Ojs.int_to_js 1
            and vscode_TestResultState_Running_of_js :
              Ojs.t -> vscode_TestResultState_Running =
              fun (x5991 : Ojs.t) ->
                let x5992 = x5991 in
                match Ojs.int_of_js x5992 with
                | 2 -> `Running
                | _ -> assert false
            and vscode_TestResultState_Running_to_js :
              vscode_TestResultState_Running -> Ojs.t =
              fun (x5990 : [ `Running ]) ->
                match x5990 with | `Running -> Ojs.int_to_js 2
            and vscode_TestResultState_Passed_of_js :
              Ojs.t -> vscode_TestResultState_Passed =
              fun (x5994 : Ojs.t) ->
                let x5995 = x5994 in
                match Ojs.int_of_js x5995 with
                | 3 -> `Passed
                | _ -> assert false
            and vscode_TestResultState_Passed_to_js :
              vscode_TestResultState_Passed -> Ojs.t =
              fun (x5993 : [ `Passed ]) ->
                match x5993 with | `Passed -> Ojs.int_to_js 3
            and vscode_TestResultState_Failed_of_js :
              Ojs.t -> vscode_TestResultState_Failed =
              fun (x5997 : Ojs.t) ->
                let x5998 = x5997 in
                match Ojs.int_of_js x5998 with
                | 4 -> `Failed
                | _ -> assert false
            and vscode_TestResultState_Failed_to_js :
              vscode_TestResultState_Failed -> Ojs.t =
              fun (x5996 : [ `Failed ]) ->
                match x5996 with | `Failed -> Ojs.int_to_js 4
            and vscode_TestResultState_Skipped_of_js :
              Ojs.t -> vscode_TestResultState_Skipped =
              fun (x6000 : Ojs.t) ->
                let x6001 = x6000 in
                match Ojs.int_of_js x6001 with
                | 5 -> `Skipped
                | _ -> assert false
            and vscode_TestResultState_Skipped_to_js :
              vscode_TestResultState_Skipped -> Ojs.t =
              fun (x5999 : [ `Skipped ]) ->
                match x5999 with | `Skipped -> Ojs.int_to_js 5
            and vscode_TestResultState_Errored_of_js :
              Ojs.t -> vscode_TestResultState_Errored =
              fun (x6003 : Ojs.t) ->
                let x6004 = x6003 in
                match Ojs.int_of_js x6004 with
                | 6 -> `Errored
                | _ -> assert false
            and vscode_TestResultState_Errored_to_js :
              vscode_TestResultState_Errored -> Ojs.t =
              fun (x6002 : [ `Errored ]) ->
                match x6002 with | `Errored -> Ojs.int_to_js 6
            and vscode_TestRunOptions_of_js :
              'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TestRunOptions =
              fun _T -> Obj.magic
            and vscode_TestRunOptions_to_js :
              'T . ('T -> Ojs.t) -> 'T vscode_TestRunOptions -> Ojs.t =
              fun _T -> Obj.magic
            and vscode_TestRunRequest_of_js :
              'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TestRunRequest =
              fun _T -> Obj.magic
            and vscode_TestRunRequest_to_js :
              'T . ('T -> Ojs.t) -> 'T vscode_TestRunRequest -> Ojs.t =
              fun _T -> Obj.magic
            and vscode_TestRunResult_of_js : Ojs.t -> vscode_TestRunResult =
              Obj.magic
            and vscode_TestRunResult_to_js : vscode_TestRunResult -> Ojs.t =
              Obj.magic
            and vscode_TestsChangeEvent_of_js :
              Ojs.t -> vscode_TestsChangeEvent = Obj.magic
            and vscode_TestsChangeEvent_to_js :
              vscode_TestsChangeEvent -> Ojs.t = Obj.magic
            and vscode_TextDocument_of_js : Ojs.t -> vscode_TextDocument =
              Obj.magic
            and vscode_TextDocument_to_js : vscode_TextDocument -> Ojs.t =
              Obj.magic
            and vscode_TextSearchComplete_of_js :
              Ojs.t -> vscode_TextSearchComplete = Obj.magic
            and vscode_TextSearchComplete_to_js :
              vscode_TextSearchComplete -> Ojs.t = Obj.magic
            and vscode_TextSearchContext_of_js :
              Ojs.t -> vscode_TextSearchContext = Obj.magic
            and vscode_TextSearchContext_to_js :
              vscode_TextSearchContext -> Ojs.t = Obj.magic
            and vscode_TextSearchMatch_of_js :
              Ojs.t -> vscode_TextSearchMatch = Obj.magic
            and vscode_TextSearchMatch_to_js :
              vscode_TextSearchMatch -> Ojs.t = Obj.magic
            and vscode_TextSearchMatchPreview_of_js :
              Ojs.t -> vscode_TextSearchMatchPreview = Obj.magic
            and vscode_TextSearchMatchPreview_to_js :
              vscode_TextSearchMatchPreview -> Ojs.t = Obj.magic
            and vscode_TextSearchOptions_of_js :
              Ojs.t -> vscode_TextSearchOptions = Obj.magic
            and vscode_TextSearchOptions_to_js :
              vscode_TextSearchOptions -> Ojs.t = Obj.magic
            and vscode_TextSearchPreviewOptions_of_js :
              Ojs.t -> vscode_TextSearchPreviewOptions = Obj.magic
            and vscode_TextSearchPreviewOptions_to_js :
              vscode_TextSearchPreviewOptions -> Ojs.t = Obj.magic
            and vscode_TextSearchProvider_of_js :
              Ojs.t -> vscode_TextSearchProvider = Obj.magic
            and vscode_TextSearchProvider_to_js :
              vscode_TextSearchProvider -> Ojs.t = Obj.magic
            and vscode_TextSearchQuery_of_js :
              Ojs.t -> vscode_TextSearchQuery = Obj.magic
            and vscode_TextSearchQuery_to_js :
              vscode_TextSearchQuery -> Ojs.t = Obj.magic
            and vscode_TextSearchResult_of_js :
              Ojs.t -> vscode_TextSearchResult =
              fun (x6008 : Ojs.t) ->
                union2_of_js vscode_TextSearchContext_of_js
                  vscode_TextSearchMatch_of_js x6008
            and vscode_TextSearchResult_to_js :
              vscode_TextSearchResult -> Ojs.t =
              fun
                (x6005 :
                  (vscode_TextSearchContext, vscode_TextSearchMatch) union2)
                ->
                union2_to_js vscode_TextSearchContext_to_js
                  vscode_TextSearchMatch_to_js x6005
            and vscode_Timeline_of_js : Ojs.t -> vscode_Timeline = Obj.magic
            and vscode_Timeline_to_js : vscode_Timeline -> Ojs.t = Obj.magic
            and vscode_TimelineChangeEvent_of_js :
              Ojs.t -> vscode_TimelineChangeEvent = Obj.magic
            and vscode_TimelineChangeEvent_to_js :
              vscode_TimelineChangeEvent -> Ojs.t = Obj.magic
            and vscode_TimelineItem_of_js : Ojs.t -> vscode_TimelineItem =
              Obj.magic
            and vscode_TimelineItem_to_js : vscode_TimelineItem -> Ojs.t =
              Obj.magic
            and vscode_TimelineOptions_of_js :
              Ojs.t -> vscode_TimelineOptions = Obj.magic
            and vscode_TimelineOptions_to_js :
              vscode_TimelineOptions -> Ojs.t = Obj.magic
            and vscode_TimelineProvider_of_js :
              Ojs.t -> vscode_TimelineProvider = Obj.magic
            and vscode_TimelineProvider_to_js :
              vscode_TimelineProvider -> Ojs.t = Obj.magic
            and vscode_TokenInformation_of_js :
              Ojs.t -> vscode_TokenInformation = Obj.magic
            and vscode_TokenInformation_to_js :
              vscode_TokenInformation -> Ojs.t = Obj.magic
            and vscode_TreeView_of_js :
              'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeView =
              fun _T -> Obj.magic
            and vscode_TreeView_to_js :
              'T . ('T -> Ojs.t) -> 'T vscode_TreeView -> Ojs.t =
              fun _T -> Obj.magic
            and vscode_Tunnel_of_js : Ojs.t -> vscode_Tunnel = Obj.magic
            and vscode_Tunnel_to_js : vscode_Tunnel -> Ojs.t = Obj.magic
            and vscode_TunnelCreationOptions_of_js :
              Ojs.t -> vscode_TunnelCreationOptions = Obj.magic
            and vscode_TunnelCreationOptions_to_js :
              vscode_TunnelCreationOptions -> Ojs.t = Obj.magic
            and vscode_TunnelDescription_of_js :
              Ojs.t -> vscode_TunnelDescription = Obj.magic
            and vscode_TunnelDescription_to_js :
              vscode_TunnelDescription -> Ojs.t = Obj.magic
            and vscode_TunnelInformation_of_js :
              Ojs.t -> vscode_TunnelInformation = Obj.magic
            and vscode_TunnelInformation_to_js :
              vscode_TunnelInformation -> Ojs.t = Obj.magic
            and vscode_TunnelOptions_of_js : Ojs.t -> vscode_TunnelOptions =
              Obj.magic
            and vscode_TunnelOptions_to_js : vscode_TunnelOptions -> Ojs.t =
              Obj.magic
            and vscode_Webview_of_js : Ojs.t -> vscode_Webview = Obj.magic
            and vscode_Webview_to_js : vscode_Webview -> Ojs.t = Obj.magic
            and vscode_WebviewEditorInset_of_js :
              Ojs.t -> vscode_WebviewEditorInset = Obj.magic
            and vscode_WebviewEditorInset_to_js :
              vscode_WebviewEditorInset -> Ojs.t = Obj.magic
            and vscode_WorkspaceEdit_of_js : Ojs.t -> vscode_WorkspaceEdit =
              Obj.magic
            and vscode_WorkspaceEdit_to_js : vscode_WorkspaceEdit -> Ojs.t =
              Obj.magic
            and vscode_WorkspaceTrustRequestOptions_of_js :
              Ojs.t -> vscode_WorkspaceTrustRequestOptions = Obj.magic
            and vscode_WorkspaceTrustRequestOptions_to_js :
              vscode_WorkspaceTrustRequestOptions -> Ojs.t = Obj.magic
            and vscode_WorkspaceTrustState_of_js :
              Ojs.t -> vscode_WorkspaceTrustState =
              fun (x6012 : Ojs.t) ->
                let x6013 = x6012 in
                match Ojs.int_of_js x6013 with
                | 0 -> `Untrusted
                | 1 -> `Trusted
                | 2 -> `Unspecified
                | _ -> assert false
            and vscode_WorkspaceTrustState_to_js :
              vscode_WorkspaceTrustState -> Ojs.t =
              fun (x6011 : [ `Untrusted  | `Trusted  | `Unspecified ]) ->
                match x6011 with
                | `Untrusted -> Ojs.int_to_js 0
                | `Trusted -> Ojs.int_to_js 1
                | `Unspecified -> Ojs.int_to_js 2
            and vscode_WorkspaceTrustState_Untrusted_of_js :
              Ojs.t -> vscode_WorkspaceTrustState_Untrusted =
              fun (x6015 : Ojs.t) ->
                let x6016 = x6015 in
                match Ojs.int_of_js x6016 with
                | 0 -> `Untrusted
                | _ -> assert false
            and vscode_WorkspaceTrustState_Untrusted_to_js :
              vscode_WorkspaceTrustState_Untrusted -> Ojs.t =
              fun (x6014 : [ `Untrusted ]) ->
                match x6014 with | `Untrusted -> Ojs.int_to_js 0
            and vscode_WorkspaceTrustState_Trusted_of_js :
              Ojs.t -> vscode_WorkspaceTrustState_Trusted =
              fun (x6018 : Ojs.t) ->
                let x6019 = x6018 in
                match Ojs.int_of_js x6019 with
                | 1 -> `Trusted
                | _ -> assert false
            and vscode_WorkspaceTrustState_Trusted_to_js :
              vscode_WorkspaceTrustState_Trusted -> Ojs.t =
              fun (x6017 : [ `Trusted ]) ->
                match x6017 with | `Trusted -> Ojs.int_to_js 1
            and vscode_WorkspaceTrustState_Unspecified_of_js :
              Ojs.t -> vscode_WorkspaceTrustState_Unspecified =
              fun (x6021 : Ojs.t) ->
                let x6022 = x6021 in
                match Ojs.int_of_js x6022 with
                | 2 -> `Unspecified
                | _ -> assert false
            and vscode_WorkspaceTrustState_Unspecified_to_js :
              vscode_WorkspaceTrustState_Unspecified -> Ojs.t =
              fun (x6020 : [ `Unspecified ]) ->
                match x6020 with | `Unspecified -> Ojs.int_to_js 2
            and vscode_WorkspaceTrustStateChangeEvent_of_js :
              Ojs.t -> vscode_WorkspaceTrustStateChangeEvent = Obj.magic
            and vscode_WorkspaceTrustStateChangeEvent_to_js :
              vscode_WorkspaceTrustStateChangeEvent -> Ojs.t = Obj.magic
          end
      end
    open Internal
    open AnonymousInterfaces
    open Types
    module AnonymousInterface0 =
      struct
        type t = anonymous_interface_0
        let rec t_of_js : Ojs.t -> t =
          fun (x6024 : Ojs.t) -> anonymous_interface_0_of_js x6024
        and t_to_js : t -> Ojs.t =
          fun (x6023 : anonymous_interface_0) ->
            anonymous_interface_0_to_js x6023
        let (get_busy : t -> bool) =
          fun (x6025 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6025) "busy")
        let (set_busy : t -> bool -> unit) =
          fun (x6026 : t) ->
            fun (x6027 : bool) ->
              Ojs.set_prop_ascii (t_to_js x6026) "busy"
                (Ojs.bool_to_js x6027)
      end
    module AnonymousInterface1 =
      struct
        type t = anonymous_interface_1
        let rec t_of_js : Ojs.t -> t =
          fun (x6029 : Ojs.t) -> anonymous_interface_1_of_js x6029
        and t_to_js : t -> Ojs.t =
          fun (x6028 : anonymous_interface_1) ->
            anonymous_interface_1_to_js x6028
        let (get_create : t -> bool) =
          fun (x6030 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6030) "create")
        let (set_create : t -> bool -> unit) =
          fun (x6031 : t) ->
            fun (x6032 : bool) ->
              Ojs.set_prop_ascii (t_to_js x6031) "create"
                (Ojs.bool_to_js x6032)
      end
    module AnonymousInterface2 =
      struct
        type t = anonymous_interface_2
        let rec t_of_js : Ojs.t -> t =
          fun (x6034 : Ojs.t) -> anonymous_interface_2_of_js x6034
        and t_to_js : t -> Ojs.t =
          fun (x6033 : anonymous_interface_2) ->
            anonymous_interface_2_to_js x6033
        let (get_cursor : t -> string or_undefined) =
          fun (x6035 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x6035) "cursor")
      end
    module AnonymousInterface3 =
      struct
        type t = anonymous_interface_3
        let rec t_of_js : Ojs.t -> t =
          fun (x6038 : Ojs.t) -> anonymous_interface_3_of_js x6038
        and t_to_js : t -> Ojs.t =
          fun (x6037 : anonymous_interface_3) ->
            anonymous_interface_3_to_js x6037
        let (get_displayName : t -> string) =
          fun (x6039 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x6039) "displayName")
        let (set_displayName : t -> string -> unit) =
          fun (x6040 : t) ->
            fun (x6041 : string) ->
              Ojs.set_prop_ascii (t_to_js x6040) "displayName"
                (Ojs.string_to_js x6041)
        let (get_filenamePattern : t -> vscode_NotebookFilenamePattern list)
          =
          fun (x6042 : t) ->
            Ojs.list_of_js vscode_NotebookFilenamePattern_of_js
              (Ojs.get_prop_ascii (t_to_js x6042) "filenamePattern")
        let (set_filenamePattern :
          t -> vscode_NotebookFilenamePattern list -> unit) =
          fun (x6044 : t) ->
            fun (x6045 : vscode_NotebookFilenamePattern list) ->
              Ojs.set_prop_ascii (t_to_js x6044) "filenamePattern"
                (Ojs.list_to_js vscode_NotebookFilenamePattern_to_js x6045)
        let (get_exclusive : t -> bool) =
          fun (x6047 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6047) "exclusive")
        let (set_exclusive : t -> bool -> unit) =
          fun (x6048 : t) ->
            fun (x6049 : bool) ->
              Ojs.set_prop_ascii (t_to_js x6048) "exclusive"
                (Ojs.bool_to_js x6049)
      end
    module AnonymousInterface4 =
      struct
        type t = anonymous_interface_4
        let rec t_of_js : Ojs.t -> t =
          fun (x6051 : Ojs.t) -> anonymous_interface_4_of_js x6051
        and t_to_js : t -> Ojs.t =
          fun (x6050 : anonymous_interface_4) ->
            anonymous_interface_4_to_js x6050
        let (get_document : t -> vscode_NotebookDocument) =
          fun (x6052 : t) ->
            vscode_NotebookDocument_of_js
              (Ojs.get_prop_ascii (t_to_js x6052) "document")
        let (set_document : t -> vscode_NotebookDocument -> unit) =
          fun (x6053 : t) ->
            fun (x6054 : vscode_NotebookDocument) ->
              Ojs.set_prop_ascii (t_to_js x6053) "document"
                (vscode_NotebookDocument_to_js x6054)
        let (get_kernel : t -> vscode_NotebookKernel or_undefined) =
          fun (x6055 : t) ->
            or_undefined_of_js vscode_NotebookKernel_of_js
              (Ojs.get_prop_ascii (t_to_js x6055) "kernel")
        let (set_kernel : t -> vscode_NotebookKernel or_undefined -> unit) =
          fun (x6057 : t) ->
            fun (x6058 : vscode_NotebookKernel or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x6057) "kernel"
                (or_undefined_to_js vscode_NotebookKernel_to_js x6058)
      end
    module AnonymousInterface5 =
      struct
        type t = anonymous_interface_5
        let rec t_of_js : Ojs.t -> t =
          fun (x6061 : Ojs.t) -> anonymous_interface_5_of_js x6061
        and t_to_js : t -> Ojs.t =
          fun (x6060 : anonymous_interface_5) ->
            anonymous_interface_5_to_js x6060
        let (get_editable : t -> bool or_null) =
          fun (x6062 : t) ->
            or_null_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6062) "editable")
        let (set_editable : t -> bool or_null -> unit) =
          fun (x6064 : t) ->
            fun (x6065 : bool or_null) ->
              Ojs.set_prop_ascii (t_to_js x6064) "editable"
                (or_null_to_js Ojs.bool_to_js x6065)
        let (get_breakpointMargin : t -> bool or_null) =
          fun (x6067 : t) ->
            or_null_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6067) "breakpointMargin")
        let (set_breakpointMargin : t -> bool or_null -> unit) =
          fun (x6069 : t) ->
            fun (x6070 : bool or_null) ->
              Ojs.set_prop_ascii (t_to_js x6069) "breakpointMargin"
                (or_null_to_js Ojs.bool_to_js x6070)
        let (get_statusMessage : t -> string or_null) =
          fun (x6072 : t) ->
            or_null_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x6072) "statusMessage")
        let (set_statusMessage : t -> string or_null -> unit) =
          fun (x6074 : t) ->
            fun (x6075 : string or_null) ->
              Ojs.set_prop_ascii (t_to_js x6074) "statusMessage"
                (or_null_to_js Ojs.string_to_js x6075)
        let (get_lastRunDuration : t -> float or_null) =
          fun (x6077 : t) ->
            or_null_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x6077) "lastRunDuration")
        let (set_lastRunDuration : t -> float or_null -> unit) =
          fun (x6079 : t) ->
            fun (x6080 : float or_null) ->
              Ojs.set_prop_ascii (t_to_js x6079) "lastRunDuration"
                (or_null_to_js Ojs.float_to_js x6080)
        let (get_inputCollapsed : t -> bool or_null) =
          fun (x6082 : t) ->
            or_null_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6082) "inputCollapsed")
        let (set_inputCollapsed : t -> bool or_null -> unit) =
          fun (x6084 : t) ->
            fun (x6085 : bool or_null) ->
              Ojs.set_prop_ascii (t_to_js x6084) "inputCollapsed"
                (or_null_to_js Ojs.bool_to_js x6085)
        let (get_outputCollapsed : t -> bool or_null) =
          fun (x6087 : t) ->
            or_null_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6087) "outputCollapsed")
        let (set_outputCollapsed : t -> bool or_null -> unit) =
          fun (x6089 : t) ->
            fun (x6090 : bool or_null) ->
              Ojs.set_prop_ascii (t_to_js x6089) "outputCollapsed"
                (or_null_to_js Ojs.bool_to_js x6090)
        let (get_custom : t -> (string, any) Record.t or_null) =
          fun (x6092 : t) ->
            or_null_of_js
              (fun (x6093 : Ojs.t) ->
                 Record.t_of_js Ojs.string_of_js any_of_js x6093)
              (Ojs.get_prop_ascii (t_to_js x6092) "custom")
        let (set_custom : t -> (string, any) Record.t or_null -> unit) =
          fun (x6096 : t) ->
            fun (x6097 : (string, any) Record.t or_null) ->
              Ojs.set_prop_ascii (t_to_js x6096) "custom"
                (or_null_to_js
                   (fun (x6098 : (string, any) Record.t) ->
                      Record.t_to_js Ojs.string_to_js any_to_js x6098) x6097)
      end
    module AnonymousInterface6 =
      struct
        type t = anonymous_interface_6
        let rec t_of_js : Ojs.t -> t =
          fun (x6102 : Ojs.t) -> anonymous_interface_6_of_js x6102
        and t_to_js : t -> Ojs.t =
          fun (x6101 : anonymous_interface_6) ->
            anonymous_interface_6_to_js x6101
        let (get_editable : t -> bool or_null) =
          fun (x6103 : t) ->
            or_null_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6103) "editable")
        let (set_editable : t -> bool or_null -> unit) =
          fun (x6105 : t) ->
            fun (x6106 : bool or_null) ->
              Ojs.set_prop_ascii (t_to_js x6105) "editable"
                (or_null_to_js Ojs.bool_to_js x6106)
        let (get_cellEditable : t -> bool or_null) =
          fun (x6108 : t) ->
            or_null_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6108) "cellEditable")
        let (set_cellEditable : t -> bool or_null -> unit) =
          fun (x6110 : t) ->
            fun (x6111 : bool or_null) ->
              Ojs.set_prop_ascii (t_to_js x6110) "cellEditable"
                (or_null_to_js Ojs.bool_to_js x6111)
        let (get_custom : t -> anonymous_interface_16 or_null) =
          fun (x6113 : t) ->
            or_null_of_js anonymous_interface_16_of_js
              (Ojs.get_prop_ascii (t_to_js x6113) "custom")
        let (set_custom : t -> anonymous_interface_16 or_null -> unit) =
          fun (x6115 : t) ->
            fun (x6116 : anonymous_interface_16 or_null) ->
              Ojs.set_prop_ascii (t_to_js x6115) "custom"
                (or_null_to_js anonymous_interface_16_to_js x6116)
        let (get_trusted : t -> bool or_null) =
          fun (x6118 : t) ->
            or_null_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6118) "trusted")
        let (set_trusted : t -> bool or_null -> unit) =
          fun (x6120 : t) ->
            fun (x6121 : bool or_null) ->
              Ojs.set_prop_ascii (t_to_js x6120) "trusted"
                (or_null_to_js Ojs.bool_to_js x6121)
      end
    module AnonymousInterface7 =
      struct
        type t = anonymous_interface_7
        let rec t_of_js : Ojs.t -> t =
          fun (x6124 : Ojs.t) -> anonymous_interface_7_of_js x6124
        and t_to_js : t -> Ojs.t =
          fun (x6123 : anonymous_interface_7) ->
            anonymous_interface_7_to_js x6123
        let (get_elevation : t -> bool) =
          fun (x6125 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6125) "elevation")
        let (set_elevation : t -> bool -> unit) =
          fun (x6126 : t) ->
            fun (x6127 : bool) ->
              Ojs.set_prop_ascii (t_to_js x6126) "elevation"
                (Ojs.bool_to_js x6127)
        let (get_public : t -> bool) =
          fun (x6128 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6128) "public")
        let (set_public : t -> bool -> unit) =
          fun (x6129 : t) ->
            fun (x6130 : bool) ->
              Ojs.set_prop_ascii (t_to_js x6129) "public"
                (Ojs.bool_to_js x6130)
      end
    module AnonymousInterface8 =
      struct
        type t = anonymous_interface_8
        let rec t_of_js : Ojs.t -> t =
          fun (x6132 : Ojs.t) -> anonymous_interface_8_of_js x6132
        and t_to_js : t -> Ojs.t =
          fun (x6131 : anonymous_interface_8) ->
            anonymous_interface_8_to_js x6131
        let (get_include : t -> GlobPattern.t) =
          fun (x6133 : t) ->
            GlobPattern.t_of_js
              (Ojs.get_prop_ascii (t_to_js x6133) "include")
        let (set_include : t -> GlobPattern.t -> unit) =
          fun (x6134 : t) ->
            fun (x6135 : GlobPattern.t) ->
              Ojs.set_prop_ascii (t_to_js x6134) "include"
                (GlobPattern.t_to_js x6135)
        let (get_exclude : t -> GlobPattern.t) =
          fun (x6136 : t) ->
            GlobPattern.t_of_js
              (Ojs.get_prop_ascii (t_to_js x6136) "exclude")
        let (set_exclude : t -> GlobPattern.t -> unit) =
          fun (x6137 : t) ->
            fun (x6138 : GlobPattern.t) ->
              Ojs.set_prop_ascii (t_to_js x6137) "exclude"
                (GlobPattern.t_to_js x6138)
      end
    module AnonymousInterface9 =
      struct
        type t = anonymous_interface_9
        let rec t_of_js : Ojs.t -> t =
          fun (x6140 : Ojs.t) -> anonymous_interface_9_of_js x6140
        and t_to_js : t -> Ojs.t =
          fun (x6139 : anonymous_interface_9) ->
            anonymous_interface_9_to_js x6139
        let (get_light : t -> Uri.t) =
          fun (x6141 : t) ->
            Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x6141) "light")
        let (set_light : t -> Uri.t -> unit) =
          fun (x6142 : t) ->
            fun (x6143 : Uri.t) ->
              Ojs.set_prop_ascii (t_to_js x6142) "light" (Uri.t_to_js x6143)
        let (get_dark : t -> Uri.t) =
          fun (x6144 : t) ->
            Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x6144) "dark")
        let (set_dark : t -> Uri.t -> unit) =
          fun (x6145 : t) ->
            fun (x6146 : Uri.t) ->
              Ojs.set_prop_ascii (t_to_js x6145) "dark" (Uri.t_to_js x6146)
      end
    module AnonymousInterface10 =
      struct
        type t = anonymous_interface_10
        let rec t_of_js : Ojs.t -> t =
          fun (x6148 : Ojs.t) -> anonymous_interface_10_of_js x6148
        and t_to_js : t -> Ojs.t =
          fun (x6147 : anonymous_interface_10) ->
            anonymous_interface_10_to_js x6147
        let (get_pid : t -> float) =
          fun (x6149 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6149) "pid")
        let (set_pid : t -> float -> unit) =
          fun (x6150 : t) ->
            fun (x6151 : float) ->
              Ojs.set_prop_ascii (t_to_js x6150) "pid"
                (Ojs.float_to_js x6151)
        let (get_portRange : t -> (float * float)) =
          fun (x6152 : t) ->
            let x6153 = Ojs.get_prop_ascii (t_to_js x6152) "portRange" in
            ((Ojs.float_of_js (Ojs.array_get x6153 0)),
              (Ojs.float_of_js (Ojs.array_get x6153 1)))
        let (set_portRange : t -> (float * float) -> unit) =
          fun (x6154 : t) ->
            fun (x6155 : (float * float)) ->
              Ojs.set_prop_ascii (t_to_js x6154) "portRange"
                (let (x6156, x6157) = x6155 in
                 let x6158 = Ojs.array_make 2 in
                 Ojs.array_set x6158 0 (Ojs.float_to_js x6156);
                 Ojs.array_set x6158 1 (Ojs.float_to_js x6157);
                 x6158)
        let (get_commandMatcher : t -> regexp) =
          fun (x6159 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x6159) "commandMatcher")
        let (set_commandMatcher : t -> regexp -> unit) =
          fun (x6160 : t) ->
            fun (x6161 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x6160) "commandMatcher"
                (regexp_to_js x6161)
      end
    module AnonymousInterface11 =
      struct
        type t = anonymous_interface_11
        let rec t_of_js : Ojs.t -> t =
          fun (x6163 : Ojs.t) -> anonymous_interface_11_of_js x6163
        and t_to_js : t -> Ojs.t =
          fun (x6162 : anonymous_interface_11) ->
            anonymous_interface_11_to_js x6162
        let (get_port : t -> float) =
          fun (x6164 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6164) "port")
        let (set_port : t -> float -> unit) =
          fun (x6165 : t) ->
            fun (x6166 : float) ->
              Ojs.set_prop_ascii (t_to_js x6165) "port"
                (Ojs.float_to_js x6166)
        let (get_host : t -> string) =
          fun (x6167 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6167) "host")
        let (set_host : t -> string -> unit) =
          fun (x6168 : t) ->
            fun (x6169 : string) ->
              Ojs.set_prop_ascii (t_to_js x6168) "host"
                (Ojs.string_to_js x6169)
      end
    module AnonymousInterface12 =
      struct
        type t = anonymous_interface_12
        let rec t_of_js : Ojs.t -> t =
          fun (x6171 : Ojs.t) -> anonymous_interface_12_of_js x6171
        and t_to_js : t -> Ojs.t =
          fun (x6170 : anonymous_interface_12) ->
            anonymous_interface_12_to_js x6170
        let (get_select : t -> bool) =
          fun (x6172 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6172) "select")
        let (set_select : t -> bool -> unit) =
          fun (x6173 : t) ->
            fun (x6174 : bool) ->
              Ojs.set_prop_ascii (t_to_js x6173) "select"
                (Ojs.bool_to_js x6174)
        let (get_focus : t -> bool) =
          fun (x6175 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6175) "focus")
        let (set_focus : t -> bool -> unit) =
          fun (x6176 : t) ->
            fun (x6177 : bool) ->
              Ojs.set_prop_ascii (t_to_js x6176) "focus"
                (Ojs.bool_to_js x6177)
        let (get_expand : t -> bool or_number) =
          fun (x6178 : t) ->
            or_number_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x6178) "expand")
        let (set_expand : t -> bool or_number -> unit) =
          fun (x6180 : t) ->
            fun (x6181 : bool or_number) ->
              Ojs.set_prop_ascii (t_to_js x6180) "expand"
                (or_number_to_js Ojs.bool_to_js x6181)
      end
    module AnonymousInterface13 =
      struct
        type t = anonymous_interface_13
        let rec t_of_js : Ojs.t -> t =
          fun (x6184 : Ojs.t) -> anonymous_interface_13_of_js x6184
        and t_to_js : t -> Ojs.t =
          fun (x6183 : anonymous_interface_13) ->
            anonymous_interface_13_to_js x6183
        let (get_start : t -> float) =
          fun (x6185 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6185) "start")
        let (set_start : t -> float -> unit) =
          fun (x6186 : t) ->
            fun (x6187 : float) ->
              Ojs.set_prop_ascii (t_to_js x6186) "start"
                (Ojs.float_to_js x6187)
        let (get_end : t -> float) =
          fun (x6188 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6188) "end")
        let (set_end : t -> float -> unit) =
          fun (x6189 : t) ->
            fun (x6190 : float) ->
              Ojs.set_prop_ascii (t_to_js x6189) "end"
                (Ojs.float_to_js x6190)
      end
    module AnonymousInterface14 =
      struct
        type t = anonymous_interface_14
        let rec t_of_js : Ojs.t -> t =
          fun (x6192 : Ojs.t) -> anonymous_interface_14_of_js x6192
        and t_to_js : t -> Ojs.t =
          fun (x6191 : anonymous_interface_14) ->
            anonymous_interface_14_to_js x6191
        let (get_timestamp : t -> float) =
          fun (x6193 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6193) "timestamp")
        let (set_timestamp : t -> float -> unit) =
          fun (x6194 : t) ->
            fun (x6195 : float) ->
              Ojs.set_prop_ascii (t_to_js x6194) "timestamp"
                (Ojs.float_to_js x6195)
        let (get_id : t -> string) =
          fun (x6196 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6196) "id")
        let (set_id : t -> string -> unit) =
          fun (x6197 : t) ->
            fun (x6198 : string) ->
              Ojs.set_prop_ascii (t_to_js x6197) "id"
                (Ojs.string_to_js x6198)
      end
    module AnonymousInterface15 =
      struct
        type t = anonymous_interface_15
        let rec t_of_js : Ojs.t -> t =
          fun (x6200 : Ojs.t) -> anonymous_interface_15_of_js x6200
        and t_to_js : t -> Ojs.t =
          fun (x6199 : anonymous_interface_15) ->
            anonymous_interface_15_to_js x6199
        let (get_viewOptions : t -> anonymous_interface_3) =
          fun (x6201 : t) ->
            anonymous_interface_3_of_js
              (Ojs.get_prop_ascii (t_to_js x6201) "viewOptions")
        let (set_viewOptions : t -> anonymous_interface_3 -> unit) =
          fun (x6202 : t) ->
            fun (x6203 : anonymous_interface_3) ->
              Ojs.set_prop_ascii (t_to_js x6202) "viewOptions"
                (anonymous_interface_3_to_js x6203)
      end
    module AnonymousInterface16 =
      struct
        type t = anonymous_interface_16
        let rec t_of_js : Ojs.t -> t =
          fun (x6205 : Ojs.t) -> anonymous_interface_16_of_js x6205
        and t_to_js : t -> Ojs.t =
          fun (x6204 : anonymous_interface_16) ->
            anonymous_interface_16_to_js x6204
        let (get : t -> string -> any) =
          fun (x6206 : t) ->
            fun (x6207 : string) ->
              any_of_js
                (Ojs.get_prop (t_to_js x6206) (Ojs.string_to_js x6207))
        let (set : t -> string -> any -> unit) =
          fun (x6208 : t) ->
            fun (x6209 : string) ->
              fun (x6210 : any) ->
                Ojs.set_prop (t_to_js x6208) (Ojs.string_to_js x6209)
                  (any_to_js x6210)
      end
    module AnonymousInterface17 =
      struct
        type t = anonymous_interface_17
        let rec t_of_js : Ojs.t -> t =
          fun (x6212 : Ojs.t) -> anonymous_interface_17_of_js x6212
        and t_to_js : t -> Ojs.t =
          fun (x6211 : anonymous_interface_17) ->
            anonymous_interface_17_to_js x6211
        let (get : t -> string -> string or_null) =
          fun (x6213 : t) ->
            fun (x6214 : string) ->
              or_null_of_js Ojs.string_of_js
                (Ojs.get_prop (t_to_js x6213) (Ojs.string_to_js x6214))
        let (set : t -> string -> string or_null -> unit) =
          fun (x6216 : t) ->
            fun (x6217 : string) ->
              fun (x6218 : string or_null) ->
                Ojs.set_prop (t_to_js x6216) (Ojs.string_to_js x6217)
                  (or_null_to_js Ojs.string_to_js x6218)
      end
    module Vscode =
      struct
        module AuthenticationProvidersChangeEvent =
          struct
            type t = vscode_AuthenticationProvidersChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6221 : Ojs.t) ->
                vscode_AuthenticationProvidersChangeEvent_of_js x6221
            and t_to_js : t -> Ojs.t =
              fun (x6220 : vscode_AuthenticationProvidersChangeEvent) ->
                vscode_AuthenticationProvidersChangeEvent_to_js x6220
            let (get_added : t -> AuthenticationProviderInformation.t list) =
              fun (x6222 : t) ->
                Ojs.list_of_js AuthenticationProviderInformation.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6222) "added")
            let (get_removed : t -> AuthenticationProviderInformation.t list)
              =
              fun (x6224 : t) ->
                Ojs.list_of_js AuthenticationProviderInformation.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6224) "removed")
          end
        module Authentication =
          struct
            let (onDidChangeAuthenticationProviders :
              vscode_AuthenticationProvidersChangeEvent Event.t) =
              Event.t_of_js vscode_AuthenticationProvidersChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "authentication") "onDidChangeAuthenticationProviders")
            let (providers : AuthenticationProviderInformation.t list) =
              Ojs.list_of_js AuthenticationProviderInformation.t_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "authentication") "providers")
            let (logout :
              providerId:string -> sessionId:string -> unit Promise.t) =
              fun ~providerId:(x6228 : string) ->
                fun ~sessionId:(x6229 : string) ->
                  Promise.t_of_js Ojs.unit_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "authentication") "logout"
                       [|(Ojs.string_to_js x6228);(Ojs.string_to_js x6229)|])
          end
        module MessageOptions =
          struct
            type t = vscode_MessageOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6232 : Ojs.t) -> vscode_MessageOptions_of_js x6232
            and t_to_js : t -> Ojs.t =
              fun (x6231 : vscode_MessageOptions) ->
                vscode_MessageOptions_to_js x6231
            let (get_useCustom : t -> bool) =
              fun (x6233 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6233) "useCustom")
            let (set_useCustom : t -> bool -> unit) =
              fun (x6234 : t) ->
                fun (x6235 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6234) "useCustom"
                    (Ojs.bool_to_js x6235)
          end
        module RemoteAuthorityResolverContext =
          struct
            type t = vscode_RemoteAuthorityResolverContext
            let rec t_of_js : Ojs.t -> t =
              fun (x6237 : Ojs.t) ->
                vscode_RemoteAuthorityResolverContext_of_js x6237
            and t_to_js : t -> Ojs.t =
              fun (x6236 : vscode_RemoteAuthorityResolverContext) ->
                vscode_RemoteAuthorityResolverContext_to_js x6236
            let (get_resolveAttempt : t -> float) =
              fun (x6238 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6238) "resolveAttempt")
            let (set_resolveAttempt : t -> float -> unit) =
              fun (x6239 : t) ->
                fun (x6240 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6239) "resolveAttempt"
                    (Ojs.float_to_js x6240)
          end
        module ResolvedAuthority =
          struct
            type t = vscode_ResolvedAuthority
            let rec t_of_js : Ojs.t -> t =
              fun (x6242 : Ojs.t) -> vscode_ResolvedAuthority_of_js x6242
            and t_to_js : t -> Ojs.t =
              fun (x6241 : vscode_ResolvedAuthority) ->
                vscode_ResolvedAuthority_to_js x6241
            let (get_host : t -> string) =
              fun (x6243 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6243) "host")
            let (get_port : t -> float) =
              fun (x6244 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6244) "port")
            let (get_connectionToken : t -> string or_undefined) =
              fun (x6245 : t) ->
                or_undefined_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6245) "connectionToken")
            let (create :
              host:string ->
                port:float -> ?connectionToken:string -> unit -> t)
              =
              fun ~host:(x6247 : string) ->
                fun ~port:(x6248 : float) ->
                  fun ?connectionToken:(x6249 : string option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "ResolvedAuthority")
                           (let x6250 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x6250 "push"
                                 [|(Ojs.string_to_js x6247)|]);
                            ignore
                              (Ojs.call x6250 "push"
                                 [|(Ojs.float_to_js x6248)|]);
                            (match x6249 with
                             | Some x6251 ->
                                 ignore
                                   (Ojs.call x6250 "push"
                                      [|(Ojs.string_to_js x6251)|])
                             | None -> ());
                            x6250))
          end
        module ResolvedOptions =
          struct
            type t = vscode_ResolvedOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6253 : Ojs.t) -> vscode_ResolvedOptions_of_js x6253
            and t_to_js : t -> Ojs.t =
              fun (x6252 : vscode_ResolvedOptions) ->
                vscode_ResolvedOptions_to_js x6252
            let (get_extensionHostEnv : t -> anonymous_interface_17) =
              fun (x6254 : t) ->
                anonymous_interface_17_of_js
                  (Ojs.get_prop_ascii (t_to_js x6254) "extensionHostEnv")
            let (set_extensionHostEnv : t -> anonymous_interface_17 -> unit)
              =
              fun (x6255 : t) ->
                fun (x6256 : anonymous_interface_17) ->
                  Ojs.set_prop_ascii (t_to_js x6255) "extensionHostEnv"
                    (anonymous_interface_17_to_js x6256)
          end
        module TunnelOptions =
          struct
            type t = vscode_TunnelOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6258 : Ojs.t) -> vscode_TunnelOptions_of_js x6258
            and t_to_js : t -> Ojs.t =
              fun (x6257 : vscode_TunnelOptions) ->
                vscode_TunnelOptions_to_js x6257
            let (get_remoteAddress : t -> anonymous_interface_11) =
              fun (x6259 : t) ->
                anonymous_interface_11_of_js
                  (Ojs.get_prop_ascii (t_to_js x6259) "remoteAddress")
            let (set_remoteAddress : t -> anonymous_interface_11 -> unit) =
              fun (x6260 : t) ->
                fun (x6261 : anonymous_interface_11) ->
                  Ojs.set_prop_ascii (t_to_js x6260) "remoteAddress"
                    (anonymous_interface_11_to_js x6261)
            let (get_localAddressPort : t -> float) =
              fun (x6262 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6262) "localAddressPort")
            let (set_localAddressPort : t -> float -> unit) =
              fun (x6263 : t) ->
                fun (x6264 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6263) "localAddressPort"
                    (Ojs.float_to_js x6264)
            let (get_label : t -> string) =
              fun (x6265 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6265) "label")
            let (set_label : t -> string -> unit) =
              fun (x6266 : t) ->
                fun (x6267 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6266) "label"
                    (Ojs.string_to_js x6267)
            let (get_public : t -> bool) =
              fun (x6268 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6268) "public")
            let (set_public : t -> bool -> unit) =
              fun (x6269 : t) ->
                fun (x6270 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6269) "public"
                    (Ojs.bool_to_js x6270)
          end
        module TunnelDescription =
          struct
            type t = vscode_TunnelDescription
            let rec t_of_js : Ojs.t -> t =
              fun (x6272 : Ojs.t) -> vscode_TunnelDescription_of_js x6272
            and t_to_js : t -> Ojs.t =
              fun (x6271 : vscode_TunnelDescription) ->
                vscode_TunnelDescription_to_js x6271
            let (get_remoteAddress : t -> anonymous_interface_11) =
              fun (x6273 : t) ->
                anonymous_interface_11_of_js
                  (Ojs.get_prop_ascii (t_to_js x6273) "remoteAddress")
            let (set_remoteAddress : t -> anonymous_interface_11 -> unit) =
              fun (x6274 : t) ->
                fun (x6275 : anonymous_interface_11) ->
                  Ojs.set_prop_ascii (t_to_js x6274) "remoteAddress"
                    (anonymous_interface_11_to_js x6275)
            let (get_localAddress : t -> anonymous_interface_11 or_string) =
              fun (x6276 : t) ->
                or_string_of_js anonymous_interface_11_of_js
                  (Ojs.get_prop_ascii (t_to_js x6276) "localAddress")
            let (set_localAddress :
              t -> anonymous_interface_11 or_string -> unit) =
              fun (x6278 : t) ->
                fun (x6279 : anonymous_interface_11 or_string) ->
                  Ojs.set_prop_ascii (t_to_js x6278) "localAddress"
                    (or_string_to_js anonymous_interface_11_to_js x6279)
            let (get_public : t -> bool) =
              fun (x6281 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6281) "public")
            let (set_public : t -> bool -> unit) =
              fun (x6282 : t) ->
                fun (x6283 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6282) "public"
                    (Ojs.bool_to_js x6283)
          end
        module Tunnel =
          struct
            type t = vscode_Tunnel
            let rec t_of_js : Ojs.t -> t =
              fun (x6285 : Ojs.t) -> vscode_Tunnel_of_js x6285
            and t_to_js : t -> Ojs.t =
              fun (x6284 : vscode_Tunnel) -> vscode_Tunnel_to_js x6284
            let (get_onDidDispose : t -> unit Event.t) =
              fun (x6286 : t) ->
                Event.t_of_js Ojs.unit_of_js
                  (Ojs.get_prop_ascii (t_to_js x6286) "onDidDispose")
            let (set_onDidDispose : t -> unit Event.t -> unit) =
              fun (x6288 : t) ->
                fun (x6289 : unit Event.t) ->
                  Ojs.set_prop_ascii (t_to_js x6288) "onDidDispose"
                    (Event.t_to_js Ojs.unit_to_js x6289)
            let (dispose : t -> (unit, unit Promise.t) union2) =
              fun (x6291 : t) ->
                union2_of_js Ojs.unit_of_js
                  (fun (x6293 : Ojs.t) ->
                     Promise.t_of_js Ojs.unit_of_js x6293)
                  (Ojs.call (t_to_js x6291) "dispose" [||])
            let (cast : t -> vscode_TunnelDescription) =
              fun (x6295 : t) ->
                vscode_TunnelDescription_of_js (t_to_js x6295)
          end
        module TunnelInformation =
          struct
            type t = vscode_TunnelInformation
            let rec t_of_js : Ojs.t -> t =
              fun (x6297 : Ojs.t) -> vscode_TunnelInformation_of_js x6297
            and t_to_js : t -> Ojs.t =
              fun (x6296 : vscode_TunnelInformation) ->
                vscode_TunnelInformation_to_js x6296
            let (get_environmentTunnels : t -> vscode_TunnelDescription list)
              =
              fun (x6298 : t) ->
                Ojs.list_of_js vscode_TunnelDescription_of_js
                  (Ojs.get_prop_ascii (t_to_js x6298) "environmentTunnels")
            let (set_environmentTunnels :
              t -> vscode_TunnelDescription list -> unit) =
              fun (x6300 : t) ->
                fun (x6301 : vscode_TunnelDescription list) ->
                  Ojs.set_prop_ascii (t_to_js x6300) "environmentTunnels"
                    (Ojs.list_to_js vscode_TunnelDescription_to_js x6301)
          end
        module TunnelCreationOptions =
          struct
            type t = vscode_TunnelCreationOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6304 : Ojs.t) -> vscode_TunnelCreationOptions_of_js x6304
            and t_to_js : t -> Ojs.t =
              fun (x6303 : vscode_TunnelCreationOptions) ->
                vscode_TunnelCreationOptions_to_js x6303
            let (get_elevationRequired : t -> bool) =
              fun (x6305 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6305) "elevationRequired")
            let (set_elevationRequired : t -> bool -> unit) =
              fun (x6306 : t) ->
                fun (x6307 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6306) "elevationRequired"
                    (Ojs.bool_to_js x6307)
          end
        module CandidatePortSource =
          struct
            type t = vscode_CandidatePortSource
            let rec t_of_js : Ojs.t -> t =
              fun (x6309 : Ojs.t) -> vscode_CandidatePortSource_of_js x6309
            and t_to_js : t -> Ojs.t =
              fun (x6308 : vscode_CandidatePortSource) ->
                vscode_CandidatePortSource_to_js x6308
          end
        module ResolverResult =
          struct
            type t = vscode_ResolverResult
            let rec t_of_js : Ojs.t -> t =
              fun (x6311 : Ojs.t) -> vscode_ResolverResult_of_js x6311
            and t_to_js : t -> Ojs.t =
              fun (x6310 : vscode_ResolverResult) ->
                vscode_ResolverResult_to_js x6310
          end
        module RemoteAuthorityResolverError =
          struct
            type t = vscode_RemoteAuthorityResolverError
            let rec t_of_js : Ojs.t -> t =
              fun (x6313 : Ojs.t) ->
                vscode_RemoteAuthorityResolverError_of_js x6313
            and t_to_js : t -> Ojs.t =
              fun (x6312 : vscode_RemoteAuthorityResolverError) ->
                vscode_RemoteAuthorityResolverError_to_js x6312
            let (notAvailable :
              ?message:string -> ?handled:bool -> unit -> t) =
              fun ?message:(x6314 : string option) ->
                fun ?handled:(x6315 : bool option) ->
                  fun () ->
                    t_of_js
                      (let x6319 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "RemoteAuthorityResolverError" in
                       Ojs.call (Ojs.get_prop_ascii x6319 "NotAvailable")
                         "apply"
                         [|x6319;((let x6316 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   (match x6314 with
                                    | Some x6318 ->
                                        ignore
                                          (Ojs.call x6316 "push"
                                             [|(Ojs.string_to_js x6318)|])
                                    | None -> ());
                                   (match x6315 with
                                    | Some x6317 ->
                                        ignore
                                          (Ojs.call x6316 "push"
                                             [|(Ojs.bool_to_js x6317)|])
                                    | None -> ());
                                   x6316))|])
            let (temporarilyNotAvailable : ?message:string -> unit -> t) =
              fun ?message:(x6320 : string option) ->
                fun () ->
                  t_of_js
                    (let x6323 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode")
                         "RemoteAuthorityResolverError" in
                     Ojs.call
                       (Ojs.get_prop_ascii x6323 "TemporarilyNotAvailable")
                       "apply"
                       [|x6323;((let x6321 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x6320 with
                                  | Some x6322 ->
                                      ignore
                                        (Ojs.call x6321 "push"
                                           [|(Ojs.string_to_js x6322)|])
                                  | None -> ());
                                 x6321))|])
            let (create : ?message:string -> unit -> t) =
              fun ?message:(x6324 : string option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "RemoteAuthorityResolverError")
                       (let x6325 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x6324 with
                         | Some x6326 ->
                             ignore
                               (Ojs.call x6325 "push"
                                  [|(Ojs.string_to_js x6326)|])
                         | None -> ());
                        x6325))
            let (cast : t -> Error.t) =
              fun (x6327 : t) -> Error.t_of_js (t_to_js x6327)
          end
        module RemoteAuthorityResolver =
          struct
            type t = vscode_RemoteAuthorityResolver
            let rec t_of_js : Ojs.t -> t =
              fun (x6329 : Ojs.t) ->
                vscode_RemoteAuthorityResolver_of_js x6329
            and t_to_js : t -> Ojs.t =
              fun (x6328 : vscode_RemoteAuthorityResolver) ->
                vscode_RemoteAuthorityResolver_to_js x6328
            let (resolve :
              t ->
                authority:string ->
                  context:vscode_RemoteAuthorityResolverContext ->
                    (vscode_ResolverResult, vscode_ResolverResult Promise.t)
                      union2)
              =
              fun (x6332 : t) ->
                fun ~authority:(x6330 : string) ->
                  fun
                    ~context:(x6331 : vscode_RemoteAuthorityResolverContext)
                    ->
                    union2_of_js vscode_ResolverResult_of_js
                      (fun (x6334 : Ojs.t) ->
                         Promise.t_of_js vscode_ResolverResult_of_js x6334)
                      (Ojs.call (t_to_js x6332) "resolve"
                         [|(Ojs.string_to_js x6330);(vscode_RemoteAuthorityResolverContext_to_js
                                                       x6331)|])
            let (tunnelFactory :
              t ->
                tunnelOptions:vscode_TunnelOptions ->
                  tunnelCreationOptions:vscode_TunnelCreationOptions ->
                    vscode_Tunnel Promise.t or_undefined)
              =
              fun (x6338 : t) ->
                fun ~tunnelOptions:(x6336 : vscode_TunnelOptions) ->
                  fun
                    ~tunnelCreationOptions:(x6337 :
                                             vscode_TunnelCreationOptions)
                    ->
                    or_undefined_of_js
                      (fun (x6339 : Ojs.t) ->
                         Promise.t_of_js vscode_Tunnel_of_js x6339)
                      (Ojs.call (t_to_js x6338) "tunnelFactory"
                         [|(vscode_TunnelOptions_to_js x6336);(vscode_TunnelCreationOptions_to_js
                                                                 x6337)|])
            let (showCandidatePort :
              t ->
                host:string -> port:float -> detail:string -> bool Promise.t)
              =
              fun (x6344 : t) ->
                fun ~host:(x6341 : string) ->
                  fun ~port:(x6342 : float) ->
                    fun ~detail:(x6343 : string) ->
                      Promise.t_of_js Ojs.bool_of_js
                        (Ojs.call (t_to_js x6344) "showCandidatePort"
                           [|(Ojs.string_to_js x6341);(Ojs.float_to_js x6342);(
                             Ojs.string_to_js x6343)|])
            let (get_tunnelFeatures : t -> anonymous_interface_7) =
              fun (x6346 : t) ->
                anonymous_interface_7_of_js
                  (Ojs.get_prop_ascii (t_to_js x6346) "tunnelFeatures")
            let (set_tunnelFeatures : t -> anonymous_interface_7 -> unit) =
              fun (x6347 : t) ->
                fun (x6348 : anonymous_interface_7) ->
                  Ojs.set_prop_ascii (t_to_js x6347) "tunnelFeatures"
                    (anonymous_interface_7_to_js x6348)
            let (get_candidatePortSource : t -> vscode_CandidatePortSource) =
              fun (x6349 : t) ->
                vscode_CandidatePortSource_of_js
                  (Ojs.get_prop_ascii (t_to_js x6349) "candidatePortSource")
            let (set_candidatePortSource :
              t -> vscode_CandidatePortSource -> unit) =
              fun (x6350 : t) ->
                fun (x6351 : vscode_CandidatePortSource) ->
                  Ojs.set_prop_ascii (t_to_js x6350) "candidatePortSource"
                    (vscode_CandidatePortSource_to_js x6351)
          end
        module Workspace =
          struct
            let (openTunnel :
              tunnelOptions:vscode_TunnelOptions -> vscode_Tunnel Promise.t)
              =
              fun ~tunnelOptions:(x6352 : vscode_TunnelOptions) ->
                Promise.t_of_js vscode_Tunnel_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                     "openTunnel" [|(vscode_TunnelOptions_to_js x6352)|])
            let (tunnels : vscode_TunnelDescription list Promise.t) =
              Promise.t_of_js
                (fun (x6354 : Ojs.t) ->
                   Ojs.list_of_js vscode_TunnelDescription_of_js x6354)
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "tunnels")
            let (onDidChangeTunnels : unit Event.t) =
              Event.t_of_js Ojs.unit_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "onDidChangeTunnels")
            let (registerRemoteAuthorityResolver :
              authorityPrefix:string ->
                resolver:vscode_RemoteAuthorityResolver -> Disposable.t)
              =
              fun ~authorityPrefix:(x6357 : string) ->
                fun ~resolver:(x6358 : vscode_RemoteAuthorityResolver) ->
                  Disposable.t_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "workspace") "registerRemoteAuthorityResolver"
                       [|(Ojs.string_to_js x6357);(vscode_RemoteAuthorityResolver_to_js
                                                     x6358)|])
            let (registerResourceLabelFormatter :
              formatter:vscode_ResourceLabelFormatter -> Disposable.t) =
              fun ~formatter:(x6359 : vscode_ResourceLabelFormatter) ->
                Disposable.t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                     "registerResourceLabelFormatter"
                     [|(vscode_ResourceLabelFormatter_to_js x6359)|])
            let (registerFileSearchProvider :
              scheme:string ->
                provider:vscode_FileSearchProvider -> Disposable.t)
              =
              fun ~scheme:(x6360 : string) ->
                fun ~provider:(x6361 : vscode_FileSearchProvider) ->
                  Disposable.t_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "workspace") "registerFileSearchProvider"
                       [|(Ojs.string_to_js x6360);(vscode_FileSearchProvider_to_js
                                                     x6361)|])
            let (registerTextSearchProvider :
              scheme:string ->
                provider:vscode_TextSearchProvider -> Disposable.t)
              =
              fun ~scheme:(x6362 : string) ->
                fun ~provider:(x6363 : vscode_TextSearchProvider) ->
                  Disposable.t_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "workspace") "registerTextSearchProvider"
                       [|(Ojs.string_to_js x6362);(vscode_TextSearchProvider_to_js
                                                     x6363)|])
            let (findTextInFiles :
              query:vscode_TextSearchQuery ->
                callback:(result:vscode_TextSearchResult -> unit) ->
                  ?token:CancellationToken.t ->
                    unit -> vscode_TextSearchComplete Promise.t)
              =
              fun ~query:(x6364 : vscode_TextSearchQuery) ->
                fun
                  ~callback:(x6365 : result:vscode_TextSearchResult -> unit)
                  ->
                  fun ?token:(x6366 : CancellationToken.t option) ->
                    fun () ->
                      Promise.t_of_js vscode_TextSearchComplete_of_js
                        (let x6370 =
                           Ojs.get_prop_ascii
                             (Ojs.get_prop_ascii Ojs.global "vscode")
                             "workspace" in
                         Ojs.call
                           (Ojs.get_prop_ascii x6370 "findTextInFiles")
                           "apply"
                           [|x6370;((let x6367 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x6367 "push"
                                          [|(vscode_TextSearchQuery_to_js
                                               x6364)|]);
                                     ignore
                                       (Ojs.call x6367 "push"
                                          [|(Ojs.fun_to_js 1
                                               (fun (x6369 : Ojs.t) ->
                                                  x6365
                                                    ~result:(vscode_TextSearchResult_of_js
                                                               x6369)))|]);
                                     (match x6366 with
                                      | Some x6368 ->
                                          ignore
                                            (Ojs.call x6367 "push"
                                               [|(CancellationToken.t_to_js
                                                    x6368)|])
                                      | None -> ());
                                     x6367))|])
            let (findTextInFiles :
              query:vscode_TextSearchQuery ->
                options:vscode_FindTextInFilesOptions ->
                  callback:(result:vscode_TextSearchResult -> unit) ->
                    ?token:CancellationToken.t ->
                      unit -> vscode_TextSearchComplete Promise.t)
              =
              fun ~query:(x6372 : vscode_TextSearchQuery) ->
                fun ~options:(x6373 : vscode_FindTextInFilesOptions) ->
                  fun
                    ~callback:(x6374 :
                                result:vscode_TextSearchResult -> unit)
                    ->
                    fun ?token:(x6375 : CancellationToken.t option) ->
                      fun () ->
                        Promise.t_of_js vscode_TextSearchComplete_of_js
                          (let x6379 =
                             Ojs.get_prop_ascii
                               (Ojs.get_prop_ascii Ojs.global "vscode")
                               "workspace" in
                           Ojs.call
                             (Ojs.get_prop_ascii x6379 "findTextInFiles")
                             "apply"
                             [|x6379;((let x6376 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x6376 "push"
                                            [|(vscode_TextSearchQuery_to_js
                                                 x6372)|]);
                                       ignore
                                         (Ojs.call x6376 "push"
                                            [|(vscode_FindTextInFilesOptions_to_js
                                                 x6373)|]);
                                       ignore
                                         (Ojs.call x6376 "push"
                                            [|(Ojs.fun_to_js 1
                                                 (fun (x6378 : Ojs.t) ->
                                                    x6374
                                                      ~result:(vscode_TextSearchResult_of_js
                                                                 x6378)))|]);
                                       (match x6375 with
                                        | Some x6377 ->
                                            ignore
                                              (Ojs.call x6376 "push"
                                                 [|(CancellationToken.t_to_js
                                                      x6377)|])
                                        | None -> ());
                                       x6376))|])
            let (registerTimelineProvider :
              scheme:string list or_string ->
                provider:vscode_TimelineProvider -> Disposable.t)
              =
              fun ~scheme:(x6381 : string list or_string) ->
                fun ~provider:(x6384 : vscode_TimelineProvider) ->
                  Disposable.t_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "workspace") "registerTimelineProvider"
                       [|(or_string_to_js
                            (fun (x6382 : string list) ->
                               Ojs.list_to_js Ojs.string_to_js x6382) x6381);(
                         vscode_TimelineProvider_to_js x6384)|])
            let (trustState : vscode_WorkspaceTrustState) =
              vscode_WorkspaceTrustState_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "trustState")
            let (requestWorkspaceTrust :
              ?options:vscode_WorkspaceTrustRequestOptions ->
                unit -> vscode_WorkspaceTrustState or_undefined Promise.t)
              =
              fun
                ?options:(x6385 : vscode_WorkspaceTrustRequestOptions option)
                ->
                fun () ->
                  Promise.t_of_js
                    (fun (x6389 : Ojs.t) ->
                       or_undefined_of_js vscode_WorkspaceTrustState_of_js
                         x6389)
                    (let x6388 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                     Ojs.call
                       (Ojs.get_prop_ascii x6388 "requestWorkspaceTrust")
                       "apply"
                       [|x6388;((let x6386 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x6385 with
                                  | Some x6387 ->
                                      ignore
                                        (Ojs.call x6386 "push"
                                           [|(vscode_WorkspaceTrustRequestOptions_to_js
                                                x6387)|])
                                  | None -> ());
                                 x6386))|])
            let (onDidChangeWorkspaceTrustState :
              vscode_WorkspaceTrustStateChangeEvent Event.t) =
              Event.t_of_js vscode_WorkspaceTrustStateChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "onDidChangeWorkspaceTrustState")
            let (registerPortAttributesProvider :
              portSelector:anonymous_interface_10 ->
                provider:vscode_PortAttributesProvider -> Disposable.t)
              =
              fun ~portSelector:(x6392 : anonymous_interface_10) ->
                fun ~provider:(x6393 : vscode_PortAttributesProvider) ->
                  Disposable.t_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "workspace") "registerPortAttributesProvider"
                       [|(anonymous_interface_10_to_js x6392);(vscode_PortAttributesProvider_to_js
                                                                 x6393)|])
          end
        module ResourceLabelFormatter =
          struct
            type t = vscode_ResourceLabelFormatter
            let rec t_of_js : Ojs.t -> t =
              fun (x6395 : Ojs.t) ->
                vscode_ResourceLabelFormatter_of_js x6395
            and t_to_js : t -> Ojs.t =
              fun (x6394 : vscode_ResourceLabelFormatter) ->
                vscode_ResourceLabelFormatter_to_js x6394
            let (get_scheme : t -> string) =
              fun (x6396 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6396) "scheme")
            let (set_scheme : t -> string -> unit) =
              fun (x6397 : t) ->
                fun (x6398 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6397) "scheme"
                    (Ojs.string_to_js x6398)
            let (get_authority : t -> string) =
              fun (x6399 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6399) "authority")
            let (set_authority : t -> string -> unit) =
              fun (x6400 : t) ->
                fun (x6401 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6400) "authority"
                    (Ojs.string_to_js x6401)
            let (get_formatting : t -> vscode_ResourceLabelFormatting) =
              fun (x6402 : t) ->
                vscode_ResourceLabelFormatting_of_js
                  (Ojs.get_prop_ascii (t_to_js x6402) "formatting")
            let (set_formatting :
              t -> vscode_ResourceLabelFormatting -> unit) =
              fun (x6403 : t) ->
                fun (x6404 : vscode_ResourceLabelFormatting) ->
                  Ojs.set_prop_ascii (t_to_js x6403) "formatting"
                    (vscode_ResourceLabelFormatting_to_js x6404)
          end
        module ResourceLabelFormatting =
          struct
            type t = vscode_ResourceLabelFormatting
            let rec t_of_js : Ojs.t -> t =
              fun (x6406 : Ojs.t) ->
                vscode_ResourceLabelFormatting_of_js x6406
            and t_to_js : t -> Ojs.t =
              fun (x6405 : vscode_ResourceLabelFormatting) ->
                vscode_ResourceLabelFormatting_to_js x6405
            let (get_label : t -> string) =
              fun (x6407 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6407) "label")
            let (set_label : t -> string -> unit) =
              fun (x6408 : t) ->
                fun (x6409 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6408) "label"
                    (Ojs.string_to_js x6409)
            let (get_separator : t -> [ `L_s0  | `L_s1  | `L_s2 ]) =
              fun (x6410 : t) ->
                let x6411 = Ojs.get_prop_ascii (t_to_js x6410) "separator" in
                match Ojs.string_of_js x6411 with
                | "" -> `L_s0
                | "/" -> `L_s1
                | "\\" -> `L_s2
                | _ -> assert false
            let (set_separator : t -> [ `L_s0  | `L_s1  | `L_s2 ] -> unit) =
              fun (x6412 : t) ->
                fun (x6413 : [ `L_s0  | `L_s1  | `L_s2 ]) ->
                  Ojs.set_prop_ascii (t_to_js x6412) "separator"
                    (match x6413 with
                     | `L_s0 -> Ojs.string_to_js "LS0"
                     | `L_s1 -> Ojs.string_to_js "LS1"
                     | `L_s2 -> Ojs.string_to_js "LS2")
            let (get_tildify : t -> bool) =
              fun (x6414 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6414) "tildify")
            let (set_tildify : t -> bool -> unit) =
              fun (x6415 : t) ->
                fun (x6416 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6415) "tildify"
                    (Ojs.bool_to_js x6416)
            let (get_normalizeDriveLetter : t -> bool) =
              fun (x6417 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6417) "normalizeDriveLetter")
            let (set_normalizeDriveLetter : t -> bool -> unit) =
              fun (x6418 : t) ->
                fun (x6419 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6418) "normalizeDriveLetter"
                    (Ojs.bool_to_js x6419)
            let (get_workspaceSuffix : t -> string) =
              fun (x6420 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6420) "workspaceSuffix")
            let (set_workspaceSuffix : t -> string -> unit) =
              fun (x6421 : t) ->
                fun (x6422 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6421) "workspaceSuffix"
                    (Ojs.string_to_js x6422)
            let (get_authorityPrefix : t -> string) =
              fun (x6423 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6423) "authorityPrefix")
            let (set_authorityPrefix : t -> string -> unit) =
              fun (x6424 : t) ->
                fun (x6425 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6424) "authorityPrefix"
                    (Ojs.string_to_js x6425)
            let (get_stripPathStartingSeparator : t -> bool) =
              fun (x6426 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6426)
                     "stripPathStartingSeparator")
            let (set_stripPathStartingSeparator : t -> bool -> unit) =
              fun (x6427 : t) ->
                fun (x6428 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6427)
                    "stripPathStartingSeparator" (Ojs.bool_to_js x6428)
          end
        module WebviewEditorInset =
          struct
            type t = vscode_WebviewEditorInset
            let rec t_of_js : Ojs.t -> t =
              fun (x6430 : Ojs.t) -> vscode_WebviewEditorInset_of_js x6430
            and t_to_js : t -> Ojs.t =
              fun (x6429 : vscode_WebviewEditorInset) ->
                vscode_WebviewEditorInset_to_js x6429
            let (get_editor : t -> TextEditor.t) =
              fun (x6431 : t) ->
                TextEditor.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6431) "editor")
            let (get_line : t -> float) =
              fun (x6432 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6432) "line")
            let (get_height : t -> float) =
              fun (x6433 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6433) "height")
            let (get_webview : t -> vscode_Webview) =
              fun (x6434 : t) ->
                vscode_Webview_of_js
                  (Ojs.get_prop_ascii (t_to_js x6434) "webview")
            let (get_onDidDispose : t -> unit Event.t) =
              fun (x6435 : t) ->
                Event.t_of_js Ojs.unit_of_js
                  (Ojs.get_prop_ascii (t_to_js x6435) "onDidDispose")
            let (dispose : t -> unit) =
              fun (x6437 : t) ->
                ignore (Ojs.call (t_to_js x6437) "dispose" [||])
          end
        module Window =
          struct
            let (createWebviewTextEditorInset :
              editor:TextEditor.t ->
                line:float ->
                  height:float ->
                    ?options:WebviewOptions.t ->
                      unit -> vscode_WebviewEditorInset)
              =
              fun ~editor:(x6438 : TextEditor.t) ->
                fun ~line:(x6439 : float) ->
                  fun ~height:(x6440 : float) ->
                    fun ?options:(x6441 : WebviewOptions.t option) ->
                      fun () ->
                        vscode_WebviewEditorInset_of_js
                          (let x6444 =
                             Ojs.get_prop_ascii
                               (Ojs.get_prop_ascii Ojs.global "vscode")
                               "window" in
                           Ojs.call
                             (Ojs.get_prop_ascii x6444
                                "createWebviewTextEditorInset") "apply"
                             [|x6444;((let x6442 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x6442 "push"
                                            [|(TextEditor.t_to_js x6438)|]);
                                       ignore
                                         (Ojs.call x6442 "push"
                                            [|(Ojs.float_to_js x6439)|]);
                                       ignore
                                         (Ojs.call x6442 "push"
                                            [|(Ojs.float_to_js x6440)|]);
                                       (match x6441 with
                                        | Some x6443 ->
                                            ignore
                                              (Ojs.call x6442 "push"
                                                 [|(WebviewOptions.t_to_js
                                                      x6443)|])
                                        | None -> ());
                                       x6442))|])
            let (onDidWriteTerminalData :
              vscode_TerminalDataWriteEvent Event.t) =
              Event.t_of_js vscode_TerminalDataWriteEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "onDidWriteTerminalData")
            let (onDidChangeTerminalDimensions :
              vscode_TerminalDimensionsChangeEvent Event.t) =
              Event.t_of_js vscode_TerminalDimensionsChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "onDidChangeTerminalDimensions")
            let (createStatusBarItem :
              ?options:vscode_StatusBarItemOptions -> unit -> StatusBarItem.t)
              =
              fun ?options:(x6447 : vscode_StatusBarItemOptions option) ->
                fun () ->
                  StatusBarItem.t_of_js
                    (let x6450 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call
                       (Ojs.get_prop_ascii x6450 "createStatusBarItem")
                       "apply"
                       [|x6450;((let x6448 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x6447 with
                                  | Some x6449 ->
                                      ignore
                                        (Ojs.call x6448 "push"
                                           [|(vscode_StatusBarItemOptions_to_js
                                                x6449)|])
                                  | None -> ());
                                 x6448))|])
            let (visibleNotebookEditors : vscode_NotebookEditor list) =
              Ojs.list_of_js vscode_NotebookEditor_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "visibleNotebookEditors")
            let (onDidChangeVisibleNotebookEditors :
              vscode_NotebookEditor list Event.t) =
              Event.t_of_js
                (fun (x6452 : Ojs.t) ->
                   Ojs.list_of_js vscode_NotebookEditor_of_js x6452)
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "onDidChangeVisibleNotebookEditors")
            let (activeNotebookEditor : vscode_NotebookEditor or_undefined) =
              or_undefined_of_js vscode_NotebookEditor_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "activeNotebookEditor")
            let (onDidChangeActiveNotebookEditor :
              vscode_NotebookEditor or_undefined Event.t) =
              Event.t_of_js
                (fun (x6455 : Ojs.t) ->
                   or_undefined_of_js vscode_NotebookEditor_of_js x6455)
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "onDidChangeActiveNotebookEditor")
            let (onDidChangeNotebookEditorSelection :
              vscode_NotebookEditorSelectionChangeEvent Event.t) =
              Event.t_of_js vscode_NotebookEditorSelectionChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "onDidChangeNotebookEditorSelection")
            let (onDidChangeNotebookEditorVisibleRanges :
              vscode_NotebookEditorVisibleRangesChangeEvent Event.t) =
              Event.t_of_js
                vscode_NotebookEditorVisibleRangesChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "onDidChangeNotebookEditorVisibleRanges")
            let (showNotebookDocument :
              uri:Uri.t ->
                ?options:vscode_NotebookDocumentShowOptions ->
                  unit -> vscode_NotebookEditor Promise.t)
              =
              fun ~uri:(x6459 : Uri.t) ->
                fun
                  ?options:(x6460 :
                             vscode_NotebookDocumentShowOptions option)
                  ->
                  fun () ->
                    Promise.t_of_js vscode_NotebookEditor_of_js
                      (let x6463 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                       Ojs.call
                         (Ojs.get_prop_ascii x6463 "showNotebookDocument")
                         "apply"
                         [|x6463;((let x6461 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x6461 "push"
                                        [|(Uri.t_to_js x6459)|]);
                                   (match x6460 with
                                    | Some x6462 ->
                                        ignore
                                          (Ojs.call x6461 "push"
                                             [|(vscode_NotebookDocumentShowOptions_to_js
                                                  x6462)|])
                                    | None -> ());
                                   x6461))|])
            let (showNotebookDocument :
              document:vscode_NotebookDocument ->
                ?options:vscode_NotebookDocumentShowOptions ->
                  unit -> vscode_NotebookEditor Promise.t)
              =
              fun ~document:(x6465 : vscode_NotebookDocument) ->
                fun
                  ?options:(x6466 :
                             vscode_NotebookDocumentShowOptions option)
                  ->
                  fun () ->
                    Promise.t_of_js vscode_NotebookEditor_of_js
                      (let x6469 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                       Ojs.call
                         (Ojs.get_prop_ascii x6469 "showNotebookDocument")
                         "apply"
                         [|x6469;((let x6467 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x6467 "push"
                                        [|(vscode_NotebookDocument_to_js
                                             x6465)|]);
                                   (match x6466 with
                                    | Some x6468 ->
                                        ignore
                                          (Ojs.call x6467 "push"
                                             [|(vscode_NotebookDocumentShowOptions_to_js
                                                  x6468)|])
                                    | None -> ());
                                   x6467))|])
            let (registerExternalUriOpener :
              id:string ->
                opener:vscode_ExternalUriOpener ->
                  metadata:vscode_ExternalUriOpenerMetadata -> Disposable.t)
              =
              fun ~id:(x6471 : string) ->
                fun ~opener:(x6472 : vscode_ExternalUriOpener) ->
                  fun ~metadata:(x6473 : vscode_ExternalUriOpenerMetadata) ->
                    Disposable.t_of_js
                      (Ojs.call
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                         "registerExternalUriOpener"
                         [|(Ojs.string_to_js x6471);(vscode_ExternalUriOpener_to_js
                                                       x6472);(vscode_ExternalUriOpenerMetadata_to_js
                                                                 x6473)|])
            let (openEditors : vscode_OpenEditorInfo list) =
              Ojs.list_of_js vscode_OpenEditorInfo_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "openEditors")
            let (onDidChangeOpenEditors : unit Event.t) =
              Event.t_of_js Ojs.unit_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "onDidChangeOpenEditors")
          end
        module FileSystemProvider =
          struct
            type t = vscode_FileSystemProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x6477 : Ojs.t) -> vscode_FileSystemProvider_of_js x6477
            and t_to_js : t -> Ojs.t =
              fun (x6476 : vscode_FileSystemProvider) ->
                vscode_FileSystemProvider_to_js x6476
            let (open_ :
              t ->
                resource:Uri.t ->
                  options:anonymous_interface_1 -> float Promise.t or_number)
              =
              fun (x6480 : t) ->
                fun ~resource:(x6478 : Uri.t) ->
                  fun ~options:(x6479 : anonymous_interface_1) ->
                    or_number_of_js
                      (fun (x6481 : Ojs.t) ->
                         Promise.t_of_js Ojs.float_of_js x6481)
                      (Ojs.call (t_to_js x6480) "open"
                         [|(Uri.t_to_js x6478);(anonymous_interface_1_to_js
                                                  x6479)|])
            let (close : t -> fd:float -> (unit, unit Promise.t) union2) =
              fun (x6484 : t) ->
                fun ~fd:(x6483 : float) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x6486 : Ojs.t) ->
                       Promise.t_of_js Ojs.unit_of_js x6486)
                    (Ojs.call (t_to_js x6484) "close"
                       [|(Ojs.float_to_js x6483)|])
            let (read :
              t ->
                fd:float ->
                  pos:float ->
                    data:Uint8Array.t ->
                      offset:float ->
                        length:float -> float Promise.t or_number)
              =
              fun (x6493 : t) ->
                fun ~fd:(x6488 : float) ->
                  fun ~pos:(x6489 : float) ->
                    fun ~data:(x6490 : Uint8Array.t) ->
                      fun ~offset:(x6491 : float) ->
                        fun ~length:(x6492 : float) ->
                          or_number_of_js
                            (fun (x6494 : Ojs.t) ->
                               Promise.t_of_js Ojs.float_of_js x6494)
                            (Ojs.call (t_to_js x6493) "read"
                               [|(Ojs.float_to_js x6488);(Ojs.float_to_js
                                                            x6489);(Uint8Array.t_to_js
                                                                    x6490);(
                                 Ojs.float_to_js x6491);(Ojs.float_to_js
                                                           x6492)|])
            let (write :
              t ->
                fd:float ->
                  pos:float ->
                    data:Uint8Array.t ->
                      offset:float ->
                        length:float -> float Promise.t or_number)
              =
              fun (x6501 : t) ->
                fun ~fd:(x6496 : float) ->
                  fun ~pos:(x6497 : float) ->
                    fun ~data:(x6498 : Uint8Array.t) ->
                      fun ~offset:(x6499 : float) ->
                        fun ~length:(x6500 : float) ->
                          or_number_of_js
                            (fun (x6502 : Ojs.t) ->
                               Promise.t_of_js Ojs.float_of_js x6502)
                            (Ojs.call (t_to_js x6501) "write"
                               [|(Ojs.float_to_js x6496);(Ojs.float_to_js
                                                            x6497);(Uint8Array.t_to_js
                                                                    x6498);(
                                 Ojs.float_to_js x6499);(Ojs.float_to_js
                                                           x6500)|])
          end
        module TextSearchQuery =
          struct
            type t = vscode_TextSearchQuery
            let rec t_of_js : Ojs.t -> t =
              fun (x6505 : Ojs.t) -> vscode_TextSearchQuery_of_js x6505
            and t_to_js : t -> Ojs.t =
              fun (x6504 : vscode_TextSearchQuery) ->
                vscode_TextSearchQuery_to_js x6504
            let (get_pattern : t -> string) =
              fun (x6506 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6506) "pattern")
            let (set_pattern : t -> string -> unit) =
              fun (x6507 : t) ->
                fun (x6508 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6507) "pattern"
                    (Ojs.string_to_js x6508)
            let (get_isMultiline : t -> bool) =
              fun (x6509 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6509) "isMultiline")
            let (set_isMultiline : t -> bool -> unit) =
              fun (x6510 : t) ->
                fun (x6511 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6510) "isMultiline"
                    (Ojs.bool_to_js x6511)
            let (get_isRegExp : t -> bool) =
              fun (x6512 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6512) "isRegExp")
            let (set_isRegExp : t -> bool -> unit) =
              fun (x6513 : t) ->
                fun (x6514 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6513) "isRegExp"
                    (Ojs.bool_to_js x6514)
            let (get_isCaseSensitive : t -> bool) =
              fun (x6515 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6515) "isCaseSensitive")
            let (set_isCaseSensitive : t -> bool -> unit) =
              fun (x6516 : t) ->
                fun (x6517 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6516) "isCaseSensitive"
                    (Ojs.bool_to_js x6517)
            let (get_isWordMatch : t -> bool) =
              fun (x6518 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6518) "isWordMatch")
            let (set_isWordMatch : t -> bool -> unit) =
              fun (x6519 : t) ->
                fun (x6520 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6519) "isWordMatch"
                    (Ojs.bool_to_js x6520)
          end
        module GlobString =
          struct
            type t = vscode_GlobString
            let rec t_of_js : Ojs.t -> t =
              fun (x6522 : Ojs.t) -> vscode_GlobString_of_js x6522
            and t_to_js : t -> Ojs.t =
              fun (x6521 : vscode_GlobString) ->
                vscode_GlobString_to_js x6521
          end
        module SearchOptions =
          struct
            type t = vscode_SearchOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6524 : Ojs.t) -> vscode_SearchOptions_of_js x6524
            and t_to_js : t -> Ojs.t =
              fun (x6523 : vscode_SearchOptions) ->
                vscode_SearchOptions_to_js x6523
            let (get_folder : t -> Uri.t) =
              fun (x6525 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x6525) "folder")
            let (set_folder : t -> Uri.t -> unit) =
              fun (x6526 : t) ->
                fun (x6527 : Uri.t) ->
                  Ojs.set_prop_ascii (t_to_js x6526) "folder"
                    (Uri.t_to_js x6527)
            let (get_includes : t -> vscode_GlobString list) =
              fun (x6528 : t) ->
                Ojs.list_of_js vscode_GlobString_of_js
                  (Ojs.get_prop_ascii (t_to_js x6528) "includes")
            let (set_includes : t -> vscode_GlobString list -> unit) =
              fun (x6530 : t) ->
                fun (x6531 : vscode_GlobString list) ->
                  Ojs.set_prop_ascii (t_to_js x6530) "includes"
                    (Ojs.list_to_js vscode_GlobString_to_js x6531)
            let (get_excludes : t -> vscode_GlobString list) =
              fun (x6533 : t) ->
                Ojs.list_of_js vscode_GlobString_of_js
                  (Ojs.get_prop_ascii (t_to_js x6533) "excludes")
            let (set_excludes : t -> vscode_GlobString list -> unit) =
              fun (x6535 : t) ->
                fun (x6536 : vscode_GlobString list) ->
                  Ojs.set_prop_ascii (t_to_js x6535) "excludes"
                    (Ojs.list_to_js vscode_GlobString_to_js x6536)
            let (get_useIgnoreFiles : t -> bool) =
              fun (x6538 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6538) "useIgnoreFiles")
            let (set_useIgnoreFiles : t -> bool -> unit) =
              fun (x6539 : t) ->
                fun (x6540 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6539) "useIgnoreFiles"
                    (Ojs.bool_to_js x6540)
            let (get_followSymlinks : t -> bool) =
              fun (x6541 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6541) "followSymlinks")
            let (set_followSymlinks : t -> bool -> unit) =
              fun (x6542 : t) ->
                fun (x6543 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6542) "followSymlinks"
                    (Ojs.bool_to_js x6543)
            let (get_useGlobalIgnoreFiles : t -> bool) =
              fun (x6544 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6544) "useGlobalIgnoreFiles")
            let (set_useGlobalIgnoreFiles : t -> bool -> unit) =
              fun (x6545 : t) ->
                fun (x6546 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6545) "useGlobalIgnoreFiles"
                    (Ojs.bool_to_js x6546)
          end
        module TextSearchPreviewOptions =
          struct
            type t = vscode_TextSearchPreviewOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6548 : Ojs.t) ->
                vscode_TextSearchPreviewOptions_of_js x6548
            and t_to_js : t -> Ojs.t =
              fun (x6547 : vscode_TextSearchPreviewOptions) ->
                vscode_TextSearchPreviewOptions_to_js x6547
            let (get_matchLines : t -> float) =
              fun (x6549 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6549) "matchLines")
            let (set_matchLines : t -> float -> unit) =
              fun (x6550 : t) ->
                fun (x6551 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6550) "matchLines"
                    (Ojs.float_to_js x6551)
            let (get_charsPerLine : t -> float) =
              fun (x6552 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6552) "charsPerLine")
            let (set_charsPerLine : t -> float -> unit) =
              fun (x6553 : t) ->
                fun (x6554 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6553) "charsPerLine"
                    (Ojs.float_to_js x6554)
          end
        module TextSearchOptions =
          struct
            type t = vscode_TextSearchOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6556 : Ojs.t) -> vscode_TextSearchOptions_of_js x6556
            and t_to_js : t -> Ojs.t =
              fun (x6555 : vscode_TextSearchOptions) ->
                vscode_TextSearchOptions_to_js x6555
            let (get_maxResults : t -> float) =
              fun (x6557 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6557) "maxResults")
            let (set_maxResults : t -> float -> unit) =
              fun (x6558 : t) ->
                fun (x6559 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6558) "maxResults"
                    (Ojs.float_to_js x6559)
            let (get_previewOptions : t -> vscode_TextSearchPreviewOptions) =
              fun (x6560 : t) ->
                vscode_TextSearchPreviewOptions_of_js
                  (Ojs.get_prop_ascii (t_to_js x6560) "previewOptions")
            let (set_previewOptions :
              t -> vscode_TextSearchPreviewOptions -> unit) =
              fun (x6561 : t) ->
                fun (x6562 : vscode_TextSearchPreviewOptions) ->
                  Ojs.set_prop_ascii (t_to_js x6561) "previewOptions"
                    (vscode_TextSearchPreviewOptions_to_js x6562)
            let (get_maxFileSize : t -> float) =
              fun (x6563 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6563) "maxFileSize")
            let (set_maxFileSize : t -> float -> unit) =
              fun (x6564 : t) ->
                fun (x6565 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6564) "maxFileSize"
                    (Ojs.float_to_js x6565)
            let (get_encoding : t -> string) =
              fun (x6566 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6566) "encoding")
            let (set_encoding : t -> string -> unit) =
              fun (x6567 : t) ->
                fun (x6568 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6567) "encoding"
                    (Ojs.string_to_js x6568)
            let (get_beforeContext : t -> float) =
              fun (x6569 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6569) "beforeContext")
            let (set_beforeContext : t -> float -> unit) =
              fun (x6570 : t) ->
                fun (x6571 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6570) "beforeContext"
                    (Ojs.float_to_js x6571)
            let (get_afterContext : t -> float) =
              fun (x6572 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6572) "afterContext")
            let (set_afterContext : t -> float -> unit) =
              fun (x6573 : t) ->
                fun (x6574 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6573) "afterContext"
                    (Ojs.float_to_js x6574)
            let (cast : t -> vscode_SearchOptions) =
              fun (x6575 : t) -> vscode_SearchOptions_of_js (t_to_js x6575)
          end
        module TextSearchComplete =
          struct
            type t = vscode_TextSearchComplete
            let rec t_of_js : Ojs.t -> t =
              fun (x6577 : Ojs.t) -> vscode_TextSearchComplete_of_js x6577
            and t_to_js : t -> Ojs.t =
              fun (x6576 : vscode_TextSearchComplete) ->
                vscode_TextSearchComplete_to_js x6576
            let (get_limitHit : t -> bool) =
              fun (x6578 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6578) "limitHit")
            let (set_limitHit : t -> bool -> unit) =
              fun (x6579 : t) ->
                fun (x6580 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6579) "limitHit"
                    (Ojs.bool_to_js x6580)
          end
        module TextSearchMatchPreview =
          struct
            type t = vscode_TextSearchMatchPreview
            let rec t_of_js : Ojs.t -> t =
              fun (x6582 : Ojs.t) ->
                vscode_TextSearchMatchPreview_of_js x6582
            and t_to_js : t -> Ojs.t =
              fun (x6581 : vscode_TextSearchMatchPreview) ->
                vscode_TextSearchMatchPreview_to_js x6581
            let (get_text : t -> string) =
              fun (x6583 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6583) "text")
            let (set_text : t -> string -> unit) =
              fun (x6584 : t) ->
                fun (x6585 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6584) "text"
                    (Ojs.string_to_js x6585)
            let (get_matches : t -> (Range.t, Range.t) or_array) =
              fun (x6586 : t) ->
                or_array_of_js Range.t_of_js Range.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6586) "matches")
            let (set_matches : t -> (Range.t, Range.t) or_array -> unit) =
              fun (x6589 : t) ->
                fun (x6590 : (Range.t, Range.t) or_array) ->
                  Ojs.set_prop_ascii (t_to_js x6589) "matches"
                    (or_array_to_js Range.t_to_js Range.t_to_js x6590)
          end
        module TextSearchMatch =
          struct
            type t = vscode_TextSearchMatch
            let rec t_of_js : Ojs.t -> t =
              fun (x6594 : Ojs.t) -> vscode_TextSearchMatch_of_js x6594
            and t_to_js : t -> Ojs.t =
              fun (x6593 : vscode_TextSearchMatch) ->
                vscode_TextSearchMatch_to_js x6593
            let (get_uri : t -> Uri.t) =
              fun (x6595 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x6595) "uri")
            let (set_uri : t -> Uri.t -> unit) =
              fun (x6596 : t) ->
                fun (x6597 : Uri.t) ->
                  Ojs.set_prop_ascii (t_to_js x6596) "uri"
                    (Uri.t_to_js x6597)
            let (get_ranges : t -> (Range.t, Range.t) or_array) =
              fun (x6598 : t) ->
                or_array_of_js Range.t_of_js Range.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6598) "ranges")
            let (set_ranges : t -> (Range.t, Range.t) or_array -> unit) =
              fun (x6601 : t) ->
                fun (x6602 : (Range.t, Range.t) or_array) ->
                  Ojs.set_prop_ascii (t_to_js x6601) "ranges"
                    (or_array_to_js Range.t_to_js Range.t_to_js x6602)
            let (get_preview : t -> vscode_TextSearchMatchPreview) =
              fun (x6605 : t) ->
                vscode_TextSearchMatchPreview_of_js
                  (Ojs.get_prop_ascii (t_to_js x6605) "preview")
            let (set_preview : t -> vscode_TextSearchMatchPreview -> unit) =
              fun (x6606 : t) ->
                fun (x6607 : vscode_TextSearchMatchPreview) ->
                  Ojs.set_prop_ascii (t_to_js x6606) "preview"
                    (vscode_TextSearchMatchPreview_to_js x6607)
          end
        module TextSearchContext =
          struct
            type t = vscode_TextSearchContext
            let rec t_of_js : Ojs.t -> t =
              fun (x6609 : Ojs.t) -> vscode_TextSearchContext_of_js x6609
            and t_to_js : t -> Ojs.t =
              fun (x6608 : vscode_TextSearchContext) ->
                vscode_TextSearchContext_to_js x6608
            let (get_uri : t -> Uri.t) =
              fun (x6610 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x6610) "uri")
            let (set_uri : t -> Uri.t -> unit) =
              fun (x6611 : t) ->
                fun (x6612 : Uri.t) ->
                  Ojs.set_prop_ascii (t_to_js x6611) "uri"
                    (Uri.t_to_js x6612)
            let (get_text : t -> string) =
              fun (x6613 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6613) "text")
            let (set_text : t -> string -> unit) =
              fun (x6614 : t) ->
                fun (x6615 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6614) "text"
                    (Ojs.string_to_js x6615)
            let (get_lineNumber : t -> float) =
              fun (x6616 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6616) "lineNumber")
            let (set_lineNumber : t -> float -> unit) =
              fun (x6617 : t) ->
                fun (x6618 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6617) "lineNumber"
                    (Ojs.float_to_js x6618)
          end
        module TextSearchResult =
          struct
            type t = vscode_TextSearchResult
            let rec t_of_js : Ojs.t -> t =
              fun (x6620 : Ojs.t) -> vscode_TextSearchResult_of_js x6620
            and t_to_js : t -> Ojs.t =
              fun (x6619 : vscode_TextSearchResult) ->
                vscode_TextSearchResult_to_js x6619
          end
        module TextSearchProvider =
          struct
            type t = vscode_TextSearchProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x6622 : Ojs.t) -> vscode_TextSearchProvider_of_js x6622
            and t_to_js : t -> Ojs.t =
              fun (x6621 : vscode_TextSearchProvider) ->
                vscode_TextSearchProvider_to_js x6621
            let (provideTextSearchResults :
              t ->
                query:vscode_TextSearchQuery ->
                  options:vscode_TextSearchOptions ->
                    progress:vscode_TextSearchResult Progress.t ->
                      token:CancellationToken.t ->
                        vscode_TextSearchComplete ProviderResult.t)
              =
              fun (x6628 : t) ->
                fun ~query:(x6623 : vscode_TextSearchQuery) ->
                  fun ~options:(x6624 : vscode_TextSearchOptions) ->
                    fun
                      ~progress:(x6625 : vscode_TextSearchResult Progress.t)
                      ->
                      fun ~token:(x6627 : CancellationToken.t) ->
                        ProviderResult.t_of_js
                          vscode_TextSearchComplete_of_js
                          (Ojs.call (t_to_js x6628)
                             "provideTextSearchResults"
                             [|(vscode_TextSearchQuery_to_js x6623);(
                               vscode_TextSearchOptions_to_js x6624);(
                               Progress.t_to_js vscode_TextSearchResult_to_js
                                 x6625);(CancellationToken.t_to_js x6627)|])
          end
        module FileSearchQuery =
          struct
            type t = vscode_FileSearchQuery
            let rec t_of_js : Ojs.t -> t =
              fun (x6631 : Ojs.t) -> vscode_FileSearchQuery_of_js x6631
            and t_to_js : t -> Ojs.t =
              fun (x6630 : vscode_FileSearchQuery) ->
                vscode_FileSearchQuery_to_js x6630
            let (get_pattern : t -> string) =
              fun (x6632 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6632) "pattern")
            let (set_pattern : t -> string -> unit) =
              fun (x6633 : t) ->
                fun (x6634 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6633) "pattern"
                    (Ojs.string_to_js x6634)
          end
        module FileSearchOptions =
          struct
            type t = vscode_FileSearchOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6636 : Ojs.t) -> vscode_FileSearchOptions_of_js x6636
            and t_to_js : t -> Ojs.t =
              fun (x6635 : vscode_FileSearchOptions) ->
                vscode_FileSearchOptions_to_js x6635
            let (get_maxResults : t -> float) =
              fun (x6637 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6637) "maxResults")
            let (set_maxResults : t -> float -> unit) =
              fun (x6638 : t) ->
                fun (x6639 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6638) "maxResults"
                    (Ojs.float_to_js x6639)
            let (get_session : t -> CancellationToken.t) =
              fun (x6640 : t) ->
                CancellationToken.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6640) "session")
            let (set_session : t -> CancellationToken.t -> unit) =
              fun (x6641 : t) ->
                fun (x6642 : CancellationToken.t) ->
                  Ojs.set_prop_ascii (t_to_js x6641) "session"
                    (CancellationToken.t_to_js x6642)
            let (cast : t -> vscode_SearchOptions) =
              fun (x6643 : t) -> vscode_SearchOptions_of_js (t_to_js x6643)
          end
        module FileSearchProvider =
          struct
            type t = vscode_FileSearchProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x6645 : Ojs.t) -> vscode_FileSearchProvider_of_js x6645
            and t_to_js : t -> Ojs.t =
              fun (x6644 : vscode_FileSearchProvider) ->
                vscode_FileSearchProvider_to_js x6644
            let (provideFileSearchResults :
              t ->
                query:vscode_FileSearchQuery ->
                  options:vscode_FileSearchOptions ->
                    token:CancellationToken.t -> Uri.t list ProviderResult.t)
              =
              fun (x6649 : t) ->
                fun ~query:(x6646 : vscode_FileSearchQuery) ->
                  fun ~options:(x6647 : vscode_FileSearchOptions) ->
                    fun ~token:(x6648 : CancellationToken.t) ->
                      ProviderResult.t_of_js
                        (fun (x6650 : Ojs.t) ->
                           Ojs.list_of_js Uri.t_of_js x6650)
                        (Ojs.call (t_to_js x6649) "provideFileSearchResults"
                           [|(vscode_FileSearchQuery_to_js x6646);(vscode_FileSearchOptions_to_js
                                                                    x6647);(
                             CancellationToken.t_to_js x6648)|])
          end
        module FindTextInFilesOptions =
          struct
            type t = vscode_FindTextInFilesOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6653 : Ojs.t) ->
                vscode_FindTextInFilesOptions_of_js x6653
            and t_to_js : t -> Ojs.t =
              fun (x6652 : vscode_FindTextInFilesOptions) ->
                vscode_FindTextInFilesOptions_to_js x6652
            let (get_include : t -> GlobPattern.t) =
              fun (x6654 : t) ->
                GlobPattern.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6654) "include")
            let (set_include : t -> GlobPattern.t -> unit) =
              fun (x6655 : t) ->
                fun (x6656 : GlobPattern.t) ->
                  Ojs.set_prop_ascii (t_to_js x6655) "include"
                    (GlobPattern.t_to_js x6656)
            let (get_exclude : t -> GlobPattern.t) =
              fun (x6657 : t) ->
                GlobPattern.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6657) "exclude")
            let (set_exclude : t -> GlobPattern.t -> unit) =
              fun (x6658 : t) ->
                fun (x6659 : GlobPattern.t) ->
                  Ojs.set_prop_ascii (t_to_js x6658) "exclude"
                    (GlobPattern.t_to_js x6659)
            let (get_useDefaultExcludes : t -> bool) =
              fun (x6660 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6660) "useDefaultExcludes")
            let (set_useDefaultExcludes : t -> bool -> unit) =
              fun (x6661 : t) ->
                fun (x6662 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6661) "useDefaultExcludes"
                    (Ojs.bool_to_js x6662)
            let (get_maxResults : t -> float) =
              fun (x6663 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6663) "maxResults")
            let (set_maxResults : t -> float -> unit) =
              fun (x6664 : t) ->
                fun (x6665 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6664) "maxResults"
                    (Ojs.float_to_js x6665)
            let (get_useIgnoreFiles : t -> bool) =
              fun (x6666 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6666) "useIgnoreFiles")
            let (set_useIgnoreFiles : t -> bool -> unit) =
              fun (x6667 : t) ->
                fun (x6668 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6667) "useIgnoreFiles"
                    (Ojs.bool_to_js x6668)
            let (get_useGlobalIgnoreFiles : t -> bool) =
              fun (x6669 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6669) "useGlobalIgnoreFiles")
            let (set_useGlobalIgnoreFiles : t -> bool -> unit) =
              fun (x6670 : t) ->
                fun (x6671 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6670) "useGlobalIgnoreFiles"
                    (Ojs.bool_to_js x6671)
            let (get_followSymlinks : t -> bool) =
              fun (x6672 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6672) "followSymlinks")
            let (set_followSymlinks : t -> bool -> unit) =
              fun (x6673 : t) ->
                fun (x6674 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6673) "followSymlinks"
                    (Ojs.bool_to_js x6674)
            let (get_encoding : t -> string) =
              fun (x6675 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6675) "encoding")
            let (set_encoding : t -> string -> unit) =
              fun (x6676 : t) ->
                fun (x6677 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6676) "encoding"
                    (Ojs.string_to_js x6677)
            let (get_previewOptions : t -> vscode_TextSearchPreviewOptions) =
              fun (x6678 : t) ->
                vscode_TextSearchPreviewOptions_of_js
                  (Ojs.get_prop_ascii (t_to_js x6678) "previewOptions")
            let (set_previewOptions :
              t -> vscode_TextSearchPreviewOptions -> unit) =
              fun (x6679 : t) ->
                fun (x6680 : vscode_TextSearchPreviewOptions) ->
                  Ojs.set_prop_ascii (t_to_js x6679) "previewOptions"
                    (vscode_TextSearchPreviewOptions_to_js x6680)
            let (get_beforeContext : t -> float) =
              fun (x6681 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6681) "beforeContext")
            let (set_beforeContext : t -> float -> unit) =
              fun (x6682 : t) ->
                fun (x6683 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6682) "beforeContext"
                    (Ojs.float_to_js x6683)
            let (get_afterContext : t -> float) =
              fun (x6684 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6684) "afterContext")
            let (set_afterContext : t -> float -> unit) =
              fun (x6685 : t) ->
                fun (x6686 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6685) "afterContext"
                    (Ojs.float_to_js x6686)
          end
        module LineChange =
          struct
            type t = vscode_LineChange
            let rec t_of_js : Ojs.t -> t =
              fun (x6688 : Ojs.t) -> vscode_LineChange_of_js x6688
            and t_to_js : t -> Ojs.t =
              fun (x6687 : vscode_LineChange) ->
                vscode_LineChange_to_js x6687
            let (get_originalStartLineNumber : t -> float) =
              fun (x6689 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6689)
                     "originalStartLineNumber")
            let (get_originalEndLineNumber : t -> float) =
              fun (x6690 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6690) "originalEndLineNumber")
            let (get_modifiedStartLineNumber : t -> float) =
              fun (x6691 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6691)
                     "modifiedStartLineNumber")
            let (get_modifiedEndLineNumber : t -> float) =
              fun (x6692 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6692) "modifiedEndLineNumber")
          end
        module Commands =
          struct
            let (registerDiffInformationCommand :
              command:string ->
                callback:(diff:vscode_LineChange list -> args:any list -> any)
                  -> ?thisArg:any -> unit -> Disposable.t)
              =
              fun ~command:(x6693 : string) ->
                fun
                  ~callback:(x6694 :
                              diff:vscode_LineChange list ->
                                args:any list -> any)
                  ->
                  fun ?thisArg:(x6695 : any option) ->
                    fun () ->
                      Disposable.t_of_js
                        (let x6701 =
                           Ojs.get_prop_ascii
                             (Ojs.get_prop_ascii Ojs.global "vscode")
                             "commands" in
                         Ojs.call
                           (Ojs.get_prop_ascii x6701
                              "registerDiffInformationCommand") "apply"
                           [|x6701;((let x6696 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x6696 "push"
                                          [|(Ojs.string_to_js x6693)|]);
                                     ignore
                                       (Ojs.call x6696 "push"
                                          [|(Ojs.fun_to_js_args
                                               (fun (x6698 : _) ->
                                                  any_to_js
                                                    (x6694
                                                       ~diff:(Ojs.list_of_js
                                                                vscode_LineChange_of_js
                                                                (Ojs.array_get
                                                                   x6698 0))
                                                       ~args:(Ojs.list_of_js_from
                                                                any_of_js
                                                                x6698 1))))|]);
                                     (match x6695 with
                                      | Some x6697 ->
                                          ignore
                                            (Ojs.call x6696 "push"
                                               [|(any_to_js x6697)|])
                                      | None -> ());
                                     x6696))|])
          end
        module DebugProtocolVariableContainer =
          struct
            type t = vscode_DebugProtocolVariableContainer
            let rec t_of_js : Ojs.t -> t =
              fun (x6703 : Ojs.t) ->
                vscode_DebugProtocolVariableContainer_of_js x6703
            and t_to_js : t -> Ojs.t =
              fun (x6702 : vscode_DebugProtocolVariableContainer) ->
                vscode_DebugProtocolVariableContainer_to_js x6702
          end
        module DebugProtocolVariable =
          struct
            type t = vscode_DebugProtocolVariable
            let rec t_of_js : Ojs.t -> t =
              fun (x6705 : Ojs.t) -> vscode_DebugProtocolVariable_of_js x6705
            and t_to_js : t -> Ojs.t =
              fun (x6704 : vscode_DebugProtocolVariable) ->
                vscode_DebugProtocolVariable_to_js x6704
          end
        module SourceControlInputBoxValidationType =
          struct
            type t = vscode_SourceControlInputBoxValidationType
            let rec t_of_js : Ojs.t -> t =
              fun (x6707 : Ojs.t) ->
                vscode_SourceControlInputBoxValidationType_of_js x6707
            and t_to_js : t -> Ojs.t =
              fun (x6706 : vscode_SourceControlInputBoxValidationType) ->
                vscode_SourceControlInputBoxValidationType_to_js x6706
          end
        module SourceControlInputBoxValidation =
          struct
            type t = vscode_SourceControlInputBoxValidation
            let rec t_of_js : Ojs.t -> t =
              fun (x6709 : Ojs.t) ->
                vscode_SourceControlInputBoxValidation_of_js x6709
            and t_to_js : t -> Ojs.t =
              fun (x6708 : vscode_SourceControlInputBoxValidation) ->
                vscode_SourceControlInputBoxValidation_to_js x6708
            let (get_message : t -> string) =
              fun (x6710 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6710) "message")
            let (get_type : t -> vscode_SourceControlInputBoxValidationType)
              =
              fun (x6711 : t) ->
                vscode_SourceControlInputBoxValidationType_of_js
                  (Ojs.get_prop_ascii (t_to_js x6711) "type")
          end
        module SourceControlInputBox =
          struct
            type t = vscode_SourceControlInputBox
            let rec t_of_js : Ojs.t -> t =
              fun (x6713 : Ojs.t) -> vscode_SourceControlInputBox_of_js x6713
            and t_to_js : t -> Ojs.t =
              fun (x6712 : vscode_SourceControlInputBox) ->
                vscode_SourceControlInputBox_to_js x6712
            let (focus : t -> unit) =
              fun (x6714 : t) ->
                ignore (Ojs.call (t_to_js x6714) "focus" [||])
            let (showValidationMessage :
              t ->
                message:string ->
                  type_:vscode_SourceControlInputBoxValidationType -> unit)
              =
              fun (x6717 : t) ->
                fun ~message:(x6715 : string) ->
                  fun
                    ~type_:(x6716 :
                             vscode_SourceControlInputBoxValidationType)
                    ->
                    ignore
                      (Ojs.call (t_to_js x6717) "showValidationMessage"
                         [|(Ojs.string_to_js x6715);(vscode_SourceControlInputBoxValidationType_to_js
                                                       x6716)|])
            let (validateInput :
              t ->
                value:string ->
                  cursorPosition:float ->
                    vscode_SourceControlInputBoxValidation ProviderResult.t)
              =
              fun (x6720 : t) ->
                fun ~value:(x6718 : string) ->
                  fun ~cursorPosition:(x6719 : float) ->
                    ProviderResult.t_of_js
                      vscode_SourceControlInputBoxValidation_of_js
                      (Ojs.call (t_to_js x6720) "validateInput"
                         [|(Ojs.string_to_js x6718);(Ojs.float_to_js x6719)|])
          end
        module SourceControl =
          struct
            type t = vscode_SourceControl
            let rec t_of_js : Ojs.t -> t =
              fun (x6723 : Ojs.t) -> vscode_SourceControl_of_js x6723
            and t_to_js : t -> Ojs.t =
              fun (x6722 : vscode_SourceControl) ->
                vscode_SourceControl_to_js x6722
            let (get_selected : t -> bool) =
              fun (x6724 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6724) "selected")
            let (get_onDidChangeSelection : t -> bool Event.t) =
              fun (x6725 : t) ->
                Event.t_of_js Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6725) "onDidChangeSelection")
          end
        module TerminalDataWriteEvent =
          struct
            type t = vscode_TerminalDataWriteEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6728 : Ojs.t) ->
                vscode_TerminalDataWriteEvent_of_js x6728
            and t_to_js : t -> Ojs.t =
              fun (x6727 : vscode_TerminalDataWriteEvent) ->
                vscode_TerminalDataWriteEvent_to_js x6727
            let (get_terminal : t -> vscode_Terminal) =
              fun (x6729 : t) ->
                vscode_Terminal_of_js
                  (Ojs.get_prop_ascii (t_to_js x6729) "terminal")
            let (get_data : t -> string) =
              fun (x6730 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6730) "data")
          end
        module TerminalDimensionsChangeEvent =
          struct
            type t = vscode_TerminalDimensionsChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6732 : Ojs.t) ->
                vscode_TerminalDimensionsChangeEvent_of_js x6732
            and t_to_js : t -> Ojs.t =
              fun (x6731 : vscode_TerminalDimensionsChangeEvent) ->
                vscode_TerminalDimensionsChangeEvent_to_js x6731
            let (get_terminal : t -> vscode_Terminal) =
              fun (x6733 : t) ->
                vscode_Terminal_of_js
                  (Ojs.get_prop_ascii (t_to_js x6733) "terminal")
            let (get_dimensions : t -> TerminalDimensions.t) =
              fun (x6734 : t) ->
                TerminalDimensions.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6734) "dimensions")
          end
        module Terminal =
          struct
            type t = vscode_Terminal
            let rec t_of_js : Ojs.t -> t =
              fun (x6736 : Ojs.t) -> vscode_Terminal_of_js x6736
            and t_to_js : t -> Ojs.t =
              fun (x6735 : vscode_Terminal) -> vscode_Terminal_to_js x6735
            let (get_dimensions : t -> TerminalDimensions.t or_undefined) =
              fun (x6737 : t) ->
                or_undefined_of_js TerminalDimensions.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6737) "dimensions")
          end
        module TerminalOptions =
          struct
            type t = vscode_TerminalOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6740 : Ojs.t) -> vscode_TerminalOptions_of_js x6740
            and t_to_js : t -> Ojs.t =
              fun (x6739 : vscode_TerminalOptions) ->
                vscode_TerminalOptions_to_js x6739
            let (get_icon : t -> string) =
              fun (x6741 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6741) "icon")
            let (get_message : t -> string) =
              fun (x6742 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6742) "message")
          end
        module DocumentFilter =
          struct
            type t = vscode_DocumentFilter
            let rec t_of_js : Ojs.t -> t =
              fun (x6744 : Ojs.t) -> vscode_DocumentFilter_of_js x6744
            and t_to_js : t -> Ojs.t =
              fun (x6743 : vscode_DocumentFilter) ->
                vscode_DocumentFilter_to_js x6743
            let (get_exclusive : t -> bool) =
              fun (x6745 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6745) "exclusive")
          end
        module TreeView =
          struct
            type 'T t = 'T vscode_TreeView
            let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
              __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x6748 : Ojs.t) -> vscode_TreeView_of_js __T_of_js x6748
            and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type
              __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x6746 : __T vscode_TreeView) ->
                  vscode_TreeView_to_js __T_to_js x6746
            let (reveal :
              'T t ->
                element:'T or_undefined ->
                  ?options:anonymous_interface_12 -> unit -> unit Promise.t)
              =
              fun (x6755 : 'T t) ->
                fun ~element:(x6750 : 'T or_undefined) ->
                  fun ?options:(x6751 : anonymous_interface_12 option) ->
                    fun () ->
                      Promise.t_of_js Ojs.unit_of_js
                        (let x6757 = t_to_js Obj.magic x6755 in
                         Ojs.call (Ojs.get_prop_ascii x6757 "reveal") "apply"
                           [|x6757;((let x6752 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x6752 "push"
                                          [|(or_undefined_to_js Obj.magic
                                               x6750)|]);
                                     (match x6751 with
                                      | Some x6753 ->
                                          ignore
                                            (Ojs.call x6752 "push"
                                               [|(anonymous_interface_12_to_js
                                                    x6753)|])
                                      | None -> ());
                                     x6752))|])
            let (cast : 'T t -> Disposable.t) =
              fun (x6759 : 'T t) ->
                Disposable.t_of_js (t_to_js Obj.magic x6759)
          end
        module TaskPresentationOptions =
          struct
            type t = vscode_TaskPresentationOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6762 : Ojs.t) ->
                vscode_TaskPresentationOptions_of_js x6762
            and t_to_js : t -> Ojs.t =
              fun (x6761 : vscode_TaskPresentationOptions) ->
                vscode_TaskPresentationOptions_to_js x6761
            let (get_group : t -> string) =
              fun (x6763 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6763) "group")
            let (set_group : t -> string -> unit) =
              fun (x6764 : t) ->
                fun (x6765 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6764) "group"
                    (Ojs.string_to_js x6765)
          end
        module StatusBarItemOptions =
          struct
            type t = vscode_StatusBarItemOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6767 : Ojs.t) -> vscode_StatusBarItemOptions_of_js x6767
            and t_to_js : t -> Ojs.t =
              fun (x6766 : vscode_StatusBarItemOptions) ->
                vscode_StatusBarItemOptions_to_js x6766
            let (get_id : t -> string) =
              fun (x6768 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6768) "id")
            let (set_id : t -> string -> unit) =
              fun (x6769 : t) ->
                fun (x6770 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6769) "id"
                    (Ojs.string_to_js x6770)
            let (get_name : t -> string) =
              fun (x6771 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6771) "name")
            let (set_name : t -> string -> unit) =
              fun (x6772 : t) ->
                fun (x6773 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6772) "name"
                    (Ojs.string_to_js x6773)
            let (get_accessibilityInformation :
              t -> AccessibilityInformation.t) =
              fun (x6774 : t) ->
                AccessibilityInformation.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6774)
                     "accessibilityInformation")
            let (set_accessibilityInformation :
              t -> AccessibilityInformation.t -> unit) =
              fun (x6775 : t) ->
                fun (x6776 : AccessibilityInformation.t) ->
                  Ojs.set_prop_ascii (t_to_js x6775)
                    "accessibilityInformation"
                    (AccessibilityInformation.t_to_js x6776)
            let (get_alignment : t -> StatusBarAlignment.t) =
              fun (x6777 : t) ->
                StatusBarAlignment.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6777) "alignment")
            let (set_alignment : t -> StatusBarAlignment.t -> unit) =
              fun (x6778 : t) ->
                fun (x6779 : StatusBarAlignment.t) ->
                  Ojs.set_prop_ascii (t_to_js x6778) "alignment"
                    (StatusBarAlignment.t_to_js x6779)
            let (get_priority : t -> float) =
              fun (x6780 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6780) "priority")
            let (set_priority : t -> float -> unit) =
              fun (x6781 : t) ->
                fun (x6782 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6781) "priority"
                    (Ojs.float_to_js x6782)
          end
        module CustomTextEditorProvider =
          struct
            type t = vscode_CustomTextEditorProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x6784 : Ojs.t) ->
                vscode_CustomTextEditorProvider_of_js x6784
            and t_to_js : t -> Ojs.t =
              fun (x6783 : vscode_CustomTextEditorProvider) ->
                vscode_CustomTextEditorProvider_to_js x6783
            let (moveCustomTextEditor :
              t ->
                newDocument:vscode_TextDocument ->
                  existingWebviewPanel:WebviewPanel.t ->
                    token:CancellationToken.t -> unit Promise.t)
              =
              fun (x6788 : t) ->
                fun ~newDocument:(x6785 : vscode_TextDocument) ->
                  fun ~existingWebviewPanel:(x6786 : WebviewPanel.t) ->
                    fun ~token:(x6787 : CancellationToken.t) ->
                      Promise.t_of_js Ojs.unit_of_js
                        (Ojs.call (t_to_js x6788) "moveCustomTextEditor"
                           [|(vscode_TextDocument_to_js x6785);(WebviewPanel.t_to_js
                                                                  x6786);(
                             CancellationToken.t_to_js x6787)|])
          end
        module QuickPick =
          struct
            type 'T t = 'T vscode_QuickPick
            let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
              __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x6792 : Ojs.t) -> vscode_QuickPick_of_js __T_of_js x6792
            and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type
              __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x6790 : __T vscode_QuickPick) ->
                  vscode_QuickPick_to_js __T_to_js x6790
            let (get_sortByLabel : 'T t -> bool) =
              fun (x6794 : 'T t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x6794) "sortByLabel")
            let (set_sortByLabel : 'T t -> bool -> unit) =
              fun (x6796 : 'T t) ->
                fun (x6797 : bool) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x6796) "sortByLabel"
                    (Ojs.bool_to_js x6797)
            let (cast : 'T t -> QuickInput.t) =
              fun (x6799 : 'T t) ->
                QuickInput.t_of_js (t_to_js Obj.magic x6799)
          end
        module QuickPickOptions =
          struct
            type t = vscode_QuickPickOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6802 : Ojs.t) -> vscode_QuickPickOptions_of_js x6802
            and t_to_js : t -> Ojs.t =
              fun (x6801 : vscode_QuickPickOptions) ->
                vscode_QuickPickOptions_to_js x6801
            let (get_title : t -> string) =
              fun (x6803 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6803) "title")
            let (set_title : t -> string -> unit) =
              fun (x6804 : t) ->
                fun (x6805 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6804) "title"
                    (Ojs.string_to_js x6805)
          end
        module InputBoxOptions =
          struct
            type t = vscode_InputBoxOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6807 : Ojs.t) -> vscode_InputBoxOptions_of_js x6807
            and t_to_js : t -> Ojs.t =
              fun (x6806 : vscode_InputBoxOptions) ->
                vscode_InputBoxOptions_to_js x6806
            let (get_title : t -> string) =
              fun (x6808 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x6808) "title")
            let (set_title : t -> string -> unit) =
              fun (x6809 : t) ->
                fun (x6810 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6809) "title"
                    (Ojs.string_to_js x6810)
          end
        module NotebookCellKind =
          struct
            type t = vscode_NotebookCellKind
            let rec t_of_js : Ojs.t -> t =
              fun (x6812 : Ojs.t) -> vscode_NotebookCellKind_of_js x6812
            and t_to_js : t -> Ojs.t =
              fun (x6811 : vscode_NotebookCellKind) ->
                vscode_NotebookCellKind_to_js x6811
          end
        module NotebookCellMetadata =
          struct
            type t = vscode_NotebookCellMetadata
            let rec t_of_js : Ojs.t -> t =
              fun (x6814 : Ojs.t) -> vscode_NotebookCellMetadata_of_js x6814
            and t_to_js : t -> Ojs.t =
              fun (x6813 : vscode_NotebookCellMetadata) ->
                vscode_NotebookCellMetadata_to_js x6813
            let (get_editable : t -> bool) =
              fun (x6815 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6815) "editable")
            let (get_breakpointMargin : t -> bool) =
              fun (x6816 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6816) "breakpointMargin")
            let (get_outputCollapsed : t -> bool) =
              fun (x6817 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6817) "outputCollapsed")
            let (get_inputCollapsed : t -> bool) =
              fun (x6818 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6818) "inputCollapsed")
            let (get_custom : t -> (string, any) Record.t) =
              fun (x6819 : t) ->
                Record.t_of_js Ojs.string_of_js any_of_js
                  (Ojs.get_prop_ascii (t_to_js x6819) "custom")
            let (get_statusMessage : t -> string) =
              fun (x6822 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6822) "statusMessage")
            let (create :
              ?editable:bool ->
                ?breakpointMargin:bool ->
                  ?statusMessage:string ->
                    ?lastRunDuration:float ->
                      ?inputCollapsed:bool ->
                        ?outputCollapsed:bool ->
                          ?custom:(string, any) Record.t -> unit -> t)
              =
              fun ?editable:(x6823 : bool option) ->
                fun ?breakpointMargin:(x6824 : bool option) ->
                  fun ?statusMessage:(x6825 : string option) ->
                    fun ?lastRunDuration:(x6826 : float option) ->
                      fun ?inputCollapsed:(x6827 : bool option) ->
                        fun ?outputCollapsed:(x6828 : bool option) ->
                          fun ?custom:(x6829 : (string, any) Record.t option)
                            ->
                            fun () ->
                              t_of_js
                                (Ojs.new_obj_arr
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global "vscode")
                                      "NotebookCellMetadata")
                                   (let x6830 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    (match x6823 with
                                     | Some x6839 ->
                                         ignore
                                           (Ojs.call x6830 "push"
                                              [|(Ojs.bool_to_js x6839)|])
                                     | None -> ());
                                    (match x6824 with
                                     | Some x6838 ->
                                         ignore
                                           (Ojs.call x6830 "push"
                                              [|(Ojs.bool_to_js x6838)|])
                                     | None -> ());
                                    (match x6825 with
                                     | Some x6837 ->
                                         ignore
                                           (Ojs.call x6830 "push"
                                              [|(Ojs.string_to_js x6837)|])
                                     | None -> ());
                                    (match x6826 with
                                     | Some x6836 ->
                                         ignore
                                           (Ojs.call x6830 "push"
                                              [|(Ojs.float_to_js x6836)|])
                                     | None -> ());
                                    (match x6827 with
                                     | Some x6835 ->
                                         ignore
                                           (Ojs.call x6830 "push"
                                              [|(Ojs.bool_to_js x6835)|])
                                     | None -> ());
                                    (match x6828 with
                                     | Some x6834 ->
                                         ignore
                                           (Ojs.call x6830 "push"
                                              [|(Ojs.bool_to_js x6834)|])
                                     | None -> ());
                                    (match x6829 with
                                     | Some x6831 ->
                                         ignore
                                           (Ojs.call x6830 "push"
                                              [|(Record.t_to_js
                                                   Ojs.string_to_js any_to_js
                                                   x6831)|])
                                     | None -> ());
                                    x6830))
            let (with_ : t -> change:anonymous_interface_5 -> t) =
              fun (x6841 : t) ->
                fun ~change:(x6840 : anonymous_interface_5) ->
                  t_of_js
                    (Ojs.call (t_to_js x6841) "with"
                       [|(anonymous_interface_5_to_js x6840)|])
          end
        module NotebookCellExecutionSummary =
          struct
            type t = vscode_NotebookCellExecutionSummary
            let rec t_of_js : Ojs.t -> t =
              fun (x6843 : Ojs.t) ->
                vscode_NotebookCellExecutionSummary_of_js x6843
            and t_to_js : t -> Ojs.t =
              fun (x6842 : vscode_NotebookCellExecutionSummary) ->
                vscode_NotebookCellExecutionSummary_to_js x6842
            let (get_executionOrder : t -> float) =
              fun (x6844 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6844) "executionOrder")
            let (set_executionOrder : t -> float -> unit) =
              fun (x6845 : t) ->
                fun (x6846 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6845) "executionOrder"
                    (Ojs.float_to_js x6846)
            let (get_success : t -> bool) =
              fun (x6847 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6847) "success")
            let (set_success : t -> bool -> unit) =
              fun (x6848 : t) ->
                fun (x6849 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6848) "success"
                    (Ojs.bool_to_js x6849)
            let (get_duration : t -> float) =
              fun (x6850 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6850) "duration")
            let (set_duration : t -> float -> unit) =
              fun (x6851 : t) ->
                fun (x6852 : float) ->
                  Ojs.set_prop_ascii (t_to_js x6851) "duration"
                    (Ojs.float_to_js x6852)
          end
        module NotebookCell =
          struct
            type t = vscode_NotebookCell
            let rec t_of_js : Ojs.t -> t =
              fun (x6854 : Ojs.t) -> vscode_NotebookCell_of_js x6854
            and t_to_js : t -> Ojs.t =
              fun (x6853 : vscode_NotebookCell) ->
                vscode_NotebookCell_to_js x6853
            let (get_index : t -> float) =
              fun (x6855 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6855) "index")
            let (get_notebook : t -> vscode_NotebookDocument) =
              fun (x6856 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6856) "notebook")
            let (get_kind : t -> vscode_NotebookCellKind) =
              fun (x6857 : t) ->
                vscode_NotebookCellKind_of_js
                  (Ojs.get_prop_ascii (t_to_js x6857) "kind")
            let (get_document : t -> vscode_TextDocument) =
              fun (x6858 : t) ->
                vscode_TextDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6858) "document")
            let (get_metadata : t -> vscode_NotebookCellMetadata) =
              fun (x6859 : t) ->
                vscode_NotebookCellMetadata_of_js
                  (Ojs.get_prop_ascii (t_to_js x6859) "metadata")
            let (get_outputs : t -> vscode_NotebookCellOutput list) =
              fun (x6860 : t) ->
                Ojs.list_of_js vscode_NotebookCellOutput_of_js
                  (Ojs.get_prop_ascii (t_to_js x6860) "outputs")
            let (get_latestExecutionSummary :
              t -> vscode_NotebookCellExecutionSummary or_undefined) =
              fun (x6862 : t) ->
                or_undefined_of_js vscode_NotebookCellExecutionSummary_of_js
                  (Ojs.get_prop_ascii (t_to_js x6862)
                     "latestExecutionSummary")
          end
        module NotebookDocumentMetadata =
          struct
            type t = vscode_NotebookDocumentMetadata
            let rec t_of_js : Ojs.t -> t =
              fun (x6865 : Ojs.t) ->
                vscode_NotebookDocumentMetadata_of_js x6865
            and t_to_js : t -> Ojs.t =
              fun (x6864 : vscode_NotebookDocumentMetadata) ->
                vscode_NotebookDocumentMetadata_to_js x6864
            let (get_editable : t -> bool) =
              fun (x6866 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6866) "editable")
            let (get_cellEditable : t -> bool) =
              fun (x6867 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6867) "cellEditable")
            let (get_custom : t -> anonymous_interface_16) =
              fun (x6868 : t) ->
                anonymous_interface_16_of_js
                  (Ojs.get_prop_ascii (t_to_js x6868) "custom")
            let (get_trusted : t -> bool) =
              fun (x6869 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6869) "trusted")
            let (create :
              ?editable:bool ->
                ?cellEditable:bool ->
                  ?custom:anonymous_interface_16 ->
                    ?trusted:bool -> unit -> t)
              =
              fun ?editable:(x6870 : bool option) ->
                fun ?cellEditable:(x6871 : bool option) ->
                  fun ?custom:(x6872 : anonymous_interface_16 option) ->
                    fun ?trusted:(x6873 : bool option) ->
                      fun () ->
                        t_of_js
                          (Ojs.new_obj_arr
                             (Ojs.get_prop_ascii
                                (Ojs.get_prop_ascii Ojs.global "vscode")
                                "NotebookDocumentMetadata")
                             (let x6874 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6870 with
                               | Some x6878 ->
                                   ignore
                                     (Ojs.call x6874 "push"
                                        [|(Ojs.bool_to_js x6878)|])
                               | None -> ());
                              (match x6871 with
                               | Some x6877 ->
                                   ignore
                                     (Ojs.call x6874 "push"
                                        [|(Ojs.bool_to_js x6877)|])
                               | None -> ());
                              (match x6872 with
                               | Some x6876 ->
                                   ignore
                                     (Ojs.call x6874 "push"
                                        [|(anonymous_interface_16_to_js x6876)|])
                               | None -> ());
                              (match x6873 with
                               | Some x6875 ->
                                   ignore
                                     (Ojs.call x6874 "push"
                                        [|(Ojs.bool_to_js x6875)|])
                               | None -> ());
                              x6874))
            let (with_ : t -> change:anonymous_interface_6 -> t) =
              fun (x6880 : t) ->
                fun ~change:(x6879 : anonymous_interface_6) ->
                  t_of_js
                    (Ojs.call (t_to_js x6880) "with"
                       [|(anonymous_interface_6_to_js x6879)|])
          end
        module NotebookDocumentContentOptions =
          struct
            type t = vscode_NotebookDocumentContentOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x6882 : Ojs.t) ->
                vscode_NotebookDocumentContentOptions_of_js x6882
            and t_to_js : t -> Ojs.t =
              fun (x6881 : vscode_NotebookDocumentContentOptions) ->
                vscode_NotebookDocumentContentOptions_to_js x6881
            let (get_transientOutputs : t -> bool) =
              fun (x6883 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6883) "transientOutputs")
            let (set_transientOutputs : t -> bool -> unit) =
              fun (x6884 : t) ->
                fun (x6885 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x6884) "transientOutputs"
                    (Ojs.bool_to_js x6885)
            let (get_transientMetadata : t -> any) =
              fun (x6886 : t) ->
                any_of_js
                  (Ojs.get_prop_ascii (t_to_js x6886) "transientMetadata")
            let (set_transientMetadata : t -> any -> unit) =
              fun (x6887 : t) ->
                fun (x6888 : any) ->
                  Ojs.set_prop_ascii (t_to_js x6887) "transientMetadata"
                    (any_to_js x6888)
          end
        module NotebookDocument =
          struct
            type t = vscode_NotebookDocument
            let rec t_of_js : Ojs.t -> t =
              fun (x6890 : Ojs.t) -> vscode_NotebookDocument_of_js x6890
            and t_to_js : t -> Ojs.t =
              fun (x6889 : vscode_NotebookDocument) ->
                vscode_NotebookDocument_to_js x6889
            let (get_uri : t -> Uri.t) =
              fun (x6891 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x6891) "uri")
            let (get_version : t -> float) =
              fun (x6892 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6892) "version")
            let (get_fileName : t -> string) =
              fun (x6893 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6893) "fileName")
            let (get_isDirty : t -> bool) =
              fun (x6894 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6894) "isDirty")
            let (get_isUntitled : t -> bool) =
              fun (x6895 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6895) "isUntitled")
            let (get_isClosed : t -> bool) =
              fun (x6896 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x6896) "isClosed")
            let (get_metadata : t -> vscode_NotebookDocumentMetadata) =
              fun (x6897 : t) ->
                vscode_NotebookDocumentMetadata_of_js
                  (Ojs.get_prop_ascii (t_to_js x6897) "metadata")
            let (get_viewType : t -> string) =
              fun (x6898 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6898) "viewType")
            let (get_cellCount : t -> float) =
              fun (x6899 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6899) "cellCount")
            let (cellAt : t -> index:float -> vscode_NotebookCell) =
              fun (x6901 : t) ->
                fun ~index:(x6900 : float) ->
                  vscode_NotebookCell_of_js
                    (Ojs.call (t_to_js x6901) "cellAt"
                       [|(Ojs.float_to_js x6900)|])
            let (getCells :
              t ->
                ?range:vscode_NotebookCellRange ->
                  unit -> vscode_NotebookCell list)
              =
              fun (x6905 : t) ->
                fun ?range:(x6902 : vscode_NotebookCellRange option) ->
                  fun () ->
                    Ojs.list_of_js vscode_NotebookCell_of_js
                      (let x6906 = t_to_js x6905 in
                       Ojs.call (Ojs.get_prop_ascii x6906 "getCells") "apply"
                         [|x6906;((let x6903 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   (match x6902 with
                                    | Some x6904 ->
                                        ignore
                                          (Ojs.call x6903 "push"
                                             [|(vscode_NotebookCellRange_to_js
                                                  x6904)|])
                                    | None -> ());
                                   x6903))|])
            let (save : t -> bool Promise.t) =
              fun (x6908 : t) ->
                Promise.t_of_js Ojs.bool_of_js
                  (Ojs.call (t_to_js x6908) "save" [||])
          end
        module NotebookCellRange =
          struct
            type t = vscode_NotebookCellRange
            let rec t_of_js : Ojs.t -> t =
              fun (x6911 : Ojs.t) -> vscode_NotebookCellRange_of_js x6911
            and t_to_js : t -> Ojs.t =
              fun (x6910 : vscode_NotebookCellRange) ->
                vscode_NotebookCellRange_to_js x6910
            let (get_start : t -> float) =
              fun (x6912 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6912) "start")
            let (get_end : t -> float) =
              fun (x6913 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6913) "end")
            let (get_isEmpty : t -> bool) =
              fun (x6914 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x6914) "isEmpty")
            let (create : start:float -> end_:float -> t) =
              fun ~start:(x6915 : float) ->
                fun ~end_:(x6916 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "NotebookCellRange")
                       [|(Ojs.float_to_js x6915);(Ojs.float_to_js x6916)|])
            let (with_ : t -> change:anonymous_interface_13 -> t) =
              fun (x6918 : t) ->
                fun ~change:(x6917 : anonymous_interface_13) ->
                  t_of_js
                    (Ojs.call (t_to_js x6918) "with"
                       [|(anonymous_interface_13_to_js x6917)|])
          end
        module NotebookEditorRevealType =
          struct
            type t = vscode_NotebookEditorRevealType
            let rec t_of_js : Ojs.t -> t =
              fun (x6920 : Ojs.t) ->
                vscode_NotebookEditorRevealType_of_js x6920
            and t_to_js : t -> Ojs.t =
              fun (x6919 : vscode_NotebookEditorRevealType) ->
                vscode_NotebookEditorRevealType_to_js x6919
          end
        module NotebookEditor =
          struct
            type t = vscode_NotebookEditor
            let rec t_of_js : Ojs.t -> t =
              fun (x6922 : Ojs.t) -> vscode_NotebookEditor_of_js x6922
            and t_to_js : t -> Ojs.t =
              fun (x6921 : vscode_NotebookEditor) ->
                vscode_NotebookEditor_to_js x6921
            let (setDecorations :
              t ->
                decorationType:vscode_NotebookEditorDecorationType ->
                  range:vscode_NotebookCellRange -> unit)
              =
              fun (x6925 : t) ->
                fun
                  ~decorationType:(x6923 :
                                    vscode_NotebookEditorDecorationType)
                  ->
                  fun ~range:(x6924 : vscode_NotebookCellRange) ->
                    ignore
                      (Ojs.call (t_to_js x6925) "setDecorations"
                         [|(vscode_NotebookEditorDecorationType_to_js x6923);(
                           vscode_NotebookCellRange_to_js x6924)|])
            let (get_kernel : t -> vscode_NotebookKernel) =
              fun (x6926 : t) ->
                vscode_NotebookKernel_of_js
                  (Ojs.get_prop_ascii (t_to_js x6926) "kernel")
            let (edit :
              t ->
                callback:(editBuilder:vscode_NotebookEditorEdit -> unit) ->
                  bool Promise.t)
              =
              fun (x6929 : t) ->
                fun
                  ~callback:(x6927 :
                              editBuilder:vscode_NotebookEditorEdit -> unit)
                  ->
                  Promise.t_of_js Ojs.bool_of_js
                    (Ojs.call (t_to_js x6929) "edit"
                       [|(Ojs.fun_to_js 1
                            (fun (x6928 : Ojs.t) ->
                               x6927
                                 ~editBuilder:(vscode_NotebookEditorEdit_of_js
                                                 x6928)))|])
            let (get_document : t -> vscode_NotebookDocument) =
              fun (x6931 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6931) "document")
            let (get_selection : t -> vscode_NotebookCell) =
              fun (x6932 : t) ->
                vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x6932) "selection")
            let (get_selections : t -> vscode_NotebookCellRange list) =
              fun (x6933 : t) ->
                Ojs.list_of_js vscode_NotebookCellRange_of_js
                  (Ojs.get_prop_ascii (t_to_js x6933) "selections")
            let (get_visibleRanges : t -> vscode_NotebookCellRange list) =
              fun (x6935 : t) ->
                Ojs.list_of_js vscode_NotebookCellRange_of_js
                  (Ojs.get_prop_ascii (t_to_js x6935) "visibleRanges")
            let (revealRange :
              t ->
                range:vscode_NotebookCellRange ->
                  ?revealType:vscode_NotebookEditorRevealType -> unit -> unit)
              =
              fun (x6941 : t) ->
                fun ~range:(x6937 : vscode_NotebookCellRange) ->
                  fun
                    ?revealType:(x6938 :
                                  vscode_NotebookEditorRevealType option)
                    ->
                    fun () ->
                      ignore
                        (let x6942 = t_to_js x6941 in
                         Ojs.call (Ojs.get_prop_ascii x6942 "revealRange")
                           "apply"
                           [|x6942;((let x6939 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x6939 "push"
                                          [|(vscode_NotebookCellRange_to_js
                                               x6937)|]);
                                     (match x6938 with
                                      | Some x6940 ->
                                          ignore
                                            (Ojs.call x6939 "push"
                                               [|(vscode_NotebookEditorRevealType_to_js
                                                    x6940)|])
                                      | None -> ());
                                     x6939))|])
            let (get_viewColumn : t -> ViewColumn.t) =
              fun (x6943 : t) ->
                ViewColumn.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x6943) "viewColumn")
          end
        module NotebookDocumentMetadataChangeEvent =
          struct
            type t = vscode_NotebookDocumentMetadataChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6945 : Ojs.t) ->
                vscode_NotebookDocumentMetadataChangeEvent_of_js x6945
            and t_to_js : t -> Ojs.t =
              fun (x6944 : vscode_NotebookDocumentMetadataChangeEvent) ->
                vscode_NotebookDocumentMetadataChangeEvent_to_js x6944
            let (get_document : t -> vscode_NotebookDocument) =
              fun (x6946 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6946) "document")
          end
        module NotebookCellsChangeData =
          struct
            type t = vscode_NotebookCellsChangeData
            let rec t_of_js : Ojs.t -> t =
              fun (x6948 : Ojs.t) ->
                vscode_NotebookCellsChangeData_of_js x6948
            and t_to_js : t -> Ojs.t =
              fun (x6947 : vscode_NotebookCellsChangeData) ->
                vscode_NotebookCellsChangeData_to_js x6947
            let (get_start : t -> float) =
              fun (x6949 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x6949) "start")
            let (get_deletedCount : t -> float) =
              fun (x6950 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x6950) "deletedCount")
            let (get_deletedItems : t -> vscode_NotebookCell list) =
              fun (x6951 : t) ->
                Ojs.list_of_js vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x6951) "deletedItems")
            let (get_items : t -> vscode_NotebookCell list) =
              fun (x6953 : t) ->
                Ojs.list_of_js vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x6953) "items")
          end
        module NotebookCellsChangeEvent =
          struct
            type t = vscode_NotebookCellsChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6956 : Ojs.t) ->
                vscode_NotebookCellsChangeEvent_of_js x6956
            and t_to_js : t -> Ojs.t =
              fun (x6955 : vscode_NotebookCellsChangeEvent) ->
                vscode_NotebookCellsChangeEvent_to_js x6955
            let (get_document : t -> vscode_NotebookDocument) =
              fun (x6957 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6957) "document")
            let (get_changes : t -> vscode_NotebookCellsChangeData list) =
              fun (x6958 : t) ->
                Ojs.list_of_js vscode_NotebookCellsChangeData_of_js
                  (Ojs.get_prop_ascii (t_to_js x6958) "changes")
          end
        module NotebookCellOutputsChangeEvent =
          struct
            type t = vscode_NotebookCellOutputsChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6961 : Ojs.t) ->
                vscode_NotebookCellOutputsChangeEvent_of_js x6961
            and t_to_js : t -> Ojs.t =
              fun (x6960 : vscode_NotebookCellOutputsChangeEvent) ->
                vscode_NotebookCellOutputsChangeEvent_to_js x6960
            let (get_document : t -> vscode_NotebookDocument) =
              fun (x6962 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6962) "document")
            let (get_cells : t -> vscode_NotebookCell list) =
              fun (x6963 : t) ->
                Ojs.list_of_js vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x6963) "cells")
          end
        module NotebookCellMetadataChangeEvent =
          struct
            type t = vscode_NotebookCellMetadataChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6966 : Ojs.t) ->
                vscode_NotebookCellMetadataChangeEvent_of_js x6966
            and t_to_js : t -> Ojs.t =
              fun (x6965 : vscode_NotebookCellMetadataChangeEvent) ->
                vscode_NotebookCellMetadataChangeEvent_to_js x6965
            let (get_document : t -> vscode_NotebookDocument) =
              fun (x6967 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6967) "document")
            let (get_cell : t -> vscode_NotebookCell) =
              fun (x6968 : t) ->
                vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x6968) "cell")
          end
        module NotebookEditorSelectionChangeEvent =
          struct
            type t = vscode_NotebookEditorSelectionChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6970 : Ojs.t) ->
                vscode_NotebookEditorSelectionChangeEvent_of_js x6970
            and t_to_js : t -> Ojs.t =
              fun (x6969 : vscode_NotebookEditorSelectionChangeEvent) ->
                vscode_NotebookEditorSelectionChangeEvent_to_js x6969
            let (get_notebookEditor : t -> vscode_NotebookEditor) =
              fun (x6971 : t) ->
                vscode_NotebookEditor_of_js
                  (Ojs.get_prop_ascii (t_to_js x6971) "notebookEditor")
            let (get_selections : t -> vscode_NotebookCellRange list) =
              fun (x6972 : t) ->
                Ojs.list_of_js vscode_NotebookCellRange_of_js
                  (Ojs.get_prop_ascii (t_to_js x6972) "selections")
          end
        module NotebookEditorVisibleRangesChangeEvent =
          struct
            type t = vscode_NotebookEditorVisibleRangesChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6975 : Ojs.t) ->
                vscode_NotebookEditorVisibleRangesChangeEvent_of_js x6975
            and t_to_js : t -> Ojs.t =
              fun (x6974 : vscode_NotebookEditorVisibleRangesChangeEvent) ->
                vscode_NotebookEditorVisibleRangesChangeEvent_to_js x6974
            let (get_notebookEditor : t -> vscode_NotebookEditor) =
              fun (x6976 : t) ->
                vscode_NotebookEditor_of_js
                  (Ojs.get_prop_ascii (t_to_js x6976) "notebookEditor")
            let (get_visibleRanges : t -> vscode_NotebookCellRange list) =
              fun (x6977 : t) ->
                Ojs.list_of_js vscode_NotebookCellRange_of_js
                  (Ojs.get_prop_ascii (t_to_js x6977) "visibleRanges")
          end
        module NotebookCellExecutionStateChangeEvent =
          struct
            type t = vscode_NotebookCellExecutionStateChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x6980 : Ojs.t) ->
                vscode_NotebookCellExecutionStateChangeEvent_of_js x6980
            and t_to_js : t -> Ojs.t =
              fun (x6979 : vscode_NotebookCellExecutionStateChangeEvent) ->
                vscode_NotebookCellExecutionStateChangeEvent_to_js x6979
            let (get_document : t -> vscode_NotebookDocument) =
              fun (x6981 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x6981) "document")
            let (get_cell : t -> vscode_NotebookCell) =
              fun (x6982 : t) ->
                vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x6982) "cell")
            let (get_executionState : t -> vscode_NotebookCellExecutionState)
              =
              fun (x6983 : t) ->
                vscode_NotebookCellExecutionState_of_js
                  (Ojs.get_prop_ascii (t_to_js x6983) "executionState")
          end
        module NotebookCellData =
          struct
            type t = vscode_NotebookCellData
            let rec t_of_js : Ojs.t -> t =
              fun (x6985 : Ojs.t) -> vscode_NotebookCellData_of_js x6985
            and t_to_js : t -> Ojs.t =
              fun (x6984 : vscode_NotebookCellData) ->
                vscode_NotebookCellData_to_js x6984
            let (get_kind : t -> vscode_NotebookCellKind) =
              fun (x6986 : t) ->
                vscode_NotebookCellKind_of_js
                  (Ojs.get_prop_ascii (t_to_js x6986) "kind")
            let (set_kind : t -> vscode_NotebookCellKind -> unit) =
              fun (x6987 : t) ->
                fun (x6988 : vscode_NotebookCellKind) ->
                  Ojs.set_prop_ascii (t_to_js x6987) "kind"
                    (vscode_NotebookCellKind_to_js x6988)
            let (get_source : t -> string) =
              fun (x6989 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6989) "source")
            let (set_source : t -> string -> unit) =
              fun (x6990 : t) ->
                fun (x6991 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6990) "source"
                    (Ojs.string_to_js x6991)
            let (get_language : t -> string) =
              fun (x6992 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x6992) "language")
            let (set_language : t -> string -> unit) =
              fun (x6993 : t) ->
                fun (x6994 : string) ->
                  Ojs.set_prop_ascii (t_to_js x6993) "language"
                    (Ojs.string_to_js x6994)
            let (get_outputs : t -> vscode_NotebookCellOutput list) =
              fun (x6995 : t) ->
                Ojs.list_of_js vscode_NotebookCellOutput_of_js
                  (Ojs.get_prop_ascii (t_to_js x6995) "outputs")
            let (set_outputs : t -> vscode_NotebookCellOutput list -> unit) =
              fun (x6997 : t) ->
                fun (x6998 : vscode_NotebookCellOutput list) ->
                  Ojs.set_prop_ascii (t_to_js x6997) "outputs"
                    (Ojs.list_to_js vscode_NotebookCellOutput_to_js x6998)
            let (get_metadata : t -> vscode_NotebookCellMetadata) =
              fun (x7000 : t) ->
                vscode_NotebookCellMetadata_of_js
                  (Ojs.get_prop_ascii (t_to_js x7000) "metadata")
            let (set_metadata : t -> vscode_NotebookCellMetadata -> unit) =
              fun (x7001 : t) ->
                fun (x7002 : vscode_NotebookCellMetadata) ->
                  Ojs.set_prop_ascii (t_to_js x7001) "metadata"
                    (vscode_NotebookCellMetadata_to_js x7002)
            let (get_latestExecutionSummary :
              t -> vscode_NotebookCellExecutionSummary) =
              fun (x7003 : t) ->
                vscode_NotebookCellExecutionSummary_of_js
                  (Ojs.get_prop_ascii (t_to_js x7003)
                     "latestExecutionSummary")
            let (set_latestExecutionSummary :
              t -> vscode_NotebookCellExecutionSummary -> unit) =
              fun (x7004 : t) ->
                fun (x7005 : vscode_NotebookCellExecutionSummary) ->
                  Ojs.set_prop_ascii (t_to_js x7004) "latestExecutionSummary"
                    (vscode_NotebookCellExecutionSummary_to_js x7005)
            let (create :
              kind:vscode_NotebookCellKind ->
                source:string ->
                  language:string ->
                    ?outputs:vscode_NotebookCellOutput list ->
                      ?metadata:vscode_NotebookCellMetadata ->
                        ?latestExecutionSummary:vscode_NotebookCellExecutionSummary
                          -> unit -> t)
              =
              fun ~kind:(x7006 : vscode_NotebookCellKind) ->
                fun ~source:(x7007 : string) ->
                  fun ~language:(x7008 : string) ->
                    fun
                      ?outputs:(x7009 :
                                 vscode_NotebookCellOutput list option)
                      ->
                      fun
                        ?metadata:(x7010 :
                                    vscode_NotebookCellMetadata option)
                        ->
                        fun
                          ?latestExecutionSummary:(x7011 :
                                                    vscode_NotebookCellExecutionSummary
                                                      option)
                          ->
                          fun () ->
                            t_of_js
                              (Ojs.new_obj_arr
                                 (Ojs.get_prop_ascii
                                    (Ojs.get_prop_ascii Ojs.global "vscode")
                                    "NotebookCellData")
                                 (let x7012 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x7012 "push"
                                       [|(vscode_NotebookCellKind_to_js x7006)|]);
                                  ignore
                                    (Ojs.call x7012 "push"
                                       [|(Ojs.string_to_js x7007)|]);
                                  ignore
                                    (Ojs.call x7012 "push"
                                       [|(Ojs.string_to_js x7008)|]);
                                  (match x7009 with
                                   | Some x7015 ->
                                       ignore
                                         (Ojs.call x7012 "push"
                                            [|(Ojs.list_to_js
                                                 vscode_NotebookCellOutput_to_js
                                                 x7015)|])
                                   | None -> ());
                                  (match x7010 with
                                   | Some x7014 ->
                                       ignore
                                         (Ojs.call x7012 "push"
                                            [|(vscode_NotebookCellMetadata_to_js
                                                 x7014)|])
                                   | None -> ());
                                  (match x7011 with
                                   | Some x7013 ->
                                       ignore
                                         (Ojs.call x7012 "push"
                                            [|(vscode_NotebookCellExecutionSummary_to_js
                                                 x7013)|])
                                   | None -> ());
                                  x7012))
          end
        module NotebookData =
          struct
            type t = vscode_NotebookData
            let rec t_of_js : Ojs.t -> t =
              fun (x7018 : Ojs.t) -> vscode_NotebookData_of_js x7018
            and t_to_js : t -> Ojs.t =
              fun (x7017 : vscode_NotebookData) ->
                vscode_NotebookData_to_js x7017
            let (get_cells : t -> vscode_NotebookCellData list) =
              fun (x7019 : t) ->
                Ojs.list_of_js vscode_NotebookCellData_of_js
                  (Ojs.get_prop_ascii (t_to_js x7019) "cells")
            let (set_cells : t -> vscode_NotebookCellData list -> unit) =
              fun (x7021 : t) ->
                fun (x7022 : vscode_NotebookCellData list) ->
                  Ojs.set_prop_ascii (t_to_js x7021) "cells"
                    (Ojs.list_to_js vscode_NotebookCellData_to_js x7022)
            let (get_metadata : t -> vscode_NotebookDocumentMetadata) =
              fun (x7024 : t) ->
                vscode_NotebookDocumentMetadata_of_js
                  (Ojs.get_prop_ascii (t_to_js x7024) "metadata")
            let (set_metadata : t -> vscode_NotebookDocumentMetadata -> unit)
              =
              fun (x7025 : t) ->
                fun (x7026 : vscode_NotebookDocumentMetadata) ->
                  Ojs.set_prop_ascii (t_to_js x7025) "metadata"
                    (vscode_NotebookDocumentMetadata_to_js x7026)
            let (create :
              cells:vscode_NotebookCellData list ->
                ?metadata:vscode_NotebookDocumentMetadata -> unit -> t)
              =
              fun ~cells:(x7027 : vscode_NotebookCellData list) ->
                fun
                  ?metadata:(x7028 : vscode_NotebookDocumentMetadata option)
                  ->
                  fun () ->
                    t_of_js
                      (Ojs.new_obj_arr
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "NotebookData")
                         (let x7029 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x7029 "push"
                               [|(Ojs.list_to_js
                                    vscode_NotebookCellData_to_js x7027)|]);
                          (match x7028 with
                           | Some x7030 ->
                               ignore
                                 (Ojs.call x7029 "push"
                                    [|(vscode_NotebookDocumentMetadata_to_js
                                         x7030)|])
                           | None -> ());
                          x7029))
          end
        module NotebookCommunication =
          struct
            type t = vscode_NotebookCommunication
            let rec t_of_js : Ojs.t -> t =
              fun (x7033 : Ojs.t) -> vscode_NotebookCommunication_of_js x7033
            and t_to_js : t -> Ojs.t =
              fun (x7032 : vscode_NotebookCommunication) ->
                vscode_NotebookCommunication_to_js x7032
            let (get_editorId : t -> string) =
              fun (x7034 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7034) "editorId")
            let (get_onDidReceiveMessage : t -> any Event.t) =
              fun (x7035 : t) ->
                Event.t_of_js any_of_js
                  (Ojs.get_prop_ascii (t_to_js x7035) "onDidReceiveMessage")
            let (postMessage : t -> message:any -> bool Promise.t) =
              fun (x7038 : t) ->
                fun ~message:(x7037 : any) ->
                  Promise.t_of_js Ojs.bool_of_js
                    (Ojs.call (t_to_js x7038) "postMessage"
                       [|(any_to_js x7037)|])
            let (asWebviewUri : t -> localResource:Uri.t -> Uri.t) =
              fun (x7041 : t) ->
                fun ~localResource:(x7040 : Uri.t) ->
                  Uri.t_of_js
                    (Ojs.call (t_to_js x7041) "asWebviewUri"
                       [|(Uri.t_to_js x7040)|])
          end
        module NotebookDocumentShowOptions =
          struct
            type t = vscode_NotebookDocumentShowOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x7043 : Ojs.t) ->
                vscode_NotebookDocumentShowOptions_of_js x7043
            and t_to_js : t -> Ojs.t =
              fun (x7042 : vscode_NotebookDocumentShowOptions) ->
                vscode_NotebookDocumentShowOptions_to_js x7042
            let (get_viewColumn : t -> ViewColumn.t) =
              fun (x7044 : t) ->
                ViewColumn.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7044) "viewColumn")
            let (set_viewColumn : t -> ViewColumn.t -> unit) =
              fun (x7045 : t) ->
                fun (x7046 : ViewColumn.t) ->
                  Ojs.set_prop_ascii (t_to_js x7045) "viewColumn"
                    (ViewColumn.t_to_js x7046)
            let (get_preserveFocus : t -> bool) =
              fun (x7047 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x7047) "preserveFocus")
            let (set_preserveFocus : t -> bool -> unit) =
              fun (x7048 : t) ->
                fun (x7049 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7048) "preserveFocus"
                    (Ojs.bool_to_js x7049)
            let (get_preview : t -> bool) =
              fun (x7050 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x7050) "preview")
            let (set_preview : t -> bool -> unit) =
              fun (x7051 : t) ->
                fun (x7052 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7051) "preview"
                    (Ojs.bool_to_js x7052)
            let (get_selection : t -> vscode_NotebookCellRange) =
              fun (x7053 : t) ->
                vscode_NotebookCellRange_of_js
                  (Ojs.get_prop_ascii (t_to_js x7053) "selection")
            let (set_selection : t -> vscode_NotebookCellRange -> unit) =
              fun (x7054 : t) ->
                fun (x7055 : vscode_NotebookCellRange) ->
                  Ojs.set_prop_ascii (t_to_js x7054) "selection"
                    (vscode_NotebookCellRange_to_js x7055)
          end
        module Notebook =
          struct
            let (openNotebookDocument :
              uri:Uri.t -> vscode_NotebookDocument Promise.t) =
              fun ~uri:(x7056 : Uri.t) ->
                Promise.t_of_js vscode_NotebookDocument_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                     "openNotebookDocument" [|(Uri.t_to_js x7056)|])
            let (onDidOpenNotebookDocument : vscode_NotebookDocument Event.t)
              =
              Event.t_of_js vscode_NotebookDocument_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidOpenNotebookDocument")
            let (onDidCloseNotebookDocument :
              vscode_NotebookDocument Event.t) =
              Event.t_of_js vscode_NotebookDocument_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidCloseNotebookDocument")
            let (onDidSaveNotebookDocument : vscode_NotebookDocument Event.t)
              =
              Event.t_of_js vscode_NotebookDocument_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidSaveNotebookDocument")
            let (notebookDocuments : vscode_NotebookDocument list) =
              Ojs.list_of_js vscode_NotebookDocument_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "notebookDocuments")
            let (onDidChangeNotebookDocumentMetadata :
              vscode_NotebookDocumentMetadataChangeEvent Event.t) =
              Event.t_of_js vscode_NotebookDocumentMetadataChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidChangeNotebookDocumentMetadata")
            let (onDidChangeNotebookCells :
              vscode_NotebookCellsChangeEvent Event.t) =
              Event.t_of_js vscode_NotebookCellsChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidChangeNotebookCells")
            let (onDidChangeCellOutputs :
              vscode_NotebookCellOutputsChangeEvent Event.t) =
              Event.t_of_js vscode_NotebookCellOutputsChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidChangeCellOutputs")
            let (onDidChangeCellMetadata :
              vscode_NotebookCellMetadataChangeEvent Event.t) =
              Event.t_of_js vscode_NotebookCellMetadataChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidChangeCellMetadata")
            let (registerNotebookSerializer :
              notebookType:string ->
                provider:vscode_NotebookSerializer ->
                  ?options:vscode_NotebookDocumentContentOptions ->
                    unit -> Disposable.t)
              =
              fun ~notebookType:(x7066 : string) ->
                fun ~provider:(x7067 : vscode_NotebookSerializer) ->
                  fun
                    ?options:(x7068 :
                               vscode_NotebookDocumentContentOptions option)
                    ->
                    fun () ->
                      Disposable.t_of_js
                        (let x7071 =
                           Ojs.get_prop_ascii
                             (Ojs.get_prop_ascii Ojs.global "vscode")
                             "notebook" in
                         Ojs.call
                           (Ojs.get_prop_ascii x7071
                              "registerNotebookSerializer") "apply"
                           [|x7071;((let x7069 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x7069 "push"
                                          [|(Ojs.string_to_js x7066)|]);
                                     ignore
                                       (Ojs.call x7069 "push"
                                          [|(vscode_NotebookSerializer_to_js
                                               x7067)|]);
                                     (match x7068 with
                                      | Some x7070 ->
                                          ignore
                                            (Ojs.call x7069 "push"
                                               [|(vscode_NotebookDocumentContentOptions_to_js
                                                    x7070)|])
                                      | None -> ());
                                     x7069))|])
            let (createNotebookKernel :
              options:vscode_NotebookKernelOptions -> vscode_NotebookKernel2)
              =
              fun ~options:(x7072 : vscode_NotebookKernelOptions) ->
                vscode_NotebookKernel2_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                     "createNotebookKernel"
                     [|(vscode_NotebookKernelOptions_to_js x7072)|])
            let (registerNotebookContentProvider :
              notebookType:string ->
                provider:vscode_NotebookContentProvider ->
                  ?options:(vscode_NotebookDocumentContentOptions,
                    anonymous_interface_15) intersection2 ->
                    unit -> Disposable.t)
              =
              fun ~notebookType:(x7073 : string) ->
                fun ~provider:(x7074 : vscode_NotebookContentProvider) ->
                  fun
                    ?options:(x7075 :
                               (vscode_NotebookDocumentContentOptions,
                                 anonymous_interface_15) intersection2 option)
                    ->
                    fun () ->
                      Disposable.t_of_js
                        (let x7080 =
                           Ojs.get_prop_ascii
                             (Ojs.get_prop_ascii Ojs.global "vscode")
                             "notebook" in
                         Ojs.call
                           (Ojs.get_prop_ascii x7080
                              "registerNotebookContentProvider") "apply"
                           [|x7080;((let x7076 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x7076 "push"
                                          [|(Ojs.string_to_js x7073)|]);
                                     ignore
                                       (Ojs.call x7076 "push"
                                          [|(vscode_NotebookContentProvider_to_js
                                               x7074)|]);
                                     (match x7075 with
                                      | Some x7077 ->
                                          ignore
                                            (Ojs.call x7076 "push"
                                               [|(intersection2_to_js
                                                    vscode_NotebookDocumentContentOptions_to_js
                                                    anonymous_interface_15_to_js
                                                    x7077)|])
                                      | None -> ());
                                     x7076))|])
            let (createNotebookCellExecutionTask :
              uri:Uri.t ->
                index:float ->
                  kernelId:string ->
                    vscode_NotebookCellExecutionTask or_undefined)
              =
              fun ~uri:(x7081 : Uri.t) ->
                fun ~index:(x7082 : float) ->
                  fun ~kernelId:(x7083 : string) ->
                    or_undefined_of_js vscode_NotebookCellExecutionTask_of_js
                      (Ojs.call
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "notebook") "createNotebookCellExecutionTask"
                         [|(Uri.t_to_js x7081);(Ojs.float_to_js x7082);(
                           Ojs.string_to_js x7083)|])
            let (onDidChangeCellExecutionState :
              vscode_NotebookCellExecutionStateChangeEvent Event.t) =
              Event.t_of_js
                vscode_NotebookCellExecutionStateChangeEvent_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidChangeCellExecutionState")
            let (onDidChangeActiveNotebookKernel :
              anonymous_interface_4 Event.t) =
              Event.t_of_js anonymous_interface_4_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                   "onDidChangeActiveNotebookKernel")
            let (registerNotebookKernelProvider :
              selector:vscode_NotebookDocumentFilter ->
                provider:vscode_NotebookKernel vscode_NotebookKernelProvider
                  -> Disposable.t)
              =
              fun ~selector:(x7087 : vscode_NotebookDocumentFilter) ->
                fun
                  ~provider:(x7088 :
                              vscode_NotebookKernel
                                vscode_NotebookKernelProvider)
                  ->
                  Disposable.t_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                       "registerNotebookKernelProvider"
                       [|(vscode_NotebookDocumentFilter_to_js x7087);(
                         vscode_NotebookKernelProvider_to_js
                           vscode_NotebookKernel_to_js x7088)|])
            let (createNotebookEditorDecorationType :
              options:vscode_NotebookDecorationRenderOptions ->
                vscode_NotebookEditorDecorationType)
              =
              fun ~options:(x7090 : vscode_NotebookDecorationRenderOptions)
                ->
                vscode_NotebookEditorDecorationType_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "notebook")
                     "createNotebookEditorDecorationType"
                     [|(vscode_NotebookDecorationRenderOptions_to_js x7090)|])
            let (createCellStatusBarItem :
              cell:vscode_NotebookCell ->
                ?alignment:vscode_NotebookCellStatusBarAlignment ->
                  ?priority:float -> unit -> vscode_NotebookCellStatusBarItem)
              =
              fun ~cell:(x7091 : vscode_NotebookCell) ->
                fun
                  ?alignment:(x7092 :
                               vscode_NotebookCellStatusBarAlignment option)
                  ->
                  fun ?priority:(x7093 : float option) ->
                    fun () ->
                      vscode_NotebookCellStatusBarItem_of_js
                        (let x7097 =
                           Ojs.get_prop_ascii
                             (Ojs.get_prop_ascii Ojs.global "vscode")
                             "notebook" in
                         Ojs.call
                           (Ojs.get_prop_ascii x7097
                              "createCellStatusBarItem") "apply"
                           [|x7097;((let x7094 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x7094 "push"
                                          [|(vscode_NotebookCell_to_js x7091)|]);
                                     (match x7092 with
                                      | Some x7096 ->
                                          ignore
                                            (Ojs.call x7094 "push"
                                               [|(vscode_NotebookCellStatusBarAlignment_to_js
                                                    x7096)|])
                                      | None -> ());
                                     (match x7093 with
                                      | Some x7095 ->
                                          ignore
                                            (Ojs.call x7094 "push"
                                               [|(Ojs.float_to_js x7095)|])
                                      | None -> ());
                                     x7094))|])
            let (createConcatTextDocument :
              notebook:vscode_NotebookDocument ->
                ?selector:DocumentSelector.t ->
                  unit -> vscode_NotebookConcatTextDocument)
              =
              fun ~notebook:(x7098 : vscode_NotebookDocument) ->
                fun ?selector:(x7099 : DocumentSelector.t option) ->
                  fun () ->
                    vscode_NotebookConcatTextDocument_of_js
                      (let x7102 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "notebook" in
                       Ojs.call
                         (Ojs.get_prop_ascii x7102 "createConcatTextDocument")
                         "apply"
                         [|x7102;((let x7100 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x7100 "push"
                                        [|(vscode_NotebookDocument_to_js
                                             x7098)|]);
                                   (match x7099 with
                                    | Some x7101 ->
                                        ignore
                                          (Ojs.call x7100 "push"
                                             [|(DocumentSelector.t_to_js
                                                  x7101)|])
                                    | None -> ());
                                   x7100))|])
          end
        module NotebookCellOutputItem =
          struct
            type t = vscode_NotebookCellOutputItem
            let rec t_of_js : Ojs.t -> t =
              fun (x7104 : Ojs.t) ->
                vscode_NotebookCellOutputItem_of_js x7104
            and t_to_js : t -> Ojs.t =
              fun (x7103 : vscode_NotebookCellOutputItem) ->
                vscode_NotebookCellOutputItem_to_js x7103
            let (get_mime : t -> string) =
              fun (x7105 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7105) "mime")
            let (get_value : t -> unknown) =
              fun (x7106 : t) ->
                unknown_of_js (Ojs.get_prop_ascii (t_to_js x7106) "value")
            let (get_metadata : t -> (string, any) Record.t) =
              fun (x7107 : t) ->
                Record.t_of_js Ojs.string_of_js any_of_js
                  (Ojs.get_prop_ascii (t_to_js x7107) "metadata")
            let (create :
              mime:string ->
                value:unknown ->
                  ?metadata:(string, any) Record.t -> unit -> t)
              =
              fun ~mime:(x7110 : string) ->
                fun ~value:(x7111 : unknown) ->
                  fun ?metadata:(x7112 : (string, any) Record.t option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "NotebookCellOutputItem")
                           (let x7113 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x7113 "push"
                                 [|(Ojs.string_to_js x7110)|]);
                            ignore
                              (Ojs.call x7113 "push"
                                 [|(unknown_to_js x7111)|]);
                            (match x7112 with
                             | Some x7114 ->
                                 ignore
                                   (Ojs.call x7113 "push"
                                      [|(Record.t_to_js Ojs.string_to_js
                                           any_to_js x7114)|])
                             | None -> ());
                            x7113))
          end
        module NotebookCellOutput =
          struct
            type t = vscode_NotebookCellOutput
            let rec t_of_js : Ojs.t -> t =
              fun (x7118 : Ojs.t) -> vscode_NotebookCellOutput_of_js x7118
            and t_to_js : t -> Ojs.t =
              fun (x7117 : vscode_NotebookCellOutput) ->
                vscode_NotebookCellOutput_to_js x7117
            let (get_id : t -> string) =
              fun (x7119 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7119) "id")
            let (get_outputs : t -> vscode_NotebookCellOutputItem list) =
              fun (x7120 : t) ->
                Ojs.list_of_js vscode_NotebookCellOutputItem_of_js
                  (Ojs.get_prop_ascii (t_to_js x7120) "outputs")
            let (get_metadata : t -> (string, any) Record.t) =
              fun (x7122 : t) ->
                Record.t_of_js Ojs.string_of_js any_of_js
                  (Ojs.get_prop_ascii (t_to_js x7122) "metadata")
            let (create :
              outputs:vscode_NotebookCellOutputItem list ->
                ?metadata:(string, any) Record.t -> unit -> t)
              =
              fun ~outputs:(x7125 : vscode_NotebookCellOutputItem list) ->
                fun ?metadata:(x7126 : (string, any) Record.t option) ->
                  fun () ->
                    t_of_js
                      (Ojs.new_obj_arr
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "NotebookCellOutput")
                         (let x7127 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x7127 "push"
                               [|(Ojs.list_to_js
                                    vscode_NotebookCellOutputItem_to_js x7125)|]);
                          (match x7126 with
                           | Some x7128 ->
                               ignore
                                 (Ojs.call x7127 "push"
                                    [|(Record.t_to_js Ojs.string_to_js
                                         any_to_js x7128)|])
                           | None -> ());
                          x7127))
            let (create' :
              outputs:vscode_NotebookCellOutputItem list ->
                id:string -> ?metadata:(string, any) Record.t -> unit -> t)
              =
              fun ~outputs:(x7132 : vscode_NotebookCellOutputItem list) ->
                fun ~id:(x7133 : string) ->
                  fun ?metadata:(x7134 : (string, any) Record.t option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "NotebookCellOutput")
                           (let x7135 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x7135 "push"
                                 [|(Ojs.list_to_js
                                      vscode_NotebookCellOutputItem_to_js
                                      x7132)|]);
                            ignore
                              (Ojs.call x7135 "push"
                                 [|(Ojs.string_to_js x7133)|]);
                            (match x7134 with
                             | Some x7136 ->
                                 ignore
                                   (Ojs.call x7135 "push"
                                      [|(Record.t_to_js Ojs.string_to_js
                                           any_to_js x7136)|])
                             | None -> ());
                            x7135))
          end
        module WorkspaceEdit =
          struct
            type t = vscode_WorkspaceEdit
            let rec t_of_js : Ojs.t -> t =
              fun (x7141 : Ojs.t) -> vscode_WorkspaceEdit_of_js x7141
            and t_to_js : t -> Ojs.t =
              fun (x7140 : vscode_WorkspaceEdit) ->
                vscode_WorkspaceEdit_to_js x7140
            let (replaceNotebookMetadata :
              t -> uri:Uri.t -> value:vscode_NotebookDocumentMetadata -> unit)
              =
              fun (x7144 : t) ->
                fun ~uri:(x7142 : Uri.t) ->
                  fun ~value:(x7143 : vscode_NotebookDocumentMetadata) ->
                    ignore
                      (Ojs.call (t_to_js x7144) "replaceNotebookMetadata"
                         [|(Uri.t_to_js x7142);(vscode_NotebookDocumentMetadata_to_js
                                                  x7143)|])
            let (replaceNotebookCells :
              t ->
                uri:Uri.t ->
                  start:float ->
                    end_:float ->
                      cells:vscode_NotebookCellData list ->
                        ?metadata:WorkspaceEditEntryMetadata.t ->
                          unit -> unit)
              =
              fun (x7153 : t) ->
                fun ~uri:(x7145 : Uri.t) ->
                  fun ~start:(x7146 : float) ->
                    fun ~end_:(x7147 : float) ->
                      fun ~cells:(x7148 : vscode_NotebookCellData list) ->
                        fun
                          ?metadata:(x7149 :
                                      WorkspaceEditEntryMetadata.t option)
                          ->
                          fun () ->
                            ignore
                              (let x7154 = t_to_js x7153 in
                               Ojs.call
                                 (Ojs.get_prop_ascii x7154
                                    "replaceNotebookCells") "apply"
                                 [|x7154;((let x7150 =
                                             Ojs.new_obj
                                               (Ojs.get_prop_ascii Ojs.global
                                                  "Array") [||] in
                                           ignore
                                             (Ojs.call x7150 "push"
                                                [|(Uri.t_to_js x7145)|]);
                                           ignore
                                             (Ojs.call x7150 "push"
                                                [|(Ojs.float_to_js x7146)|]);
                                           ignore
                                             (Ojs.call x7150 "push"
                                                [|(Ojs.float_to_js x7147)|]);
                                           ignore
                                             (Ojs.call x7150 "push"
                                                [|(Ojs.list_to_js
                                                     vscode_NotebookCellData_to_js
                                                     x7148)|]);
                                           (match x7149 with
                                            | Some x7151 ->
                                                ignore
                                                  (Ojs.call x7150 "push"
                                                     [|(WorkspaceEditEntryMetadata.t_to_js
                                                          x7151)|])
                                            | None -> ());
                                           x7150))|])
            let (replaceNotebookCellMetadata :
              t ->
                uri:Uri.t ->
                  index:float ->
                    cellMetadata:vscode_NotebookCellMetadata ->
                      ?metadata:WorkspaceEditEntryMetadata.t -> unit -> unit)
              =
              fun (x7161 : t) ->
                fun ~uri:(x7155 : Uri.t) ->
                  fun ~index:(x7156 : float) ->
                    fun ~cellMetadata:(x7157 : vscode_NotebookCellMetadata)
                      ->
                      fun
                        ?metadata:(x7158 :
                                    WorkspaceEditEntryMetadata.t option)
                        ->
                        fun () ->
                          ignore
                            (let x7162 = t_to_js x7161 in
                             Ojs.call
                               (Ojs.get_prop_ascii x7162
                                  "replaceNotebookCellMetadata") "apply"
                               [|x7162;((let x7159 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x7159 "push"
                                              [|(Uri.t_to_js x7155)|]);
                                         ignore
                                           (Ojs.call x7159 "push"
                                              [|(Ojs.float_to_js x7156)|]);
                                         ignore
                                           (Ojs.call x7159 "push"
                                              [|(vscode_NotebookCellMetadata_to_js
                                                   x7157)|]);
                                         (match x7158 with
                                          | Some x7160 ->
                                              ignore
                                                (Ojs.call x7159 "push"
                                                   [|(WorkspaceEditEntryMetadata.t_to_js
                                                        x7160)|])
                                          | None -> ());
                                         x7159))|])
            let (replaceNotebookCellOutput :
              t ->
                uri:Uri.t ->
                  index:float ->
                    outputs:vscode_NotebookCellOutput list ->
                      ?metadata:WorkspaceEditEntryMetadata.t -> unit -> unit)
              =
              fun (x7170 : t) ->
                fun ~uri:(x7163 : Uri.t) ->
                  fun ~index:(x7164 : float) ->
                    fun ~outputs:(x7165 : vscode_NotebookCellOutput list) ->
                      fun
                        ?metadata:(x7166 :
                                    WorkspaceEditEntryMetadata.t option)
                        ->
                        fun () ->
                          ignore
                            (let x7171 = t_to_js x7170 in
                             Ojs.call
                               (Ojs.get_prop_ascii x7171
                                  "replaceNotebookCellOutput") "apply"
                               [|x7171;((let x7167 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x7167 "push"
                                              [|(Uri.t_to_js x7163)|]);
                                         ignore
                                           (Ojs.call x7167 "push"
                                              [|(Ojs.float_to_js x7164)|]);
                                         ignore
                                           (Ojs.call x7167 "push"
                                              [|(Ojs.list_to_js
                                                   vscode_NotebookCellOutput_to_js
                                                   x7165)|]);
                                         (match x7166 with
                                          | Some x7168 ->
                                              ignore
                                                (Ojs.call x7167 "push"
                                                   [|(WorkspaceEditEntryMetadata.t_to_js
                                                        x7168)|])
                                          | None -> ());
                                         x7167))|])
            let (appendNotebookCellOutput :
              t ->
                uri:Uri.t ->
                  index:float ->
                    outputs:vscode_NotebookCellOutput list ->
                      ?metadata:WorkspaceEditEntryMetadata.t -> unit -> unit)
              =
              fun (x7179 : t) ->
                fun ~uri:(x7172 : Uri.t) ->
                  fun ~index:(x7173 : float) ->
                    fun ~outputs:(x7174 : vscode_NotebookCellOutput list) ->
                      fun
                        ?metadata:(x7175 :
                                    WorkspaceEditEntryMetadata.t option)
                        ->
                        fun () ->
                          ignore
                            (let x7180 = t_to_js x7179 in
                             Ojs.call
                               (Ojs.get_prop_ascii x7180
                                  "appendNotebookCellOutput") "apply"
                               [|x7180;((let x7176 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x7176 "push"
                                              [|(Uri.t_to_js x7172)|]);
                                         ignore
                                           (Ojs.call x7176 "push"
                                              [|(Ojs.float_to_js x7173)|]);
                                         ignore
                                           (Ojs.call x7176 "push"
                                              [|(Ojs.list_to_js
                                                   vscode_NotebookCellOutput_to_js
                                                   x7174)|]);
                                         (match x7175 with
                                          | Some x7177 ->
                                              ignore
                                                (Ojs.call x7176 "push"
                                                   [|(WorkspaceEditEntryMetadata.t_to_js
                                                        x7177)|])
                                          | None -> ());
                                         x7176))|])
            let (replaceNotebookCellOutputItems :
              t ->
                uri:Uri.t ->
                  index:float ->
                    outputId:string ->
                      items:vscode_NotebookCellOutputItem list ->
                        ?metadata:WorkspaceEditEntryMetadata.t ->
                          unit -> unit)
              =
              fun (x7189 : t) ->
                fun ~uri:(x7181 : Uri.t) ->
                  fun ~index:(x7182 : float) ->
                    fun ~outputId:(x7183 : string) ->
                      fun ~items:(x7184 : vscode_NotebookCellOutputItem list)
                        ->
                        fun
                          ?metadata:(x7185 :
                                      WorkspaceEditEntryMetadata.t option)
                          ->
                          fun () ->
                            ignore
                              (let x7190 = t_to_js x7189 in
                               Ojs.call
                                 (Ojs.get_prop_ascii x7190
                                    "replaceNotebookCellOutputItems") "apply"
                                 [|x7190;((let x7186 =
                                             Ojs.new_obj
                                               (Ojs.get_prop_ascii Ojs.global
                                                  "Array") [||] in
                                           ignore
                                             (Ojs.call x7186 "push"
                                                [|(Uri.t_to_js x7181)|]);
                                           ignore
                                             (Ojs.call x7186 "push"
                                                [|(Ojs.float_to_js x7182)|]);
                                           ignore
                                             (Ojs.call x7186 "push"
                                                [|(Ojs.string_to_js x7183)|]);
                                           ignore
                                             (Ojs.call x7186 "push"
                                                [|(Ojs.list_to_js
                                                     vscode_NotebookCellOutputItem_to_js
                                                     x7184)|]);
                                           (match x7185 with
                                            | Some x7187 ->
                                                ignore
                                                  (Ojs.call x7186 "push"
                                                     [|(WorkspaceEditEntryMetadata.t_to_js
                                                          x7187)|])
                                            | None -> ());
                                           x7186))|])
            let (appendNotebookCellOutputItems :
              t ->
                uri:Uri.t ->
                  index:float ->
                    outputId:string ->
                      items:vscode_NotebookCellOutputItem list ->
                        ?metadata:WorkspaceEditEntryMetadata.t ->
                          unit -> unit)
              =
              fun (x7199 : t) ->
                fun ~uri:(x7191 : Uri.t) ->
                  fun ~index:(x7192 : float) ->
                    fun ~outputId:(x7193 : string) ->
                      fun ~items:(x7194 : vscode_NotebookCellOutputItem list)
                        ->
                        fun
                          ?metadata:(x7195 :
                                      WorkspaceEditEntryMetadata.t option)
                          ->
                          fun () ->
                            ignore
                              (let x7200 = t_to_js x7199 in
                               Ojs.call
                                 (Ojs.get_prop_ascii x7200
                                    "appendNotebookCellOutputItems") "apply"
                                 [|x7200;((let x7196 =
                                             Ojs.new_obj
                                               (Ojs.get_prop_ascii Ojs.global
                                                  "Array") [||] in
                                           ignore
                                             (Ojs.call x7196 "push"
                                                [|(Uri.t_to_js x7191)|]);
                                           ignore
                                             (Ojs.call x7196 "push"
                                                [|(Ojs.float_to_js x7192)|]);
                                           ignore
                                             (Ojs.call x7196 "push"
                                                [|(Ojs.string_to_js x7193)|]);
                                           ignore
                                             (Ojs.call x7196 "push"
                                                [|(Ojs.list_to_js
                                                     vscode_NotebookCellOutputItem_to_js
                                                     x7194)|]);
                                           (match x7195 with
                                            | Some x7197 ->
                                                ignore
                                                  (Ojs.call x7196 "push"
                                                     [|(WorkspaceEditEntryMetadata.t_to_js
                                                          x7197)|])
                                            | None -> ());
                                           x7196))|])
          end
        module NotebookEditorEdit =
          struct
            type t = vscode_NotebookEditorEdit
            let rec t_of_js : Ojs.t -> t =
              fun (x7202 : Ojs.t) -> vscode_NotebookEditorEdit_of_js x7202
            and t_to_js : t -> Ojs.t =
              fun (x7201 : vscode_NotebookEditorEdit) ->
                vscode_NotebookEditorEdit_to_js x7201
            let (replaceMetadata :
              t -> value:vscode_NotebookDocumentMetadata -> unit) =
              fun (x7204 : t) ->
                fun ~value:(x7203 : vscode_NotebookDocumentMetadata) ->
                  ignore
                    (Ojs.call (t_to_js x7204) "replaceMetadata"
                       [|(vscode_NotebookDocumentMetadata_to_js x7203)|])
            let (replaceCells :
              t ->
                start:float ->
                  end_:float -> cells:vscode_NotebookCellData list -> unit)
              =
              fun (x7209 : t) ->
                fun ~start:(x7205 : float) ->
                  fun ~end_:(x7206 : float) ->
                    fun ~cells:(x7207 : vscode_NotebookCellData list) ->
                      ignore
                        (Ojs.call (t_to_js x7209) "replaceCells"
                           [|(Ojs.float_to_js x7205);(Ojs.float_to_js x7206);(
                             Ojs.list_to_js vscode_NotebookCellData_to_js
                               x7207)|])
            let (replaceCellOutput :
              t ->
                index:float -> outputs:vscode_NotebookCellOutput list -> unit)
              =
              fun (x7213 : t) ->
                fun ~index:(x7210 : float) ->
                  fun ~outputs:(x7211 : vscode_NotebookCellOutput list) ->
                    ignore
                      (Ojs.call (t_to_js x7213) "replaceCellOutput"
                         [|(Ojs.float_to_js x7210);(Ojs.list_to_js
                                                      vscode_NotebookCellOutput_to_js
                                                      x7211)|])
            let (replaceCellMetadata :
              t ->
                index:float -> metadata:vscode_NotebookCellMetadata -> unit)
              =
              fun (x7216 : t) ->
                fun ~index:(x7214 : float) ->
                  fun ~metadata:(x7215 : vscode_NotebookCellMetadata) ->
                    ignore
                      (Ojs.call (t_to_js x7216) "replaceCellMetadata"
                         [|(Ojs.float_to_js x7214);(vscode_NotebookCellMetadata_to_js
                                                      x7215)|])
          end
        module NotebookSerializer =
          struct
            type t = vscode_NotebookSerializer
            let rec t_of_js : Ojs.t -> t =
              fun (x7218 : Ojs.t) -> vscode_NotebookSerializer_of_js x7218
            and t_to_js : t -> Ojs.t =
              fun (x7217 : vscode_NotebookSerializer) ->
                vscode_NotebookSerializer_to_js x7217
            let (dataToNotebook :
              t ->
                data:Uint8Array.t ->
                  (vscode_NotebookData, vscode_NotebookData Promise.t) union2)
              =
              fun (x7220 : t) ->
                fun ~data:(x7219 : Uint8Array.t) ->
                  union2_of_js vscode_NotebookData_of_js
                    (fun (x7222 : Ojs.t) ->
                       Promise.t_of_js vscode_NotebookData_of_js x7222)
                    (Ojs.call (t_to_js x7220) "dataToNotebook"
                       [|(Uint8Array.t_to_js x7219)|])
            let (notebookToData :
              t ->
                data:vscode_NotebookData ->
                  (Uint8Array.t, Uint8Array.t Promise.t) union2)
              =
              fun (x7225 : t) ->
                fun ~data:(x7224 : vscode_NotebookData) ->
                  union2_of_js Uint8Array.t_of_js
                    (fun (x7227 : Ojs.t) ->
                       Promise.t_of_js Uint8Array.t_of_js x7227)
                    (Ojs.call (t_to_js x7225) "notebookToData"
                       [|(vscode_NotebookData_to_js x7224)|])
          end
        module NotebookFilter =
          struct
            type t = vscode_NotebookFilter
            let rec t_of_js : Ojs.t -> t =
              fun (x7230 : Ojs.t) -> vscode_NotebookFilter_of_js x7230
            and t_to_js : t -> Ojs.t =
              fun (x7229 : vscode_NotebookFilter) ->
                vscode_NotebookFilter_to_js x7229
            let (get_viewType : t -> string) =
              fun (x7231 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7231) "viewType")
            let (get_scheme : t -> string) =
              fun (x7232 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7232) "scheme")
            let (get_pattern : t -> GlobPattern.t) =
              fun (x7233 : t) ->
                GlobPattern.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7233) "pattern")
          end
        module NotebookSelector =
          struct
            type t = vscode_NotebookSelector
            let rec t_of_js : Ojs.t -> t =
              fun (x7235 : Ojs.t) -> vscode_NotebookSelector_of_js x7235
            and t_to_js : t -> Ojs.t =
              fun (x7234 : vscode_NotebookSelector) ->
                vscode_NotebookSelector_to_js x7234
          end
        module NotebookKernel2 =
          struct
            type t = vscode_NotebookKernel2
            let rec t_of_js : Ojs.t -> t =
              fun (x7237 : Ojs.t) -> vscode_NotebookKernel2_of_js x7237
            and t_to_js : t -> Ojs.t =
              fun (x7236 : vscode_NotebookKernel2) ->
                vscode_NotebookKernel2_to_js x7236
            let (get_id : t -> string) =
              fun (x7238 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7238) "id")
            let (get_selector : t -> vscode_NotebookSelector) =
              fun (x7239 : t) ->
                vscode_NotebookSelector_of_js
                  (Ojs.get_prop_ascii (t_to_js x7239) "selector")
            let (get_label : t -> string) =
              fun (x7240 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7240) "label")
            let (set_label : t -> string -> unit) =
              fun (x7241 : t) ->
                fun (x7242 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7241) "label"
                    (Ojs.string_to_js x7242)
            let (get_description : t -> string) =
              fun (x7243 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7243) "description")
            let (set_description : t -> string -> unit) =
              fun (x7244 : t) ->
                fun (x7245 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7244) "description"
                    (Ojs.string_to_js x7245)
            let (get_supportedLanguages : t -> string list) =
              fun (x7246 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7246) "supportedLanguages")
            let (set_supportedLanguages : t -> string list -> unit) =
              fun (x7248 : t) ->
                fun (x7249 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x7248) "supportedLanguages"
                    (Ojs.list_to_js Ojs.string_to_js x7249)
            let (get_hasExecutionOrder : t -> bool) =
              fun (x7251 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x7251) "hasExecutionOrder")
            let (set_hasExecutionOrder : t -> bool -> unit) =
              fun (x7252 : t) ->
                fun (x7253 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7252) "hasExecutionOrder"
                    (Ojs.bool_to_js x7253)
            let (executeHandler :
              t -> executions:vscode_NotebookCellExecutionTask list -> unit)
              =
              fun (x7256 : t) ->
                fun
                  ~executions:(x7254 : vscode_NotebookCellExecutionTask list)
                  ->
                  ignore
                    (Ojs.call (t_to_js x7256) "executeHandler"
                       [|(Ojs.list_to_js
                            vscode_NotebookCellExecutionTask_to_js x7254)|])
            let (interruptHandler :
              t -> notebook:vscode_NotebookDocument -> unit) =
              fun (x7258 : t) ->
                fun ~notebook:(x7257 : vscode_NotebookDocument) ->
                  ignore
                    (Ojs.call (t_to_js x7258) "interruptHandler"
                       [|(vscode_NotebookDocument_to_js x7257)|])
            let (dispose : t -> unit) =
              fun (x7259 : t) ->
                ignore (Ojs.call (t_to_js x7259) "dispose" [||])
            let (createNotebookCellExecutionTask :
              t ->
                cell:vscode_NotebookCell -> vscode_NotebookCellExecutionTask)
              =
              fun (x7261 : t) ->
                fun ~cell:(x7260 : vscode_NotebookCell) ->
                  vscode_NotebookCellExecutionTask_of_js
                    (Ojs.call (t_to_js x7261)
                       "createNotebookCellExecutionTask"
                       [|(vscode_NotebookCell_to_js x7260)|])
          end
        module NotebookKernelOptions =
          struct
            type t = vscode_NotebookKernelOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x7263 : Ojs.t) -> vscode_NotebookKernelOptions_of_js x7263
            and t_to_js : t -> Ojs.t =
              fun (x7262 : vscode_NotebookKernelOptions) ->
                vscode_NotebookKernelOptions_to_js x7262
            let (get_id : t -> string) =
              fun (x7264 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7264) "id")
            let (set_id : t -> string -> unit) =
              fun (x7265 : t) ->
                fun (x7266 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7265) "id"
                    (Ojs.string_to_js x7266)
            let (get_label : t -> string) =
              fun (x7267 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7267) "label")
            let (set_label : t -> string -> unit) =
              fun (x7268 : t) ->
                fun (x7269 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7268) "label"
                    (Ojs.string_to_js x7269)
            let (get_description : t -> string) =
              fun (x7270 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7270) "description")
            let (set_description : t -> string -> unit) =
              fun (x7271 : t) ->
                fun (x7272 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7271) "description"
                    (Ojs.string_to_js x7272)
            let (get_selector : t -> vscode_NotebookSelector) =
              fun (x7273 : t) ->
                vscode_NotebookSelector_of_js
                  (Ojs.get_prop_ascii (t_to_js x7273) "selector")
            let (set_selector : t -> vscode_NotebookSelector -> unit) =
              fun (x7274 : t) ->
                fun (x7275 : vscode_NotebookSelector) ->
                  Ojs.set_prop_ascii (t_to_js x7274) "selector"
                    (vscode_NotebookSelector_to_js x7275)
            let (get_supportedLanguages : t -> string list) =
              fun (x7276 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7276) "supportedLanguages")
            let (set_supportedLanguages : t -> string list -> unit) =
              fun (x7278 : t) ->
                fun (x7279 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x7278) "supportedLanguages"
                    (Ojs.list_to_js Ojs.string_to_js x7279)
            let (get_hasExecutionOrder : t -> bool) =
              fun (x7281 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x7281) "hasExecutionOrder")
            let (set_hasExecutionOrder : t -> bool -> unit) =
              fun (x7282 : t) ->
                fun (x7283 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7282) "hasExecutionOrder"
                    (Ojs.bool_to_js x7283)
            let (executeHandler :
              t -> executions:vscode_NotebookCellExecutionTask list -> unit)
              =
              fun (x7286 : t) ->
                fun
                  ~executions:(x7284 : vscode_NotebookCellExecutionTask list)
                  ->
                  ignore
                    (Ojs.call (t_to_js x7286) "executeHandler"
                       [|(Ojs.list_to_js
                            vscode_NotebookCellExecutionTask_to_js x7284)|])
            let (interruptHandler :
              t -> notebook:vscode_NotebookDocument -> unit) =
              fun (x7288 : t) ->
                fun ~notebook:(x7287 : vscode_NotebookDocument) ->
                  ignore
                    (Ojs.call (t_to_js x7288) "interruptHandler"
                       [|(vscode_NotebookDocument_to_js x7287)|])
          end
        module NotebookDocumentBackup =
          struct
            type t = vscode_NotebookDocumentBackup
            let rec t_of_js : Ojs.t -> t =
              fun (x7290 : Ojs.t) ->
                vscode_NotebookDocumentBackup_of_js x7290
            and t_to_js : t -> Ojs.t =
              fun (x7289 : vscode_NotebookDocumentBackup) ->
                vscode_NotebookDocumentBackup_to_js x7289
            let (get_id : t -> string) =
              fun (x7291 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7291) "id")
            let (delete : t -> unit) =
              fun (x7292 : t) ->
                ignore (Ojs.call (t_to_js x7292) "delete" [||])
          end
        module NotebookDocumentBackupContext =
          struct
            type t = vscode_NotebookDocumentBackupContext
            let rec t_of_js : Ojs.t -> t =
              fun (x7294 : Ojs.t) ->
                vscode_NotebookDocumentBackupContext_of_js x7294
            and t_to_js : t -> Ojs.t =
              fun (x7293 : vscode_NotebookDocumentBackupContext) ->
                vscode_NotebookDocumentBackupContext_to_js x7293
            let (get_destination : t -> Uri.t) =
              fun (x7295 : t) ->
                Uri.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7295) "destination")
          end
        module NotebookDocumentOpenContext =
          struct
            type t = vscode_NotebookDocumentOpenContext
            let rec t_of_js : Ojs.t -> t =
              fun (x7297 : Ojs.t) ->
                vscode_NotebookDocumentOpenContext_of_js x7297
            and t_to_js : t -> Ojs.t =
              fun (x7296 : vscode_NotebookDocumentOpenContext) ->
                vscode_NotebookDocumentOpenContext_to_js x7296
            let (get_backupId : t -> string) =
              fun (x7298 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7298) "backupId")
            let (get_untitledDocumentData : t -> Uint8Array.t) =
              fun (x7299 : t) ->
                Uint8Array.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7299) "untitledDocumentData")
          end
        module NotebookContentProvider =
          struct
            type t = vscode_NotebookContentProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x7301 : Ojs.t) ->
                vscode_NotebookContentProvider_of_js x7301
            and t_to_js : t -> Ojs.t =
              fun (x7300 : vscode_NotebookContentProvider) ->
                vscode_NotebookContentProvider_to_js x7300
            let (get_options : t -> vscode_NotebookDocumentContentOptions) =
              fun (x7302 : t) ->
                vscode_NotebookDocumentContentOptions_of_js
                  (Ojs.get_prop_ascii (t_to_js x7302) "options")
            let (get_onDidChangeNotebookContentOptions :
              t -> vscode_NotebookDocumentContentOptions Event.t) =
              fun (x7303 : t) ->
                Event.t_of_js vscode_NotebookDocumentContentOptions_of_js
                  (Ojs.get_prop_ascii (t_to_js x7303)
                     "onDidChangeNotebookContentOptions")
            let (openNotebook :
              t ->
                uri:Uri.t ->
                  openContext:vscode_NotebookDocumentOpenContext ->
                    token:CancellationToken.t ->
                      (vscode_NotebookData, vscode_NotebookData Promise.t)
                        union2)
              =
              fun (x7308 : t) ->
                fun ~uri:(x7305 : Uri.t) ->
                  fun
                    ~openContext:(x7306 : vscode_NotebookDocumentOpenContext)
                    ->
                    fun ~token:(x7307 : CancellationToken.t) ->
                      union2_of_js vscode_NotebookData_of_js
                        (fun (x7310 : Ojs.t) ->
                           Promise.t_of_js vscode_NotebookData_of_js x7310)
                        (Ojs.call (t_to_js x7308) "openNotebook"
                           [|(Uri.t_to_js x7305);(vscode_NotebookDocumentOpenContext_to_js
                                                    x7306);(CancellationToken.t_to_js
                                                              x7307)|])
            let (saveNotebook :
              t ->
                document:vscode_NotebookDocument ->
                  token:CancellationToken.t -> unit Promise.t)
              =
              fun (x7314 : t) ->
                fun ~document:(x7312 : vscode_NotebookDocument) ->
                  fun ~token:(x7313 : CancellationToken.t) ->
                    Promise.t_of_js Ojs.unit_of_js
                      (Ojs.call (t_to_js x7314) "saveNotebook"
                         [|(vscode_NotebookDocument_to_js x7312);(CancellationToken.t_to_js
                                                                    x7313)|])
            let (saveNotebookAs :
              t ->
                targetResource:Uri.t ->
                  document:vscode_NotebookDocument ->
                    token:CancellationToken.t -> unit Promise.t)
              =
              fun (x7319 : t) ->
                fun ~targetResource:(x7316 : Uri.t) ->
                  fun ~document:(x7317 : vscode_NotebookDocument) ->
                    fun ~token:(x7318 : CancellationToken.t) ->
                      Promise.t_of_js Ojs.unit_of_js
                        (Ojs.call (t_to_js x7319) "saveNotebookAs"
                           [|(Uri.t_to_js x7316);(vscode_NotebookDocument_to_js
                                                    x7317);(CancellationToken.t_to_js
                                                              x7318)|])
            let (backupNotebook :
              t ->
                document:vscode_NotebookDocument ->
                  context:vscode_NotebookDocumentBackupContext ->
                    token:CancellationToken.t ->
                      vscode_NotebookDocumentBackup Promise.t)
              =
              fun (x7324 : t) ->
                fun ~document:(x7321 : vscode_NotebookDocument) ->
                  fun ~context:(x7322 : vscode_NotebookDocumentBackupContext)
                    ->
                    fun ~token:(x7323 : CancellationToken.t) ->
                      Promise.t_of_js vscode_NotebookDocumentBackup_of_js
                        (Ojs.call (t_to_js x7324) "backupNotebook"
                           [|(vscode_NotebookDocument_to_js x7321);(vscode_NotebookDocumentBackupContext_to_js
                                                                    x7322);(
                             CancellationToken.t_to_js x7323)|])
          end
        module NotebookKernel =
          struct
            type t = vscode_NotebookKernel
            let rec t_of_js : Ojs.t -> t =
              fun (x7327 : Ojs.t) -> vscode_NotebookKernel_of_js x7327
            and t_to_js : t -> Ojs.t =
              fun (x7326 : vscode_NotebookKernel) ->
                vscode_NotebookKernel_to_js x7326
            let (get_id : t -> string) =
              fun (x7328 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7328) "id")
            let (get_label : t -> string) =
              fun (x7329 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7329) "label")
            let (set_label : t -> string -> unit) =
              fun (x7330 : t) ->
                fun (x7331 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7330) "label"
                    (Ojs.string_to_js x7331)
            let (get_description : t -> string) =
              fun (x7332 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7332) "description")
            let (set_description : t -> string -> unit) =
              fun (x7333 : t) ->
                fun (x7334 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7333) "description"
                    (Ojs.string_to_js x7334)
            let (get_detail : t -> string) =
              fun (x7335 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7335) "detail")
            let (set_detail : t -> string -> unit) =
              fun (x7336 : t) ->
                fun (x7337 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7336) "detail"
                    (Ojs.string_to_js x7337)
            let (get_isPreferred : t -> bool) =
              fun (x7338 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x7338) "isPreferred")
            let (set_isPreferred : t -> bool -> unit) =
              fun (x7339 : t) ->
                fun (x7340 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7339) "isPreferred"
                    (Ojs.bool_to_js x7340)
            let (get_preloads : t -> Uri.t list) =
              fun (x7341 : t) ->
                Ojs.list_of_js Uri.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7341) "preloads")
            let (set_preloads : t -> Uri.t list -> unit) =
              fun (x7343 : t) ->
                fun (x7344 : Uri.t list) ->
                  Ojs.set_prop_ascii (t_to_js x7343) "preloads"
                    (Ojs.list_to_js Uri.t_to_js x7344)
            let (get_supportedLanguages : t -> string list) =
              fun (x7346 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7346) "supportedLanguages")
            let (set_supportedLanguages : t -> string list -> unit) =
              fun (x7348 : t) ->
                fun (x7349 : string list) ->
                  Ojs.set_prop_ascii (t_to_js x7348) "supportedLanguages"
                    (Ojs.list_to_js Ojs.string_to_js x7349)
            let (interrupt : t -> document:vscode_NotebookDocument -> unit) =
              fun (x7352 : t) ->
                fun ~document:(x7351 : vscode_NotebookDocument) ->
                  ignore
                    (Ojs.call (t_to_js x7352) "interrupt"
                       [|(vscode_NotebookDocument_to_js x7351)|])
            let (executeCellsRequest :
              t ->
                document:vscode_NotebookDocument ->
                  ranges:vscode_NotebookCellRange list -> unit Promise.t)
              =
              fun (x7356 : t) ->
                fun ~document:(x7353 : vscode_NotebookDocument) ->
                  fun ~ranges:(x7354 : vscode_NotebookCellRange list) ->
                    Promise.t_of_js Ojs.unit_of_js
                      (Ojs.call (t_to_js x7356) "executeCellsRequest"
                         [|(vscode_NotebookDocument_to_js x7353);(Ojs.list_to_js
                                                                    vscode_NotebookCellRange_to_js
                                                                    x7354)|])
          end
        module NotebookCellExecuteStartContext =
          struct
            type t = vscode_NotebookCellExecuteStartContext
            let rec t_of_js : Ojs.t -> t =
              fun (x7359 : Ojs.t) ->
                vscode_NotebookCellExecuteStartContext_of_js x7359
            and t_to_js : t -> Ojs.t =
              fun (x7358 : vscode_NotebookCellExecuteStartContext) ->
                vscode_NotebookCellExecuteStartContext_to_js x7358
            let (get_startTime : t -> float) =
              fun (x7360 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7360) "startTime")
            let (set_startTime : t -> float -> unit) =
              fun (x7361 : t) ->
                fun (x7362 : float) ->
                  Ojs.set_prop_ascii (t_to_js x7361) "startTime"
                    (Ojs.float_to_js x7362)
          end
        module NotebookCellExecuteEndContext =
          struct
            type t = vscode_NotebookCellExecuteEndContext
            let rec t_of_js : Ojs.t -> t =
              fun (x7364 : Ojs.t) ->
                vscode_NotebookCellExecuteEndContext_of_js x7364
            and t_to_js : t -> Ojs.t =
              fun (x7363 : vscode_NotebookCellExecuteEndContext) ->
                vscode_NotebookCellExecuteEndContext_to_js x7363
            let (get_success : t -> bool) =
              fun (x7365 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x7365) "success")
            let (set_success : t -> bool -> unit) =
              fun (x7366 : t) ->
                fun (x7367 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7366) "success"
                    (Ojs.bool_to_js x7367)
            let (get_duration : t -> float) =
              fun (x7368 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7368) "duration")
            let (set_duration : t -> float -> unit) =
              fun (x7369 : t) ->
                fun (x7370 : float) ->
                  Ojs.set_prop_ascii (t_to_js x7369) "duration"
                    (Ojs.float_to_js x7370)
          end
        module NotebookCellExecutionTask =
          struct
            type t = vscode_NotebookCellExecutionTask
            let rec t_of_js : Ojs.t -> t =
              fun (x7372 : Ojs.t) ->
                vscode_NotebookCellExecutionTask_of_js x7372
            and t_to_js : t -> Ojs.t =
              fun (x7371 : vscode_NotebookCellExecutionTask) ->
                vscode_NotebookCellExecutionTask_to_js x7371
            let (get_document : t -> vscode_NotebookDocument) =
              fun (x7373 : t) ->
                vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x7373) "document")
            let (get_cell : t -> vscode_NotebookCell) =
              fun (x7374 : t) ->
                vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x7374) "cell")
            let (start :
              t ->
                ?context:vscode_NotebookCellExecuteStartContext ->
                  unit -> unit)
              =
              fun (x7378 : t) ->
                fun
                  ?context:(x7375 :
                             vscode_NotebookCellExecuteStartContext option)
                  ->
                  fun () ->
                    ignore
                      (let x7379 = t_to_js x7378 in
                       Ojs.call (Ojs.get_prop_ascii x7379 "start") "apply"
                         [|x7379;((let x7376 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   (match x7375 with
                                    | Some x7377 ->
                                        ignore
                                          (Ojs.call x7376 "push"
                                             [|(vscode_NotebookCellExecuteStartContext_to_js
                                                  x7377)|])
                                    | None -> ());
                                   x7376))|])
            let (get_executionOrder : t -> float or_undefined) =
              fun (x7380 : t) ->
                or_undefined_of_js Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7380) "executionOrder")
            let (set_executionOrder : t -> float or_undefined -> unit) =
              fun (x7382 : t) ->
                fun (x7383 : float or_undefined) ->
                  Ojs.set_prop_ascii (t_to_js x7382) "executionOrder"
                    (or_undefined_to_js Ojs.float_to_js x7383)
            let (end_ :
              t ->
                ?result:vscode_NotebookCellExecuteEndContext -> unit -> unit)
              =
              fun (x7388 : t) ->
                fun
                  ?result:(x7385 :
                            vscode_NotebookCellExecuteEndContext option)
                  ->
                  fun () ->
                    ignore
                      (let x7389 = t_to_js x7388 in
                       Ojs.call (Ojs.get_prop_ascii x7389 "end") "apply"
                         [|x7389;((let x7386 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   (match x7385 with
                                    | Some x7387 ->
                                        ignore
                                          (Ojs.call x7386 "push"
                                             [|(vscode_NotebookCellExecuteEndContext_to_js
                                                  x7387)|])
                                    | None -> ());
                                   x7386))|])
            let (get_token : t -> CancellationToken.t) =
              fun (x7390 : t) ->
                CancellationToken.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7390) "token")
            let (clearOutput :
              t -> ?cellIndex:float -> unit -> unit Promise.t) =
              fun (x7394 : t) ->
                fun ?cellIndex:(x7391 : float option) ->
                  fun () ->
                    Promise.t_of_js Ojs.unit_of_js
                      (let x7395 = t_to_js x7394 in
                       Ojs.call (Ojs.get_prop_ascii x7395 "clearOutput")
                         "apply"
                         [|x7395;((let x7392 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   (match x7391 with
                                    | Some x7393 ->
                                        ignore
                                          (Ojs.call x7392 "push"
                                             [|(Ojs.float_to_js x7393)|])
                                    | None -> ());
                                   x7392))|])
            let (appendOutput :
              t ->
                out:(vscode_NotebookCellOutput, vscode_NotebookCellOutput)
                  or_array -> ?cellIndex:float -> unit -> unit Promise.t)
              =
              fun (x7403 : t) ->
                fun
                  ~out:(x7397 :
                         (vscode_NotebookCellOutput,
                           vscode_NotebookCellOutput) or_array)
                  ->
                  fun ?cellIndex:(x7398 : float option) ->
                    fun () ->
                      Promise.t_of_js Ojs.unit_of_js
                        (let x7404 = t_to_js x7403 in
                         Ojs.call (Ojs.get_prop_ascii x7404 "appendOutput")
                           "apply"
                           [|x7404;((let x7399 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x7399 "push"
                                          [|(or_array_to_js
                                               vscode_NotebookCellOutput_to_js
                                               vscode_NotebookCellOutput_to_js
                                               x7397)|]);
                                     (match x7398 with
                                      | Some x7400 ->
                                          ignore
                                            (Ojs.call x7399 "push"
                                               [|(Ojs.float_to_js x7400)|])
                                      | None -> ());
                                     x7399))|])
            let (replaceOutput :
              t ->
                out:(vscode_NotebookCellOutput, vscode_NotebookCellOutput)
                  or_array -> ?cellIndex:float -> unit -> unit Promise.t)
              =
              fun (x7412 : t) ->
                fun
                  ~out:(x7406 :
                         (vscode_NotebookCellOutput,
                           vscode_NotebookCellOutput) or_array)
                  ->
                  fun ?cellIndex:(x7407 : float option) ->
                    fun () ->
                      Promise.t_of_js Ojs.unit_of_js
                        (let x7413 = t_to_js x7412 in
                         Ojs.call (Ojs.get_prop_ascii x7413 "replaceOutput")
                           "apply"
                           [|x7413;((let x7408 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x7408 "push"
                                          [|(or_array_to_js
                                               vscode_NotebookCellOutput_to_js
                                               vscode_NotebookCellOutput_to_js
                                               x7406)|]);
                                     (match x7407 with
                                      | Some x7409 ->
                                          ignore
                                            (Ojs.call x7408 "push"
                                               [|(Ojs.float_to_js x7409)|])
                                      | None -> ());
                                     x7408))|])
            let (appendOutputItems :
              t ->
                items:(vscode_NotebookCellOutputItem,
                  vscode_NotebookCellOutputItem) or_array ->
                  outputId:string -> unit Promise.t)
              =
              fun (x7419 : t) ->
                fun
                  ~items:(x7415 :
                           (vscode_NotebookCellOutputItem,
                             vscode_NotebookCellOutputItem) or_array)
                  ->
                  fun ~outputId:(x7418 : string) ->
                    Promise.t_of_js Ojs.unit_of_js
                      (Ojs.call (t_to_js x7419) "appendOutputItems"
                         [|(or_array_to_js
                              vscode_NotebookCellOutputItem_to_js
                              vscode_NotebookCellOutputItem_to_js x7415);(
                           Ojs.string_to_js x7418)|])
            let (replaceOutputItems :
              t ->
                items:(vscode_NotebookCellOutputItem,
                  vscode_NotebookCellOutputItem) or_array ->
                  outputId:string -> unit Promise.t)
              =
              fun (x7425 : t) ->
                fun
                  ~items:(x7421 :
                           (vscode_NotebookCellOutputItem,
                             vscode_NotebookCellOutputItem) or_array)
                  ->
                  fun ~outputId:(x7424 : string) ->
                    Promise.t_of_js Ojs.unit_of_js
                      (Ojs.call (t_to_js x7425) "replaceOutputItems"
                         [|(or_array_to_js
                              vscode_NotebookCellOutputItem_to_js
                              vscode_NotebookCellOutputItem_to_js x7421);(
                           Ojs.string_to_js x7424)|])
          end
        module NotebookCellExecutionState =
          struct
            type t = vscode_NotebookCellExecutionState
            let rec t_of_js : Ojs.t -> t =
              fun (x7428 : Ojs.t) ->
                vscode_NotebookCellExecutionState_of_js x7428
            and t_to_js : t -> Ojs.t =
              fun (x7427 : vscode_NotebookCellExecutionState) ->
                vscode_NotebookCellExecutionState_to_js x7427
          end
        module NotebookFilenamePattern =
          struct
            type t = vscode_NotebookFilenamePattern
            let rec t_of_js : Ojs.t -> t =
              fun (x7430 : Ojs.t) ->
                vscode_NotebookFilenamePattern_of_js x7430
            and t_to_js : t -> Ojs.t =
              fun (x7429 : vscode_NotebookFilenamePattern) ->
                vscode_NotebookFilenamePattern_to_js x7429
          end
        module NotebookDocumentFilter =
          struct
            type t = vscode_NotebookDocumentFilter
            let rec t_of_js : Ojs.t -> t =
              fun (x7432 : Ojs.t) ->
                vscode_NotebookDocumentFilter_of_js x7432
            and t_to_js : t -> Ojs.t =
              fun (x7431 : vscode_NotebookDocumentFilter) ->
                vscode_NotebookDocumentFilter_to_js x7431
            let (get_viewType : t -> string list or_string) =
              fun (x7433 : t) ->
                or_string_of_js
                  (fun (x7434 : Ojs.t) ->
                     Ojs.list_of_js Ojs.string_of_js x7434)
                  (Ojs.get_prop_ascii (t_to_js x7433) "viewType")
            let (set_viewType : t -> string list or_string -> unit) =
              fun (x7436 : t) ->
                fun (x7437 : string list or_string) ->
                  Ojs.set_prop_ascii (t_to_js x7436) "viewType"
                    (or_string_to_js
                       (fun (x7438 : string list) ->
                          Ojs.list_to_js Ojs.string_to_js x7438) x7437)
            let (get_filenamePattern : t -> vscode_NotebookFilenamePattern) =
              fun (x7440 : t) ->
                vscode_NotebookFilenamePattern_of_js
                  (Ojs.get_prop_ascii (t_to_js x7440) "filenamePattern")
            let (set_filenamePattern :
              t -> vscode_NotebookFilenamePattern -> unit) =
              fun (x7441 : t) ->
                fun (x7442 : vscode_NotebookFilenamePattern) ->
                  Ojs.set_prop_ascii (t_to_js x7441) "filenamePattern"
                    (vscode_NotebookFilenamePattern_to_js x7442)
          end
        module NotebookKernelProvider =
          struct
            type 'T t = 'T vscode_NotebookKernelProvider
            let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
              __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x7445 : Ojs.t) ->
                  vscode_NotebookKernelProvider_of_js __T_of_js x7445
            and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type
              __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x7443 : __T vscode_NotebookKernelProvider) ->
                  vscode_NotebookKernelProvider_to_js __T_to_js x7443
            type t_0 = vscode_NotebookKernel t
            let rec t_0_of_js : Ojs.t -> t_0 =
              fun (x7449 : Ojs.t) ->
                t_of_js vscode_NotebookKernel_of_js x7449
            and t_0_to_js : t_0 -> Ojs.t =
              fun (x7447 : vscode_NotebookKernel t) ->
                t_to_js vscode_NotebookKernel_to_js x7447
            let (get_onDidChangeKernels :
              'T t -> vscode_NotebookDocument or_undefined Event.t) =
              fun (x7451 : 'T t) ->
                Event.t_of_js
                  (fun (x7453 : Ojs.t) ->
                     or_undefined_of_js vscode_NotebookDocument_of_js x7453)
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7451)
                     "onDidChangeKernels")
            let (set_onDidChangeKernels :
              'T t -> vscode_NotebookDocument or_undefined Event.t -> unit) =
              fun (x7455 : 'T t) ->
                fun (x7456 : vscode_NotebookDocument or_undefined Event.t) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7455)
                    "onDidChangeKernels"
                    (Event.t_to_js
                       (fun (x7457 : vscode_NotebookDocument or_undefined) ->
                          or_undefined_to_js vscode_NotebookDocument_to_js
                            x7457) x7456)
            let (provideKernels :
              'T t ->
                document:vscode_NotebookDocument ->
                  token:CancellationToken.t -> 'T list ProviderResult.t)
              =
              fun (x7462 : 'T t) ->
                fun ~document:(x7460 : vscode_NotebookDocument) ->
                  fun ~token:(x7461 : CancellationToken.t) ->
                    ProviderResult.t_of_js
                      (fun (x7464 : Ojs.t) -> Ojs.list_of_js Obj.magic x7464)
                      (Ojs.call (t_to_js Obj.magic x7462) "provideKernels"
                         [|(vscode_NotebookDocument_to_js x7460);(CancellationToken.t_to_js
                                                                    x7461)|])
            let (resolveKernel :
              'T t ->
                kernel:'T ->
                  document:vscode_NotebookDocument ->
                    webview:vscode_NotebookCommunication ->
                      token:CancellationToken.t -> unit ProviderResult.t)
              =
              fun (x7470 : 'T t) ->
                fun ~kernel:(x7466 : 'T) ->
                  fun ~document:(x7467 : vscode_NotebookDocument) ->
                    fun ~webview:(x7468 : vscode_NotebookCommunication) ->
                      fun ~token:(x7469 : CancellationToken.t) ->
                        ProviderResult.t_of_js Ojs.unit_of_js
                          (Ojs.call (t_to_js Obj.magic x7470) "resolveKernel"
                             [|(Obj.magic x7466);(vscode_NotebookDocument_to_js
                                                    x7467);(vscode_NotebookCommunication_to_js
                                                              x7468);(
                               CancellationToken.t_to_js x7469)|])
          end
        module NotebookDecorationRenderOptions =
          struct
            type t = vscode_NotebookDecorationRenderOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x7474 : Ojs.t) ->
                vscode_NotebookDecorationRenderOptions_of_js x7474
            and t_to_js : t -> Ojs.t =
              fun (x7473 : vscode_NotebookDecorationRenderOptions) ->
                vscode_NotebookDecorationRenderOptions_to_js x7473
            let (get_backgroundColor : t -> ThemeColor.t or_string) =
              fun (x7475 : t) ->
                or_string_of_js ThemeColor.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7475) "backgroundColor")
            let (set_backgroundColor : t -> ThemeColor.t or_string -> unit) =
              fun (x7477 : t) ->
                fun (x7478 : ThemeColor.t or_string) ->
                  Ojs.set_prop_ascii (t_to_js x7477) "backgroundColor"
                    (or_string_to_js ThemeColor.t_to_js x7478)
            let (get_borderColor : t -> ThemeColor.t or_string) =
              fun (x7480 : t) ->
                or_string_of_js ThemeColor.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7480) "borderColor")
            let (set_borderColor : t -> ThemeColor.t or_string -> unit) =
              fun (x7482 : t) ->
                fun (x7483 : ThemeColor.t or_string) ->
                  Ojs.set_prop_ascii (t_to_js x7482) "borderColor"
                    (or_string_to_js ThemeColor.t_to_js x7483)
            let (get_top : t -> ThemableDecorationAttachmentRenderOptions.t)
              =
              fun (x7485 : t) ->
                ThemableDecorationAttachmentRenderOptions.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7485) "top")
            let (set_top :
              t -> ThemableDecorationAttachmentRenderOptions.t -> unit) =
              fun (x7486 : t) ->
                fun (x7487 : ThemableDecorationAttachmentRenderOptions.t) ->
                  Ojs.set_prop_ascii (t_to_js x7486) "top"
                    (ThemableDecorationAttachmentRenderOptions.t_to_js x7487)
          end
        module NotebookEditorDecorationType =
          struct
            type t = vscode_NotebookEditorDecorationType
            let rec t_of_js : Ojs.t -> t =
              fun (x7489 : Ojs.t) ->
                vscode_NotebookEditorDecorationType_of_js x7489
            and t_to_js : t -> Ojs.t =
              fun (x7488 : vscode_NotebookEditorDecorationType) ->
                vscode_NotebookEditorDecorationType_to_js x7488
            let (get_key : t -> string) =
              fun (x7490 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7490) "key")
            let (dispose : t -> unit) =
              fun (x7491 : t) ->
                ignore (Ojs.call (t_to_js x7491) "dispose" [||])
          end
        module NotebookCellStatusBarAlignment =
          struct
            type t = vscode_NotebookCellStatusBarAlignment
            let rec t_of_js : Ojs.t -> t =
              fun (x7493 : Ojs.t) ->
                vscode_NotebookCellStatusBarAlignment_of_js x7493
            and t_to_js : t -> Ojs.t =
              fun (x7492 : vscode_NotebookCellStatusBarAlignment) ->
                vscode_NotebookCellStatusBarAlignment_to_js x7492
          end
        module NotebookCellStatusBarItem =
          struct
            type t = vscode_NotebookCellStatusBarItem
            let rec t_of_js : Ojs.t -> t =
              fun (x7495 : Ojs.t) ->
                vscode_NotebookCellStatusBarItem_of_js x7495
            and t_to_js : t -> Ojs.t =
              fun (x7494 : vscode_NotebookCellStatusBarItem) ->
                vscode_NotebookCellStatusBarItem_to_js x7494
            let (get_cell : t -> vscode_NotebookCell) =
              fun (x7496 : t) ->
                vscode_NotebookCell_of_js
                  (Ojs.get_prop_ascii (t_to_js x7496) "cell")
            let (get_alignment : t -> vscode_NotebookCellStatusBarAlignment)
              =
              fun (x7497 : t) ->
                vscode_NotebookCellStatusBarAlignment_of_js
                  (Ojs.get_prop_ascii (t_to_js x7497) "alignment")
            let (get_priority : t -> float) =
              fun (x7498 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7498) "priority")
            let (get_text : t -> string) =
              fun (x7499 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7499) "text")
            let (set_text : t -> string -> unit) =
              fun (x7500 : t) ->
                fun (x7501 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7500) "text"
                    (Ojs.string_to_js x7501)
            let (get_tooltip : t -> string or_undefined) =
              fun (x7502 : t) ->
                or_undefined_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7502) "tooltip")
            let (set_tooltip : t -> string or_undefined -> unit) =
              fun (x7504 : t) ->
                fun (x7505 : string or_undefined) ->
                  Ojs.set_prop_ascii (t_to_js x7504) "tooltip"
                    (or_undefined_to_js Ojs.string_to_js x7505)
            let (get_command : t -> Command.t or_string or_undefined) =
              fun (x7507 : t) ->
                or_undefined_of_js
                  (fun (x7508 : Ojs.t) ->
                     or_string_of_js Command.t_of_js x7508)
                  (Ojs.get_prop_ascii (t_to_js x7507) "command")
            let (set_command : t -> Command.t or_string or_undefined -> unit)
              =
              fun (x7510 : t) ->
                fun (x7511 : Command.t or_string or_undefined) ->
                  Ojs.set_prop_ascii (t_to_js x7510) "command"
                    (or_undefined_to_js
                       (fun (x7512 : Command.t or_string) ->
                          or_string_to_js Command.t_to_js x7512) x7511)
            let (get_accessibilityInformation :
              t -> AccessibilityInformation.t) =
              fun (x7514 : t) ->
                AccessibilityInformation.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7514)
                     "accessibilityInformation")
            let (set_accessibilityInformation :
              t -> AccessibilityInformation.t -> unit) =
              fun (x7515 : t) ->
                fun (x7516 : AccessibilityInformation.t) ->
                  Ojs.set_prop_ascii (t_to_js x7515)
                    "accessibilityInformation"
                    (AccessibilityInformation.t_to_js x7516)
            let (show : t -> unit) =
              fun (x7517 : t) ->
                ignore (Ojs.call (t_to_js x7517) "show" [||])
            let (hide : t -> unit) =
              fun (x7518 : t) ->
                ignore (Ojs.call (t_to_js x7518) "hide" [||])
            let (dispose : t -> unit) =
              fun (x7519 : t) ->
                ignore (Ojs.call (t_to_js x7519) "dispose" [||])
          end
        module NotebookConcatTextDocument =
          struct
            type t = vscode_NotebookConcatTextDocument
            let rec t_of_js : Ojs.t -> t =
              fun (x7521 : Ojs.t) ->
                vscode_NotebookConcatTextDocument_of_js x7521
            and t_to_js : t -> Ojs.t =
              fun (x7520 : vscode_NotebookConcatTextDocument) ->
                vscode_NotebookConcatTextDocument_to_js x7520
            let (get_uri : t -> Uri.t) =
              fun (x7522 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x7522) "uri")
            let (set_uri : t -> Uri.t -> unit) =
              fun (x7523 : t) ->
                fun (x7524 : Uri.t) ->
                  Ojs.set_prop_ascii (t_to_js x7523) "uri"
                    (Uri.t_to_js x7524)
            let (get_isClosed : t -> bool) =
              fun (x7525 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x7525) "isClosed")
            let (set_isClosed : t -> bool -> unit) =
              fun (x7526 : t) ->
                fun (x7527 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7526) "isClosed"
                    (Ojs.bool_to_js x7527)
            let (dispose : t -> unit) =
              fun (x7528 : t) ->
                ignore (Ojs.call (t_to_js x7528) "dispose" [||])
            let (get_onDidChange : t -> unit Event.t) =
              fun (x7529 : t) ->
                Event.t_of_js Ojs.unit_of_js
                  (Ojs.get_prop_ascii (t_to_js x7529) "onDidChange")
            let (set_onDidChange : t -> unit Event.t -> unit) =
              fun (x7531 : t) ->
                fun (x7532 : unit Event.t) ->
                  Ojs.set_prop_ascii (t_to_js x7531) "onDidChange"
                    (Event.t_to_js Ojs.unit_to_js x7532)
            let (get_version : t -> float) =
              fun (x7534 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7534) "version")
            let (set_version : t -> float -> unit) =
              fun (x7535 : t) ->
                fun (x7536 : float) ->
                  Ojs.set_prop_ascii (t_to_js x7535) "version"
                    (Ojs.float_to_js x7536)
            let (getText : t -> string) =
              fun (x7537 : t) ->
                Ojs.string_of_js (Ojs.call (t_to_js x7537) "getText" [||])
            let (getText' : t -> range:Range.t -> string) =
              fun (x7539 : t) ->
                fun ~range:(x7538 : Range.t) ->
                  Ojs.string_of_js
                    (Ojs.call (t_to_js x7539) "getText"
                       [|(Range.t_to_js x7538)|])
            let (offsetAt : t -> position:Position.t -> float) =
              fun (x7541 : t) ->
                fun ~position:(x7540 : Position.t) ->
                  Ojs.float_of_js
                    (Ojs.call (t_to_js x7541) "offsetAt"
                       [|(Position.t_to_js x7540)|])
            let (positionAt : t -> offset:float -> Position.t) =
              fun (x7543 : t) ->
                fun ~offset:(x7542 : float) ->
                  Position.t_of_js
                    (Ojs.call (t_to_js x7543) "positionAt"
                       [|(Ojs.float_to_js x7542)|])
            let (validateRange : t -> range:Range.t -> Range.t) =
              fun (x7545 : t) ->
                fun ~range:(x7544 : Range.t) ->
                  Range.t_of_js
                    (Ojs.call (t_to_js x7545) "validateRange"
                       [|(Range.t_to_js x7544)|])
            let (validatePosition : t -> position:Position.t -> Position.t) =
              fun (x7547 : t) ->
                fun ~position:(x7546 : Position.t) ->
                  Position.t_of_js
                    (Ojs.call (t_to_js x7547) "validatePosition"
                       [|(Position.t_to_js x7546)|])
            let (locationAt :
              t -> positionOrRange:(Position.t, Range.t) union2 -> Location.t)
              =
              fun (x7551 : t) ->
                fun ~positionOrRange:(x7548 : (Position.t, Range.t) union2)
                  ->
                  Location.t_of_js
                    (Ojs.call (t_to_js x7551) "locationAt"
                       [|(union2_to_js Position.t_to_js Range.t_to_js x7548)|])
            let (positionAt' : t -> location:Location.t -> Position.t) =
              fun (x7553 : t) ->
                fun ~location:(x7552 : Location.t) ->
                  Position.t_of_js
                    (Ojs.call (t_to_js x7553) "positionAt"
                       [|(Location.t_to_js x7552)|])
            let (contains : t -> uri:Uri.t -> bool) =
              fun (x7555 : t) ->
                fun ~uri:(x7554 : Uri.t) ->
                  Ojs.bool_of_js
                    (Ojs.call (t_to_js x7555) "contains"
                       [|(Uri.t_to_js x7554)|])
          end
        module CompletionItem =
          struct
            type t = vscode_CompletionItem
            let rec t_of_js : Ojs.t -> t =
              fun (x7557 : Ojs.t) -> vscode_CompletionItem_of_js x7557
            and t_to_js : t -> Ojs.t =
              fun (x7556 : vscode_CompletionItem) ->
                vscode_CompletionItem_to_js x7556
            let (get_label2 : t -> vscode_CompletionItemLabel) =
              fun (x7558 : t) ->
                vscode_CompletionItemLabel_of_js
                  (Ojs.get_prop_ascii (t_to_js x7558) "label2")
            let (set_label2 : t -> vscode_CompletionItemLabel -> unit) =
              fun (x7559 : t) ->
                fun (x7560 : vscode_CompletionItemLabel) ->
                  Ojs.set_prop_ascii (t_to_js x7559) "label2"
                    (vscode_CompletionItemLabel_to_js x7560)
          end
        module CompletionItemLabel =
          struct
            type t = vscode_CompletionItemLabel
            let rec t_of_js : Ojs.t -> t =
              fun (x7562 : Ojs.t) -> vscode_CompletionItemLabel_of_js x7562
            and t_to_js : t -> Ojs.t =
              fun (x7561 : vscode_CompletionItemLabel) ->
                vscode_CompletionItemLabel_to_js x7561
            let (get_name : t -> string) =
              fun (x7563 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7563) "name")
            let (set_name : t -> string -> unit) =
              fun (x7564 : t) ->
                fun (x7565 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7564) "name"
                    (Ojs.string_to_js x7565)
            let (get_parameters : t -> string) =
              fun (x7566 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7566) "parameters")
            let (set_parameters : t -> string -> unit) =
              fun (x7567 : t) ->
                fun (x7568 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7567) "parameters"
                    (Ojs.string_to_js x7568)
            let (get_qualifier : t -> string) =
              fun (x7569 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7569) "qualifier")
            let (set_qualifier : t -> string -> unit) =
              fun (x7570 : t) ->
                fun (x7571 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7570) "qualifier"
                    (Ojs.string_to_js x7571)
            let (get_type : t -> string) =
              fun (x7572 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7572) "type")
            let (set_type : t -> string -> unit) =
              fun (x7573 : t) ->
                fun (x7574 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7573) "type"
                    (Ojs.string_to_js x7574)
          end
        module TimelineItem =
          struct
            type t = vscode_TimelineItem
            let rec t_of_js : Ojs.t -> t =
              fun (x7576 : Ojs.t) -> vscode_TimelineItem_of_js x7576
            and t_to_js : t -> Ojs.t =
              fun (x7575 : vscode_TimelineItem) ->
                vscode_TimelineItem_to_js x7575
            let (get_timestamp : t -> float) =
              fun (x7577 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7577) "timestamp")
            let (set_timestamp : t -> float -> unit) =
              fun (x7578 : t) ->
                fun (x7579 : float) ->
                  Ojs.set_prop_ascii (t_to_js x7578) "timestamp"
                    (Ojs.float_to_js x7579)
            let (get_label : t -> string) =
              fun (x7580 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7580) "label")
            let (set_label : t -> string -> unit) =
              fun (x7581 : t) ->
                fun (x7582 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7581) "label"
                    (Ojs.string_to_js x7582)
            let (get_id : t -> string) =
              fun (x7583 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7583) "id")
            let (set_id : t -> string -> unit) =
              fun (x7584 : t) ->
                fun (x7585 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7584) "id"
                    (Ojs.string_to_js x7585)
            let (get_iconPath :
              t -> (ThemeIcon.t, Uri.t, anonymous_interface_9) union3) =
              fun (x7586 : t) ->
                union3_of_js ThemeIcon.t_of_js Uri.t_of_js
                  anonymous_interface_9_of_js
                  (Ojs.get_prop_ascii (t_to_js x7586) "iconPath")
            let (set_iconPath :
              t -> (ThemeIcon.t, Uri.t, anonymous_interface_9) union3 -> unit)
              =
              fun (x7590 : t) ->
                fun
                  (x7591 :
                    (ThemeIcon.t, Uri.t, anonymous_interface_9) union3)
                  ->
                  Ojs.set_prop_ascii (t_to_js x7590) "iconPath"
                    (union3_to_js ThemeIcon.t_to_js Uri.t_to_js
                       anonymous_interface_9_to_js x7591)
            let (get_description : t -> string) =
              fun (x7595 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7595) "description")
            let (set_description : t -> string -> unit) =
              fun (x7596 : t) ->
                fun (x7597 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7596) "description"
                    (Ojs.string_to_js x7597)
            let (get_detail : t -> string) =
              fun (x7598 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7598) "detail")
            let (set_detail : t -> string -> unit) =
              fun (x7599 : t) ->
                fun (x7600 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7599) "detail"
                    (Ojs.string_to_js x7600)
            let (get_command : t -> Command.t) =
              fun (x7601 : t) ->
                Command.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7601) "command")
            let (set_command : t -> Command.t -> unit) =
              fun (x7602 : t) ->
                fun (x7603 : Command.t) ->
                  Ojs.set_prop_ascii (t_to_js x7602) "command"
                    (Command.t_to_js x7603)
            let (get_contextValue : t -> string) =
              fun (x7604 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7604) "contextValue")
            let (set_contextValue : t -> string -> unit) =
              fun (x7605 : t) ->
                fun (x7606 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7605) "contextValue"
                    (Ojs.string_to_js x7606)
            let (get_accessibilityInformation :
              t -> AccessibilityInformation.t) =
              fun (x7607 : t) ->
                AccessibilityInformation.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7607)
                     "accessibilityInformation")
            let (set_accessibilityInformation :
              t -> AccessibilityInformation.t -> unit) =
              fun (x7608 : t) ->
                fun (x7609 : AccessibilityInformation.t) ->
                  Ojs.set_prop_ascii (t_to_js x7608)
                    "accessibilityInformation"
                    (AccessibilityInformation.t_to_js x7609)
            let (create : label:string -> timestamp:float -> t) =
              fun ~label:(x7610 : string) ->
                fun ~timestamp:(x7611 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "TimelineItem")
                       [|(Ojs.string_to_js x7610);(Ojs.float_to_js x7611)|])
          end
        module TimelineChangeEvent =
          struct
            type t = vscode_TimelineChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x7613 : Ojs.t) -> vscode_TimelineChangeEvent_of_js x7613
            and t_to_js : t -> Ojs.t =
              fun (x7612 : vscode_TimelineChangeEvent) ->
                vscode_TimelineChangeEvent_to_js x7612
            let (get_uri : t -> Uri.t) =
              fun (x7614 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x7614) "uri")
            let (set_uri : t -> Uri.t -> unit) =
              fun (x7615 : t) ->
                fun (x7616 : Uri.t) ->
                  Ojs.set_prop_ascii (t_to_js x7615) "uri"
                    (Uri.t_to_js x7616)
            let (get_reset : t -> bool) =
              fun (x7617 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x7617) "reset")
            let (set_reset : t -> bool -> unit) =
              fun (x7618 : t) ->
                fun (x7619 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7618) "reset"
                    (Ojs.bool_to_js x7619)
          end
        module Timeline =
          struct
            type t = vscode_Timeline
            let rec t_of_js : Ojs.t -> t =
              fun (x7621 : Ojs.t) -> vscode_Timeline_of_js x7621
            and t_to_js : t -> Ojs.t =
              fun (x7620 : vscode_Timeline) -> vscode_Timeline_to_js x7620
            let (get_paging : t -> anonymous_interface_2) =
              fun (x7622 : t) ->
                anonymous_interface_2_of_js
                  (Ojs.get_prop_ascii (t_to_js x7622) "paging")
            let (get_items : t -> vscode_TimelineItem list) =
              fun (x7623 : t) ->
                Ojs.list_of_js vscode_TimelineItem_of_js
                  (Ojs.get_prop_ascii (t_to_js x7623) "items")
          end
        module TimelineOptions =
          struct
            type t = vscode_TimelineOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x7626 : Ojs.t) -> vscode_TimelineOptions_of_js x7626
            and t_to_js : t -> Ojs.t =
              fun (x7625 : vscode_TimelineOptions) ->
                vscode_TimelineOptions_to_js x7625
            let (get_cursor : t -> string) =
              fun (x7627 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7627) "cursor")
            let (set_cursor : t -> string -> unit) =
              fun (x7628 : t) ->
                fun (x7629 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7628) "cursor"
                    (Ojs.string_to_js x7629)
            let (get_limit : t -> anonymous_interface_14 or_number) =
              fun (x7630 : t) ->
                or_number_of_js anonymous_interface_14_of_js
                  (Ojs.get_prop_ascii (t_to_js x7630) "limit")
            let (set_limit : t -> anonymous_interface_14 or_number -> unit) =
              fun (x7632 : t) ->
                fun (x7633 : anonymous_interface_14 or_number) ->
                  Ojs.set_prop_ascii (t_to_js x7632) "limit"
                    (or_number_to_js anonymous_interface_14_to_js x7633)
          end
        module TimelineProvider =
          struct
            type t = vscode_TimelineProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x7636 : Ojs.t) -> vscode_TimelineProvider_of_js x7636
            and t_to_js : t -> Ojs.t =
              fun (x7635 : vscode_TimelineProvider) ->
                vscode_TimelineProvider_to_js x7635
            let (get_onDidChange :
              t -> vscode_TimelineChangeEvent or_undefined Event.t) =
              fun (x7637 : t) ->
                Event.t_of_js
                  (fun (x7638 : Ojs.t) ->
                     or_undefined_of_js vscode_TimelineChangeEvent_of_js
                       x7638)
                  (Ojs.get_prop_ascii (t_to_js x7637) "onDidChange")
            let (set_onDidChange :
              t -> vscode_TimelineChangeEvent or_undefined Event.t -> unit) =
              fun (x7640 : t) ->
                fun (x7641 : vscode_TimelineChangeEvent or_undefined Event.t)
                  ->
                  Ojs.set_prop_ascii (t_to_js x7640) "onDidChange"
                    (Event.t_to_js
                       (fun (x7642 : vscode_TimelineChangeEvent or_undefined)
                          ->
                          or_undefined_to_js vscode_TimelineChangeEvent_to_js
                            x7642) x7641)
            let (get_id : t -> string) =
              fun (x7644 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7644) "id")
            let (get_label : t -> string) =
              fun (x7645 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7645) "label")
            let (provideTimeline :
              t ->
                uri:Uri.t ->
                  options:vscode_TimelineOptions ->
                    token:CancellationToken.t ->
                      vscode_Timeline ProviderResult.t)
              =
              fun (x7649 : t) ->
                fun ~uri:(x7646 : Uri.t) ->
                  fun ~options:(x7647 : vscode_TimelineOptions) ->
                    fun ~token:(x7648 : CancellationToken.t) ->
                      ProviderResult.t_of_js vscode_Timeline_of_js
                        (Ojs.call (t_to_js x7649) "provideTimeline"
                           [|(Uri.t_to_js x7646);(vscode_TimelineOptions_to_js
                                                    x7647);(CancellationToken.t_to_js
                                                              x7648)|])
          end
        module StandardTokenType =
          struct
            type t = vscode_StandardTokenType
            let rec t_of_js : Ojs.t -> t =
              fun (x7652 : Ojs.t) -> vscode_StandardTokenType_of_js x7652
            and t_to_js : t -> Ojs.t =
              fun (x7651 : vscode_StandardTokenType) ->
                vscode_StandardTokenType_to_js x7651
          end
        module TokenInformation =
          struct
            type t = vscode_TokenInformation
            let rec t_of_js : Ojs.t -> t =
              fun (x7654 : Ojs.t) -> vscode_TokenInformation_of_js x7654
            and t_to_js : t -> Ojs.t =
              fun (x7653 : vscode_TokenInformation) ->
                vscode_TokenInformation_to_js x7653
            let (get_type : t -> vscode_StandardTokenType) =
              fun (x7655 : t) ->
                vscode_StandardTokenType_of_js
                  (Ojs.get_prop_ascii (t_to_js x7655) "type")
            let (set_type : t -> vscode_StandardTokenType -> unit) =
              fun (x7656 : t) ->
                fun (x7657 : vscode_StandardTokenType) ->
                  Ojs.set_prop_ascii (t_to_js x7656) "type"
                    (vscode_StandardTokenType_to_js x7657)
            let (get_range : t -> Range.t) =
              fun (x7658 : t) ->
                Range.t_of_js (Ojs.get_prop_ascii (t_to_js x7658) "range")
            let (set_range : t -> Range.t -> unit) =
              fun (x7659 : t) ->
                fun (x7660 : Range.t) ->
                  Ojs.set_prop_ascii (t_to_js x7659) "range"
                    (Range.t_to_js x7660)
          end
        module Languages =
          struct
            let (getTokenInformationAtPosition :
              document:vscode_TextDocument ->
                position:Position.t -> vscode_TokenInformation Promise.t)
              =
              fun ~document:(x7661 : vscode_TextDocument) ->
                fun ~position:(x7662 : Position.t) ->
                  Promise.t_of_js vscode_TokenInformation_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "languages") "getTokenInformationAtPosition"
                       [|(vscode_TextDocument_to_js x7661);(Position.t_to_js
                                                              x7662)|])
            let (registerInlineHintsProvider :
              selector:DocumentSelector.t ->
                provider:vscode_InlineHintsProvider -> Disposable.t)
              =
              fun ~selector:(x7664 : DocumentSelector.t) ->
                fun ~provider:(x7665 : vscode_InlineHintsProvider) ->
                  Disposable.t_of_js
                    (Ojs.call
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "languages") "registerInlineHintsProvider"
                       [|(DocumentSelector.t_to_js x7664);(vscode_InlineHintsProvider_to_js
                                                             x7665)|])
          end
        module InlineHintKind =
          struct
            type t = vscode_InlineHintKind
            let rec t_of_js : Ojs.t -> t =
              fun (x7667 : Ojs.t) -> vscode_InlineHintKind_of_js x7667
            and t_to_js : t -> Ojs.t =
              fun (x7666 : vscode_InlineHintKind) ->
                vscode_InlineHintKind_to_js x7666
          end
        module InlineHint =
          struct
            type t = vscode_InlineHint
            let rec t_of_js : Ojs.t -> t =
              fun (x7669 : Ojs.t) -> vscode_InlineHint_of_js x7669
            and t_to_js : t -> Ojs.t =
              fun (x7668 : vscode_InlineHint) ->
                vscode_InlineHint_to_js x7668
            let (get_text : t -> string) =
              fun (x7670 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7670) "text")
            let (set_text : t -> string -> unit) =
              fun (x7671 : t) ->
                fun (x7672 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7671) "text"
                    (Ojs.string_to_js x7672)
            let (get_range : t -> Range.t) =
              fun (x7673 : t) ->
                Range.t_of_js (Ojs.get_prop_ascii (t_to_js x7673) "range")
            let (set_range : t -> Range.t -> unit) =
              fun (x7674 : t) ->
                fun (x7675 : Range.t) ->
                  Ojs.set_prop_ascii (t_to_js x7674) "range"
                    (Range.t_to_js x7675)
            let (get_kind : t -> vscode_InlineHintKind) =
              fun (x7676 : t) ->
                vscode_InlineHintKind_of_js
                  (Ojs.get_prop_ascii (t_to_js x7676) "kind")
            let (set_kind : t -> vscode_InlineHintKind -> unit) =
              fun (x7677 : t) ->
                fun (x7678 : vscode_InlineHintKind) ->
                  Ojs.set_prop_ascii (t_to_js x7677) "kind"
                    (vscode_InlineHintKind_to_js x7678)
            let (get_description : t -> MarkdownString.t or_string) =
              fun (x7679 : t) ->
                or_string_of_js MarkdownString.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7679) "description")
            let (set_description : t -> MarkdownString.t or_string -> unit) =
              fun (x7681 : t) ->
                fun (x7682 : MarkdownString.t or_string) ->
                  Ojs.set_prop_ascii (t_to_js x7681) "description"
                    (or_string_to_js MarkdownString.t_to_js x7682)
            let (get_whitespaceBefore : t -> bool) =
              fun (x7684 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x7684) "whitespaceBefore")
            let (set_whitespaceBefore : t -> bool -> unit) =
              fun (x7685 : t) ->
                fun (x7686 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7685) "whitespaceBefore"
                    (Ojs.bool_to_js x7686)
            let (get_whitespaceAfter : t -> bool) =
              fun (x7687 : t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x7687) "whitespaceAfter")
            let (set_whitespaceAfter : t -> bool -> unit) =
              fun (x7688 : t) ->
                fun (x7689 : bool) ->
                  Ojs.set_prop_ascii (t_to_js x7688) "whitespaceAfter"
                    (Ojs.bool_to_js x7689)
            let (create :
              text:string ->
                range:Range.t -> ?kind:vscode_InlineHintKind -> unit -> t)
              =
              fun ~text:(x7690 : string) ->
                fun ~range:(x7691 : Range.t) ->
                  fun ?kind:(x7692 : vscode_InlineHintKind option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "InlineHint")
                           (let x7693 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x7693 "push"
                                 [|(Ojs.string_to_js x7690)|]);
                            ignore
                              (Ojs.call x7693 "push"
                                 [|(Range.t_to_js x7691)|]);
                            (match x7692 with
                             | Some x7694 ->
                                 ignore
                                   (Ojs.call x7693 "push"
                                      [|(vscode_InlineHintKind_to_js x7694)|])
                             | None -> ());
                            x7693))
          end
        module InlineHintsProvider =
          struct
            type t = vscode_InlineHintsProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x7696 : Ojs.t) -> vscode_InlineHintsProvider_of_js x7696
            and t_to_js : t -> Ojs.t =
              fun (x7695 : vscode_InlineHintsProvider) ->
                vscode_InlineHintsProvider_to_js x7695
            let (get_onDidChangeInlineHints : t -> unit Event.t) =
              fun (x7697 : t) ->
                Event.t_of_js Ojs.unit_of_js
                  (Ojs.get_prop_ascii (t_to_js x7697)
                     "onDidChangeInlineHints")
            let (set_onDidChangeInlineHints : t -> unit Event.t -> unit) =
              fun (x7699 : t) ->
                fun (x7700 : unit Event.t) ->
                  Ojs.set_prop_ascii (t_to_js x7699) "onDidChangeInlineHints"
                    (Event.t_to_js Ojs.unit_to_js x7700)
            let (provideInlineHints :
              t ->
                model:vscode_TextDocument ->
                  range:Range.t ->
                    token:CancellationToken.t ->
                      vscode_InlineHint list ProviderResult.t)
              =
              fun (x7705 : t) ->
                fun ~model:(x7702 : vscode_TextDocument) ->
                  fun ~range:(x7703 : Range.t) ->
                    fun ~token:(x7704 : CancellationToken.t) ->
                      ProviderResult.t_of_js
                        (fun (x7706 : Ojs.t) ->
                           Ojs.list_of_js vscode_InlineHint_of_js x7706)
                        (Ojs.call (t_to_js x7705) "provideInlineHints"
                           [|(vscode_TextDocument_to_js x7702);(Range.t_to_js
                                                                  x7703);(
                             CancellationToken.t_to_js x7704)|])
          end
        module ExtensionRuntime =
          struct
            type t = vscode_ExtensionRuntime
            let rec t_of_js : Ojs.t -> t =
              fun (x7709 : Ojs.t) -> vscode_ExtensionRuntime_of_js x7709
            and t_to_js : t -> Ojs.t =
              fun (x7708 : vscode_ExtensionRuntime) ->
                vscode_ExtensionRuntime_to_js x7708
          end
        module ExtensionContext =
          struct
            type t = vscode_ExtensionContext
            let rec t_of_js : Ojs.t -> t =
              fun (x7711 : Ojs.t) -> vscode_ExtensionContext_of_js x7711
            and t_to_js : t -> Ojs.t =
              fun (x7710 : vscode_ExtensionContext) ->
                vscode_ExtensionContext_to_js x7710
            let (get_extensionRuntime : t -> vscode_ExtensionRuntime) =
              fun (x7712 : t) ->
                vscode_ExtensionRuntime_of_js
                  (Ojs.get_prop_ascii (t_to_js x7712) "extensionRuntime")
          end
        module TextDocument =
          struct
            type t = vscode_TextDocument
            let rec t_of_js : Ojs.t -> t =
              fun (x7714 : Ojs.t) -> vscode_TextDocument_of_js x7714
            and t_to_js : t -> Ojs.t =
              fun (x7713 : vscode_TextDocument) ->
                vscode_TextDocument_to_js x7713
            let (get_notebook : t -> vscode_NotebookDocument or_undefined) =
              fun (x7715 : t) ->
                or_undefined_of_js vscode_NotebookDocument_of_js
                  (Ojs.get_prop_ascii (t_to_js x7715) "notebook")
            let (set_notebook :
              t -> vscode_NotebookDocument or_undefined -> unit) =
              fun (x7717 : t) ->
                fun (x7718 : vscode_NotebookDocument or_undefined) ->
                  Ojs.set_prop_ascii (t_to_js x7717) "notebook"
                    (or_undefined_to_js vscode_NotebookDocument_to_js x7718)
          end
        module Test =
          struct
            let (registerTestProvider :
              testProvider:'T vscode_TestProvider -> Disposable.t) =
              fun ~testProvider:(x7720 : 'T vscode_TestProvider) ->
                Disposable.t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "test")
                     "registerTestProvider"
                     [|(vscode_TestProvider_to_js Obj.magic x7720)|])
            let (runTests :
              run:'T vscode_TestRunRequest ->
                ?token:CancellationToken.t -> unit -> unit Promise.t)
              =
              fun ~run:(x7722 : 'T vscode_TestRunRequest) ->
                fun ?token:(x7723 : CancellationToken.t option) ->
                  fun () ->
                    Promise.t_of_js Ojs.unit_of_js
                      (let x7727 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode") "test" in
                       Ojs.call (Ojs.get_prop_ascii x7727 "runTests") "apply"
                         [|x7727;((let x7724 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x7724 "push"
                                        [|(vscode_TestRunRequest_to_js
                                             Obj.magic x7722)|]);
                                   (match x7723 with
                                    | Some x7725 ->
                                        ignore
                                          (Ojs.call x7724 "push"
                                             [|(CancellationToken.t_to_js
                                                  x7725)|])
                                    | None -> ());
                                   x7724))|])
            let (createWorkspaceTestObserver :
              workspaceFolder:WorkspaceFolder.t -> vscode_TestObserver) =
              fun ~workspaceFolder:(x7729 : WorkspaceFolder.t) ->
                vscode_TestObserver_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "test")
                     "createWorkspaceTestObserver"
                     [|(WorkspaceFolder.t_to_js x7729)|])
            let (createDocumentTestObserver :
              document:vscode_TextDocument -> vscode_TestObserver) =
              fun ~document:(x7730 : vscode_TextDocument) ->
                vscode_TestObserver_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "test")
                     "createDocumentTestObserver"
                     [|(vscode_TextDocument_to_js x7730)|])
            let (publishTestResult :
              results:vscode_TestRunResult -> ?persist:bool -> unit -> unit)
              =
              fun ~results:(x7731 : vscode_TestRunResult) ->
                fun ?persist:(x7732 : bool option) ->
                  fun () ->
                    ignore
                      (let x7735 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode") "test" in
                       Ojs.call
                         (Ojs.get_prop_ascii x7735 "publishTestResult")
                         "apply"
                         [|x7735;((let x7733 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x7733 "push"
                                        [|(vscode_TestRunResult_to_js x7731)|]);
                                   (match x7732 with
                                    | Some x7734 ->
                                        ignore
                                          (Ojs.call x7733 "push"
                                             [|(Ojs.bool_to_js x7734)|])
                                    | None -> ());
                                   x7733))|])
            let (testResults : vscode_TestRunResult list) =
              Ojs.list_of_js vscode_TestRunResult_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "test")
                   "testResults")
            let (onDidChangeTestResults : unit Event.t) =
              Event.t_of_js Ojs.unit_of_js
                (Ojs.get_prop_ascii
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "test")
                   "onDidChangeTestResults")
          end
        module TestObserver =
          struct
            type t = vscode_TestObserver
            let rec t_of_js : Ojs.t -> t =
              fun (x7739 : Ojs.t) -> vscode_TestObserver_of_js x7739
            and t_to_js : t -> Ojs.t =
              fun (x7738 : vscode_TestObserver) ->
                vscode_TestObserver_to_js x7738
            let (get_tests : t -> any vscode_TestItem list) =
              fun (x7740 : t) ->
                Ojs.list_of_js
                  (fun (x7741 : Ojs.t) ->
                     vscode_TestItem_of_js any_of_js x7741)
                  (Ojs.get_prop_ascii (t_to_js x7740) "tests")
            let (get_onDidChangeTest : t -> vscode_TestsChangeEvent Event.t)
              =
              fun (x7743 : t) ->
                Event.t_of_js vscode_TestsChangeEvent_of_js
                  (Ojs.get_prop_ascii (t_to_js x7743) "onDidChangeTest")
            let (get_onDidDiscoverInitialTests : t -> unit Event.t) =
              fun (x7745 : t) ->
                Event.t_of_js Ojs.unit_of_js
                  (Ojs.get_prop_ascii (t_to_js x7745)
                     "onDidDiscoverInitialTests")
            let (dispose : t -> unit) =
              fun (x7747 : t) ->
                ignore (Ojs.call (t_to_js x7747) "dispose" [||])
          end
        module TestsChangeEvent =
          struct
            type t = vscode_TestsChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x7749 : Ojs.t) -> vscode_TestsChangeEvent_of_js x7749
            and t_to_js : t -> Ojs.t =
              fun (x7748 : vscode_TestsChangeEvent) ->
                vscode_TestsChangeEvent_to_js x7748
            let (get_added : t -> any vscode_TestItem list) =
              fun (x7750 : t) ->
                Ojs.list_of_js
                  (fun (x7751 : Ojs.t) ->
                     vscode_TestItem_of_js any_of_js x7751)
                  (Ojs.get_prop_ascii (t_to_js x7750) "added")
            let (get_updated : t -> any vscode_TestItem list) =
              fun (x7753 : t) ->
                Ojs.list_of_js
                  (fun (x7754 : Ojs.t) ->
                     vscode_TestItem_of_js any_of_js x7754)
                  (Ojs.get_prop_ascii (t_to_js x7753) "updated")
            let (get_removed : t -> any vscode_TestItem list) =
              fun (x7756 : t) ->
                Ojs.list_of_js
                  (fun (x7757 : Ojs.t) ->
                     vscode_TestItem_of_js any_of_js x7757)
                  (Ojs.get_prop_ascii (t_to_js x7756) "removed")
          end
        module TestProvider =
          struct
            type 'T t = 'T vscode_TestProvider
            let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
              __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x7761 : Ojs.t) ->
                  vscode_TestProvider_of_js __T_of_js x7761
            and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type
              __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x7759 : __T vscode_TestProvider) ->
                  vscode_TestProvider_to_js __T_to_js x7759
            type t_0 = any vscode_TestItem t
            let rec t_0_of_js : Ojs.t -> t_0 =
              fun (x7766 : Ojs.t) ->
                t_of_js
                  (fun (x7767 : Ojs.t) ->
                     vscode_TestItem_of_js any_of_js x7767) x7766
            and t_0_to_js : t_0 -> Ojs.t =
              fun (x7763 : any vscode_TestItem t) ->
                t_to_js
                  (fun (x7764 : any vscode_TestItem) ->
                     vscode_TestItem_to_js any_to_js x7764) x7763
            let (provideWorkspaceTestRoot :
              'T t ->
                workspace:WorkspaceFolder.t ->
                  token:CancellationToken.t -> 'T ProviderResult.t)
              =
              fun (x7771 : 'T t) ->
                fun ~workspace:(x7769 : WorkspaceFolder.t) ->
                  fun ~token:(x7770 : CancellationToken.t) ->
                    ProviderResult.t_of_js Obj.magic
                      (Ojs.call (t_to_js Obj.magic x7771)
                         "provideWorkspaceTestRoot"
                         [|(WorkspaceFolder.t_to_js x7769);(CancellationToken.t_to_js
                                                              x7770)|])
            let (provideDocumentTestRoot :
              'T t ->
                document:vscode_TextDocument ->
                  token:CancellationToken.t -> 'T ProviderResult.t)
              =
              fun (x7776 : 'T t) ->
                fun ~document:(x7774 : vscode_TextDocument) ->
                  fun ~token:(x7775 : CancellationToken.t) ->
                    ProviderResult.t_of_js Obj.magic
                      (Ojs.call (t_to_js Obj.magic x7776)
                         "provideDocumentTestRoot"
                         [|(vscode_TextDocument_to_js x7774);(CancellationToken.t_to_js
                                                                x7775)|])
            let (runTests :
              'T t ->
                options:'T vscode_TestRunOptions ->
                  token:CancellationToken.t -> unit ProviderResult.t)
              =
              fun (x7782 : 'T t) ->
                fun ~options:(x7779 : 'T vscode_TestRunOptions) ->
                  fun ~token:(x7781 : CancellationToken.t) ->
                    ProviderResult.t_of_js Ojs.unit_of_js
                      (Ojs.call (t_to_js Obj.magic x7782) "runTests"
                         [|(vscode_TestRunOptions_to_js Obj.magic x7779);(
                           CancellationToken.t_to_js x7781)|])
          end
        module TestRunRequest =
          struct
            type 'T t = 'T vscode_TestRunRequest
            let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
              __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x7787 : Ojs.t) ->
                  vscode_TestRunRequest_of_js __T_of_js x7787
            and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type
              __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x7785 : __T vscode_TestRunRequest) ->
                  vscode_TestRunRequest_to_js __T_to_js x7785
            type t_0 = any vscode_TestItem t
            let rec t_0_of_js : Ojs.t -> t_0 =
              fun (x7792 : Ojs.t) ->
                t_of_js
                  (fun (x7793 : Ojs.t) ->
                     vscode_TestItem_of_js any_of_js x7793) x7792
            and t_0_to_js : t_0 -> Ojs.t =
              fun (x7789 : any vscode_TestItem t) ->
                t_to_js
                  (fun (x7790 : any vscode_TestItem) ->
                     vscode_TestItem_to_js any_to_js x7790) x7789
            let (get_tests : 'T t -> 'T list) =
              fun (x7795 : 'T t) ->
                Ojs.list_of_js Obj.magic
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7795) "tests")
            let (set_tests : 'T t -> 'T list -> unit) =
              fun (x7798 : 'T t) ->
                fun (x7799 : 'T list) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7798) "tests"
                    (Ojs.list_to_js Obj.magic x7799)
            let (get_exclude : 'T t -> 'T list) =
              fun (x7802 : 'T t) ->
                Ojs.list_of_js Obj.magic
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7802) "exclude")
            let (set_exclude : 'T t -> 'T list -> unit) =
              fun (x7805 : 'T t) ->
                fun (x7806 : 'T list) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7805) "exclude"
                    (Ojs.list_to_js Obj.magic x7806)
            let (get_debug : 'T t -> bool) =
              fun (x7809 : 'T t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7809) "debug")
            let (set_debug : 'T t -> bool -> unit) =
              fun (x7811 : 'T t) ->
                fun (x7812 : bool) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7811) "debug"
                    (Ojs.bool_to_js x7812)
          end
        module TestRunOptions =
          struct
            type 'T t = 'T vscode_TestRunOptions
            let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
              __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x7816 : Ojs.t) ->
                  vscode_TestRunOptions_of_js __T_of_js x7816
            and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type
              __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x7814 : __T vscode_TestRunOptions) ->
                  vscode_TestRunOptions_to_js __T_to_js x7814
            type t_0 = any vscode_TestItem t
            let rec t_0_of_js : Ojs.t -> t_0 =
              fun (x7821 : Ojs.t) ->
                t_of_js
                  (fun (x7822 : Ojs.t) ->
                     vscode_TestItem_of_js any_of_js x7822) x7821
            and t_0_to_js : t_0 -> Ojs.t =
              fun (x7818 : any vscode_TestItem t) ->
                t_to_js
                  (fun (x7819 : any vscode_TestItem) ->
                     vscode_TestItem_to_js any_to_js x7819) x7818
            let (setState :
              'T t ->
                test:'T ->
                  state:vscode_TestResultState ->
                    ?duration:float -> unit -> unit)
              =
              fun (x7829 : 'T t) ->
                fun ~test:(x7824 : 'T) ->
                  fun ~state:(x7825 : vscode_TestResultState) ->
                    fun ?duration:(x7826 : float option) ->
                      fun () ->
                        ignore
                          (let x7831 = t_to_js Obj.magic x7829 in
                           Ojs.call (Ojs.get_prop_ascii x7831 "setState")
                             "apply"
                             [|x7831;((let x7827 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x7827 "push"
                                            [|(Obj.magic x7824)|]);
                                       ignore
                                         (Ojs.call x7827 "push"
                                            [|(vscode_TestResultState_to_js
                                                 x7825)|]);
                                       (match x7826 with
                                        | Some x7828 ->
                                            ignore
                                              (Ojs.call x7827 "push"
                                                 [|(Ojs.float_to_js x7828)|])
                                        | None -> ());
                                       x7827))|])
            let (appendMessage :
              'T t -> test:'T -> message:vscode_TestMessage -> unit) =
              fun (x7834 : 'T t) ->
                fun ~test:(x7832 : 'T) ->
                  fun ~message:(x7833 : vscode_TestMessage) ->
                    ignore
                      (Ojs.call (t_to_js Obj.magic x7834) "appendMessage"
                         [|(Obj.magic x7832);(vscode_TestMessage_to_js x7833)|])
            let (appendOutput : 'T t -> output:string -> unit) =
              fun (x7837 : 'T t) ->
                fun ~output:(x7836 : string) ->
                  ignore
                    (Ojs.call (t_to_js Obj.magic x7837) "appendOutput"
                       [|(Ojs.string_to_js x7836)|])
            let (cast : 'T t -> 'T vscode_TestRunRequest) =
              fun (x7839 : 'T t) ->
                vscode_TestRunRequest_of_js Obj.magic
                  (t_to_js Obj.magic x7839)
          end
        module TestChildrenCollection =
          struct
            type 'T t = 'T vscode_TestChildrenCollection
            let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
              __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x7844 : Ojs.t) ->
                  vscode_TestChildrenCollection_of_js __T_of_js x7844
            and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type
              __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x7842 : __T vscode_TestChildrenCollection) ->
                  vscode_TestChildrenCollection_to_js __T_to_js x7842
            let (get_size : 'T t -> float) =
              fun (x7846 : 'T t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7846) "size")
            let (get_ : 'T t -> id:string -> 'T or_undefined) =
              fun (x7849 : 'T t) ->
                fun ~id:(x7848 : string) ->
                  or_undefined_of_js Obj.magic
                    (Ojs.call (t_to_js Obj.magic x7849) "get"
                       [|(Ojs.string_to_js x7848)|])
            let (add : 'T t -> child:'T -> unit) =
              fun (x7853 : 'T t) ->
                fun ~child:(x7852 : 'T) ->
                  ignore
                    (Ojs.call (t_to_js Obj.magic x7853) "add"
                       [|(Obj.magic x7852)|])
            let (delete : 'T t -> child:'T or_string -> unit) =
              fun (x7857 : 'T t) ->
                fun ~child:(x7855 : 'T or_string) ->
                  ignore
                    (Ojs.call (t_to_js Obj.magic x7857) "delete"
                       [|(or_string_to_js Obj.magic x7855)|])
            let (clear : 'T t -> unit) =
              fun (x7859 : 'T t) ->
                ignore (Ojs.call (t_to_js Obj.magic x7859) "clear" [||])
            let (cast : 'T t -> 'T Iterable.t) =
              fun (x7861 : 'T t) ->
                Iterable.t_of_js Obj.magic (t_to_js Obj.magic x7861)
          end
        module TestItem =
          struct
            type 'TChildren t = 'TChildren vscode_TestItem
            let rec t_of_js :
              'TChildren . (Ojs.t -> 'TChildren) -> Ojs.t -> 'TChildren t =
              fun (type __TChildren) ->
              fun (__TChildren_of_js : Ojs.t -> __TChildren) ->
                fun (x7866 : Ojs.t) ->
                  vscode_TestItem_of_js __TChildren_of_js x7866
            and t_to_js :
              'TChildren . ('TChildren -> Ojs.t) -> 'TChildren t -> Ojs.t =
              fun (type __TChildren) ->
              fun (__TChildren_to_js : __TChildren -> Ojs.t) ->
                fun (x7864 : __TChildren vscode_TestItem) ->
                  vscode_TestItem_to_js __TChildren_to_js x7864
            type t_0 = any t
            let rec t_0_of_js : Ojs.t -> t_0 =
              fun (x7870 : Ojs.t) -> t_of_js any_of_js x7870
            and t_0_to_js : t_0 -> Ojs.t =
              fun (x7868 : any t) -> t_to_js any_to_js x7868
            let (get_id : 'TChildren t -> string) =
              fun (x7872 : 'TChildren t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7872) "id")
            let (get_uri : 'TChildren t -> Uri.t) =
              fun (x7874 : 'TChildren t) ->
                Uri.t_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7874) "uri")
            let (get_children :
              'TChildren t -> 'TChildren vscode_TestChildrenCollection) =
              fun (x7876 : 'TChildren t) ->
                vscode_TestChildrenCollection_of_js Obj.magic
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7876) "children")
            let (get_label : 'TChildren t -> string) =
              fun (x7879 : 'TChildren t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7879) "label")
            let (set_label : 'TChildren t -> string -> unit) =
              fun (x7881 : 'TChildren t) ->
                fun (x7882 : string) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7881) "label"
                    (Ojs.string_to_js x7882)
            let (get_description : 'TChildren t -> string) =
              fun (x7884 : 'TChildren t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7884) "description")
            let (set_description : 'TChildren t -> string -> unit) =
              fun (x7886 : 'TChildren t) ->
                fun (x7887 : string) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7886) "description"
                    (Ojs.string_to_js x7887)
            let (get_range : 'TChildren t -> Range.t) =
              fun (x7889 : 'TChildren t) ->
                Range.t_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7889) "range")
            let (set_range : 'TChildren t -> Range.t -> unit) =
              fun (x7891 : 'TChildren t) ->
                fun (x7892 : Range.t) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7891) "range"
                    (Range.t_to_js x7892)
            let (get_runnable : 'TChildren t -> bool) =
              fun (x7894 : 'TChildren t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7894) "runnable")
            let (set_runnable : 'TChildren t -> bool -> unit) =
              fun (x7896 : 'TChildren t) ->
                fun (x7897 : bool) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7896) "runnable"
                    (Ojs.bool_to_js x7897)
            let (get_debuggable : 'TChildren t -> bool) =
              fun (x7899 : 'TChildren t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7899) "debuggable")
            let (set_debuggable : 'TChildren t -> bool -> unit) =
              fun (x7901 : 'TChildren t) ->
                fun (x7902 : bool) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7901) "debuggable"
                    (Ojs.bool_to_js x7902)
            let (get_expandable : 'TChildren t -> bool) =
              fun (x7904 : 'TChildren t) ->
                Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js Obj.magic x7904) "expandable")
            let (set_expandable : 'TChildren t -> bool -> unit) =
              fun (x7906 : 'TChildren t) ->
                fun (x7907 : bool) ->
                  Ojs.set_prop_ascii (t_to_js Obj.magic x7906) "expandable"
                    (Ojs.bool_to_js x7907)
            let (create :
              id:string ->
                label:string -> uri:Uri.t -> expandable:bool -> 'TChildren t)
              =
              fun ~id:(x7909 : string) ->
                fun ~label:(x7910 : string) ->
                  fun ~uri:(x7911 : Uri.t) ->
                    fun ~expandable:(x7912 : bool) ->
                      t_of_js Obj.magic
                        (Ojs.new_obj
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "TestItem")
                           [|(Ojs.string_to_js x7909);(Ojs.string_to_js x7910);(
                             Uri.t_to_js x7911);(Ojs.bool_to_js x7912)|])
            let (invalidate : 'TChildren t -> unit) =
              fun (x7914 : 'TChildren t) ->
                ignore (Ojs.call (t_to_js Obj.magic x7914) "invalidate" [||])
            let (discoverChildren :
              'TChildren t ->
                progress:anonymous_interface_0 Progress.t ->
                  token:CancellationToken.t -> unit)
              =
              fun (x7919 : 'TChildren t) ->
                fun ~progress:(x7916 : anonymous_interface_0 Progress.t) ->
                  fun ~token:(x7918 : CancellationToken.t) ->
                    ignore
                      (Ojs.call (t_to_js Obj.magic x7919) "discoverChildren"
                         [|(Progress.t_to_js anonymous_interface_0_to_js
                              x7916);(CancellationToken.t_to_js x7918)|])
          end
        module TestResultState =
          struct
            type t = vscode_TestResultState
            let rec t_of_js : Ojs.t -> t =
              fun (x7922 : Ojs.t) -> vscode_TestResultState_of_js x7922
            and t_to_js : t -> Ojs.t =
              fun (x7921 : vscode_TestResultState) ->
                vscode_TestResultState_to_js x7921
          end
        module TestMessageSeverity =
          struct
            type t = vscode_TestMessageSeverity
            let rec t_of_js : Ojs.t -> t =
              fun (x7924 : Ojs.t) -> vscode_TestMessageSeverity_of_js x7924
            and t_to_js : t -> Ojs.t =
              fun (x7923 : vscode_TestMessageSeverity) ->
                vscode_TestMessageSeverity_to_js x7923
          end
        module TestMessage =
          struct
            type t = vscode_TestMessage
            let rec t_of_js : Ojs.t -> t =
              fun (x7926 : Ojs.t) -> vscode_TestMessage_of_js x7926
            and t_to_js : t -> Ojs.t =
              fun (x7925 : vscode_TestMessage) ->
                vscode_TestMessage_to_js x7925
            let (get_message : t -> MarkdownString.t or_string) =
              fun (x7927 : t) ->
                or_string_of_js MarkdownString.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7927) "message")
            let (set_message : t -> MarkdownString.t or_string -> unit) =
              fun (x7929 : t) ->
                fun (x7930 : MarkdownString.t or_string) ->
                  Ojs.set_prop_ascii (t_to_js x7929) "message"
                    (or_string_to_js MarkdownString.t_to_js x7930)
            let (get_severity : t -> vscode_TestMessageSeverity) =
              fun (x7932 : t) ->
                vscode_TestMessageSeverity_of_js
                  (Ojs.get_prop_ascii (t_to_js x7932) "severity")
            let (set_severity : t -> vscode_TestMessageSeverity -> unit) =
              fun (x7933 : t) ->
                fun (x7934 : vscode_TestMessageSeverity) ->
                  Ojs.set_prop_ascii (t_to_js x7933) "severity"
                    (vscode_TestMessageSeverity_to_js x7934)
            let (get_expectedOutput : t -> string) =
              fun (x7935 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7935) "expectedOutput")
            let (set_expectedOutput : t -> string -> unit) =
              fun (x7936 : t) ->
                fun (x7937 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7936) "expectedOutput"
                    (Ojs.string_to_js x7937)
            let (get_actualOutput : t -> string) =
              fun (x7938 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7938) "actualOutput")
            let (set_actualOutput : t -> string -> unit) =
              fun (x7939 : t) ->
                fun (x7940 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7939) "actualOutput"
                    (Ojs.string_to_js x7940)
            let (get_location : t -> Location.t) =
              fun (x7941 : t) ->
                Location.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x7941) "location")
            let (set_location : t -> Location.t -> unit) =
              fun (x7942 : t) ->
                fun (x7943 : Location.t) ->
                  Ojs.set_prop_ascii (t_to_js x7942) "location"
                    (Location.t_to_js x7943)
            let (diff :
              message:MarkdownString.t or_string ->
                expected:string -> actual:string -> t)
              =
              fun ~message:(x7944 : MarkdownString.t or_string) ->
                fun ~expected:(x7946 : string) ->
                  fun ~actual:(x7947 : string) ->
                    t_of_js
                      (Ojs.call
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "TestMessage") "diff"
                         [|(or_string_to_js MarkdownString.t_to_js x7944);(
                           Ojs.string_to_js x7946);(Ojs.string_to_js x7947)|])
            let (create : message:MarkdownString.t or_string -> t) =
              fun ~message:(x7948 : MarkdownString.t or_string) ->
                t_of_js
                  (Ojs.new_obj
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "TestMessage")
                     [|(or_string_to_js MarkdownString.t_to_js x7948)|])
          end
        module TestRunResult =
          struct
            type t = vscode_TestRunResult
            let rec t_of_js : Ojs.t -> t =
              fun (x7951 : Ojs.t) -> vscode_TestRunResult_of_js x7951
            and t_to_js : t -> Ojs.t =
              fun (x7950 : vscode_TestRunResult) ->
                vscode_TestRunResult_to_js x7950
            let (get_completedAt : t -> float) =
              fun (x7952 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7952) "completedAt")
            let (set_completedAt : t -> float -> unit) =
              fun (x7953 : t) ->
                fun (x7954 : float) ->
                  Ojs.set_prop_ascii (t_to_js x7953) "completedAt"
                    (Ojs.float_to_js x7954)
            let (get_output : t -> string) =
              fun (x7955 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7955) "output")
            let (set_output : t -> string -> unit) =
              fun (x7956 : t) ->
                fun (x7957 : string) ->
                  Ojs.set_prop_ascii (t_to_js x7956) "output"
                    (Ojs.string_to_js x7957)
            let (get_results :
              t -> vscode_TestResultSnapshot Readonly.t list) =
              fun (x7958 : t) ->
                Ojs.list_of_js
                  (fun (x7959 : Ojs.t) ->
                     Readonly.t_of_js vscode_TestResultSnapshot_of_js x7959)
                  (Ojs.get_prop_ascii (t_to_js x7958) "results")
            let (set_results :
              t -> vscode_TestResultSnapshot Readonly.t list -> unit) =
              fun (x7961 : t) ->
                fun (x7962 : vscode_TestResultSnapshot Readonly.t list) ->
                  Ojs.set_prop_ascii (t_to_js x7961) "results"
                    (Ojs.list_to_js
                       (fun (x7963 : vscode_TestResultSnapshot Readonly.t) ->
                          Readonly.t_to_js vscode_TestResultSnapshot_to_js
                            x7963) x7962)
          end
        module TestResultSnapshot =
          struct
            type t = vscode_TestResultSnapshot
            let rec t_of_js : Ojs.t -> t =
              fun (x7966 : Ojs.t) -> vscode_TestResultSnapshot_of_js x7966
            and t_to_js : t -> Ojs.t =
              fun (x7965 : vscode_TestResultSnapshot) ->
                vscode_TestResultSnapshot_to_js x7965
            let (get_id : t -> string) =
              fun (x7967 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7967) "id")
            let (get_uri : t -> Uri.t) =
              fun (x7968 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x7968) "uri")
            let (get_label : t -> string) =
              fun (x7969 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x7969) "label")
            let (get_description : t -> string) =
              fun (x7970 : t) ->
                Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x7970) "description")
            let (get_range : t -> Range.t) =
              fun (x7971 : t) ->
                Range.t_of_js (Ojs.get_prop_ascii (t_to_js x7971) "range")
            let (get_state : t -> vscode_TestResultState) =
              fun (x7972 : t) ->
                vscode_TestResultState_of_js
                  (Ojs.get_prop_ascii (t_to_js x7972) "state")
            let (get_duration : t -> float) =
              fun (x7973 : t) ->
                Ojs.float_of_js
                  (Ojs.get_prop_ascii (t_to_js x7973) "duration")
            let (get_messages : t -> vscode_TestMessage list) =
              fun (x7974 : t) ->
                Ojs.list_of_js vscode_TestMessage_of_js
                  (Ojs.get_prop_ascii (t_to_js x7974) "messages")
            let (get_children : t -> t Readonly.t list) =
              fun (x7976 : t) ->
                Ojs.list_of_js
                  (fun (x7977 : Ojs.t) -> Readonly.t_of_js t_of_js x7977)
                  (Ojs.get_prop_ascii (t_to_js x7976) "children")
          end
        module ExternalUriOpenerPriority =
          struct
            type t = vscode_ExternalUriOpenerPriority
            let rec t_of_js : Ojs.t -> t =
              fun (x7980 : Ojs.t) ->
                vscode_ExternalUriOpenerPriority_of_js x7980
            and t_to_js : t -> Ojs.t =
              fun (x7979 : vscode_ExternalUriOpenerPriority) ->
                vscode_ExternalUriOpenerPriority_to_js x7979
          end
        module ExternalUriOpener =
          struct
            type t = vscode_ExternalUriOpener
            let rec t_of_js : Ojs.t -> t =
              fun (x7982 : Ojs.t) -> vscode_ExternalUriOpener_of_js x7982
            and t_to_js : t -> Ojs.t =
              fun (x7981 : vscode_ExternalUriOpener) ->
                vscode_ExternalUriOpener_to_js x7981
            let (canOpenExternalUri :
              t ->
                uri:Uri.t ->
                  token:CancellationToken.t ->
                    ((vscode_ExternalUriOpenerPriority,
                       vscode_ExternalUriOpenerPriority Promise.t) union2,
                      [ `Default  | `None  | `Option  | `Preferred ]) or_enum)
              =
              fun (x7985 : t) ->
                fun ~uri:(x7983 : Uri.t) ->
                  fun ~token:(x7984 : CancellationToken.t) ->
                    or_enum_of_js
                      (fun (x7986 : Ojs.t) ->
                         union2_of_js vscode_ExternalUriOpenerPriority_of_js
                           (fun (x7988 : Ojs.t) ->
                              Promise.t_of_js
                                vscode_ExternalUriOpenerPriority_of_js x7988)
                           x7986)
                      (fun (x7990 : Ojs.t) ->
                         let x7991 = x7990 in
                         match Ojs.int_of_js x7991 with
                         | 2 -> `Default
                         | 0 -> `None
                         | 1 -> `Option
                         | 3 -> `Preferred
                         | _ -> assert false)
                      (Ojs.call (t_to_js x7985) "canOpenExternalUri"
                         [|(Uri.t_to_js x7983);(CancellationToken.t_to_js
                                                  x7984)|])
            let (openExternalUri :
              t ->
                resolvedUri:Uri.t ->
                  ctx:vscode_OpenExternalUriContext ->
                    token:CancellationToken.t ->
                      (unit, unit Promise.t) union2)
              =
              fun (x7995 : t) ->
                fun ~resolvedUri:(x7992 : Uri.t) ->
                  fun ~ctx:(x7993 : vscode_OpenExternalUriContext) ->
                    fun ~token:(x7994 : CancellationToken.t) ->
                      union2_of_js Ojs.unit_of_js
                        (fun (x7997 : Ojs.t) ->
                           Promise.t_of_js Ojs.unit_of_js x7997)
                        (Ojs.call (t_to_js x7995) "openExternalUri"
                           [|(Uri.t_to_js x7992);(vscode_OpenExternalUriContext_to_js
                                                    x7993);(CancellationToken.t_to_js
                                                              x7994)|])
          end
        module OpenExternalUriContext =
          struct
            type t = vscode_OpenExternalUriContext
            let rec t_of_js : Ojs.t -> t =
              fun (x8000 : Ojs.t) ->
                vscode_OpenExternalUriContext_of_js x8000
            and t_to_js : t -> Ojs.t =
              fun (x7999 : vscode_OpenExternalUriContext) ->
                vscode_OpenExternalUriContext_to_js x7999
            let (get_sourceUri : t -> Uri.t) =
              fun (x8001 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x8001) "sourceUri")
          end
        module ExternalUriOpenerMetadata =
          struct
            type t = vscode_ExternalUriOpenerMetadata
            let rec t_of_js : Ojs.t -> t =
              fun (x8003 : Ojs.t) ->
                vscode_ExternalUriOpenerMetadata_of_js x8003
            and t_to_js : t -> Ojs.t =
              fun (x8002 : vscode_ExternalUriOpenerMetadata) ->
                vscode_ExternalUriOpenerMetadata_to_js x8002
            let (get_schemes : t -> string list) =
              fun (x8004 : t) ->
                Ojs.list_of_js Ojs.string_of_js
                  (Ojs.get_prop_ascii (t_to_js x8004) "schemes")
            let (get_label : t -> string) =
              fun (x8006 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x8006) "label")
          end
        module OpenExternalOptions =
          struct
            type t = vscode_OpenExternalOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x8008 : Ojs.t) -> vscode_OpenExternalOptions_of_js x8008
            and t_to_js : t -> Ojs.t =
              fun (x8007 : vscode_OpenExternalOptions) ->
                vscode_OpenExternalOptions_to_js x8007
            let (get_allowContributedOpeners : t -> bool or_string) =
              fun (x8009 : t) ->
                or_string_of_js Ojs.bool_of_js
                  (Ojs.get_prop_ascii (t_to_js x8009)
                     "allowContributedOpeners")
          end
        module Env =
          struct
            let (openExternal :
              target:Uri.t ->
                ?options:vscode_OpenExternalOptions -> unit -> bool Promise.t)
              =
              fun ~target:(x8011 : Uri.t) ->
                fun ?options:(x8012 : vscode_OpenExternalOptions option) ->
                  fun () ->
                    Promise.t_of_js Ojs.bool_of_js
                      (let x8015 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode") "env" in
                       Ojs.call (Ojs.get_prop_ascii x8015 "openExternal")
                         "apply"
                         [|x8015;((let x8013 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x8013 "push"
                                        [|(Uri.t_to_js x8011)|]);
                                   (match x8012 with
                                    | Some x8014 ->
                                        ignore
                                          (Ojs.call x8013 "push"
                                             [|(vscode_OpenExternalOptions_to_js
                                                  x8014)|])
                                    | None -> ());
                                   x8013))|])
          end
        module OpenEditorInfo =
          struct
            type t = vscode_OpenEditorInfo
            let rec t_of_js : Ojs.t -> t =
              fun (x8018 : Ojs.t) -> vscode_OpenEditorInfo_of_js x8018
            and t_to_js : t -> Ojs.t =
              fun (x8017 : vscode_OpenEditorInfo) ->
                vscode_OpenEditorInfo_to_js x8017
            let (get_name : t -> string) =
              fun (x8019 : t) ->
                Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x8019) "name")
            let (set_name : t -> string -> unit) =
              fun (x8020 : t) ->
                fun (x8021 : string) ->
                  Ojs.set_prop_ascii (t_to_js x8020) "name"
                    (Ojs.string_to_js x8021)
            let (get_resource : t -> Uri.t) =
              fun (x8022 : t) ->
                Uri.t_of_js (Ojs.get_prop_ascii (t_to_js x8022) "resource")
            let (set_resource : t -> Uri.t -> unit) =
              fun (x8023 : t) ->
                fun (x8024 : Uri.t) ->
                  Ojs.set_prop_ascii (t_to_js x8023) "resource"
                    (Uri.t_to_js x8024)
          end
        module WorkspaceTrustState =
          struct
            type t = vscode_WorkspaceTrustState
            let rec t_of_js : Ojs.t -> t =
              fun (x8026 : Ojs.t) -> vscode_WorkspaceTrustState_of_js x8026
            and t_to_js : t -> Ojs.t =
              fun (x8025 : vscode_WorkspaceTrustState) ->
                vscode_WorkspaceTrustState_to_js x8025
          end
        module WorkspaceTrustStateChangeEvent =
          struct
            type t = vscode_WorkspaceTrustStateChangeEvent
            let rec t_of_js : Ojs.t -> t =
              fun (x8028 : Ojs.t) ->
                vscode_WorkspaceTrustStateChangeEvent_of_js x8028
            and t_to_js : t -> Ojs.t =
              fun (x8027 : vscode_WorkspaceTrustStateChangeEvent) ->
                vscode_WorkspaceTrustStateChangeEvent_to_js x8027
            let (get_newTrustState : t -> vscode_WorkspaceTrustState) =
              fun (x8029 : t) ->
                vscode_WorkspaceTrustState_of_js
                  (Ojs.get_prop_ascii (t_to_js x8029) "newTrustState")
          end
        module WorkspaceTrustRequestOptions =
          struct
            type t = vscode_WorkspaceTrustRequestOptions
            let rec t_of_js : Ojs.t -> t =
              fun (x8031 : Ojs.t) ->
                vscode_WorkspaceTrustRequestOptions_of_js x8031
            and t_to_js : t -> Ojs.t =
              fun (x8030 : vscode_WorkspaceTrustRequestOptions) ->
                vscode_WorkspaceTrustRequestOptions_to_js x8030
            let (get_modal : t -> bool) =
              fun (x8032 : t) ->
                Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x8032) "modal")
          end
        module Webview =
          struct
            type t = vscode_Webview
            let rec t_of_js : Ojs.t -> t =
              fun (x8034 : Ojs.t) -> vscode_Webview_of_js x8034
            and t_to_js : t -> Ojs.t =
              fun (x8033 : vscode_Webview) -> vscode_Webview_to_js x8033
            let (postMessage : t -> message:any -> bool Promise.t) =
              fun (x8036 : t) ->
                fun ~message:(x8035 : any) ->
                  Promise.t_of_js Ojs.bool_of_js
                    (Ojs.call (t_to_js x8036) "postMessage"
                       [|(any_to_js x8035)|])
          end
        module PortAutoForwardAction =
          struct
            type t = vscode_PortAutoForwardAction
            let rec t_of_js : Ojs.t -> t =
              fun (x8039 : Ojs.t) -> vscode_PortAutoForwardAction_of_js x8039
            and t_to_js : t -> Ojs.t =
              fun (x8038 : vscode_PortAutoForwardAction) ->
                vscode_PortAutoForwardAction_to_js x8038
          end
        module PortAttributes =
          struct
            type t = vscode_PortAttributes
            let rec t_of_js : Ojs.t -> t =
              fun (x8041 : Ojs.t) -> vscode_PortAttributes_of_js x8041
            and t_to_js : t -> Ojs.t =
              fun (x8040 : vscode_PortAttributes) ->
                vscode_PortAttributes_to_js x8040
            let (get_port : t -> float) =
              fun (x8042 : t) ->
                Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x8042) "port")
            let (set_port : t -> float -> unit) =
              fun (x8043 : t) ->
                fun (x8044 : float) ->
                  Ojs.set_prop_ascii (t_to_js x8043) "port"
                    (Ojs.float_to_js x8044)
            let (get_autoForwardAction : t -> vscode_PortAutoForwardAction) =
              fun (x8045 : t) ->
                vscode_PortAutoForwardAction_of_js
                  (Ojs.get_prop_ascii (t_to_js x8045) "autoForwardAction")
            let (set_autoForwardAction :
              t -> vscode_PortAutoForwardAction -> unit) =
              fun (x8046 : t) ->
                fun (x8047 : vscode_PortAutoForwardAction) ->
                  Ojs.set_prop_ascii (t_to_js x8046) "autoForwardAction"
                    (vscode_PortAutoForwardAction_to_js x8047)
          end
        module PortAttributesProvider =
          struct
            type t = vscode_PortAttributesProvider
            let rec t_of_js : Ojs.t -> t =
              fun (x8049 : Ojs.t) ->
                vscode_PortAttributesProvider_of_js x8049
            and t_to_js : t -> Ojs.t =
              fun (x8048 : vscode_PortAttributesProvider) ->
                vscode_PortAttributesProvider_to_js x8048
            let (providePortAttributes :
              t ->
                port:float ->
                  pid:float or_undefined ->
                    commandLine:string or_undefined ->
                      token:CancellationToken.t ->
                        vscode_PortAttributes ProviderResult.t)
              =
              fun (x8056 : t) ->
                fun ~port:(x8050 : float) ->
                  fun ~pid:(x8051 : float or_undefined) ->
                    fun ~commandLine:(x8053 : string or_undefined) ->
                      fun ~token:(x8055 : CancellationToken.t) ->
                        ProviderResult.t_of_js vscode_PortAttributes_of_js
                          (Ojs.call (t_to_js x8056) "providePortAttributes"
                             [|(Ojs.float_to_js x8050);(or_undefined_to_js
                                                          Ojs.float_to_js
                                                          x8051);(or_undefined_to_js
                                                                    Ojs.string_to_js
                                                                    x8053);(
                               CancellationToken.t_to_js x8055)|])
          end
      end
  end
module Thenable =
  struct
    type 'T t = 'T _Thenable
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8060 : Ojs.t) -> _Thenable_of_js __T_of_js x8060
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8058 : __T _Thenable) -> _Thenable_to_js __T_to_js x8058
    let (then_ :
      'T t ->
        ?onfulfilled:(value:'T -> ('TResult, 'TResult t) union2) ->
          ?onrejected:(reason:any -> ('TResult, 'TResult t) union2) ->
            unit -> 'TResult t)
      =
      fun (x8075 : 'T t) ->
        fun
          ?onfulfilled:(x8062 :
                         (value:'T -> ('TResult, 'TResult t) union2) option)
          ->
          fun
            ?onrejected:(x8063 :
                          (reason:any -> ('TResult, 'TResult t) union2)
                            option)
            ->
            fun () ->
              t_of_js Obj.magic
                (let x8077 = t_to_js Obj.magic x8075 in
                 Ojs.call (Ojs.get_prop_ascii x8077 "then") "apply"
                   [|x8077;((let x8064 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8062 with
                              | Some x8070 ->
                                  ignore
                                    (Ojs.call x8064 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x8071 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x8073 : 'TResult t) ->
                                                    t_to_js Obj.magic x8073)
                                                 (x8070
                                                    ~value:(Obj.magic x8071))))|])
                              | None -> ());
                             (match x8063 with
                              | Some x8065 ->
                                  ignore
                                    (Ojs.call x8064 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x8066 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x8068 : 'TResult t) ->
                                                    t_to_js Obj.magic x8068)
                                                 (x8065
                                                    ~reason:(any_of_js x8066))))|])
                              | None -> ());
                             x8064))|])
    let (then_' :
      'T t ->
        ?onfulfilled:(value:'T -> ('TResult, 'TResult t) union2) ->
          ?onrejected:(reason:any -> unit) -> unit -> 'TResult t)
      =
      fun (x8089 : 'T t) ->
        fun
          ?onfulfilled:(x8079 :
                         (value:'T -> ('TResult, 'TResult t) union2) option)
          ->
          fun ?onrejected:(x8080 : (reason:any -> unit) option) ->
            fun () ->
              t_of_js Obj.magic
                (let x8091 = t_to_js Obj.magic x8089 in
                 Ojs.call (Ojs.get_prop_ascii x8091 "then") "apply"
                   [|x8091;((let x8081 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8079 with
                              | Some x8084 ->
                                  ignore
                                    (Ojs.call x8081 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x8085 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x8087 : 'TResult t) ->
                                                    t_to_js Obj.magic x8087)
                                                 (x8084
                                                    ~value:(Obj.magic x8085))))|])
                              | None -> ());
                             (match x8080 with
                              | Some x8082 ->
                                  ignore
                                    (Ojs.call x8081 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x8083 : Ojs.t) ->
                                               x8082
                                                 ~reason:(any_of_js x8083)))|])
                              | None -> ());
                             x8081))|])
  end
