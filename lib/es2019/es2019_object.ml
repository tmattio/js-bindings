[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2018
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (get : t -> string -> 'T) =
      fun (x3 : t) ->
        fun (x4 : string) ->
          Obj.magic (Ojs.get_prop (t_to_js x3) (Ojs.string_to_js x4))
    let (set : t -> string -> 'T -> unit) =
      fun (x5 : t) ->
        fun (x6 : string) ->
          fun (x7 : 'T) ->
            Ojs.set_prop (t_to_js x5) (Ojs.string_to_js x6) (Obj.magic x7)
  end
module Object =
  struct
    include struct include Object end
    let (fromEntries :
      entries:(PropertyKey.t * 'T) Iterable.t -> AnonymousInterface0.t) =
      fun ~entries:(x8 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface0.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x9 : (PropertyKey.t * 'T)) ->
                     let (x10, x11) = x9 in
                     let x12 = Ojs.array_make 2 in
                     Ojs.array_set x12 0 (PropertyKey.t_to_js x10);
                     Ojs.array_set x12 1 (Obj.magic x11);
                     x12) x8)|])
    let (fromEntries' : entries:any list Iterable.t -> any) =
      fun ~entries:(x13 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x14 : any list) -> Ojs.list_to_js any_to_js x14) x13)|])
  end
module ObjectConstructor =
  struct
    include struct include ObjectConstructor end
    let (fromEntries :
      t -> entries:(PropertyKey.t * 'T) Iterable.t -> AnonymousInterface0.t)
      =
      fun (x21 : t) ->
        fun ~entries:(x16 : (PropertyKey.t * 'T) Iterable.t) ->
          AnonymousInterface0.t_of_js
            (Ojs.call (t_to_js x21) "fromEntries"
               [|(Iterable.t_to_js
                    (fun (x17 : (PropertyKey.t * 'T)) ->
                       let (x18, x19) = x17 in
                       let x20 = Ojs.array_make 2 in
                       Ojs.array_set x20 0 (PropertyKey.t_to_js x18);
                       Ojs.array_set x20 1 (Obj.magic x19);
                       x20) x16)|])
    let (fromEntries' : t -> entries:any list Iterable.t -> any) =
      fun (x25 : t) ->
        fun ~entries:(x22 : any list Iterable.t) ->
          any_of_js
            (Ojs.call (t_to_js x25) "fromEntries"
               [|(Iterable.t_to_js
                    (fun (x23 : any list) -> Ojs.list_to_js any_to_js x23)
                    x22)|])
  end
