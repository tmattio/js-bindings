[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module DocumentSemanticsTokensSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (apply :
      t ->
        this:unit ->
          document:Vscode.TextDocument.t ->
            token:Vscode.CancellationToken.t ->
              Vscode.SemanticTokens.t Vscode.ProviderResult.t)
      =
      fun (x6 : t) ->
        fun ~this:(x3 : unit) ->
          fun ~document:(x4 : Vscode.TextDocument.t) ->
            fun ~token:(x5 : Vscode.CancellationToken.t) ->
              Vscode.ProviderResult.t_of_js Vscode.SemanticTokens.t_of_js
                (Ojs.apply (t_to_js x6)
                   [|(Ojs.unit_to_js x3);(Vscode.TextDocument.t_to_js x4);(
                     Vscode.CancellationToken.t_to_js x5)|])
  end
module DocumentSemanticsTokensEditsSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9 : Ojs.t) -> x9
    and t_to_js : t -> Ojs.t = fun (x8 : Ojs.t) -> x8
    let (apply :
      t ->
        this:unit ->
          document:Vscode.TextDocument.t ->
            previous_result_id:string ->
              token:Vscode.CancellationToken.t ->
                (Vscode.SemanticTokens.t, Vscode.SemanticTokensEdits.t)
                  union2 Vscode.ProviderResult.t)
      =
      fun (x14 : t) ->
        fun ~this:(x10 : unit) ->
          fun ~document:(x11 : Vscode.TextDocument.t) ->
            fun ~previous_result_id:(x12 : string) ->
              fun ~token:(x13 : Vscode.CancellationToken.t) ->
                Vscode.ProviderResult.t_of_js
                  (fun (x15 : Ojs.t) ->
                     union2_of_js Vscode.SemanticTokens.t_of_js
                       Vscode.SemanticTokensEdits.t_of_js x15)
                  (Ojs.apply (t_to_js x14)
                     [|(Ojs.unit_to_js x10);(Vscode.TextDocument.t_to_js x11);(
                       Ojs.string_to_js x12);(Vscode.CancellationToken.t_to_js
                                                x13)|])
  end
module DocumentRangeSemanticTokensSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x19 : Ojs.t) -> x19
    and t_to_js : t -> Ojs.t = fun (x18 : Ojs.t) -> x18
    let (apply :
      t ->
        this:unit ->
          document:Vscode.TextDocument.t ->
            range:Vscode.Range.t ->
              token:Vscode.CancellationToken.t ->
                Vscode.SemanticTokens.t Vscode.ProviderResult.t)
      =
      fun (x24 : t) ->
        fun ~this:(x20 : unit) ->
          fun ~document:(x21 : Vscode.TextDocument.t) ->
            fun ~range:(x22 : Vscode.Range.t) ->
              fun ~token:(x23 : Vscode.CancellationToken.t) ->
                Vscode.ProviderResult.t_of_js Vscode.SemanticTokens.t_of_js
                  (Ojs.apply (t_to_js x24)
                     [|(Ojs.unit_to_js x20);(Vscode.TextDocument.t_to_js x21);(
                       Vscode.Range.t_to_js x22);(Vscode.CancellationToken.t_to_js
                                                    x23)|])
  end
module SemanticTokensMiddleware =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x27 : Ojs.t) -> x27
    and t_to_js : t -> Ojs.t = fun (x26 : Ojs.t) -> x26
    let (provide_document_semantic_tokens :
      t ->
        this:unit ->
          document:Vscode.TextDocument.t ->
            token:Vscode.CancellationToken.t ->
              next:DocumentSemanticsTokensSignature.t ->
                Vscode.SemanticTokens.t Vscode.ProviderResult.t)
      =
      fun (x32 : t) ->
        fun ~this:(x28 : unit) ->
          fun ~document:(x29 : Vscode.TextDocument.t) ->
            fun ~token:(x30 : Vscode.CancellationToken.t) ->
              fun ~next:(x31 : DocumentSemanticsTokensSignature.t) ->
                Vscode.ProviderResult.t_of_js Vscode.SemanticTokens.t_of_js
                  (Ojs.call (t_to_js x32) "provideDocumentSemanticTokens"
                     [|(Ojs.unit_to_js x28);(Vscode.TextDocument.t_to_js x29);(
                       Vscode.CancellationToken.t_to_js x30);(DocumentSemanticsTokensSignature.t_to_js
                                                                x31)|])
    let (provide_document_semantic_tokens_edits :
      t ->
        this:unit ->
          document:Vscode.TextDocument.t ->
            previous_result_id:string ->
              token:Vscode.CancellationToken.t ->
                next:DocumentSemanticsTokensEditsSignature.t ->
                  (Vscode.SemanticTokens.t, Vscode.SemanticTokensEdits.t)
                    union2 Vscode.ProviderResult.t)
      =
      fun (x39 : t) ->
        fun ~this:(x34 : unit) ->
          fun ~document:(x35 : Vscode.TextDocument.t) ->
            fun ~previous_result_id:(x36 : string) ->
              fun ~token:(x37 : Vscode.CancellationToken.t) ->
                fun ~next:(x38 : DocumentSemanticsTokensEditsSignature.t) ->
                  Vscode.ProviderResult.t_of_js
                    (fun (x40 : Ojs.t) ->
                       union2_of_js Vscode.SemanticTokens.t_of_js
                         Vscode.SemanticTokensEdits.t_of_js x40)
                    (Ojs.call (t_to_js x39)
                       "provideDocumentSemanticTokensEdits"
                       [|(Ojs.unit_to_js x34);(Vscode.TextDocument.t_to_js
                                                 x35);(Ojs.string_to_js x36);(
                         Vscode.CancellationToken.t_to_js x37);(DocumentSemanticsTokensEditsSignature.t_to_js
                                                                  x38)|])
    let (provide_document_range_semantic_tokens :
      t ->
        this:unit ->
          document:Vscode.TextDocument.t ->
            range:Vscode.Range.t ->
              token:Vscode.CancellationToken.t ->
                next:DocumentRangeSemanticTokensSignature.t ->
                  Vscode.SemanticTokens.t Vscode.ProviderResult.t)
      =
      fun (x48 : t) ->
        fun ~this:(x43 : unit) ->
          fun ~document:(x44 : Vscode.TextDocument.t) ->
            fun ~range:(x45 : Vscode.Range.t) ->
              fun ~token:(x46 : Vscode.CancellationToken.t) ->
                fun ~next:(x47 : DocumentRangeSemanticTokensSignature.t) ->
                  Vscode.ProviderResult.t_of_js Vscode.SemanticTokens.t_of_js
                    (Ojs.call (t_to_js x48)
                       "provideDocumentRangeSemanticTokens"
                       [|(Ojs.unit_to_js x43);(Vscode.TextDocument.t_to_js
                                                 x44);(Vscode.Range.t_to_js
                                                         x45);(Vscode.CancellationToken.t_to_js
                                                                 x46);(
                         DocumentRangeSemanticTokensSignature.t_to_js x47)|])
  end
module SemanticTokensProviders =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x51 : Ojs.t) -> x51
    and t_to_js : t -> Ojs.t = fun (x50 : Ojs.t) -> x50
    let (get_range : t -> Vscode.DocumentRangeSemanticTokensProvider.t) =
      fun (x52 : t) ->
        Vscode.DocumentRangeSemanticTokensProvider.t_of_js
          (Ojs.get_prop_ascii (t_to_js x52) "range")
    let (set_range :
      t -> Vscode.DocumentRangeSemanticTokensProvider.t -> unit) =
      fun (x53 : t) ->
        fun (x54 : Vscode.DocumentRangeSemanticTokensProvider.t) ->
          Ojs.set_prop_ascii (t_to_js x53) "range"
            (Vscode.DocumentRangeSemanticTokensProvider.t_to_js x54)
    let (get_full : t -> Vscode.DocumentSemanticTokensProvider.t) =
      fun (x55 : t) ->
        Vscode.DocumentSemanticTokensProvider.t_of_js
          (Ojs.get_prop_ascii (t_to_js x55) "full")
    let (set_full : t -> Vscode.DocumentSemanticTokensProvider.t -> unit) =
      fun (x56 : t) ->
        fun (x57 : Vscode.DocumentSemanticTokensProvider.t) ->
          Ojs.set_prop_ascii (t_to_js x56) "full"
            (Vscode.DocumentSemanticTokensProvider.t_to_js x57)
    let (get_on_did_change_semantic_tokens_emitter :
      t -> unit Vscode.EventEmitter.t) =
      fun (x58 : t) ->
        Vscode.EventEmitter.t_of_js Ojs.unit_of_js
          (Ojs.get_prop_ascii (t_to_js x58)
             "onDidChangeSemanticTokensEmitter")
    let (set_on_did_change_semantic_tokens_emitter :
      t -> unit Vscode.EventEmitter.t -> unit) =
      fun (x60 : t) ->
        fun (x61 : unit Vscode.EventEmitter.t) ->
          Ojs.set_prop_ascii (t_to_js x60) "onDidChangeSemanticTokensEmitter"
            (Vscode.EventEmitter.t_to_js Ojs.unit_to_js x61)
  end
module SemanticTokensFeature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x64 : Ojs.t) -> x64
    and t_to_js : t -> Ojs.t = fun (x63 : Ojs.t) -> x63
    let (create : client:BaseLanguageClient.t -> t) =
      fun ~client:(x65 : BaseLanguageClient.t) ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "SemanticTokensFeature")
             [|(BaseLanguageClient.t_to_js x65)|])
    let (fill_client_capabilities :
      t -> capabilities:ClientCapabilities.t -> unit) =
      fun (x67 : t) ->
        fun ~capabilities:(x66 : ClientCapabilities.t) ->
          ignore
            (Ojs.call (t_to_js x67) "fillClientCapabilities"
               [|(ClientCapabilities.t_to_js x66)|])
    let (initialize :
      t ->
        capabilities:ServerCapabilities.t ->
          document_selector:DocumentSelector.t -> unit)
      =
      fun (x70 : t) ->
        fun ~capabilities:(x68 : ServerCapabilities.t) ->
          fun ~document_selector:(x69 : DocumentSelector.t) ->
            ignore
              (Ojs.call (t_to_js x70) "initialize"
                 [|(ServerCapabilities.t_to_js x68);(DocumentSelector.t_to_js
                                                       x69)|])
    let (register_language_provider :
      t ->
        options:SemanticTokensRegistrationOptions.t ->
          (Vscode.Disposable.t * SemanticTokensProviders.t))
      =
      fun (x72 : t) ->
        fun ~options:(x71 : SemanticTokensRegistrationOptions.t) ->
          let x73 =
            Ojs.call (t_to_js x72) "registerLanguageProvider"
              [|(SemanticTokensRegistrationOptions.t_to_js x71)|] in
          ((Vscode.Disposable.t_of_js (Ojs.array_get x73 0)),
            (SemanticTokensProviders.t_of_js (Ojs.array_get x73 1)))
    let (cast :
      t ->
        (SemanticTokensOptions.t or_boolean,
          SemanticTokensRegistrationOptions.t, SemanticTokensProviders.t)
          TextDocumentFeature.t)
      =
      fun (x74 : t) ->
        TextDocumentFeature.t_of_js
          (fun (x75 : Ojs.t) ->
             or_boolean_of_js SemanticTokensOptions.t_of_js x75)
          SemanticTokensRegistrationOptions.t_of_js
          SemanticTokensProviders.t_of_js (t_to_js x74)
  end
