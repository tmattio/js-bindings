[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module ProvideLinkedEditingRangeSignature =
  struct
    type t = _ProvideLinkedEditingRangeSignature
    let rec t_of_js : Ojs.t -> t =
      fun (x2 : Ojs.t) -> _ProvideLinkedEditingRangeSignature_of_js x2
    and t_to_js : t -> Ojs.t =
      fun (x1 : _ProvideLinkedEditingRangeSignature) ->
        _ProvideLinkedEditingRangeSignature_to_js x1
    let (apply :
      t ->
        this:unit ->
          document:Code.TextDocument.t ->
            position:Code.Position.t ->
              token:Code.CancellationToken.t ->
                Code.LinkedEditingRanges.t Code.ProviderResult.t)
      =
      fun (x7 : t) ->
        fun ~this:(x3 : unit) ->
          fun ~document:(x4 : Code.TextDocument.t) ->
            fun ~position:(x5 : Code.Position.t) ->
              fun ~token:(x6 : Code.CancellationToken.t) ->
                Code.ProviderResult.t_of_js Code.LinkedEditingRanges.t_of_js
                  (Ojs.apply (t_to_js x7)
                     [|(Ojs.unit_to_js x3);(Code.TextDocument.t_to_js x4);(
                       Code.Position.t_to_js x5);(Code.CancellationToken.t_to_js
                                                    x6)|])
  end
module LinkedEditingRangeMiddleware =
  struct
    type t = _LinkedEditingRangeMiddleware
    let rec t_of_js : Ojs.t -> t =
      fun (x10 : Ojs.t) -> _LinkedEditingRangeMiddleware_of_js x10
    and t_to_js : t -> Ojs.t =
      fun (x9 : _LinkedEditingRangeMiddleware) ->
        _LinkedEditingRangeMiddleware_to_js x9
    let (provideLinkedEditingRange :
      t ->
        this:unit ->
          document:Code.TextDocument.t ->
            position:Code.Position.t ->
              token:Code.CancellationToken.t ->
                next:_ProvideLinkedEditingRangeSignature ->
                  Code.LinkedEditingRanges.t Code.ProviderResult.t)
      =
      fun (x16 : t) ->
        fun ~this:(x11 : unit) ->
          fun ~document:(x12 : Code.TextDocument.t) ->
            fun ~position:(x13 : Code.Position.t) ->
              fun ~token:(x14 : Code.CancellationToken.t) ->
                fun ~next:(x15 : _ProvideLinkedEditingRangeSignature) ->
                  Code.ProviderResult.t_of_js
                    Code.LinkedEditingRanges.t_of_js
                    (Ojs.call (t_to_js x16) "provideLinkedEditingRange"
                       [|(Ojs.unit_to_js x11);(Code.TextDocument.t_to_js x12);(
                         Code.Position.t_to_js x13);(Code.CancellationToken.t_to_js
                                                       x14);(_ProvideLinkedEditingRangeSignature_to_js
                                                               x15)|])
  end
module LinkedEditingFeature =
  struct
    type t = _LinkedEditingFeature
    let rec t_of_js : Ojs.t -> t =
      fun (x19 : Ojs.t) -> _LinkedEditingFeature_of_js x19
    and t_to_js : t -> Ojs.t =
      fun (x18 : _LinkedEditingFeature) -> _LinkedEditingFeature_to_js x18
    let (create : client:BaseLanguageClient.t -> t) =
      fun ~client:(x20 : BaseLanguageClient.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "LinkedEditingFeature")
             [|(BaseLanguageClient.t_to_js x20)|])
    let (fillClientCapabilities :
      t -> capabilities:Proto.ClientCapabilities.t -> unit) =
      fun (x22 : t) ->
        fun ~capabilities:(x21 : Proto.ClientCapabilities.t) ->
          ignore
            (Ojs.call (t_to_js x22) "fillClientCapabilities"
               [|(Proto.ClientCapabilities.t_to_js x21)|])
    let (initialize :
      t ->
        capabilities:Proto.ServerCapabilities.t ->
          documentSelector:Proto.DocumentSelector.t -> unit)
      =
      fun (x25 : t) ->
        fun ~capabilities:(x23 : Proto.ServerCapabilities.t) ->
          fun ~documentSelector:(x24 : Proto.DocumentSelector.t) ->
            ignore
              (Ojs.call (t_to_js x25) "initialize"
                 [|(Proto.ServerCapabilities.t_to_js x23);(Proto.DocumentSelector.t_to_js
                                                             x24)|])
    let (registerLanguageProvider :
      t ->
        options:Proto.LinkedEditingRangeRegistrationOptions.t ->
          (Code.Disposable.t * Code.LinkedEditingRangeProvider.t))
      =
      fun (x27 : t) ->
        fun ~options:(x26 : Proto.LinkedEditingRangeRegistrationOptions.t) ->
          let x28 =
            Ojs.call (t_to_js x27) "registerLanguageProvider"
              [|(Proto.LinkedEditingRangeRegistrationOptions.t_to_js x26)|] in
          ((Code.Disposable.t_of_js (Ojs.array_get x28 0)),
            (Code.LinkedEditingRangeProvider.t_of_js (Ojs.array_get x28 1)))
    let (cast :
      t ->
        (Proto.LinkedEditingRangeOptions.t or_boolean,
          Proto.LinkedEditingRangeRegistrationOptions.t,
          Code.LinkedEditingRangeProvider.t) TextDocumentFeature.t)
      =
      fun (x29 : t) ->
        TextDocumentFeature.t_of_js
          (fun (x30 : Ojs.t) ->
             or_boolean_of_js Proto.LinkedEditingRangeOptions.t_of_js x30)
          Proto.LinkedEditingRangeRegistrationOptions.t_of_js
          Code.LinkedEditingRangeProvider.t_of_js (t_to_js x29)
  end
