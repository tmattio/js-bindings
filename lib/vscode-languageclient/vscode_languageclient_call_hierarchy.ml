[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
open Vscode
open Vscode_language_server_protocol
open Client
module PrepareCallHierarchySignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> x2
    and t_to_js : t -> Ojs.t = fun (x1 : Ojs.t) -> x1
    let (apply :
      t ->
        this:unit ->
          document:TextDocument.t ->
            position:VPosition.t ->
              token:CancellationToken.t ->
                (VCallHierarchyItem.t, VCallHierarchyItem.t) or_array
                  ProviderResult.t)
      =
      fun (x7 : t) ->
        fun ~this:(x3 : unit) ->
          fun ~document:(x4 : TextDocument.t) ->
            fun ~position:(x5 : VPosition.t) ->
              fun ~token:(x6 : CancellationToken.t) ->
                ProviderResult.t_of_js
                  (fun (x8 : Ojs.t) ->
                     or_array_of_js VCallHierarchyItem.t_of_js
                       VCallHierarchyItem.t_of_js x8)
                  (Ojs.apply (t_to_js x7)
                     [|(Ojs.unit_to_js x3);(TextDocument.t_to_js x4);(
                       VPosition.t_to_js x5);(CancellationToken.t_to_js x6)|])
  end
module CallHierarchyIncomingCallsSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x12 : Ojs.t) -> x12
    and t_to_js : t -> Ojs.t = fun (x11 : Ojs.t) -> x11
    let (apply :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              VCallHierarchyIncomingCall.t list ProviderResult.t)
      =
      fun (x16 : t) ->
        fun ~this:(x13 : unit) ->
          fun ~item:(x14 : VCallHierarchyItem.t) ->
            fun ~token:(x15 : CancellationToken.t) ->
              ProviderResult.t_of_js
                (fun (x17 : Ojs.t) ->
                   Ojs.list_of_js VCallHierarchyIncomingCall.t_of_js x17)
                (Ojs.apply (t_to_js x16)
                   [|(Ojs.unit_to_js x13);(VCallHierarchyItem.t_to_js x14);(
                     CancellationToken.t_to_js x15)|])
  end
module CallHierarchyOutgoingCallsSignature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x20 : Ojs.t) -> x20
    and t_to_js : t -> Ojs.t = fun (x19 : Ojs.t) -> x19
    let (apply :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              VCallHierarchyOutgoingCall.t list ProviderResult.t)
      =
      fun (x24 : t) ->
        fun ~this:(x21 : unit) ->
          fun ~item:(x22 : VCallHierarchyItem.t) ->
            fun ~token:(x23 : CancellationToken.t) ->
              ProviderResult.t_of_js
                (fun (x25 : Ojs.t) ->
                   Ojs.list_of_js VCallHierarchyOutgoingCall.t_of_js x25)
                (Ojs.apply (t_to_js x24)
                   [|(Ojs.unit_to_js x21);(VCallHierarchyItem.t_to_js x22);(
                     CancellationToken.t_to_js x23)|])
  end
module CallHierarchyMiddleware =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x28 : Ojs.t) -> x28
    and t_to_js : t -> Ojs.t = fun (x27 : Ojs.t) -> x27
    let (prepare_call_hierarchy :
      t ->
        this:unit ->
          document:TextDocument.t ->
            positions:VPosition.t ->
              token:CancellationToken.t ->
                next:PrepareCallHierarchySignature.t ->
                  (VCallHierarchyItem.t, VCallHierarchyItem.t) or_array
                    ProviderResult.t)
      =
      fun (x34 : t) ->
        fun ~this:(x29 : unit) ->
          fun ~document:(x30 : TextDocument.t) ->
            fun ~positions:(x31 : VPosition.t) ->
              fun ~token:(x32 : CancellationToken.t) ->
                fun ~next:(x33 : PrepareCallHierarchySignature.t) ->
                  ProviderResult.t_of_js
                    (fun (x35 : Ojs.t) ->
                       or_array_of_js VCallHierarchyItem.t_of_js
                         VCallHierarchyItem.t_of_js x35)
                    (Ojs.call (t_to_js x34) "prepareCallHierarchy"
                       [|(Ojs.unit_to_js x29);(TextDocument.t_to_js x30);(
                         VPosition.t_to_js x31);(CancellationToken.t_to_js
                                                   x32);(PrepareCallHierarchySignature.t_to_js
                                                           x33)|])
    let (provide_call_hierarchy_incoming_calls :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              next:CallHierarchyIncomingCallsSignature.t ->
                VCallHierarchyIncomingCall.t list ProviderResult.t)
      =
      fun (x42 : t) ->
        fun ~this:(x38 : unit) ->
          fun ~item:(x39 : VCallHierarchyItem.t) ->
            fun ~token:(x40 : CancellationToken.t) ->
              fun ~next:(x41 : CallHierarchyIncomingCallsSignature.t) ->
                ProviderResult.t_of_js
                  (fun (x43 : Ojs.t) ->
                     Ojs.list_of_js VCallHierarchyIncomingCall.t_of_js x43)
                  (Ojs.call (t_to_js x42) "provideCallHierarchyIncomingCalls"
                     [|(Ojs.unit_to_js x38);(VCallHierarchyItem.t_to_js x39);(
                       CancellationToken.t_to_js x40);(CallHierarchyIncomingCallsSignature.t_to_js
                                                         x41)|])
    let (provide_call_hierarchy_outgoing_calls :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              next:CallHierarchyOutgoingCallsSignature.t ->
                VCallHierarchyOutgoingCall.t list ProviderResult.t)
      =
      fun (x49 : t) ->
        fun ~this:(x45 : unit) ->
          fun ~item:(x46 : VCallHierarchyItem.t) ->
            fun ~token:(x47 : CancellationToken.t) ->
              fun ~next:(x48 : CallHierarchyOutgoingCallsSignature.t) ->
                ProviderResult.t_of_js
                  (fun (x50 : Ojs.t) ->
                     Ojs.list_of_js VCallHierarchyOutgoingCall.t_of_js x50)
                  (Ojs.call (t_to_js x49) "provideCallHierarchyOutgoingCalls"
                     [|(Ojs.unit_to_js x45);(VCallHierarchyItem.t_to_js x46);(
                       CancellationToken.t_to_js x47);(CallHierarchyOutgoingCallsSignature.t_to_js
                                                         x48)|])
  end
module CallHierarchyProvider =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x53 : Ojs.t) -> x53
    and t_to_js : t -> Ojs.t = fun (x52 : Ojs.t) -> x52
    let (get_client : t -> any) =
      fun (x54 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x54) "client")
    let (set_client : t -> any -> unit) =
      fun (x55 : t) ->
        fun (x56 : any) ->
          Ojs.set_prop_ascii (t_to_js x55) "client" (any_to_js x56)
    let (get_middleware : t -> any) =
      fun (x57 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x57) "middleware")
    let (set_middleware : t -> any -> unit) =
      fun (x58 : t) ->
        fun (x59 : any) ->
          Ojs.set_prop_ascii (t_to_js x58) "middleware" (any_to_js x59)
    let (create : client:BaseLanguageClient.t -> t) =
      fun ~client:(x60 : BaseLanguageClient.t) ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "CallHierarchyProvider")
             [|(BaseLanguageClient.t_to_js x60)|])
    let (prepare_call_hierarchy :
      t ->
        document:TextDocument.t ->
          position:VPosition.t ->
            token:CancellationToken.t ->
              (VCallHierarchyItem.t, VCallHierarchyItem.t) or_array
                ProviderResult.t)
      =
      fun (x64 : t) ->
        fun ~document:(x61 : TextDocument.t) ->
          fun ~position:(x62 : VPosition.t) ->
            fun ~token:(x63 : CancellationToken.t) ->
              ProviderResult.t_of_js
                (fun (x65 : Ojs.t) ->
                   or_array_of_js VCallHierarchyItem.t_of_js
                     VCallHierarchyItem.t_of_js x65)
                (Ojs.call (t_to_js x64) "prepareCallHierarchy"
                   [|(TextDocument.t_to_js x61);(VPosition.t_to_js x62);(
                     CancellationToken.t_to_js x63)|])
    let (provide_call_hierarchy_incoming_calls :
      t ->
        item:VCallHierarchyItem.t ->
          token:CancellationToken.t ->
            VCallHierarchyIncomingCall.t list ProviderResult.t)
      =
      fun (x70 : t) ->
        fun ~item:(x68 : VCallHierarchyItem.t) ->
          fun ~token:(x69 : CancellationToken.t) ->
            ProviderResult.t_of_js
              (fun (x71 : Ojs.t) ->
                 Ojs.list_of_js VCallHierarchyIncomingCall.t_of_js x71)
              (Ojs.call (t_to_js x70) "provideCallHierarchyIncomingCalls"
                 [|(VCallHierarchyItem.t_to_js x68);(CancellationToken.t_to_js
                                                       x69)|])
    let (provide_call_hierarchy_outgoing_calls :
      t ->
        item:VCallHierarchyItem.t ->
          token:CancellationToken.t ->
            VCallHierarchyOutgoingCall.t list ProviderResult.t)
      =
      fun (x75 : t) ->
        fun ~item:(x73 : VCallHierarchyItem.t) ->
          fun ~token:(x74 : CancellationToken.t) ->
            ProviderResult.t_of_js
              (fun (x76 : Ojs.t) ->
                 Ojs.list_of_js VCallHierarchyOutgoingCall.t_of_js x76)
              (Ojs.call (t_to_js x75) "provideCallHierarchyOutgoingCalls"
                 [|(VCallHierarchyItem.t_to_js x73);(CancellationToken.t_to_js
                                                       x74)|])
    include struct include VCallHierarchyProvider end
  end
module CallHierarchyFeature =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x79 : Ojs.t) -> x79
    and t_to_js : t -> Ojs.t = fun (x78 : Ojs.t) -> x78
    let (create : client:BaseLanguageClient.t -> t) =
      fun ~client:(x80 : BaseLanguageClient.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "CallHierarchyFeature")
             [|(BaseLanguageClient.t_to_js x80)|])
    let (fill_client_capabilities : t -> cap:ClientCapabilities.t -> unit) =
      fun (x82 : t) ->
        fun ~cap:(x81 : ClientCapabilities.t) ->
          ignore
            (Ojs.call (t_to_js x82) "fillClientCapabilities"
               [|(ClientCapabilities.t_to_js x81)|])
    let (initialize :
      t ->
        capabilities:ServerCapabilities.t ->
          document_selector:DocumentSelector.t -> unit)
      =
      fun (x85 : t) ->
        fun ~capabilities:(x83 : ServerCapabilities.t) ->
          fun ~document_selector:(x84 : DocumentSelector.t) ->
            ignore
              (Ojs.call (t_to_js x85) "initialize"
                 [|(ServerCapabilities.t_to_js x83);(DocumentSelector.t_to_js
                                                       x84)|])
    let (register_language_provider :
      t ->
        options:CallHierarchyRegistrationOptions.t ->
          (Disposable.t * CallHierarchyProvider.t))
      =
      fun (x87 : t) ->
        fun ~options:(x86 : CallHierarchyRegistrationOptions.t) ->
          let x88 =
            Ojs.call (t_to_js x87) "registerLanguageProvider"
              [|(CallHierarchyRegistrationOptions.t_to_js x86)|] in
          ((Disposable.t_of_js (Ojs.array_get x88 0)),
            (CallHierarchyProvider.t_of_js (Ojs.array_get x88 1)))
    let (cast :
      t ->
        (CallHierarchyOptions.t or_boolean,
          CallHierarchyRegistrationOptions.t, CallHierarchyProvider.t)
          TextDocumentFeature.t)
      =
      fun (x89 : t) ->
        TextDocumentFeature.t_of_js
          (fun (x90 : Ojs.t) ->
             or_boolean_of_js CallHierarchyOptions.t_of_js x90)
          CallHierarchyRegistrationOptions.t_of_js
          CallHierarchyProvider.t_of_js (t_to_js x89)
  end
