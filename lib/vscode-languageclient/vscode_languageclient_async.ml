[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module ITask =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x2 : Ojs.t) -> x2
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1 : Ojs.t) -> x1
    let (apply : 'T t -> 'T) =
      fun (x3 : 'T t) -> Obj.magic (Ojs.apply (t_to_js Obj.magic x3) [||])
  end
module Delayer =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x6 : Ojs.t) -> x6
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5 : Ojs.t) -> x5
    let (get_default_delay : 'T t -> int) =
      fun (x7 : 'T t) ->
        Ojs.int_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x7) "defaultDelay")
    let (set_default_delay : 'T t -> int -> unit) =
      fun (x9 : 'T t) ->
        fun (x10 : int) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x9) "defaultDelay"
            (Ojs.int_to_js x10)
    let (get_timeout : 'T t -> any) =
      fun (x12 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x12) "timeout")
    let (set_timeout : 'T t -> any -> unit) =
      fun (x14 : 'T t) ->
        fun (x15 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x14) "timeout"
            (any_to_js x15)
    let (get_completion_promise : 'T t -> any) =
      fun (x17 : 'T t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x17) "completionPromise")
    let (set_completion_promise : 'T t -> any -> unit) =
      fun (x19 : 'T t) ->
        fun (x20 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x19) "completionPromise"
            (any_to_js x20)
    let (get_on_success : 'T t -> any) =
      fun (x22 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x22) "onSuccess")
    let (set_on_success : 'T t -> any -> unit) =
      fun (x24 : 'T t) ->
        fun (x25 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x24) "onSuccess"
            (any_to_js x25)
    let (get_task : 'T t -> any) =
      fun (x27 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x27) "task")
    let (set_task : 'T t -> any -> unit) =
      fun (x29 : 'T t) ->
        fun (x30 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x29) "task" (any_to_js x30)
    let (create : default_delay:int -> 'T t) =
      fun ~default_delay:(x32 : int) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Delayer")
             [|(Ojs.int_to_js x32)|])
    let (trigger :
      'T t -> task:'T ITask.t -> ?delay:int -> unit -> 'T Promise.t) =
      fun (x39 : 'T t) ->
        fun ~task:(x34 : 'T ITask.t) ->
          fun ?delay:(x35 : int option) ->
            fun () ->
              Promise.t_of_js Obj.magic
                (let x41 = t_to_js Obj.magic x39 in
                 Ojs.call (Ojs.get_prop_ascii x41 "trigger") "apply"
                   [|x41;((let x36 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x36 "push"
                                [|(ITask.t_to_js Obj.magic x34)|]);
                           (match x35 with
                            | Some x37 ->
                                ignore
                                  (Ojs.call x36 "push"
                                     [|(Ojs.int_to_js x37)|])
                            | None -> ());
                           x36))|])
    let (force_delivery : 'T t -> 'T or_undefined) =
      fun (x43 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x43) "forceDelivery" [||])
    let (is_triggered : 'T t -> bool) =
      fun (x46 : 'T t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js Obj.magic x46) "isTriggered" [||])
    let (cancel : 'T t -> unit) =
      fun (x48 : 'T t) ->
        ignore (Ojs.call (t_to_js Obj.magic x48) "cancel" [||])
    let (get_cancel_timeout : 'T t -> any) =
      fun (x50 : 'T t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x50) "cancelTimeout")
    let (set_cancel_timeout : 'T t -> any -> unit) =
      fun (x52 : 'T t) ->
        fun (x53 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x52) "cancelTimeout"
            (any_to_js x53)
  end
