[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Internal =
  struct
    module AnonymousInterfaces = struct  end
    module Types =
      struct
        open AnonymousInterfaces
        type 'T _Delayer = [ `Delayer of 'T ] intf
        and 'T _ITask = [ `ITask of 'T ] intf
        let rec _Delayer_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Delayer =
          fun _T -> Obj.magic
        and _Delayer_to_js : 'T . ('T -> Ojs.t) -> 'T _Delayer -> Ojs.t =
          fun _T -> Obj.magic
        and _ITask_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ITask =
          fun _T -> Obj.magic
        and _ITask_to_js : 'T . ('T -> Ojs.t) -> 'T _ITask -> Ojs.t =
          fun _T -> Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module ITask =
  struct
    type 'T t = 'T _ITask
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3 : Ojs.t) -> _ITask_of_js __T_of_js x3
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1 : __T _ITask) -> _ITask_to_js __T_to_js x1
    let (apply : 'T t -> 'T) =
      fun (x5 : 'T t) -> Obj.magic (Ojs.apply (t_to_js Obj.magic x5) [||])
  end
module Delayer =
  struct
    type 'T t = 'T _Delayer
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9 : Ojs.t) -> _Delayer_of_js __T_of_js x9
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x7 : __T _Delayer) -> _Delayer_to_js __T_to_js x7
    let (get_defaultDelay : 'T t -> float) =
      fun (x11 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x11) "defaultDelay")
    let (set_defaultDelay : 'T t -> float -> unit) =
      fun (x13 : 'T t) ->
        fun (x14 : float) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x13) "defaultDelay"
            (Ojs.float_to_js x14)
    let (get_timeout : 'T t -> any) =
      fun (x16 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x16) "timeout")
    let (set_timeout : 'T t -> any -> unit) =
      fun (x18 : 'T t) ->
        fun (x19 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x18) "timeout"
            (any_to_js x19)
    let (get_completionPromise : 'T t -> any) =
      fun (x21 : 'T t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x21) "completionPromise")
    let (set_completionPromise : 'T t -> any -> unit) =
      fun (x23 : 'T t) ->
        fun (x24 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x23) "completionPromise"
            (any_to_js x24)
    let (get_onSuccess : 'T t -> any) =
      fun (x26 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x26) "onSuccess")
    let (set_onSuccess : 'T t -> any -> unit) =
      fun (x28 : 'T t) ->
        fun (x29 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x28) "onSuccess"
            (any_to_js x29)
    let (get_task : 'T t -> any) =
      fun (x31 : 'T t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js Obj.magic x31) "task")
    let (set_task : 'T t -> any -> unit) =
      fun (x33 : 'T t) ->
        fun (x34 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x33) "task" (any_to_js x34)
    let (create : defaultDelay:float -> 'T t) =
      fun ~defaultDelay:(x36 : float) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Delayer")
             [|(Ojs.float_to_js x36)|])
    let (trigger :
      'T t -> task:'T _ITask -> ?delay:float -> unit -> 'T Promise.t) =
      fun (x43 : 'T t) ->
        fun ~task:(x38 : 'T _ITask) ->
          fun ?delay:(x39 : float option) ->
            fun () ->
              Promise.t_of_js Obj.magic
                (let x45 = t_to_js Obj.magic x43 in
                 Ojs.call (Ojs.get_prop_ascii x45 "trigger") "apply"
                   [|x45;((let x40 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x40 "push"
                                [|(_ITask_to_js Obj.magic x38)|]);
                           (match x39 with
                            | Some x41 ->
                                ignore
                                  (Ojs.call x40 "push"
                                     [|(Ojs.float_to_js x41)|])
                            | None -> ());
                           x40))|])
    let (forceDelivery : 'T t -> 'T or_undefined) =
      fun (x47 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x47) "forceDelivery" [||])
    let (isTriggered : 'T t -> bool) =
      fun (x50 : 'T t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js Obj.magic x50) "isTriggered" [||])
    let (cancel : 'T t -> unit) =
      fun (x52 : 'T t) ->
        ignore (Ojs.call (t_to_js Obj.magic x52) "cancel" [||])
    let (get_cancelTimeout : 'T t -> any) =
      fun (x54 : 'T t) ->
        any_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x54) "cancelTimeout")
    let (set_cancelTimeout : 'T t -> any -> unit) =
      fun (x56 : 'T t) ->
        fun (x57 : any) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x56) "cancelTimeout"
            (any_to_js x57)
  end
