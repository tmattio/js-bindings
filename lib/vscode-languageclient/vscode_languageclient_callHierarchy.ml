[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
open Vscode
open Vscode_language_server_protocol
open Client
module PrepareCallHierarchySignature =
  struct
    type t = _PrepareCallHierarchySignature
    let rec t_of_js : Ojs.t -> t =
      fun (x2 : Ojs.t) -> _PrepareCallHierarchySignature_of_js x2
    and t_to_js : t -> Ojs.t =
      fun (x1 : _PrepareCallHierarchySignature) ->
        _PrepareCallHierarchySignature_to_js x1
    let (apply :
      t ->
        this:unit ->
          document:TextDocument.t ->
            position:VPosition.t ->
              token:CancellationToken.t ->
                (VCallHierarchyItem.t, VCallHierarchyItem.t) or_array
                  ProviderResult.t)
      =
      fun (x7 : t) ->
        fun ~this:(x3 : unit) ->
          fun ~document:(x4 : TextDocument.t) ->
            fun ~position:(x5 : VPosition.t) ->
              fun ~token:(x6 : CancellationToken.t) ->
                ProviderResult.t_of_js
                  (fun (x8 : Ojs.t) ->
                     or_array_of_js VCallHierarchyItem.t_of_js
                       VCallHierarchyItem.t_of_js x8)
                  (Ojs.apply (t_to_js x7)
                     [|(Ojs.unit_to_js x3);(TextDocument.t_to_js x4);(
                       VPosition.t_to_js x5);(CancellationToken.t_to_js x6)|])
  end
module CallHierarchyIncomingCallsSignature =
  struct
    type t = _CallHierarchyIncomingCallsSignature
    let rec t_of_js : Ojs.t -> t =
      fun (x12 : Ojs.t) -> _CallHierarchyIncomingCallsSignature_of_js x12
    and t_to_js : t -> Ojs.t =
      fun (x11 : _CallHierarchyIncomingCallsSignature) ->
        _CallHierarchyIncomingCallsSignature_to_js x11
    let (apply :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              VCallHierarchyIncomingCall.t list ProviderResult.t)
      =
      fun (x16 : t) ->
        fun ~this:(x13 : unit) ->
          fun ~item:(x14 : VCallHierarchyItem.t) ->
            fun ~token:(x15 : CancellationToken.t) ->
              ProviderResult.t_of_js
                (fun (x17 : Ojs.t) ->
                   Ojs.list_of_js VCallHierarchyIncomingCall.t_of_js x17)
                (Ojs.apply (t_to_js x16)
                   [|(Ojs.unit_to_js x13);(VCallHierarchyItem.t_to_js x14);(
                     CancellationToken.t_to_js x15)|])
  end
module CallHierarchyOutgoingCallsSignature =
  struct
    type t = _CallHierarchyOutgoingCallsSignature
    let rec t_of_js : Ojs.t -> t =
      fun (x20 : Ojs.t) -> _CallHierarchyOutgoingCallsSignature_of_js x20
    and t_to_js : t -> Ojs.t =
      fun (x19 : _CallHierarchyOutgoingCallsSignature) ->
        _CallHierarchyOutgoingCallsSignature_to_js x19
    let (apply :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              VCallHierarchyOutgoingCall.t list ProviderResult.t)
      =
      fun (x24 : t) ->
        fun ~this:(x21 : unit) ->
          fun ~item:(x22 : VCallHierarchyItem.t) ->
            fun ~token:(x23 : CancellationToken.t) ->
              ProviderResult.t_of_js
                (fun (x25 : Ojs.t) ->
                   Ojs.list_of_js VCallHierarchyOutgoingCall.t_of_js x25)
                (Ojs.apply (t_to_js x24)
                   [|(Ojs.unit_to_js x21);(VCallHierarchyItem.t_to_js x22);(
                     CancellationToken.t_to_js x23)|])
  end
module CallHierarchyMiddleware =
  struct
    type t = _CallHierarchyMiddleware
    let rec t_of_js : Ojs.t -> t =
      fun (x28 : Ojs.t) -> _CallHierarchyMiddleware_of_js x28
    and t_to_js : t -> Ojs.t =
      fun (x27 : _CallHierarchyMiddleware) ->
        _CallHierarchyMiddleware_to_js x27
    let (prepareCallHierarchy :
      t ->
        this:unit ->
          document:TextDocument.t ->
            positions:VPosition.t ->
              token:CancellationToken.t ->
                next:_PrepareCallHierarchySignature ->
                  (VCallHierarchyItem.t, VCallHierarchyItem.t) or_array
                    ProviderResult.t)
      =
      fun (x34 : t) ->
        fun ~this:(x29 : unit) ->
          fun ~document:(x30 : TextDocument.t) ->
            fun ~positions:(x31 : VPosition.t) ->
              fun ~token:(x32 : CancellationToken.t) ->
                fun ~next:(x33 : _PrepareCallHierarchySignature) ->
                  ProviderResult.t_of_js
                    (fun (x35 : Ojs.t) ->
                       or_array_of_js VCallHierarchyItem.t_of_js
                         VCallHierarchyItem.t_of_js x35)
                    (Ojs.call (t_to_js x34) "prepareCallHierarchy"
                       [|(Ojs.unit_to_js x29);(TextDocument.t_to_js x30);(
                         VPosition.t_to_js x31);(CancellationToken.t_to_js
                                                   x32);(_PrepareCallHierarchySignature_to_js
                                                           x33)|])
    let (provideCallHierarchyIncomingCalls :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              next:_CallHierarchyIncomingCallsSignature ->
                VCallHierarchyIncomingCall.t list ProviderResult.t)
      =
      fun (x42 : t) ->
        fun ~this:(x38 : unit) ->
          fun ~item:(x39 : VCallHierarchyItem.t) ->
            fun ~token:(x40 : CancellationToken.t) ->
              fun ~next:(x41 : _CallHierarchyIncomingCallsSignature) ->
                ProviderResult.t_of_js
                  (fun (x43 : Ojs.t) ->
                     Ojs.list_of_js VCallHierarchyIncomingCall.t_of_js x43)
                  (Ojs.call (t_to_js x42) "provideCallHierarchyIncomingCalls"
                     [|(Ojs.unit_to_js x38);(VCallHierarchyItem.t_to_js x39);(
                       CancellationToken.t_to_js x40);(_CallHierarchyIncomingCallsSignature_to_js
                                                         x41)|])
    let (provideCallHierarchyOutgoingCalls :
      t ->
        this:unit ->
          item:VCallHierarchyItem.t ->
            token:CancellationToken.t ->
              next:_CallHierarchyOutgoingCallsSignature ->
                VCallHierarchyOutgoingCall.t list ProviderResult.t)
      =
      fun (x49 : t) ->
        fun ~this:(x45 : unit) ->
          fun ~item:(x46 : VCallHierarchyItem.t) ->
            fun ~token:(x47 : CancellationToken.t) ->
              fun ~next:(x48 : _CallHierarchyOutgoingCallsSignature) ->
                ProviderResult.t_of_js
                  (fun (x50 : Ojs.t) ->
                     Ojs.list_of_js VCallHierarchyOutgoingCall.t_of_js x50)
                  (Ojs.call (t_to_js x49) "provideCallHierarchyOutgoingCalls"
                     [|(Ojs.unit_to_js x45);(VCallHierarchyItem.t_to_js x46);(
                       CancellationToken.t_to_js x47);(_CallHierarchyOutgoingCallsSignature_to_js
                                                         x48)|])
  end
module CallHierarchyProvider =
  struct
    type t = _CallHierarchyProvider
    let rec t_of_js : Ojs.t -> t =
      fun (x53 : Ojs.t) -> _CallHierarchyProvider_of_js x53
    and t_to_js : t -> Ojs.t =
      fun (x52 : _CallHierarchyProvider) -> _CallHierarchyProvider_to_js x52
    let (get_client : t -> any) =
      fun (x54 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x54) "client")
    let (set_client : t -> any -> unit) =
      fun (x55 : t) ->
        fun (x56 : any) ->
          Ojs.set_prop_ascii (t_to_js x55) "client" (any_to_js x56)
    let (get_middleware : t -> any) =
      fun (x57 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x57) "middleware")
    let (set_middleware : t -> any -> unit) =
      fun (x58 : t) ->
        fun (x59 : any) ->
          Ojs.set_prop_ascii (t_to_js x58) "middleware" (any_to_js x59)
    let (create : client:BaseLanguageClient.t -> t) =
      fun ~client:(x60 : BaseLanguageClient.t) ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "CallHierarchyProvider")
             [|(BaseLanguageClient.t_to_js x60)|])
    let (prepareCallHierarchy :
      t ->
        document:TextDocument.t ->
          position:VPosition.t ->
            token:CancellationToken.t ->
              (VCallHierarchyItem.t, VCallHierarchyItem.t) or_array
                ProviderResult.t)
      =
      fun (x64 : t) ->
        fun ~document:(x61 : TextDocument.t) ->
          fun ~position:(x62 : VPosition.t) ->
            fun ~token:(x63 : CancellationToken.t) ->
              ProviderResult.t_of_js
                (fun (x65 : Ojs.t) ->
                   or_array_of_js VCallHierarchyItem.t_of_js
                     VCallHierarchyItem.t_of_js x65)
                (Ojs.call (t_to_js x64) "prepareCallHierarchy"
                   [|(TextDocument.t_to_js x61);(VPosition.t_to_js x62);(
                     CancellationToken.t_to_js x63)|])
    let (provideCallHierarchyIncomingCalls :
      t ->
        item:VCallHierarchyItem.t ->
          token:CancellationToken.t ->
            VCallHierarchyIncomingCall.t list ProviderResult.t)
      =
      fun (x70 : t) ->
        fun ~item:(x68 : VCallHierarchyItem.t) ->
          fun ~token:(x69 : CancellationToken.t) ->
            ProviderResult.t_of_js
              (fun (x71 : Ojs.t) ->
                 Ojs.list_of_js VCallHierarchyIncomingCall.t_of_js x71)
              (Ojs.call (t_to_js x70) "provideCallHierarchyIncomingCalls"
                 [|(VCallHierarchyItem.t_to_js x68);(CancellationToken.t_to_js
                                                       x69)|])
    let (provideCallHierarchyOutgoingCalls :
      t ->
        item:VCallHierarchyItem.t ->
          token:CancellationToken.t ->
            VCallHierarchyOutgoingCall.t list ProviderResult.t)
      =
      fun (x75 : t) ->
        fun ~item:(x73 : VCallHierarchyItem.t) ->
          fun ~token:(x74 : CancellationToken.t) ->
            ProviderResult.t_of_js
              (fun (x76 : Ojs.t) ->
                 Ojs.list_of_js VCallHierarchyOutgoingCall.t_of_js x76)
              (Ojs.call (t_to_js x75) "provideCallHierarchyOutgoingCalls"
                 [|(VCallHierarchyItem.t_to_js x73);(CancellationToken.t_to_js
                                                       x74)|])
    let (cast : t -> VCallHierarchyProvider.t) =
      fun (x78 : t) -> VCallHierarchyProvider.t_of_js (t_to_js x78)
  end
module CallHierarchyFeature =
  struct
    type t = _CallHierarchyFeature
    let rec t_of_js : Ojs.t -> t =
      fun (x80 : Ojs.t) -> _CallHierarchyFeature_of_js x80
    and t_to_js : t -> Ojs.t =
      fun (x79 : _CallHierarchyFeature) -> _CallHierarchyFeature_to_js x79
    let (create : client:BaseLanguageClient.t -> t) =
      fun ~client:(x81 : BaseLanguageClient.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "CallHierarchyFeature")
             [|(BaseLanguageClient.t_to_js x81)|])
    let (fillClientCapabilities : t -> cap:ClientCapabilities.t -> unit) =
      fun (x83 : t) ->
        fun ~cap:(x82 : ClientCapabilities.t) ->
          ignore
            (Ojs.call (t_to_js x83) "fillClientCapabilities"
               [|(ClientCapabilities.t_to_js x82)|])
    let (initialize :
      t ->
        capabilities:ServerCapabilities.t ->
          documentSelector:DocumentSelector.t -> unit)
      =
      fun (x86 : t) ->
        fun ~capabilities:(x84 : ServerCapabilities.t) ->
          fun ~documentSelector:(x85 : DocumentSelector.t) ->
            ignore
              (Ojs.call (t_to_js x86) "initialize"
                 [|(ServerCapabilities.t_to_js x84);(DocumentSelector.t_to_js
                                                       x85)|])
    let (registerLanguageProvider :
      t ->
        options:CallHierarchyRegistrationOptions.t ->
          (Disposable.t * _CallHierarchyProvider))
      =
      fun (x88 : t) ->
        fun ~options:(x87 : CallHierarchyRegistrationOptions.t) ->
          let x89 =
            Ojs.call (t_to_js x88) "registerLanguageProvider"
              [|(CallHierarchyRegistrationOptions.t_to_js x87)|] in
          ((Disposable.t_of_js (Ojs.array_get x89 0)),
            (_CallHierarchyProvider_of_js (Ojs.array_get x89 1)))
    let (cast :
      t ->
        (CallHierarchyOptions.t or_boolean,
          CallHierarchyRegistrationOptions.t, _CallHierarchyProvider)
          TextDocumentFeature.t)
      =
      fun (x90 : t) ->
        TextDocumentFeature.t_of_js
          (fun (x91 : Ojs.t) ->
             or_boolean_of_js CallHierarchyOptions.t_of_js x91)
          CallHierarchyRegistrationOptions.t_of_js
          _CallHierarchyProvider_of_js (t_to_js x90)
  end
