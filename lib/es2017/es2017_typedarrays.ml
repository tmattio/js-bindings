[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2016
module Int8Array =
  struct
    include struct include Int8Array end
    let (create : ?length:int -> unit -> Int8Array.t) =
      fun ?length:(x1 : int option) ->
        fun () ->
          Int8Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
               (let x2 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1 with
                 | Some x3 ->
                     ignore (Ojs.call x2 "push" [|(Ojs.int_to_js x3)|])
                 | None -> ());
                x2))
  end
module Int8ArrayConstructor =
  struct
    include struct include Int8ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Int8Array.t) =
      fun (x7 : t) ->
        fun ?length:(x4 : int option) ->
          fun () ->
            Int8Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x7)
                 (let x5 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4 with
                   | Some x6 ->
                       ignore (Ojs.call x5 "push" [|(Ojs.int_to_js x6)|])
                   | None -> ());
                  x5))
  end
module Uint8Array =
  struct
    include struct include Uint8Array end
    let (create : ?length:int -> unit -> Uint8Array.t) =
      fun ?length:(x8 : int option) ->
        fun () ->
          Uint8Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
               (let x9 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8 with
                 | Some x10 ->
                     ignore (Ojs.call x9 "push" [|(Ojs.int_to_js x10)|])
                 | None -> ());
                x9))
  end
module Uint8ArrayConstructor =
  struct
    include struct include Uint8ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Uint8Array.t) =
      fun (x14 : t) ->
        fun ?length:(x11 : int option) ->
          fun () ->
            Uint8Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x14)
                 (let x12 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x11 with
                   | Some x13 ->
                       ignore (Ojs.call x12 "push" [|(Ojs.int_to_js x13)|])
                   | None -> ());
                  x12))
  end
module Uint8ClampedArray =
  struct
    include struct include Uint8ClampedArray end
    let (create : ?length:int -> unit -> Uint8ClampedArray.t) =
      fun ?length:(x15 : int option) ->
        fun () ->
          Uint8ClampedArray.t_of_js
            (Ojs.new_obj_arr
               (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
               (let x16 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x15 with
                 | Some x17 ->
                     ignore (Ojs.call x16 "push" [|(Ojs.int_to_js x17)|])
                 | None -> ());
                x16))
  end
module Uint8ClampedArrayConstructor =
  struct
    include struct include Uint8ClampedArrayConstructor end
    let (create : t -> ?length:int -> unit -> Uint8ClampedArray.t) =
      fun (x21 : t) ->
        fun ?length:(x18 : int option) ->
          fun () ->
            Uint8ClampedArray.t_of_js
              (Ojs.new_obj_arr (t_to_js x21)
                 (let x19 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x18 with
                   | Some x20 ->
                       ignore (Ojs.call x19 "push" [|(Ojs.int_to_js x20)|])
                   | None -> ());
                  x19))
  end
module Int16Array =
  struct
    include struct include Int16Array end
    let (create : ?length:int -> unit -> Int16Array.t) =
      fun ?length:(x22 : int option) ->
        fun () ->
          Int16Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
               (let x23 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x22 with
                 | Some x24 ->
                     ignore (Ojs.call x23 "push" [|(Ojs.int_to_js x24)|])
                 | None -> ());
                x23))
  end
module Int16ArrayConstructor =
  struct
    include struct include Int16ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Int16Array.t) =
      fun (x28 : t) ->
        fun ?length:(x25 : int option) ->
          fun () ->
            Int16Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x28)
                 (let x26 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x25 with
                   | Some x27 ->
                       ignore (Ojs.call x26 "push" [|(Ojs.int_to_js x27)|])
                   | None -> ());
                  x26))
  end
module Uint16Array =
  struct
    include struct include Uint16Array end
    let (create : ?length:int -> unit -> Uint16Array.t) =
      fun ?length:(x29 : int option) ->
        fun () ->
          Uint16Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint16Array")
               (let x30 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x29 with
                 | Some x31 ->
                     ignore (Ojs.call x30 "push" [|(Ojs.int_to_js x31)|])
                 | None -> ());
                x30))
  end
module Uint16ArrayConstructor =
  struct
    include struct include Uint16ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Uint16Array.t) =
      fun (x35 : t) ->
        fun ?length:(x32 : int option) ->
          fun () ->
            Uint16Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x35)
                 (let x33 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x32 with
                   | Some x34 ->
                       ignore (Ojs.call x33 "push" [|(Ojs.int_to_js x34)|])
                   | None -> ());
                  x33))
  end
module Int32Array =
  struct
    include struct include Int32Array end
    let (create : ?length:int -> unit -> Int32Array.t) =
      fun ?length:(x36 : int option) ->
        fun () ->
          Int32Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
               (let x37 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x36 with
                 | Some x38 ->
                     ignore (Ojs.call x37 "push" [|(Ojs.int_to_js x38)|])
                 | None -> ());
                x37))
  end
module Int32ArrayConstructor =
  struct
    include struct include Int32ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Int32Array.t) =
      fun (x42 : t) ->
        fun ?length:(x39 : int option) ->
          fun () ->
            Int32Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x42)
                 (let x40 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x39 with
                   | Some x41 ->
                       ignore (Ojs.call x40 "push" [|(Ojs.int_to_js x41)|])
                   | None -> ());
                  x40))
  end
module Uint32Array =
  struct
    include struct include Uint32Array end
    let (create : ?length:int -> unit -> Uint32Array.t) =
      fun ?length:(x43 : int option) ->
        fun () ->
          Uint32Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint32Array")
               (let x44 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x43 with
                 | Some x45 ->
                     ignore (Ojs.call x44 "push" [|(Ojs.int_to_js x45)|])
                 | None -> ());
                x44))
  end
module Uint32ArrayConstructor =
  struct
    include struct include Uint32ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Uint32Array.t) =
      fun (x49 : t) ->
        fun ?length:(x46 : int option) ->
          fun () ->
            Uint32Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x49)
                 (let x47 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x46 with
                   | Some x48 ->
                       ignore (Ojs.call x47 "push" [|(Ojs.int_to_js x48)|])
                   | None -> ());
                  x47))
  end
module Float32Array =
  struct
    include struct include Float32Array end
    let (create : ?length:int -> unit -> Float32Array.t) =
      fun ?length:(x50 : int option) ->
        fun () ->
          Float32Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Float32Array")
               (let x51 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x50 with
                 | Some x52 ->
                     ignore (Ojs.call x51 "push" [|(Ojs.int_to_js x52)|])
                 | None -> ());
                x51))
  end
module Float32ArrayConstructor =
  struct
    include struct include Float32ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Float32Array.t) =
      fun (x56 : t) ->
        fun ?length:(x53 : int option) ->
          fun () ->
            Float32Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x56)
                 (let x54 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x53 with
                   | Some x55 ->
                       ignore (Ojs.call x54 "push" [|(Ojs.int_to_js x55)|])
                   | None -> ());
                  x54))
  end
module Float64Array =
  struct
    include struct include Float64Array end
    let (create : ?length:int -> unit -> Float64Array.t) =
      fun ?length:(x57 : int option) ->
        fun () ->
          Float64Array.t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Float64Array")
               (let x58 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x57 with
                 | Some x59 ->
                     ignore (Ojs.call x58 "push" [|(Ojs.int_to_js x59)|])
                 | None -> ());
                x58))
  end
module Float64ArrayConstructor =
  struct
    include struct include Float64ArrayConstructor end
    let (create : t -> ?length:int -> unit -> Float64Array.t) =
      fun (x63 : t) ->
        fun ?length:(x60 : int option) ->
          fun () ->
            Float64Array.t_of_js
              (Ojs.new_obj_arr (t_to_js x63)
                 (let x61 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x60 with
                   | Some x62 ->
                       ignore (Ojs.call x61 "push" [|(Ojs.int_to_js x62)|])
                   | None -> ());
                  x61))
  end
